2025-05-16:02:44:38,754 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-16:02:44:38,870 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,881 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,883 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,891 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,896 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,901 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,903 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,906 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,909 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,911 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,921 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,923 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,930 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,933 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,950 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:38,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,571 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,574 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,599 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,610 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,635 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,645 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,648 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,658 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,661 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,664 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:39,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,308 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,312 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,314 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,319 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,323 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,328 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,330 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,334 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,608 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,610 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,615 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,645 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,666 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,669 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,672 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,675 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,678 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,681 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,684 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,688 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,694 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,697 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,740 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,747 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,753 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,759 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,787 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,797 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,822 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,826 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,829 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,833 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,833 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,833 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,902 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,907 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,909 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,911 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,924 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,931 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,933 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,937 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,953 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,955 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,960 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,975 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,980 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,982 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,984 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,990 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,994 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:40,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,013 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,019 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,046 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,053 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,058 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,064 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,066 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,073 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,075 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,077 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,079 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,081 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,084 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,086 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,088 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,956 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,985 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,990 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:41,995 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,797 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,807 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,812 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,820 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,822 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,826 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,829 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,831 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,835 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,837 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,846 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,853 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,857 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,860 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,861 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,864 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,866 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,870 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,872 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,881 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,885 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,887 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,891 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,894 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,897 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,901 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,903 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,906 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,907 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,909 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,913 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,915 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,919 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,921 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,922 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,924 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,925 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,927 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,930 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,931 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,933 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,936 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,937 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,948 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,955 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,956 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,959 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,961 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,965 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,968 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,977 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,979 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,980 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,982 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,985 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,989 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,994 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,995 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:42,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,001 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,003 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,010 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,012 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,013 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,016 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,020 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,023 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,032 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,034 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,036 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,041 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,043 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,046 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,053 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,058 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,059 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,063 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,064 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,066 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,069 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,072 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,073 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,074 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,076 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,077 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,078 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,081 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,082 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,085 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,086 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,088 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,095 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,096 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,099 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,107 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,110 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,111 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,113 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,114 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,115 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,118 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,123 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,132 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,138 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,142 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,146 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,148 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,154 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,156 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,161 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,162 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,164 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,224 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,229 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:43,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:45,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:45,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:44:45,275 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-16:02:44:45,279 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-16:02:44:45,279 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': 'shengyuanhu/wmdp_unlearn_rmu_150_1200_6.5_zephyr', 'tokenizer': 'HuggingFaceH4/zephyr-7b-beta'}
2025-05-16:02:44:45,782 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-16:02:44:45,964 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:01<00:03,  1.55s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:02<00:01,  1.38s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:03<00:00,  1.28s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:03<00:00,  1.32s/it]
2025-05-16:02:45:08,637 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,637 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,637 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,637 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,637 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,637 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,637 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,637 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,638 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,639 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:45:08,640 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-16:02:45:08,646 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 73%|███████▎  | 73/100 [00:00<00:00, 723.84it/s]100%|██████████| 100/100 [00:00<00:00, 720.42it/s]
2025-05-16:02:45:08,790 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 23%|██▎       | 72/310 [00:00<00:00, 711.76it/s] 47%|████▋     | 145/310 [00:00<00:00, 722.19it/s] 70%|███████   | 218/310 [00:00<00:00, 724.21it/s] 95%|█████████▌| 295/310 [00:00<00:00, 741.91it/s]100%|██████████| 310/310 [00:00<00:00, 739.04it/s]
2025-05-16:02:45:09,222 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 86%|████████▌ | 86/100 [00:00<00:00, 850.67it/s]100%|██████████| 100/100 [00:00<00:00, 846.75it/s]
2025-05-16:02:45:09,345 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 51%|█████     | 74/145 [00:00<00:00, 730.13it/s]100%|██████████| 145/145 [00:00<00:00, 728.14it/s]
2025-05-16:02:45:09,551 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 72%|███████▏  | 72/100 [00:00<00:00, 712.44it/s]100%|██████████| 100/100 [00:00<00:00, 715.40it/s]
2025-05-16:02:45:09,695 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 36%|███▋      | 74/203 [00:00<00:00, 732.57it/s] 73%|███████▎  | 148/203 [00:00<00:00, 735.99it/s]100%|██████████| 203/203 [00:00<00:00, 735.81it/s]
2025-05-16:02:45:09,980 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 47%|████▋     | 72/152 [00:00<00:00, 717.32it/s] 95%|█████████▌| 145/152 [00:00<00:00, 723.92it/s]100%|██████████| 152/152 [00:00<00:00, 721.78it/s]
2025-05-16:02:45:10,198 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 73%|███████▎  | 74/102 [00:00<00:00, 734.25it/s]100%|██████████| 102/102 [00:00<00:00, 736.36it/s]
2025-05-16:02:45:10,341 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 740.09it/s]100%|██████████| 100/100 [00:00<00:00, 737.64it/s]
2025-05-16:02:45:10,483 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 51%|█████▏    | 74/144 [00:00<00:00, 733.97it/s]100%|██████████| 144/144 [00:00<00:00, 739.56it/s]
2025-05-16:02:45:10,685 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 32%|███▏      | 75/235 [00:00<00:00, 748.26it/s] 65%|██████▍   | 152/235 [00:00<00:00, 755.94it/s]100%|██████████| 235/235 [00:00<00:00, 792.26it/s]
2025-05-16:02:45:10,990 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 77%|███████▋  | 86/112 [00:00<00:00, 849.32it/s]100%|██████████| 112/112 [00:00<00:00, 818.05it/s]
2025-05-16:02:45:11,132 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 27%|██▋       | 73/270 [00:00<00:00, 724.46it/s] 55%|█████▍    | 148/270 [00:00<00:00, 736.31it/s] 83%|████████▎ | 223/270 [00:00<00:00, 739.89it/s]100%|██████████| 270/270 [00:00<00:00, 735.01it/s]
2025-05-16:02:45:11,510 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 745.17it/s]100%|██████████| 100/100 [00:00<00:00, 746.82it/s]
2025-05-16:02:45:11,649 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 753.71it/s]100%|██████████| 100/100 [00:00<00:00, 751.38it/s]
2025-05-16:02:45:11,786 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 56%|█████▌    | 75/135 [00:00<00:00, 746.63it/s]100%|██████████| 135/135 [00:00<00:00, 736.44it/s]
2025-05-16:02:45:11,976 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 20%|██        | 76/378 [00:00<00:00, 752.57it/s] 41%|████      | 155/378 [00:00<00:00, 769.57it/s] 61%|██████▏   | 232/378 [00:00<00:00, 768.11it/s] 82%|████████▏ | 310/378 [00:00<00:00, 772.47it/s]100%|██████████| 378/378 [00:00<00:00, 764.99it/s]
2025-05-16:02:45:12,484 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 51%|█████     | 77/151 [00:00<00:00, 763.29it/s]100%|██████████| 151/151 [00:00<00:00, 769.00it/s]
2025-05-16:02:45:12,688 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 36%|███▌      | 78/216 [00:00<00:00, 772.04it/s] 76%|███████▌  | 164/216 [00:00<00:00, 823.51it/s]100%|██████████| 216/216 [00:00<00:00, 820.74it/s]
2025-05-16:02:45:12,960 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 32%|███▏      | 86/265 [00:00<00:00, 855.69it/s] 65%|██████▍   | 172/265 [00:00<00:00, 805.23it/s] 95%|█████████▌| 253/265 [00:00<00:00, 791.87it/s]100%|██████████| 265/265 [00:00<00:00, 791.76it/s]
2025-05-16:02:45:13,306 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 78%|███████▊  | 78/100 [00:00<00:00, 778.58it/s]100%|██████████| 100/100 [00:00<00:00, 777.40it/s]
2025-05-16:02:45:13,440 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 76%|███████▌  | 78/103 [00:00<00:00, 775.19it/s]100%|██████████| 103/103 [00:00<00:00, 777.16it/s]
2025-05-16:02:45:13,576 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 25%|██▌       | 78/306 [00:00<00:00, 773.19it/s] 51%|█████▏    | 157/306 [00:00<00:00, 781.35it/s] 77%|███████▋  | 236/306 [00:00<00:00, 784.92it/s]100%|██████████| 306/306 [00:00<00:00, 789.56it/s]
2025-05-16:02:45:13,975 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 43%|████▎     | 75/173 [00:00<00:00, 741.61it/s] 92%|█████████▏| 159/173 [00:00<00:00, 797.78it/s]100%|██████████| 173/173 [00:00<00:00, 794.20it/s]
2025-05-16:02:45:14,201 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 47%|████▋     | 78/166 [00:00<00:00, 776.34it/s] 95%|█████████▍| 157/166 [00:00<00:00, 783.72it/s]100%|██████████| 166/166 [00:00<00:00, 782.53it/s]
2025-05-16:02:45:14,423 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 29%|██▉       | 80/272 [00:00<00:00, 791.88it/s] 59%|█████▉    | 160/272 [00:00<00:00, 778.50it/s] 91%|█████████ | 247/272 [00:00<00:00, 816.67it/s]100%|██████████| 272/272 [00:00<00:00, 812.38it/s]
2025-05-16:02:45:14,768 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 11%|█         | 86/783 [00:00<00:00, 855.33it/s] 22%|██▏       | 172/783 [00:00<00:00, 816.30it/s] 32%|███▏      | 254/783 [00:00<00:00, 815.08it/s] 43%|████▎     | 337/783 [00:00<00:00, 818.74it/s] 54%|█████▎    | 419/783 [00:00<00:00, 812.96it/s] 64%|██████▍   | 501/783 [00:00<00:00, 812.30it/s] 74%|███████▍  | 583/783 [00:00<00:00, 811.18it/s] 85%|████████▌ | 666/783 [00:00<00:00, 816.01it/s] 96%|█████████▌| 748/783 [00:00<00:00, 806.34it/s]100%|██████████| 783/783 [00:00<00:00, 812.41it/s]
2025-05-16:02:45:15,757 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 82%|████████▏ | 82/100 [00:00<00:00, 819.32it/s]100%|██████████| 100/100 [00:00<00:00, 819.03it/s]
2025-05-16:02:45:15,884 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 82%|████████▏ | 82/100 [00:00<00:00, 814.70it/s]100%|██████████| 100/100 [00:00<00:00, 814.30it/s]
2025-05-16:02:45:16,011 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 29%|██▊       | 81/282 [00:00<00:00, 800.30it/s] 58%|█████▊    | 163/282 [00:00<00:00, 811.53it/s] 87%|████████▋ | 245/282 [00:00<00:00, 814.77it/s]100%|██████████| 282/282 [00:00<00:00, 809.16it/s]
2025-05-16:02:45:16,369 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:02, 78.19it/s] 43%|████▎     | 101/234 [00:00<00:00, 351.68it/s] 80%|███████▉  | 187/234 [00:00<00:00, 526.32it/s]100%|██████████| 234/234 [00:00<00:00, 468.98it/s]
2025-05-16:02:45:16,877 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 39%|███▉      | 87/223 [00:00<00:00, 860.55it/s] 78%|███████▊  | 174/223 [00:00<00:00, 861.39it/s]100%|██████████| 223/223 [00:00<00:00, 862.29it/s]
2025-05-16:02:45:17,145 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 77%|███████▋  | 85/110 [00:00<00:00, 841.43it/s]100%|██████████| 110/110 [00:00<00:00, 851.05it/s]
2025-05-16:02:45:17,278 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 45%|████▍     | 90/201 [00:00<00:00, 893.85it/s] 90%|████████▉ | 180/201 [00:00<00:00, 896.69it/s]100%|██████████| 201/201 [00:00<00:00, 896.40it/s]
2025-05-16:02:45:17,509 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 45%|████▌     | 90/198 [00:00<00:00, 896.28it/s] 91%|█████████ | 180/198 [00:00<00:00, 894.09it/s]100%|██████████| 198/198 [00:00<00:00, 893.60it/s]
2025-05-16:02:45:17,737 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 37%|███▋      | 90/245 [00:00<00:00, 897.79it/s] 73%|███████▎  | 180/245 [00:00<00:00, 885.73it/s]100%|██████████| 245/245 [00:00<00:00, 888.84it/s]
2025-05-16:02:45:18,021 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 17%|█▋        | 90/545 [00:00<00:00, 895.14it/s] 33%|███▎      | 181/545 [00:00<00:00, 898.21it/s] 50%|████▉     | 272/545 [00:00<00:00, 900.04it/s] 67%|██████▋   | 363/545 [00:00<00:00, 900.46it/s] 83%|████████▎ | 454/545 [00:00<00:00, 900.14it/s]100%|██████████| 545/545 [00:00<00:00, 895.16it/s]100%|██████████| 545/545 [00:00<00:00, 896.95it/s]
2025-05-16:02:45:18,645 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 90%|█████████ | 90/100 [00:00<00:00, 890.72it/s]100%|██████████| 100/100 [00:00<00:00, 889.48it/s]
2025-05-16:02:45:18,762 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 23%|██▎       | 90/390 [00:00<00:00, 892.88it/s] 46%|████▌     | 180/390 [00:00<00:00, 894.66it/s] 69%|██████▉   | 270/390 [00:00<00:00, 896.68it/s] 92%|█████████▏| 360/390 [00:00<00:00, 897.80it/s]100%|██████████| 390/390 [00:00<00:00, 896.67it/s]
2025-05-16:02:45:19,209 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 38%|███▊      | 90/238 [00:00<00:00, 894.31it/s] 76%|███████▌  | 180/238 [00:00<00:00, 896.33it/s]100%|██████████| 238/238 [00:00<00:00, 888.89it/s]
2025-05-16:02:45:19,484 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 79%|███████▉  | 90/114 [00:00<00:00, 891.59it/s]100%|██████████| 114/114 [00:00<00:00, 889.70it/s]
2025-05-16:02:45:19,616 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 15%|█▍        | 90/612 [00:00<00:00, 898.08it/s] 29%|██▉       | 180/612 [00:00<00:00, 898.73it/s] 44%|████▍     | 270/612 [00:00<00:00, 897.60it/s] 59%|█████▉    | 360/612 [00:00<00:00, 895.65it/s] 74%|███████▎  | 450/612 [00:00<00:00, 895.04it/s] 88%|████████▊ | 540/612 [00:00<00:00, 896.15it/s]100%|██████████| 612/612 [00:00<00:00, 894.30it/s]
2025-05-16:02:45:20,319 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 63%|██████▎   | 83/131 [00:00<00:00, 821.39it/s]100%|██████████| 131/131 [00:00<00:00, 841.31it/s]
2025-05-16:02:45:20,480 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 46%|████▌     | 89/193 [00:00<00:00, 888.36it/s] 93%|█████████▎| 179/193 [00:00<00:00, 892.05it/s]100%|██████████| 193/193 [00:00<00:00, 891.11it/s]
2025-05-16:02:45:20,703 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s] 10%|█         | 90/895 [00:00<00:00, 895.65it/s] 20%|██        | 180/895 [00:00<00:00, 893.46it/s] 30%|███       | 270/895 [00:00<00:00, 893.40it/s] 40%|████      | 360/895 [00:00<00:00, 893.76it/s] 50%|█████     | 450/895 [00:00<00:00, 894.14it/s] 60%|██████    | 540/895 [00:00<00:00, 894.08it/s] 70%|███████   | 630/895 [00:00<00:00, 885.92it/s] 80%|████████  | 720/895 [00:00<00:00, 887.95it/s] 90%|█████████ | 809/895 [00:00<00:00, 888.33it/s]100%|██████████| 895/895 [00:01<00:00, 890.68it/s]
2025-05-16:02:45:21,735 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 38%|███▊      | 89/237 [00:00<00:00, 880.81it/s] 75%|███████▌  | 178/237 [00:00<00:00, 881.33it/s]100%|██████████| 237/237 [00:00<00:00, 881.05it/s]
2025-05-16:02:45:22,013 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 54%|█████▍    | 89/165 [00:00<00:00, 887.97it/s]100%|██████████| 165/165 [00:00<00:00, 887.94it/s]
2025-05-16:02:45:22,205 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 29%|██▊       | 89/311 [00:00<00:00, 886.39it/s] 57%|█████▋    | 178/311 [00:00<00:00, 876.86it/s] 86%|████████▌ | 267/311 [00:00<00:00, 878.91it/s]100%|██████████| 311/311 [00:00<00:00, 879.01it/s]
2025-05-16:02:45:22,569 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 25%|██▌       | 88/346 [00:00<00:00, 878.40it/s] 51%|█████     | 177/346 [00:00<00:00, 885.03it/s] 77%|███████▋  | 266/346 [00:00<00:00, 886.71it/s]100%|██████████| 346/346 [00:00<00:00, 884.73it/s]
2025-05-16:02:45:22,972 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 43%|████▎     | 88/204 [00:00<00:00, 878.53it/s] 86%|████████▋ | 176/204 [00:00<00:00, 877.88it/s]100%|██████████| 204/204 [00:00<00:00, 876.70it/s]
2025-05-16:02:45:23,212 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 74%|███████▎  | 89/121 [00:00<00:00, 884.25it/s]100%|██████████| 121/121 [00:00<00:00, 881.97it/s]
2025-05-16:02:45:23,354 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  6%|▌         | 89/1534 [00:00<00:01, 881.60it/s] 12%|█▏        | 178/1534 [00:00<00:01, 885.93it/s] 17%|█▋        | 267/1534 [00:00<00:01, 877.39it/s] 23%|██▎       | 355/1534 [00:00<00:01, 878.26it/s] 29%|██▉       | 444/1534 [00:00<00:01, 880.09it/s] 35%|███▍      | 533/1534 [00:00<00:01, 882.12it/s] 41%|████      | 622/1534 [00:00<00:01, 882.39it/s] 46%|████▋     | 711/1534 [00:00<00:00, 882.66it/s] 52%|█████▏    | 800/1534 [00:00<00:00, 882.15it/s] 58%|█████▊    | 889/1534 [00:01<00:00, 882.26it/s] 64%|██████▍   | 978/1534 [00:01<00:00, 881.89it/s] 70%|██████▉   | 1067/1534 [00:01<00:00, 881.96it/s] 75%|███████▌  | 1156/1534 [00:01<00:00, 882.73it/s] 81%|████████  | 1245/1534 [00:01<00:00, 883.59it/s] 87%|████████▋ | 1334/1534 [00:01<00:00, 884.50it/s] 93%|█████████▎| 1423/1534 [00:01<00:00, 880.40it/s] 99%|█████████▊| 1512/1534 [00:01<00:00, 881.21it/s]100%|██████████| 1534/1534 [00:01<00:00, 881.75it/s]
2025-05-16:02:45:25,142 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 52%|█████▏    | 89/171 [00:00<00:00, 881.22it/s]100%|██████████| 171/171 [00:00<00:00, 879.65it/s]
2025-05-16:02:45:25,343 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 81%|████████▏ | 88/108 [00:00<00:00, 876.89it/s]100%|██████████| 108/108 [00:00<00:00, 877.52it/s]
2025-05-16:02:45:25,470 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 70%|██████▉   | 88/126 [00:00<00:00, 876.18it/s]100%|██████████| 126/126 [00:00<00:00, 876.95it/s]
2025-05-16:02:45:25,618 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 27%|██▋       | 86/324 [00:00<00:00, 859.56it/s] 53%|█████▎    | 172/324 [00:00<00:00, 326.76it/s] 80%|████████  | 260/324 [00:00<00:00, 459.42it/s]100%|██████████| 324/324 [00:00<00:00, 497.10it/s]
2025-05-16:02:45:26,280 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 53%|█████▎    | 87/163 [00:00<00:00, 869.61it/s]100%|██████████| 163/163 [00:00<00:00, 871.22it/s]
2025-05-16:02:45:26,473 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<31:44:05,  2.03s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:02<34:20, 27.23it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:03<21:36, 43.21it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<17:07, 54.47it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<14:50, 62.76it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<13:28, 69.09it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:06<12:34, 73.91it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<11:56, 77.76it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<11:23, 81.46it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<10:55, 84.79it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:36, 87.25it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<10:17, 89.85it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:03, 91.80it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<09:49, 93.94it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:12<09:37, 95.71it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:13<09:25, 97.55it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:13<09:17, 98.88it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:14<09:07, 100.65it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:14<08:59, 101.98it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:15<08:53, 103.07it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:16<08:40, 105.42it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:16<08:30, 107.44it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:17<08:22, 108.91it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:17<08:14, 110.56it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:18<08:08, 111.88it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:18<08:03, 112.87it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:19<07:58, 113.83it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:19<07:53, 114.94it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:20<07:48, 116.03it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:21<07:45, 116.78it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:21<07:38, 118.33it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:22<07:33, 119.57it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:22<07:28, 120.60it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:23<07:23, 121.99it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:23<07:18, 123.15it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:24<07:11, 124.99it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:24<07:06, 126.29it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:25<07:02, 127.36it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:25<06:59, 128.16it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:26<06:56, 128.95it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:26<06:54, 129.48it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:27<06:50, 130.49it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:27<06:47, 131.32it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:27<06:44, 132.10it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:28<06:42, 132.57it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:28<06:39, 133.27it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:29<06:37, 133.76it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:29<06:36, 134.13it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:30<06:32, 135.18it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:30<06:30, 135.97it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:31<06:27, 136.64it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:31<06:25, 137.10it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:32<06:24, 137.55it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:32<06:22, 137.96it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:33<06:20, 138.48it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:33<06:19, 138.85it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:34<06:12, 141.21it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:34<06:06, 143.11it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:34<06:03, 144.37it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:35<05:59, 145.61it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:35<05:57, 146.50it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:36<05:54, 147.38it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:36<05:52, 148.10it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:37<05:48, 149.72it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:37<05:45, 150.59it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:37<05:43, 151.25it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:38<05:41, 152.01it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:38<05:39, 152.76it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:39<05:38, 153.22it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:39<05:36, 153.65it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:39<05:35, 154.07it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:40<05:34, 154.52it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:40<05:32, 154.91it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:41<05:29, 156.10it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:41<05:27, 157.05it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:41<05:25, 157.71it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:42<05:24, 158.18it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:42<05:22, 158.77it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:43<05:21, 159.30it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:43<05:20, 159.64it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:43<05:18, 160.13it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:44<05:17, 160.59it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:44<05:15, 161.62it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:45<05:13, 162.39it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:45<05:10, 163.32it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:45<05:08, 164.17it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:46<05:07, 164.80it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:46<05:03, 166.48it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:47<05:01, 167.64it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:47<04:59, 168.67it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:47<04:57, 169.41it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:48<04:55, 170.19it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:48<04:50, 173.21it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:48<04:46, 175.37it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:49<04:43, 176.81it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:49<04:41, 178.21it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:49<04:39, 179.28it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:50<04:37, 179.91it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:50<04:36, 180.74it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:50<04:35, 181.11it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:51<04:34, 181.46it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:51<04:32, 182.10it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:52<04:32, 181.99it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:52<04:32, 182.20it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:52<04:30, 182.83it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:53<04:28, 184.49it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:53<04:26, 185.21it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:53<04:25, 185.86it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:54<04:23, 186.86it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:54<04:22, 187.07it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:54<04:22, 187.51it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:55<04:20, 188.27it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:55<04:19, 189.11it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:55<04:18, 189.49it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:56<04:17, 189.56it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:56<04:16, 190.21it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:56<04:15, 190.84it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:57<04:14, 191.11it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:57<04:12, 192.88it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:57<04:11, 192.81it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [00:58<04:11, 193.14it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [00:58<04:08, 195.09it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [00:58<04:05, 196.61it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [00:59<03:58, 202.54it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [00:59<03:53, 206.68it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [00:59<03:49, 209.83it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [00:59<03:46, 212.28it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:00<03:44, 214.37it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:00<03:42, 215.90it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:00<03:40, 216.89it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:01<03:39, 218.33it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:01<03:37, 219.62it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:01<03:36, 220.47it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:01<03:35, 220.89it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:02<03:34, 221.46it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:02<03:33, 222.42it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:02<03:31, 224.66it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:03<03:29, 226.07it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:03<03:28, 226.78it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:03<03:27, 227.74it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:03<03:26, 228.95it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:04<03:24, 230.11it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:04<03:24, 230.65it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:04<03:22, 232.34it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:05<03:21, 233.14it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:05<03:20, 234.43it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:05<03:18, 235.41it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:05<03:18, 235.97it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:06<03:17, 236.65it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:06<03:16, 237.06it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:06<03:14, 239.02it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:06<03:13, 240.32it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:07<03:12, 241.64it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:07<03:10, 242.83it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:07<03:10, 242.96it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:07<03:09, 243.65it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:08<03:09, 243.78it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:08<03:07, 245.36it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:08<03:07, 246.23it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:08<03:06, 247.02it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:09<03:04, 248.88it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:09<03:03, 250.30it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:09<03:02, 251.45it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:09<03:01, 252.29it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:10<03:00, 253.32it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:10<02:58, 255.86it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:10<02:56, 258.01it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:10<02:55, 259.35it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:11<02:54, 259.80it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:11<02:54, 260.42it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:11<02:53, 261.48it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:11<02:52, 262.37it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:12<02:52, 262.36it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:12<02:51, 262.42it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:12<02:48, 267.52it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:12<02:45, 271.70it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:13<02:43, 275.44it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:13<02:41, 277.13it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:13<02:40, 278.58it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:13<02:40, 279.15it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:13<02:38, 281.41it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:14<02:38, 281.85it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:14<02:37, 282.36it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:14<02:37, 282.87it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:14<02:35, 285.94it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:15<02:34, 287.56it/s]Running loglikelihood requests:  21%|██        | 11905/56168 [01:15<02:33, 289.17it/s]Running loglikelihood requests:  21%|██▏       | 11969/56168 [01:15<02:32, 290.41it/s]Running loglikelihood requests:  21%|██▏       | 12033/56168 [01:15<02:31, 291.69it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [01:15<02:30, 292.62it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [01:16<02:30, 293.24it/s]Running loglikelihood requests:  22%|██▏       | 12225/56168 [01:16<02:29, 294.08it/s]Running loglikelihood requests:  22%|██▏       | 12289/56168 [01:16<02:28, 295.22it/s]Running loglikelihood requests:  22%|██▏       | 12353/56168 [01:16<02:28, 295.09it/s]Running loglikelihood requests:  22%|██▏       | 12417/56168 [01:17<02:27, 295.81it/s]Running loglikelihood requests:  22%|██▏       | 12481/56168 [01:17<02:27, 296.71it/s]Running loglikelihood requests:  22%|██▏       | 12545/56168 [01:17<02:27, 296.65it/s]Running loglikelihood requests:  22%|██▏       | 12609/56168 [01:17<02:26, 297.07it/s]Running loglikelihood requests:  23%|██▎       | 12673/56168 [01:17<02:26, 297.52it/s]Running loglikelihood requests:  23%|██▎       | 12737/56168 [01:18<02:25, 298.71it/s]Running loglikelihood requests:  23%|██▎       | 12801/56168 [01:18<02:24, 300.29it/s]Running loglikelihood requests:  23%|██▎       | 12865/56168 [01:18<02:23, 300.91it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [01:18<02:23, 301.62it/s]Running loglikelihood requests:  23%|██▎       | 12993/56168 [01:18<02:22, 303.23it/s]Running loglikelihood requests:  23%|██▎       | 13057/56168 [01:19<02:22, 302.52it/s]Running loglikelihood requests:  23%|██▎       | 13121/56168 [01:19<02:21, 303.32it/s]Running loglikelihood requests:  23%|██▎       | 13185/56168 [01:19<02:21, 302.92it/s]Running loglikelihood requests:  24%|██▎       | 13249/56168 [01:19<02:21, 304.17it/s]Running loglikelihood requests:  24%|██▎       | 13313/56168 [01:20<02:20, 304.38it/s]Running loglikelihood requests:  24%|██▍       | 13377/56168 [01:20<02:21, 303.38it/s]Running loglikelihood requests:  24%|██▍       | 13441/56168 [01:20<02:20, 304.13it/s]Running loglikelihood requests:  24%|██▍       | 13505/56168 [01:20<02:20, 304.63it/s]Running loglikelihood requests:  24%|██▍       | 13569/56168 [01:20<02:19, 304.59it/s]Running loglikelihood requests:  24%|██▍       | 13633/56168 [01:21<02:19, 305.37it/s]Running loglikelihood requests:  24%|██▍       | 13697/56168 [01:21<02:19, 305.54it/s]Running loglikelihood requests:  24%|██▍       | 13761/56168 [01:21<02:18, 305.56it/s]Running loglikelihood requests:  25%|██▍       | 13825/56168 [01:21<02:18, 305.25it/s]Running loglikelihood requests:  25%|██▍       | 13889/56168 [01:21<02:18, 305.90it/s]Running loglikelihood requests:  25%|██▍       | 13953/56168 [01:22<02:17, 306.67it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [01:22<02:17, 306.47it/s]Running loglikelihood requests:  25%|██▌       | 14081/56168 [01:22<02:17, 306.54it/s]Running loglikelihood requests:  25%|██▌       | 14145/56168 [01:22<02:17, 306.50it/s]Running loglikelihood requests:  25%|██▌       | 14209/56168 [01:22<02:16, 306.67it/s]Running loglikelihood requests:  25%|██▌       | 14273/56168 [01:23<02:16, 306.89it/s]Running loglikelihood requests:  26%|██▌       | 14337/56168 [01:23<02:14, 310.10it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [01:23<02:13, 312.56it/s]Running loglikelihood requests:  26%|██▌       | 14465/56168 [01:23<02:12, 314.36it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [01:23<02:11, 315.50it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [01:24<02:11, 316.05it/s]Running loglikelihood requests:  26%|██▌       | 14657/56168 [01:24<02:10, 317.50it/s]Running loglikelihood requests:  26%|██▌       | 14721/56168 [01:24<02:10, 317.36it/s]Running loglikelihood requests:  26%|██▋       | 14785/56168 [01:24<02:10, 317.27it/s]Running loglikelihood requests:  26%|██▋       | 14849/56168 [01:24<02:09, 317.89it/s]Running loglikelihood requests:  27%|██▋       | 14913/56168 [01:25<02:09, 317.71it/s]Running loglikelihood requests:  27%|██▋       | 14977/56168 [01:25<02:09, 318.18it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [01:25<02:09, 318.23it/s]Running loglikelihood requests:  27%|██▋       | 15105/56168 [01:25<02:08, 318.49it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [01:25<02:08, 318.28it/s]Running loglikelihood requests:  27%|██▋       | 15233/56168 [01:26<02:08, 319.13it/s]Running loglikelihood requests:  27%|██▋       | 15297/56168 [01:26<02:08, 319.16it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [01:26<02:07, 320.54it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [01:26<02:07, 320.31it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [01:26<02:07, 319.50it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [01:27<02:07, 319.62it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [01:27<02:06, 320.07it/s]Running loglikelihood requests:  28%|██▊       | 15681/56168 [01:27<02:06, 319.90it/s]Running loglikelihood requests:  28%|██▊       | 15745/56168 [01:27<02:06, 320.45it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [01:27<02:05, 320.36it/s]Running loglikelihood requests:  28%|██▊       | 15873/56168 [01:28<02:05, 320.86it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [01:28<02:05, 320.67it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [01:28<02:04, 321.87it/s]Running loglikelihood requests:  29%|██▊       | 16065/56168 [01:28<02:04, 322.12it/s]Running loglikelihood requests:  29%|██▊       | 16129/56168 [01:28<02:04, 322.19it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [01:29<02:04, 321.51it/s]Running loglikelihood requests:  29%|██▉       | 16257/56168 [01:29<02:04, 321.53it/s]Running loglikelihood requests:  29%|██▉       | 16321/56168 [01:29<02:03, 322.05it/s]Running loglikelihood requests:  29%|██▉       | 16385/56168 [01:29<02:03, 322.70it/s]Running loglikelihood requests:  29%|██▉       | 16453/56168 [01:29<02:01, 327.98it/s]Running loglikelihood requests:  29%|██▉       | 16517/56168 [01:30<02:01, 326.54it/s]Running loglikelihood requests:  30%|██▉       | 16581/56168 [01:30<02:01, 324.50it/s]Running loglikelihood requests:  30%|██▉       | 16645/56168 [01:30<02:01, 324.60it/s]Running loglikelihood requests:  30%|██▉       | 16709/56168 [01:30<02:01, 323.84it/s]Running loglikelihood requests:  30%|██▉       | 16773/56168 [01:30<02:01, 323.83it/s]Running loglikelihood requests:  30%|██▉       | 16837/56168 [01:31<02:01, 323.47it/s]Running loglikelihood requests:  30%|███       | 16901/56168 [01:31<02:01, 323.43it/s]Running loglikelihood requests:  30%|███       | 16965/56168 [01:31<02:01, 323.55it/s]Running loglikelihood requests:  30%|███       | 17029/56168 [01:31<02:01, 323.45it/s]Running loglikelihood requests:  30%|███       | 17093/56168 [01:31<02:00, 323.54it/s]Running loglikelihood requests:  31%|███       | 17157/56168 [01:32<01:59, 327.53it/s]Running loglikelihood requests:  31%|███       | 17221/56168 [01:32<01:57, 330.29it/s]Running loglikelihood requests:  31%|███       | 17285/56168 [01:32<01:56, 332.36it/s]Running loglikelihood requests:  31%|███       | 17349/56168 [01:32<01:56, 333.79it/s]Running loglikelihood requests:  31%|███       | 17413/56168 [01:32<01:55, 335.75it/s]Running loglikelihood requests:  31%|███       | 17477/56168 [01:33<01:54, 336.82it/s]Running loglikelihood requests:  31%|███       | 17541/56168 [01:33<01:54, 336.75it/s]Running loglikelihood requests:  31%|███▏      | 17605/56168 [01:33<01:54, 338.05it/s]Running loglikelihood requests:  31%|███▏      | 17669/56168 [01:33<01:53, 338.13it/s]Running loglikelihood requests:  32%|███▏      | 17733/56168 [01:33<01:53, 338.32it/s]Running loglikelihood requests:  32%|███▏      | 17797/56168 [01:34<01:53, 339.04it/s]Running loglikelihood requests:  32%|███▏      | 17861/56168 [01:34<01:53, 338.89it/s]Running loglikelihood requests:  32%|███▏      | 17925/56168 [01:34<01:52, 338.83it/s]Running loglikelihood requests:  32%|███▏      | 17989/56168 [01:34<01:52, 339.41it/s]Running loglikelihood requests:  32%|███▏      | 18053/56168 [01:34<01:52, 339.23it/s]Running loglikelihood requests:  32%|███▏      | 18117/56168 [01:34<01:52, 339.59it/s]Running loglikelihood requests:  32%|███▏      | 18181/56168 [01:35<01:51, 339.90it/s]Running loglikelihood requests:  32%|███▏      | 18245/56168 [01:35<01:51, 340.59it/s]Running loglikelihood requests:  33%|███▎      | 18309/56168 [01:35<01:51, 340.10it/s]Running loglikelihood requests:  33%|███▎      | 18373/56168 [01:35<01:50, 340.62it/s]Running loglikelihood requests:  33%|███▎      | 18437/56168 [01:35<01:50, 340.13it/s]Running loglikelihood requests:  33%|███▎      | 18501/56168 [01:36<01:50, 340.51it/s]Running loglikelihood requests:  33%|███▎      | 18565/56168 [01:36<01:50, 340.69it/s]Running loglikelihood requests:  33%|███▎      | 18629/56168 [01:36<01:50, 340.90it/s]Running loglikelihood requests:  33%|███▎      | 18693/56168 [01:36<01:49, 341.46it/s]Running loglikelihood requests:  33%|███▎      | 18757/56168 [01:36<01:49, 340.87it/s]Running loglikelihood requests:  34%|███▎      | 18821/56168 [01:37<01:49, 341.41it/s]Running loglikelihood requests:  34%|███▎      | 18885/56168 [01:37<01:48, 342.16it/s]Running loglikelihood requests:  34%|███▎      | 18949/56168 [01:37<01:48, 342.53it/s]Running loglikelihood requests:  34%|███▍      | 19013/56168 [01:37<01:48, 343.05it/s]Running loglikelihood requests:  34%|███▍      | 19077/56168 [01:37<01:47, 343.76it/s]Running loglikelihood requests:  34%|███▍      | 19141/56168 [01:37<01:47, 344.33it/s]Running loglikelihood requests:  34%|███▍      | 19205/56168 [01:38<01:47, 344.81it/s]Running loglikelihood requests:  34%|███▍      | 19269/56168 [01:38<01:46, 345.00it/s]Running loglikelihood requests:  34%|███▍      | 19333/56168 [01:38<01:46, 344.55it/s]Running loglikelihood requests:  35%|███▍      | 19397/56168 [01:38<01:46, 343.67it/s]Running loglikelihood requests:  35%|███▍      | 19461/56168 [01:38<01:46, 346.17it/s]Running loglikelihood requests:  35%|███▍      | 19525/56168 [01:39<01:44, 349.46it/s]Running loglikelihood requests:  35%|███▍      | 19589/56168 [01:39<01:44, 351.48it/s]Running loglikelihood requests:  35%|███▍      | 19653/56168 [01:39<01:43, 352.26it/s]Running loglikelihood requests:  35%|███▌      | 19717/56168 [01:39<01:43, 352.35it/s]Running loglikelihood requests:  35%|███▌      | 19781/56168 [01:39<01:43, 352.45it/s]Running loglikelihood requests:  35%|███▌      | 19845/56168 [01:39<01:43, 351.82it/s]Running loglikelihood requests:  35%|███▌      | 19909/56168 [01:40<01:42, 352.99it/s]Running loglikelihood requests:  36%|███▌      | 19973/56168 [01:40<01:42, 353.26it/s]Running loglikelihood requests:  36%|███▌      | 20041/56168 [01:40<01:40, 359.46it/s]Running loglikelihood requests:  36%|███▌      | 20105/56168 [01:40<01:40, 358.66it/s]Running loglikelihood requests:  36%|███▌      | 20169/56168 [01:40<01:40, 358.59it/s]Running loglikelihood requests:  36%|███▌      | 20233/56168 [01:41<01:40, 358.19it/s]Running loglikelihood requests:  36%|███▌      | 20297/56168 [01:41<01:40, 357.74it/s]Running loglikelihood requests:  36%|███▋      | 20361/56168 [01:41<01:39, 359.05it/s]Running loglikelihood requests:  36%|███▋      | 20425/56168 [01:41<01:39, 358.12it/s]Running loglikelihood requests:  36%|███▋      | 20489/56168 [01:41<01:39, 357.70it/s]Running loglikelihood requests:  37%|███▋      | 20553/56168 [01:41<01:39, 357.90it/s]Running loglikelihood requests:  37%|███▋      | 20617/56168 [01:42<01:39, 358.45it/s]Running loglikelihood requests:  37%|███▋      | 20681/56168 [01:42<01:38, 359.12it/s]Running loglikelihood requests:  37%|███▋      | 20745/56168 [01:42<01:38, 359.97it/s]Running loglikelihood requests:  37%|███▋      | 20809/56168 [01:42<01:37, 361.19it/s]Running loglikelihood requests:  37%|███▋      | 20873/56168 [01:42<01:37, 361.87it/s]Running loglikelihood requests:  37%|███▋      | 20937/56168 [01:43<01:37, 362.07it/s]Running loglikelihood requests:  37%|███▋      | 21001/56168 [01:43<01:36, 362.78it/s]Running loglikelihood requests:  38%|███▊      | 21065/56168 [01:43<01:36, 362.28it/s]Running loglikelihood requests:  38%|███▊      | 21129/56168 [01:43<01:36, 363.48it/s]Running loglikelihood requests:  38%|███▊      | 21193/56168 [01:43<01:36, 363.70it/s]Running loglikelihood requests:  38%|███▊      | 21257/56168 [01:43<01:36, 363.30it/s]Running loglikelihood requests:  38%|███▊      | 21321/56168 [01:44<01:35, 363.31it/s]Running loglikelihood requests:  38%|███▊      | 21385/56168 [01:44<01:35, 365.17it/s]Running loglikelihood requests:  38%|███▊      | 21449/56168 [01:44<01:34, 366.79it/s]Running loglikelihood requests:  38%|███▊      | 21513/56168 [01:44<01:34, 367.79it/s]Running loglikelihood requests:  38%|███▊      | 21577/56168 [01:44<01:33, 369.22it/s]Running loglikelihood requests:  39%|███▊      | 21641/56168 [01:44<01:33, 370.34it/s]Running loglikelihood requests:  39%|███▊      | 21705/56168 [01:45<01:32, 371.40it/s]Running loglikelihood requests:  39%|███▉      | 21769/56168 [01:45<01:32, 371.89it/s]Running loglikelihood requests:  39%|███▉      | 21833/56168 [01:45<01:32, 371.54it/s]Running loglikelihood requests:  39%|███▉      | 21897/56168 [01:45<01:32, 371.59it/s]Running loglikelihood requests:  39%|███▉      | 21961/56168 [01:45<01:31, 372.36it/s]Running loglikelihood requests:  39%|███▉      | 22025/56168 [01:45<01:31, 371.34it/s]Running loglikelihood requests:  39%|███▉      | 22089/56168 [01:46<01:31, 370.80it/s]Running loglikelihood requests:  39%|███▉      | 22153/56168 [01:46<01:31, 371.35it/s]Running loglikelihood requests:  40%|███▉      | 22217/56168 [01:46<01:31, 372.62it/s]Running loglikelihood requests:  40%|███▉      | 22281/56168 [01:46<01:30, 372.43it/s]Running loglikelihood requests:  40%|███▉      | 22345/56168 [01:46<01:30, 372.48it/s]Running loglikelihood requests:  40%|███▉      | 22409/56168 [01:46<01:30, 372.69it/s]Running loglikelihood requests:  40%|████      | 22473/56168 [01:47<01:30, 372.84it/s]Running loglikelihood requests:  40%|████      | 22537/56168 [01:47<01:30, 372.90it/s]Running loglikelihood requests:  40%|████      | 22601/56168 [01:47<01:29, 373.40it/s]Running loglikelihood requests:  40%|████      | 22665/56168 [01:47<01:29, 372.39it/s]Running loglikelihood requests:  40%|████      | 22729/56168 [01:47<01:29, 372.51it/s]Running loglikelihood requests:  41%|████      | 22793/56168 [01:48<01:29, 373.53it/s]Running loglikelihood requests:  41%|████      | 22857/56168 [01:48<01:28, 374.71it/s]Running loglikelihood requests:  41%|████      | 22921/56168 [01:48<01:28, 374.57it/s]Running loglikelihood requests:  41%|████      | 22985/56168 [01:48<01:28, 374.24it/s]Running loglikelihood requests:  41%|████      | 23049/56168 [01:48<01:28, 374.63it/s]Running loglikelihood requests:  41%|████      | 23113/56168 [01:48<01:28, 374.21it/s]Running loglikelihood requests:  41%|████▏     | 23177/56168 [01:49<01:27, 374.95it/s]Running loglikelihood requests:  41%|████▏     | 23241/56168 [01:49<01:27, 375.21it/s]Running loglikelihood requests:  41%|████▏     | 23305/56168 [01:49<01:27, 376.59it/s]Running loglikelihood requests:  42%|████▏     | 23369/56168 [01:49<01:27, 376.37it/s]Running loglikelihood requests:  42%|████▏     | 23433/56168 [01:49<01:26, 376.56it/s]Running loglikelihood requests:  42%|████▏     | 23497/56168 [01:49<01:26, 376.70it/s]Running loglikelihood requests:  42%|████▏     | 23561/56168 [01:50<01:26, 376.45it/s]Running loglikelihood requests:  42%|████▏     | 23625/56168 [01:50<01:26, 377.08it/s]Running loglikelihood requests:  42%|████▏     | 23689/56168 [01:50<01:26, 377.01it/s]Running loglikelihood requests:  42%|████▏     | 23753/56168 [01:50<01:23, 389.72it/s]Running loglikelihood requests:  42%|████▏     | 23817/56168 [01:50<01:20, 399.80it/s]Running loglikelihood requests:  43%|████▎     | 23881/56168 [01:50<01:19, 404.81it/s]Running loglikelihood requests:  43%|████▎     | 23945/56168 [01:50<01:18, 410.19it/s]Running loglikelihood requests:  43%|████▎     | 24009/56168 [01:51<01:17, 413.11it/s]Running loglikelihood requests:  43%|████▎     | 24073/56168 [01:51<01:16, 417.21it/s]Running loglikelihood requests:  43%|████▎     | 24137/56168 [01:51<01:16, 418.24it/s]Running loglikelihood requests:  43%|████▎     | 24201/56168 [01:51<01:16, 420.26it/s]Running loglikelihood requests:  43%|████▎     | 24265/56168 [01:51<01:15, 420.40it/s]Running loglikelihood requests:  43%|████▎     | 24329/56168 [01:51<01:15, 421.71it/s]Running loglikelihood requests:  43%|████▎     | 24393/56168 [01:52<01:15, 421.96it/s]Running loglikelihood requests:  44%|████▎     | 24457/56168 [01:52<01:15, 422.35it/s]Running loglikelihood requests:  44%|████▎     | 24521/56168 [01:52<01:14, 423.26it/s]Running loglikelihood requests:  44%|████▍     | 24585/56168 [01:52<01:14, 424.47it/s]Running loglikelihood requests:  44%|████▍     | 24649/56168 [01:52<01:14, 424.84it/s]Running loglikelihood requests:  44%|████▍     | 24713/56168 [01:52<01:14, 423.97it/s]Running loglikelihood requests:  44%|████▍     | 24777/56168 [01:52<01:13, 424.87it/s]Running loglikelihood requests:  44%|████▍     | 24841/56168 [01:53<01:13, 424.86it/s]Running loglikelihood requests:  44%|████▍     | 24905/56168 [01:53<01:13, 425.87it/s]Running loglikelihood requests:  44%|████▍     | 24969/56168 [01:53<01:13, 426.69it/s]Running loglikelihood requests:  45%|████▍     | 25033/56168 [01:53<01:12, 427.02it/s]Running loglikelihood requests:  45%|████▍     | 25097/56168 [01:53<01:12, 427.03it/s]Running loglikelihood requests:  45%|████▍     | 25161/56168 [01:53<01:12, 426.57it/s]Running loglikelihood requests:  45%|████▍     | 25225/56168 [01:54<01:12, 427.68it/s]Running loglikelihood requests:  45%|████▌     | 25289/56168 [01:54<01:12, 427.98it/s]Running loglikelihood requests:  45%|████▌     | 25353/56168 [01:54<01:11, 428.02it/s]Running loglikelihood requests:  45%|████▌     | 25417/56168 [01:54<01:11, 428.90it/s]Running loglikelihood requests:  45%|████▌     | 25481/56168 [01:54<01:11, 428.22it/s]Running loglikelihood requests:  45%|████▌     | 25545/56168 [01:54<01:11, 428.16it/s]Running loglikelihood requests:  46%|████▌     | 25609/56168 [01:54<01:11, 427.95it/s]Running loglikelihood requests:  46%|████▌     | 25673/56168 [01:55<01:11, 426.86it/s]Running loglikelihood requests:  46%|████▌     | 25737/56168 [01:55<01:10, 428.68it/s]Running loglikelihood requests:  46%|████▌     | 25801/56168 [01:55<01:10, 429.61it/s]Running loglikelihood requests:  46%|████▌     | 25865/56168 [01:55<01:10, 428.72it/s]Running loglikelihood requests:  46%|████▌     | 25929/56168 [01:55<01:10, 428.92it/s]Running loglikelihood requests:  46%|████▋     | 25993/56168 [01:55<01:10, 428.68it/s]Running loglikelihood requests:  46%|████▋     | 26057/56168 [01:55<01:10, 428.61it/s]Running loglikelihood requests:  47%|████▋     | 26121/56168 [01:56<01:09, 429.72it/s]Running loglikelihood requests:  47%|████▋     | 26185/56168 [01:56<01:09, 429.15it/s]Running loglikelihood requests:  47%|████▋     | 26249/56168 [01:56<01:09, 428.62it/s]Running loglikelihood requests:  47%|████▋     | 26313/56168 [01:56<01:09, 427.31it/s]Running loglikelihood requests:  47%|████▋     | 26377/56168 [01:56<01:09, 426.36it/s]Running loglikelihood requests:  47%|████▋     | 26441/56168 [01:56<01:09, 427.88it/s]Running loglikelihood requests:  47%|████▋     | 26505/56168 [01:56<01:09, 429.27it/s]Running loglikelihood requests:  47%|████▋     | 26569/56168 [01:57<01:08, 430.57it/s]Running loglikelihood requests:  47%|████▋     | 26633/56168 [01:57<01:08, 430.06it/s]Running loglikelihood requests:  48%|████▊     | 26697/56168 [01:57<01:08, 430.56it/s]Running loglikelihood requests:  48%|████▊     | 26761/56168 [01:57<01:08, 430.03it/s]Running loglikelihood requests:  48%|████▊     | 26825/56168 [01:57<01:08, 429.56it/s]Running loglikelihood requests:  48%|████▊     | 26889/56168 [01:57<01:07, 432.98it/s]Running loglikelihood requests:  48%|████▊     | 26953/56168 [01:58<01:07, 432.97it/s]Running loglikelihood requests:  48%|████▊     | 27017/56168 [01:58<01:06, 435.53it/s]Running loglikelihood requests:  48%|████▊     | 27081/56168 [01:58<01:06, 437.50it/s]Running loglikelihood requests:  48%|████▊     | 27145/56168 [01:58<01:06, 438.05it/s]Running loglikelihood requests:  48%|████▊     | 27209/56168 [01:58<01:06, 438.47it/s]Running loglikelihood requests:  49%|████▊     | 27273/56168 [01:58<01:06, 436.81it/s]Running loglikelihood requests:  49%|████▊     | 27337/56168 [01:58<01:05, 437.54it/s]Running loglikelihood requests:  49%|████▉     | 27401/56168 [01:59<01:05, 439.03it/s]Running loglikelihood requests:  49%|████▉     | 27465/56168 [01:59<01:05, 440.15it/s]Running loglikelihood requests:  49%|████▉     | 27529/56168 [01:59<01:04, 441.13it/s]Running loglikelihood requests:  49%|████▉     | 27593/56168 [01:59<01:04, 440.07it/s]Running loglikelihood requests:  49%|████▉     | 27657/56168 [01:59<01:04, 438.87it/s]Running loglikelihood requests:  49%|████▉     | 27721/56168 [01:59<01:04, 439.55it/s]Running loglikelihood requests:  49%|████▉     | 27785/56168 [01:59<01:04, 441.17it/s]Running loglikelihood requests:  50%|████▉     | 27849/56168 [02:00<01:04, 440.85it/s]Running loglikelihood requests:  50%|████▉     | 27913/56168 [02:00<01:04, 439.51it/s]Running loglikelihood requests:  50%|████▉     | 27977/56168 [02:00<01:03, 440.50it/s]Running loglikelihood requests:  50%|████▉     | 28041/56168 [02:00<01:03, 442.01it/s]Running loglikelihood requests:  50%|█████     | 28105/56168 [02:00<01:03, 442.67it/s]Running loglikelihood requests:  50%|█████     | 28169/56168 [02:00<01:03, 442.81it/s]Running loglikelihood requests:  50%|█████     | 28233/56168 [02:00<01:03, 441.67it/s]Running loglikelihood requests:  50%|█████     | 28297/56168 [02:01<01:03, 441.34it/s]Running loglikelihood requests:  50%|█████     | 28361/56168 [02:01<01:03, 440.81it/s]Running loglikelihood requests:  51%|█████     | 28425/56168 [02:01<01:02, 441.45it/s]Running loglikelihood requests:  51%|█████     | 28489/56168 [02:01<01:02, 442.47it/s]Running loglikelihood requests:  51%|█████     | 28553/56168 [02:01<01:02, 444.19it/s]Running loglikelihood requests:  51%|█████     | 28617/56168 [02:01<01:01, 444.41it/s]Running loglikelihood requests:  51%|█████     | 28681/56168 [02:01<01:01, 443.58it/s]Running loglikelihood requests:  51%|█████     | 28745/56168 [02:02<01:01, 443.69it/s]Running loglikelihood requests:  51%|█████▏    | 28809/56168 [02:02<01:01, 444.46it/s]Running loglikelihood requests:  51%|█████▏    | 28873/56168 [02:02<01:01, 442.50it/s]Running loglikelihood requests:  52%|█████▏    | 28937/56168 [02:02<01:01, 443.71it/s]Running loglikelihood requests:  52%|█████▏    | 29001/56168 [02:02<01:01, 444.30it/s]Running loglikelihood requests:  52%|█████▏    | 29065/56168 [02:02<01:00, 445.22it/s]Running loglikelihood requests:  52%|█████▏    | 29129/56168 [02:02<01:00, 446.70it/s]Running loglikelihood requests:  52%|█████▏    | 29193/56168 [02:03<01:00, 446.77it/s]Running loglikelihood requests:  52%|█████▏    | 29257/56168 [02:03<01:00, 446.79it/s]Running loglikelihood requests:  52%|█████▏    | 29321/56168 [02:03<00:59, 448.35it/s]Running loglikelihood requests:  52%|█████▏    | 29385/56168 [02:03<00:59, 448.59it/s]Running loglikelihood requests:  52%|█████▏    | 29449/56168 [02:03<00:59, 448.19it/s]Running loglikelihood requests:  53%|█████▎    | 29513/56168 [02:03<00:59, 449.78it/s]Running loglikelihood requests:  53%|█████▎    | 29577/56168 [02:03<00:59, 450.08it/s]Running loglikelihood requests:  53%|█████▎    | 29641/56168 [02:04<00:59, 449.27it/s]Running loglikelihood requests:  53%|█████▎    | 29705/56168 [02:04<00:58, 449.49it/s]Running loglikelihood requests:  53%|█████▎    | 29769/56168 [02:04<00:58, 449.60it/s]Running loglikelihood requests:  53%|█████▎    | 29833/56168 [02:04<00:58, 450.68it/s]Running loglikelihood requests:  53%|█████▎    | 29901/56168 [02:04<00:57, 457.89it/s]Running loglikelihood requests:  53%|█████▎    | 29965/56168 [02:04<00:57, 455.10it/s]Running loglikelihood requests:  53%|█████▎    | 30029/56168 [02:04<00:57, 453.01it/s]Running loglikelihood requests:  54%|█████▎    | 30093/56168 [02:05<00:57, 453.79it/s]Running loglikelihood requests:  54%|█████▎    | 30157/56168 [02:05<00:57, 453.01it/s]Running loglikelihood requests:  54%|█████▍    | 30221/56168 [02:05<00:57, 452.46it/s]Running loglikelihood requests:  54%|█████▍    | 30285/56168 [02:05<00:57, 452.48it/s]Running loglikelihood requests:  54%|█████▍    | 30349/56168 [02:05<00:56, 453.08it/s]Running loglikelihood requests:  54%|█████▍    | 30413/56168 [02:05<00:56, 452.91it/s]Running loglikelihood requests:  54%|█████▍    | 30477/56168 [02:05<00:56, 454.27it/s]Running loglikelihood requests:  54%|█████▍    | 30545/56168 [02:06<00:55, 460.30it/s]Running loglikelihood requests:  54%|█████▍    | 30609/56168 [02:06<00:55, 456.97it/s]Running loglikelihood requests:  55%|█████▍    | 30673/56168 [02:06<00:55, 455.94it/s]Running loglikelihood requests:  55%|█████▍    | 30737/56168 [02:06<00:55, 462.22it/s]Running loglikelihood requests:  55%|█████▍    | 30801/56168 [02:06<00:54, 466.10it/s]Running loglikelihood requests:  55%|█████▍    | 30865/56168 [02:06<00:53, 470.17it/s]Running loglikelihood requests:  55%|█████▌    | 30929/56168 [02:06<00:53, 471.85it/s]Running loglikelihood requests:  55%|█████▌    | 30993/56168 [02:07<00:53, 474.77it/s]Running loglikelihood requests:  55%|█████▌    | 31057/56168 [02:07<00:52, 476.69it/s]Running loglikelihood requests:  55%|█████▌    | 31121/56168 [02:07<00:52, 476.56it/s]Running loglikelihood requests:  56%|█████▌    | 31185/56168 [02:07<00:52, 477.20it/s]Running loglikelihood requests:  56%|█████▌    | 31249/56168 [02:07<00:52, 477.92it/s]Running loglikelihood requests:  56%|█████▌    | 31313/56168 [02:07<00:52, 476.98it/s]Running loglikelihood requests:  56%|█████▌    | 31377/56168 [02:07<00:51, 478.41it/s]Running loglikelihood requests:  56%|█████▌    | 31441/56168 [02:07<00:51, 478.11it/s]Running loglikelihood requests:  56%|█████▌    | 31505/56168 [02:08<00:51, 479.25it/s]Running loglikelihood requests:  56%|█████▌    | 31569/56168 [02:08<00:51, 478.12it/s]Running loglikelihood requests:  56%|█████▋    | 31633/56168 [02:08<00:51, 477.95it/s]Running loglikelihood requests:  56%|█████▋    | 31697/56168 [02:08<00:51, 478.36it/s]Running loglikelihood requests:  57%|█████▋    | 31761/56168 [02:08<00:51, 477.69it/s]Running loglikelihood requests:  57%|█████▋    | 31825/56168 [02:08<00:50, 478.09it/s]Running loglikelihood requests:  57%|█████▋    | 31889/56168 [02:08<00:50, 479.28it/s]Running loglikelihood requests:  57%|█████▋    | 31953/56168 [02:09<00:50, 476.91it/s]Running loglikelihood requests:  57%|█████▋    | 32017/56168 [02:09<00:50, 478.39it/s]Running loglikelihood requests:  57%|█████▋    | 32081/56168 [02:09<00:50, 478.53it/s]Running loglikelihood requests:  57%|█████▋    | 32145/56168 [02:09<00:50, 479.30it/s]Running loglikelihood requests:  57%|█████▋    | 32209/56168 [02:09<00:49, 479.59it/s]Running loglikelihood requests:  57%|█████▋    | 32273/56168 [02:09<00:49, 479.09it/s]Running loglikelihood requests:  58%|█████▊    | 32337/56168 [02:09<00:49, 480.34it/s]Running loglikelihood requests:  58%|█████▊    | 32401/56168 [02:09<00:49, 479.57it/s]Running loglikelihood requests:  58%|█████▊    | 32465/56168 [02:10<00:49, 480.29it/s]Running loglikelihood requests:  58%|█████▊    | 32529/56168 [02:10<00:49, 481.22it/s]Running loglikelihood requests:  58%|█████▊    | 32593/56168 [02:10<00:49, 480.84it/s]Running loglikelihood requests:  58%|█████▊    | 32657/56168 [02:10<00:48, 481.44it/s]Running loglikelihood requests:  58%|█████▊    | 32721/56168 [02:10<00:48, 481.88it/s]Running loglikelihood requests:  58%|█████▊    | 32785/56168 [02:10<00:48, 482.35it/s]Running loglikelihood requests:  58%|█████▊    | 32849/56168 [02:10<00:48, 481.36it/s]Running loglikelihood requests:  59%|█████▊    | 32913/56168 [02:11<00:48, 480.72it/s]Running loglikelihood requests:  59%|█████▊    | 32977/56168 [02:11<00:48, 482.93it/s]Running loglikelihood requests:  59%|█████▉    | 33041/56168 [02:11<00:47, 483.31it/s]Running loglikelihood requests:  59%|█████▉    | 33105/56168 [02:11<00:47, 484.18it/s]Running loglikelihood requests:  59%|█████▉    | 33169/56168 [02:11<00:47, 483.60it/s]Running loglikelihood requests:  59%|█████▉    | 33233/56168 [02:11<00:47, 484.92it/s]Running loglikelihood requests:  59%|█████▉    | 33297/56168 [02:11<00:47, 484.34it/s]Running loglikelihood requests:  59%|█████▉    | 33361/56168 [02:11<00:47, 483.51it/s]Running loglikelihood requests:  60%|█████▉    | 33425/56168 [02:12<00:47, 483.23it/s]Running loglikelihood requests:  60%|█████▉    | 33489/56168 [02:12<00:46, 483.67it/s]Running loglikelihood requests:  60%|█████▉    | 33553/56168 [02:12<00:46, 483.97it/s]Running loglikelihood requests:  60%|█████▉    | 33617/56168 [02:12<00:46, 483.26it/s]Running loglikelihood requests:  60%|█████▉    | 33681/56168 [02:12<00:46, 485.00it/s]Running loglikelihood requests:  60%|██████    | 33745/56168 [02:12<00:46, 485.35it/s]Running loglikelihood requests:  60%|██████    | 33809/56168 [02:12<00:46, 486.05it/s]Running loglikelihood requests:  60%|██████    | 33873/56168 [02:13<00:45, 485.59it/s]Running loglikelihood requests:  60%|██████    | 33937/56168 [02:13<00:45, 486.70it/s]Running loglikelihood requests:  61%|██████    | 34001/56168 [02:13<00:45, 485.95it/s]Running loglikelihood requests:  61%|██████    | 34065/56168 [02:13<00:45, 487.53it/s]Running loglikelihood requests:  61%|██████    | 34129/56168 [02:13<00:45, 487.08it/s]Running loglikelihood requests:  61%|██████    | 34193/56168 [02:13<00:45, 486.49it/s]Running loglikelihood requests:  61%|██████    | 34257/56168 [02:13<00:45, 485.62it/s]Running loglikelihood requests:  61%|██████    | 34321/56168 [02:13<00:44, 487.77it/s]Running loglikelihood requests:  61%|██████    | 34385/56168 [02:14<00:44, 486.70it/s]Running loglikelihood requests:  61%|██████▏   | 34449/56168 [02:14<00:44, 487.46it/s]Running loglikelihood requests:  61%|██████▏   | 34513/56168 [02:14<00:44, 486.35it/s]Running loglikelihood requests:  62%|██████▏   | 34577/56168 [02:14<00:44, 486.92it/s]Running loglikelihood requests:  62%|██████▏   | 34641/56168 [02:14<00:44, 486.30it/s]Running loglikelihood requests:  62%|██████▏   | 34705/56168 [02:14<00:43, 488.58it/s]Running loglikelihood requests:  62%|██████▏   | 34769/56168 [02:14<00:43, 488.24it/s]Running loglikelihood requests:  62%|██████▏   | 34833/56168 [02:14<00:43, 488.96it/s]Running loglikelihood requests:  62%|██████▏   | 34897/56168 [02:15<00:43, 488.82it/s]Running loglikelihood requests:  62%|██████▏   | 34961/56168 [02:15<00:43, 488.59it/s]Running loglikelihood requests:  62%|██████▏   | 35025/56168 [02:15<00:43, 488.53it/s]Running loglikelihood requests:  62%|██████▏   | 35089/56168 [02:15<00:43, 489.26it/s]Running loglikelihood requests:  63%|██████▎   | 35153/56168 [02:15<00:42, 488.86it/s]Running loglikelihood requests:  63%|██████▎   | 35217/56168 [02:15<00:42, 489.51it/s]Running loglikelihood requests:  63%|██████▎   | 35281/56168 [02:15<00:42, 489.25it/s]Running loglikelihood requests:  63%|██████▎   | 35345/56168 [02:16<00:42, 489.91it/s]Running loglikelihood requests:  63%|██████▎   | 35409/56168 [02:16<00:42, 489.52it/s]Running loglikelihood requests:  63%|██████▎   | 35473/56168 [02:16<00:42, 490.15it/s]Running loglikelihood requests:  63%|██████▎   | 35537/56168 [02:16<00:41, 498.01it/s]Running loglikelihood requests:  63%|██████▎   | 35601/56168 [02:16<00:40, 503.09it/s]Running loglikelihood requests:  63%|██████▎   | 35665/56168 [02:16<00:40, 505.56it/s]Running loglikelihood requests:  64%|██████▎   | 35729/56168 [02:16<00:40, 506.97it/s]Running loglikelihood requests:  64%|██████▎   | 35793/56168 [02:16<00:40, 507.26it/s]Running loglikelihood requests:  64%|██████▍   | 35857/56168 [02:17<00:39, 509.49it/s]Running loglikelihood requests:  64%|██████▍   | 35921/56168 [02:17<00:39, 510.23it/s]Running loglikelihood requests:  64%|██████▍   | 35985/56168 [02:17<00:39, 509.88it/s]Running loglikelihood requests:  64%|██████▍   | 36049/56168 [02:17<00:39, 508.98it/s]Running loglikelihood requests:  64%|██████▍   | 36113/56168 [02:17<00:39, 509.86it/s]Running loglikelihood requests:  64%|██████▍   | 36177/56168 [02:17<00:39, 510.36it/s]Running loglikelihood requests:  65%|██████▍   | 36241/56168 [02:17<00:39, 510.27it/s]Running loglikelihood requests:  65%|██████▍   | 36305/56168 [02:17<00:38, 509.86it/s]Running loglikelihood requests:  65%|██████▍   | 36369/56168 [02:18<00:38, 512.10it/s]Running loglikelihood requests:  65%|██████▍   | 36433/56168 [02:18<00:38, 513.82it/s]Running loglikelihood requests:  65%|██████▍   | 36497/56168 [02:18<00:38, 516.52it/s]Running loglikelihood requests:  65%|██████▌   | 36561/56168 [02:18<00:37, 517.65it/s]Running loglikelihood requests:  65%|██████▌   | 36625/56168 [02:18<00:37, 518.23it/s]Running loglikelihood requests:  65%|██████▌   | 36689/56168 [02:18<00:37, 518.70it/s]Running loglikelihood requests:  65%|██████▌   | 36753/56168 [02:18<00:37, 516.49it/s]Running loglikelihood requests:  66%|██████▌   | 36817/56168 [02:18<00:37, 514.51it/s]Running loglikelihood requests:  66%|██████▌   | 36881/56168 [02:19<00:37, 513.78it/s]Running loglikelihood requests:  66%|██████▌   | 36945/56168 [02:19<00:37, 513.80it/s]Running loglikelihood requests:  66%|██████▌   | 37009/56168 [02:19<00:37, 514.15it/s]Running loglikelihood requests:  66%|██████▌   | 37073/56168 [02:19<00:37, 515.29it/s]Running loglikelihood requests:  66%|██████▌   | 37137/56168 [02:19<00:36, 514.39it/s]Running loglikelihood requests:  66%|██████▌   | 37201/56168 [02:19<00:36, 513.44it/s]Running loglikelihood requests:  66%|██████▋   | 37265/56168 [02:19<00:36, 513.58it/s]Running loglikelihood requests:  66%|██████▋   | 37333/56168 [02:19<00:35, 523.87it/s]Running loglikelihood requests:  67%|██████▋   | 37397/56168 [02:20<00:35, 523.19it/s]Running loglikelihood requests:  67%|██████▋   | 37461/56168 [02:20<00:35, 523.66it/s]Running loglikelihood requests:  67%|██████▋   | 37525/56168 [02:20<00:35, 523.41it/s]Running loglikelihood requests:  67%|██████▋   | 37589/56168 [02:20<00:35, 523.29it/s]Running loglikelihood requests:  67%|██████▋   | 37653/56168 [02:20<00:35, 522.69it/s]Running loglikelihood requests:  67%|██████▋   | 37717/56168 [02:20<00:35, 520.86it/s]Running loglikelihood requests:  67%|██████▋   | 37781/56168 [02:20<00:35, 519.55it/s]Running loglikelihood requests:  67%|██████▋   | 37845/56168 [02:20<00:35, 518.44it/s]Running loglikelihood requests:  67%|██████▋   | 37909/56168 [02:21<00:35, 518.35it/s]Running loglikelihood requests:  68%|██████▊   | 37973/56168 [02:21<00:35, 518.67it/s]Running loglikelihood requests:  68%|██████▊   | 38037/56168 [02:21<00:35, 517.72it/s]Running loglikelihood requests:  68%|██████▊   | 38101/56168 [02:21<00:34, 519.16it/s]Running loglikelihood requests:  68%|██████▊   | 38165/56168 [02:21<00:34, 518.33it/s]Running loglikelihood requests:  68%|██████▊   | 38229/56168 [02:21<00:34, 517.51it/s]Running loglikelihood requests:  68%|██████▊   | 38293/56168 [02:21<00:34, 516.51it/s]Running loglikelihood requests:  68%|██████▊   | 38357/56168 [02:21<00:34, 516.01it/s]Running loglikelihood requests:  68%|██████▊   | 38421/56168 [02:22<00:34, 514.69it/s]Running loglikelihood requests:  69%|██████▊   | 38485/56168 [02:22<00:34, 516.87it/s]Running loglikelihood requests:  69%|██████▊   | 38549/56168 [02:22<00:34, 518.00it/s]Running loglikelihood requests:  69%|██████▊   | 38613/56168 [02:22<00:33, 516.70it/s]Running loglikelihood requests:  69%|██████▉   | 38677/56168 [02:22<00:33, 518.10it/s]Running loglikelihood requests:  69%|██████▉   | 38741/56168 [02:22<00:33, 516.31it/s]Running loglikelihood requests:  69%|██████▉   | 38805/56168 [02:22<00:33, 515.96it/s]Running loglikelihood requests:  69%|██████▉   | 38869/56168 [02:22<00:33, 516.88it/s]Running loglikelihood requests:  69%|██████▉   | 38933/56168 [02:22<00:33, 517.95it/s]Running loglikelihood requests:  69%|██████▉   | 38997/56168 [02:23<00:33, 519.86it/s]Running loglikelihood requests:  70%|██████▉   | 39061/56168 [02:23<00:32, 521.30it/s]Running loglikelihood requests:  70%|██████▉   | 39125/56168 [02:23<00:32, 519.92it/s]Running loglikelihood requests:  70%|██████▉   | 39189/56168 [02:23<00:32, 518.81it/s]Running loglikelihood requests:  70%|██████▉   | 39253/56168 [02:23<00:32, 517.30it/s]Running loglikelihood requests:  70%|██████▉   | 39317/56168 [02:23<00:32, 518.00it/s]Running loglikelihood requests:  70%|███████   | 39381/56168 [02:23<00:32, 519.26it/s]Running loglikelihood requests:  70%|███████   | 39445/56168 [02:23<00:32, 519.61it/s]Running loglikelihood requests:  70%|███████   | 39509/56168 [02:24<00:32, 517.47it/s]Running loglikelihood requests:  70%|███████   | 39573/56168 [02:24<00:32, 518.37it/s]Running loglikelihood requests:  71%|███████   | 39637/56168 [02:24<00:31, 518.94it/s]Running loglikelihood requests:  71%|███████   | 39701/56168 [02:24<00:31, 519.23it/s]Running loglikelihood requests:  71%|███████   | 39765/56168 [02:24<00:31, 519.38it/s]Running loglikelihood requests:  71%|███████   | 39829/56168 [02:24<00:31, 519.39it/s]Running loglikelihood requests:  71%|███████   | 39893/56168 [02:24<00:31, 520.33it/s]Running loglikelihood requests:  71%|███████   | 39957/56168 [02:24<00:31, 520.94it/s]Running loglikelihood requests:  71%|███████▏  | 40021/56168 [02:25<00:30, 522.76it/s]Running loglikelihood requests:  71%|███████▏  | 40085/56168 [02:25<00:30, 524.93it/s]Running loglikelihood requests:  71%|███████▏  | 40149/56168 [02:25<00:30, 523.84it/s]Running loglikelihood requests:  72%|███████▏  | 40213/56168 [02:25<00:30, 523.80it/s]Running loglikelihood requests:  72%|███████▏  | 40277/56168 [02:25<00:30, 522.57it/s]Running loglikelihood requests:  72%|███████▏  | 40341/56168 [02:25<00:30, 522.72it/s]Running loglikelihood requests:  72%|███████▏  | 40405/56168 [02:25<00:30, 523.15it/s]Running loglikelihood requests:  72%|███████▏  | 40469/56168 [02:25<00:30, 521.84it/s]Running loglikelihood requests:  72%|███████▏  | 40533/56168 [02:26<00:30, 520.10it/s]Running loglikelihood requests:  72%|███████▏  | 40597/56168 [02:26<00:29, 519.87it/s]Running loglikelihood requests:  72%|███████▏  | 40661/56168 [02:26<00:29, 519.94it/s]Running loglikelihood requests:  73%|███████▎  | 40725/56168 [02:26<00:29, 519.21it/s]Running loglikelihood requests:  73%|███████▎  | 40789/56168 [02:26<00:29, 519.00it/s]Running loglikelihood requests:  73%|███████▎  | 40853/56168 [02:26<00:29, 519.94it/s]Running loglikelihood requests:  73%|███████▎  | 40921/56168 [02:26<00:28, 529.56it/s]Running loglikelihood requests:  73%|███████▎  | 40985/56168 [02:26<00:28, 526.62it/s]Running loglikelihood requests:  73%|███████▎  | 41049/56168 [02:27<00:28, 525.07it/s]Running loglikelihood requests:  73%|███████▎  | 41113/56168 [02:27<00:28, 524.57it/s]Running loglikelihood requests:  73%|███████▎  | 41177/56168 [02:27<00:28, 524.99it/s]Running loglikelihood requests:  73%|███████▎  | 41241/56168 [02:27<00:28, 524.13it/s]Running loglikelihood requests:  74%|███████▎  | 41305/56168 [02:27<00:28, 523.01it/s]Running loglikelihood requests:  74%|███████▎  | 41369/56168 [02:27<00:27, 532.85it/s]Running loglikelihood requests:  74%|███████▍  | 41433/56168 [02:27<00:27, 541.25it/s]Running loglikelihood requests:  74%|███████▍  | 41497/56168 [02:27<00:26, 547.04it/s]Running loglikelihood requests:  74%|███████▍  | 41561/56168 [02:27<00:26, 548.43it/s]Running loglikelihood requests:  74%|███████▍  | 41625/56168 [02:28<00:26, 550.41it/s]Running loglikelihood requests:  74%|███████▍  | 41689/56168 [02:28<00:26, 552.58it/s]Running loglikelihood requests:  74%|███████▍  | 41753/56168 [02:28<00:26, 551.94it/s]Running loglikelihood requests:  74%|███████▍  | 41817/56168 [02:28<00:25, 552.12it/s]Running loglikelihood requests:  75%|███████▍  | 41881/56168 [02:28<00:25, 554.97it/s]Running loglikelihood requests:  75%|███████▍  | 41945/56168 [02:28<00:25, 555.66it/s]Running loglikelihood requests:  75%|███████▍  | 42009/56168 [02:28<00:25, 555.61it/s]Running loglikelihood requests:  75%|███████▍  | 42073/56168 [02:28<00:25, 558.71it/s]Running loglikelihood requests:  75%|███████▌  | 42137/56168 [02:29<00:25, 559.02it/s]Running loglikelihood requests:  75%|███████▌  | 42201/56168 [02:29<00:24, 559.30it/s]Running loglikelihood requests:  75%|███████▌  | 42265/56168 [02:29<00:24, 560.48it/s]Running loglikelihood requests:  75%|███████▌  | 42329/56168 [02:29<00:24, 561.01it/s]Running loglikelihood requests:  75%|███████▌  | 42393/56168 [02:29<00:24, 561.02it/s]Running loglikelihood requests:  76%|███████▌  | 42457/56168 [02:29<00:24, 562.72it/s]Running loglikelihood requests:  76%|███████▌  | 42521/56168 [02:29<00:24, 561.78it/s]Running loglikelihood requests:  76%|███████▌  | 42585/56168 [02:29<00:24, 562.13it/s]Running loglikelihood requests:  76%|███████▌  | 42649/56168 [02:29<00:24, 561.06it/s]Running loglikelihood requests:  76%|███████▌  | 42713/56168 [02:30<00:24, 559.54it/s]Running loglikelihood requests:  76%|███████▌  | 42777/56168 [02:30<00:23, 561.53it/s]Running loglikelihood requests:  76%|███████▋  | 42841/56168 [02:30<00:23, 561.58it/s]Running loglikelihood requests:  76%|███████▋  | 42905/56168 [02:30<00:23, 559.92it/s]Running loglikelihood requests:  77%|███████▋  | 42969/56168 [02:30<00:23, 561.07it/s]Running loglikelihood requests:  77%|███████▋  | 43033/56168 [02:30<00:23, 560.89it/s]Running loglikelihood requests:  77%|███████▋  | 43097/56168 [02:30<00:23, 560.55it/s]Running loglikelihood requests:  77%|███████▋  | 43161/56168 [02:30<00:23, 561.34it/s]Running loglikelihood requests:  77%|███████▋  | 43225/56168 [02:30<00:23, 561.01it/s]Running loglikelihood requests:  77%|███████▋  | 43289/56168 [02:31<00:22, 562.86it/s]Running loglikelihood requests:  77%|███████▋  | 43353/56168 [02:31<00:22, 563.36it/s]Running loglikelihood requests:  77%|███████▋  | 43417/56168 [02:31<00:22, 563.02it/s]Running loglikelihood requests:  77%|███████▋  | 43481/56168 [02:31<00:22, 562.91it/s]Running loglikelihood requests:  78%|███████▊  | 43545/56168 [02:31<00:22, 563.06it/s]Running loglikelihood requests:  78%|███████▊  | 43609/56168 [02:31<00:22, 562.21it/s]Running loglikelihood requests:  78%|███████▊  | 43673/56168 [02:31<00:22, 564.30it/s]Running loglikelihood requests:  78%|███████▊  | 43741/56168 [02:31<00:21, 572.75it/s]Running loglikelihood requests:  78%|███████▊  | 43805/56168 [02:31<00:21, 570.16it/s]Running loglikelihood requests:  78%|███████▊  | 43869/56168 [02:32<00:21, 569.65it/s]Running loglikelihood requests:  78%|███████▊  | 43933/56168 [02:32<00:21, 567.35it/s]Running loglikelihood requests:  78%|███████▊  | 43997/56168 [02:32<00:21, 566.28it/s]Running loglikelihood requests:  78%|███████▊  | 44061/56168 [02:32<00:21, 565.56it/s]Running loglikelihood requests:  79%|███████▊  | 44125/56168 [02:32<00:21, 564.99it/s]Running loglikelihood requests:  79%|███████▊  | 44189/56168 [02:32<00:21, 566.64it/s]Running loglikelihood requests:  79%|███████▉  | 44253/56168 [02:32<00:21, 566.95it/s]Running loglikelihood requests:  79%|███████▉  | 44317/56168 [02:32<00:20, 568.79it/s]Running loglikelihood requests:  79%|███████▉  | 44381/56168 [02:33<00:20, 566.49it/s]Running loglikelihood requests:  79%|███████▉  | 44445/56168 [02:33<00:20, 567.58it/s]Running loglikelihood requests:  79%|███████▉  | 44509/56168 [02:33<00:20, 567.42it/s]Running loglikelihood requests:  79%|███████▉  | 44573/56168 [02:33<00:20, 566.73it/s]Running loglikelihood requests:  79%|███████▉  | 44637/56168 [02:33<00:20, 567.90it/s]Running loglikelihood requests:  80%|███████▉  | 44701/56168 [02:33<00:20, 566.84it/s]Running loglikelihood requests:  80%|███████▉  | 44765/56168 [02:33<00:20, 566.59it/s]Running loglikelihood requests:  80%|███████▉  | 44829/56168 [02:33<00:20, 565.52it/s]Running loglikelihood requests:  80%|███████▉  | 44893/56168 [02:33<00:19, 567.23it/s]Running loglikelihood requests:  80%|████████  | 44957/56168 [02:34<00:19, 568.38it/s]Running loglikelihood requests:  80%|████████  | 45021/56168 [02:34<00:19, 568.32it/s]Running loglikelihood requests:  80%|████████  | 45085/56168 [02:34<00:19, 569.30it/s]Running loglikelihood requests:  80%|████████  | 45149/56168 [02:34<00:19, 569.12it/s]Running loglikelihood requests:  80%|████████  | 45213/56168 [02:34<00:19, 570.27it/s]Running loglikelihood requests:  81%|████████  | 45277/56168 [02:34<00:19, 569.80it/s]Running loglikelihood requests:  81%|████████  | 45341/56168 [02:34<00:18, 571.07it/s]Running loglikelihood requests:  81%|████████  | 45405/56168 [02:34<00:18, 568.93it/s]Running loglikelihood requests:  81%|████████  | 45469/56168 [02:34<00:18, 569.04it/s]Running loglikelihood requests:  81%|████████  | 45533/56168 [02:35<00:18, 569.13it/s]Running loglikelihood requests:  81%|████████  | 45597/56168 [02:35<00:18, 567.48it/s]Running loglikelihood requests:  81%|████████▏ | 45661/56168 [02:35<00:18, 566.77it/s]Running loglikelihood requests:  81%|████████▏ | 45725/56168 [02:35<00:18, 567.60it/s]Running loglikelihood requests:  82%|████████▏ | 45789/56168 [02:35<00:18, 570.53it/s]Running loglikelihood requests:  82%|████████▏ | 45853/56168 [02:35<00:18, 571.57it/s]Running loglikelihood requests:  82%|████████▏ | 45917/56168 [02:35<00:17, 573.15it/s]Running loglikelihood requests:  82%|████████▏ | 45981/56168 [02:35<00:17, 572.19it/s]Running loglikelihood requests:  82%|████████▏ | 46045/56168 [02:35<00:17, 572.62it/s]Running loglikelihood requests:  82%|████████▏ | 46109/56168 [02:36<00:17, 572.59it/s]Running loglikelihood requests:  82%|████████▏ | 46173/56168 [02:36<00:17, 573.02it/s]Running loglikelihood requests:  82%|████████▏ | 46237/56168 [02:36<00:17, 572.98it/s]Running loglikelihood requests:  82%|████████▏ | 46301/56168 [02:36<00:17, 571.90it/s]Running loglikelihood requests:  83%|████████▎ | 46365/56168 [02:36<00:17, 572.61it/s]Running loglikelihood requests:  83%|████████▎ | 46429/56168 [02:36<00:17, 571.87it/s]Running loglikelihood requests:  83%|████████▎ | 46493/56168 [02:36<00:16, 574.23it/s]Running loglikelihood requests:  83%|████████▎ | 46557/56168 [02:36<00:16, 575.02it/s]Running loglikelihood requests:  83%|████████▎ | 46621/56168 [02:36<00:16, 577.03it/s]Running loglikelihood requests:  83%|████████▎ | 46685/56168 [02:37<00:16, 577.13it/s]Running loglikelihood requests:  83%|████████▎ | 46749/56168 [02:37<00:16, 578.04it/s]Running loglikelihood requests:  83%|████████▎ | 46813/56168 [02:37<00:16, 577.98it/s]Running loglikelihood requests:  83%|████████▎ | 46877/56168 [02:37<00:16, 576.58it/s]Running loglikelihood requests:  84%|████████▎ | 46941/56168 [02:37<00:16, 576.26it/s]Running loglikelihood requests:  84%|████████▎ | 47005/56168 [02:37<00:15, 575.60it/s]Running loglikelihood requests:  84%|████████▍ | 47069/56168 [02:37<00:15, 574.63it/s]Running loglikelihood requests:  84%|████████▍ | 47133/56168 [02:37<00:15, 573.43it/s]Running loglikelihood requests:  84%|████████▍ | 47197/56168 [02:37<00:15, 571.97it/s]Running loglikelihood requests:  84%|████████▍ | 47261/56168 [02:38<00:15, 572.97it/s]Running loglikelihood requests:  84%|████████▍ | 47325/56168 [02:38<00:15, 572.56it/s]Running loglikelihood requests:  84%|████████▍ | 47389/56168 [02:38<00:15, 574.67it/s]Running loglikelihood requests:  84%|████████▍ | 47453/56168 [02:38<00:15, 573.82it/s]Running loglikelihood requests:  85%|████████▍ | 47517/56168 [02:38<00:15, 575.82it/s]Running loglikelihood requests:  85%|████████▍ | 47581/56168 [02:38<00:14, 576.23it/s]Running loglikelihood requests:  85%|████████▍ | 47645/56168 [02:38<00:14, 577.79it/s]Running loglikelihood requests:  85%|████████▍ | 47709/56168 [02:38<00:14, 577.46it/s]Running loglikelihood requests:  85%|████████▌ | 47773/56168 [02:38<00:14, 577.48it/s]Running loglikelihood requests:  85%|████████▌ | 47837/56168 [02:39<00:14, 575.77it/s]Running loglikelihood requests:  85%|████████▌ | 47901/56168 [02:39<00:14, 575.95it/s]Running loglikelihood requests:  85%|████████▌ | 47965/56168 [02:39<00:14, 576.15it/s]Running loglikelihood requests:  86%|████████▌ | 48029/56168 [02:39<00:14, 577.18it/s]Running loglikelihood requests:  86%|████████▌ | 48093/56168 [02:39<00:13, 576.83it/s]Running loglikelihood requests:  86%|████████▌ | 48157/56168 [02:39<00:13, 577.96it/s]Running loglikelihood requests:  86%|████████▌ | 48221/56168 [02:39<00:13, 576.86it/s]Running loglikelihood requests:  86%|████████▌ | 48285/56168 [02:39<00:13, 577.99it/s]Running loglikelihood requests:  86%|████████▌ | 48349/56168 [02:39<00:13, 582.46it/s]Running loglikelihood requests:  86%|████████▌ | 48413/56168 [02:40<00:13, 587.28it/s]Running loglikelihood requests:  86%|████████▋ | 48477/56168 [02:40<00:13, 591.42it/s]Running loglikelihood requests:  86%|████████▋ | 48541/56168 [02:40<00:12, 592.78it/s]Running loglikelihood requests:  87%|████████▋ | 48605/56168 [02:40<00:12, 593.98it/s]Running loglikelihood requests:  87%|████████▋ | 48669/56168 [02:40<00:12, 596.14it/s]Running loglikelihood requests:  87%|████████▋ | 48733/56168 [02:40<00:12, 597.17it/s]Running loglikelihood requests:  87%|████████▋ | 48797/56168 [02:40<00:12, 597.05it/s]Running loglikelihood requests:  87%|████████▋ | 48861/56168 [02:40<00:12, 597.58it/s]Running loglikelihood requests:  87%|████████▋ | 48925/56168 [02:40<00:12, 598.38it/s]Running loglikelihood requests:  87%|████████▋ | 48989/56168 [02:40<00:11, 598.39it/s]Running loglikelihood requests:  87%|████████▋ | 49053/56168 [02:41<00:11, 599.67it/s]Running loglikelihood requests:  87%|████████▋ | 49117/56168 [02:41<00:11, 601.21it/s]Running loglikelihood requests:  88%|████████▊ | 49181/56168 [02:41<00:11, 603.91it/s]Running loglikelihood requests:  88%|████████▊ | 49245/56168 [02:41<00:11, 605.24it/s]Running loglikelihood requests:  88%|████████▊ | 49309/56168 [02:41<00:11, 605.06it/s]Running loglikelihood requests:  88%|████████▊ | 49373/56168 [02:41<00:11, 607.50it/s]Running loglikelihood requests:  88%|████████▊ | 49437/56168 [02:41<00:11, 608.44it/s]Running loglikelihood requests:  88%|████████▊ | 49501/56168 [02:41<00:10, 609.69it/s]Running loglikelihood requests:  88%|████████▊ | 49565/56168 [02:41<00:10, 609.33it/s]Running loglikelihood requests:  88%|████████▊ | 49629/56168 [02:42<00:10, 608.26it/s]Running loglikelihood requests:  88%|████████▊ | 49693/56168 [02:42<00:10, 609.74it/s]Running loglikelihood requests:  89%|████████▊ | 49757/56168 [02:42<00:10, 609.97it/s]Running loglikelihood requests:  89%|████████▊ | 49821/56168 [02:42<00:10, 610.76it/s]Running loglikelihood requests:  89%|████████▉ | 49885/56168 [02:42<00:10, 610.33it/s]Running loglikelihood requests:  89%|████████▉ | 49953/56168 [02:42<00:10, 620.89it/s]Running loglikelihood requests:  89%|████████▉ | 50017/56168 [02:42<00:09, 619.03it/s]Running loglikelihood requests:  89%|████████▉ | 50081/56168 [02:42<00:09, 617.82it/s]Running loglikelihood requests:  89%|████████▉ | 50145/56168 [02:42<00:09, 617.81it/s]Running loglikelihood requests:  89%|████████▉ | 50209/56168 [02:42<00:09, 617.47it/s]Running loglikelihood requests:  90%|████████▉ | 50273/56168 [02:43<00:09, 615.63it/s]Running loglikelihood requests:  90%|████████▉ | 50337/56168 [02:43<00:09, 612.56it/s]Running loglikelihood requests:  90%|████████▉ | 50401/56168 [02:43<00:09, 612.55it/s]Running loglikelihood requests:  90%|████████▉ | 50465/56168 [02:43<00:09, 613.98it/s]Running loglikelihood requests:  90%|████████▉ | 50529/56168 [02:43<00:09, 614.57it/s]Running loglikelihood requests:  90%|█████████ | 50593/56168 [02:43<00:09, 615.27it/s]Running loglikelihood requests:  90%|█████████ | 50657/56168 [02:43<00:08, 614.37it/s]Running loglikelihood requests:  90%|█████████ | 50721/56168 [02:43<00:08, 613.25it/s]Running loglikelihood requests:  90%|█████████ | 50789/56168 [02:43<00:08, 624.57it/s]Running loglikelihood requests:  91%|█████████ | 50853/56168 [02:44<00:08, 622.11it/s]Running loglikelihood requests:  91%|█████████ | 50917/56168 [02:44<00:08, 620.88it/s]Running loglikelihood requests:  91%|█████████ | 50981/56168 [02:44<00:08, 620.16it/s]Running loglikelihood requests:  91%|█████████ | 51045/56168 [02:44<00:08, 619.51it/s]Running loglikelihood requests:  91%|█████████ | 51109/56168 [02:44<00:08, 617.97it/s]Running loglikelihood requests:  91%|█████████ | 51173/56168 [02:44<00:08, 616.90it/s]Running loglikelihood requests:  91%|█████████ | 51237/56168 [02:44<00:07, 617.04it/s]Running loglikelihood requests:  91%|█████████▏| 51301/56168 [02:44<00:07, 617.69it/s]Running loglikelihood requests:  91%|█████████▏| 51365/56168 [02:44<00:07, 618.12it/s]Running loglikelihood requests:  92%|█████████▏| 51429/56168 [02:44<00:07, 618.80it/s]Running loglikelihood requests:  92%|█████████▏| 51493/56168 [02:45<00:07, 617.92it/s]Running loglikelihood requests:  92%|█████████▏| 51557/56168 [02:45<00:07, 617.91it/s]Running loglikelihood requests:  92%|█████████▏| 51621/56168 [02:45<00:07, 617.44it/s]Running loglikelihood requests:  92%|█████████▏| 51685/56168 [02:45<00:07, 617.32it/s]Running loglikelihood requests:  92%|█████████▏| 51749/56168 [02:45<00:07, 617.55it/s]Running loglikelihood requests:  92%|█████████▏| 51813/56168 [02:45<00:07, 618.12it/s]Running loglikelihood requests:  92%|█████████▏| 51877/56168 [02:45<00:06, 619.75it/s]Running loglikelihood requests:  92%|█████████▏| 51941/56168 [02:45<00:06, 620.57it/s]Running loglikelihood requests:  93%|█████████▎| 52005/56168 [02:45<00:06, 621.59it/s]Running loglikelihood requests:  93%|█████████▎| 52069/56168 [02:46<00:06, 620.94it/s]Running loglikelihood requests:  93%|█████████▎| 52133/56168 [02:46<00:06, 619.61it/s]Running loglikelihood requests:  93%|█████████▎| 52197/56168 [02:46<00:06, 618.25it/s]Running loglikelihood requests:  93%|█████████▎| 52261/56168 [02:46<00:06, 617.83it/s]Running loglikelihood requests:  93%|█████████▎| 52325/56168 [02:46<00:06, 615.52it/s]Running loglikelihood requests:  93%|█████████▎| 52389/56168 [02:46<00:06, 616.71it/s]Running loglikelihood requests:  93%|█████████▎| 52453/56168 [02:46<00:05, 619.49it/s]Running loglikelihood requests:  93%|█████████▎| 52517/56168 [02:46<00:05, 621.62it/s]Running loglikelihood requests:  94%|█████████▎| 52581/56168 [02:46<00:05, 623.51it/s]Running loglikelihood requests:  94%|█████████▎| 52645/56168 [02:46<00:05, 624.99it/s]Running loglikelihood requests:  94%|█████████▍| 52709/56168 [02:47<00:05, 625.59it/s]Running loglikelihood requests:  94%|█████████▍| 52773/56168 [02:47<00:05, 625.32it/s]Running loglikelihood requests:  94%|█████████▍| 52837/56168 [02:47<00:05, 624.39it/s]Running loglikelihood requests:  94%|█████████▍| 52901/56168 [02:47<00:05, 621.71it/s]Running loglikelihood requests:  94%|█████████▍| 52965/56168 [02:47<00:05, 619.33it/s]Running loglikelihood requests:  94%|█████████▍| 53029/56168 [02:47<00:05, 619.08it/s]Running loglikelihood requests:  95%|█████████▍| 53093/56168 [02:47<00:04, 621.08it/s]Running loglikelihood requests:  95%|█████████▍| 53157/56168 [02:47<00:04, 624.05it/s]Running loglikelihood requests:  95%|█████████▍| 53221/56168 [02:47<00:04, 625.63it/s]Running loglikelihood requests:  95%|█████████▍| 53285/56168 [02:47<00:04, 626.78it/s]Running loglikelihood requests:  95%|█████████▍| 53349/56168 [02:48<00:04, 628.01it/s]Running loglikelihood requests:  95%|█████████▌| 53413/56168 [02:48<00:04, 628.77it/s]Running loglikelihood requests:  95%|█████████▌| 53477/56168 [02:48<00:04, 628.79it/s]Running loglikelihood requests:  95%|█████████▌| 53541/56168 [02:48<00:04, 628.68it/s]Running loglikelihood requests:  95%|█████████▌| 53605/56168 [02:48<00:04, 628.23it/s]Running loglikelihood requests:  96%|█████████▌| 53669/56168 [02:48<00:03, 628.80it/s]Running loglikelihood requests:  96%|█████████▌| 53733/56168 [02:48<00:03, 628.92it/s]Running loglikelihood requests:  96%|█████████▌| 53797/56168 [02:48<00:03, 629.43it/s]Running loglikelihood requests:  96%|█████████▌| 53861/56168 [02:48<00:03, 629.58it/s]Running loglikelihood requests:  96%|█████████▌| 53925/56168 [02:48<00:03, 627.82it/s]Running loglikelihood requests:  96%|█████████▌| 53989/56168 [02:49<00:03, 626.19it/s]Running loglikelihood requests:  96%|█████████▌| 54053/56168 [02:49<00:03, 624.80it/s]Running loglikelihood requests:  96%|█████████▋| 54117/56168 [02:49<00:03, 624.13it/s]Running loglikelihood requests:  97%|█████████▋| 54214/56168 [02:49<00:02, 725.95it/s]Running loglikelihood requests:  97%|█████████▋| 54309/56168 [02:49<00:02, 630.25it/s]Running loglikelihood requests:  97%|█████████▋| 54405/56168 [02:49<00:02, 713.11it/s]Running loglikelihood requests:  97%|█████████▋| 54501/56168 [02:49<00:02, 632.13it/s]Running loglikelihood requests:  97%|█████████▋| 54607/56168 [02:49<00:02, 732.49it/s]Running loglikelihood requests:  97%|█████████▋| 54693/56168 [02:50<00:02, 629.66it/s]Running loglikelihood requests:  98%|█████████▊| 54797/56168 [02:50<00:01, 723.21it/s]Running loglikelihood requests:  98%|█████████▊| 54885/56168 [02:50<00:02, 629.78it/s]Running loglikelihood requests:  98%|█████████▊| 54988/56168 [02:50<00:01, 719.64it/s]Running loglikelihood requests:  98%|█████████▊| 55077/56168 [02:50<00:01, 632.16it/s]Running loglikelihood requests:  98%|█████████▊| 55173/56168 [02:50<00:01, 705.54it/s]Running loglikelihood requests:  98%|█████████▊| 55269/56168 [02:50<00:01, 636.76it/s]Running loglikelihood requests:  99%|█████████▊| 55364/56168 [02:51<00:01, 706.65it/s]Running loglikelihood requests:  99%|█████████▊| 55461/56168 [02:51<00:01, 640.64it/s]Running loglikelihood requests:  99%|█████████▉| 55565/56168 [02:51<00:00, 729.74it/s]Running loglikelihood requests:  99%|█████████▉| 55653/56168 [02:51<00:00, 641.48it/s]Running loglikelihood requests:  99%|█████████▉| 55768/56168 [02:51<00:00, 755.46it/s]Running loglikelihood requests:  99%|█████████▉| 55853/56168 [02:51<00:00, 652.43it/s]Running loglikelihood requests: 100%|█████████▉| 55973/56168 [02:52<00:00, 654.59it/s]Running loglikelihood requests: 100%|█████████▉| 56100/56168 [02:52<00:00, 785.78it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:52<00:00, 326.07it/s]
2025-05-16:02:48:54,958 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=shengyuanhu/wmdp_unlearn_rmu_150_1200_6.5_zephyr,tokenizer=HuggingFaceH4/zephyr-7b-beta), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.4967|±  |0.0041|
| - humanities                          |      2|none  |      |acc   |↑  |0.4814|±  |0.0070|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.4762|±  |0.0447|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.6121|±  |0.0380|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.6569|±  |0.0333|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.6456|±  |0.0311|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.5207|±  |0.0456|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.7315|±  |0.0428|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.6012|±  |0.0385|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.5520|±  |0.0268|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.2637|±  |0.0147|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6752|±  |0.0266|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.5216|±  |0.0278|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4218|±  |0.0126|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.7251|±  |0.0342|
| - other                               |      2|none  |      |acc   |↑  |0.4799|±  |0.0086|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.6000|±  |0.0492|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.3623|±  |0.0296|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.3988|±  |0.0373|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.2600|±  |0.0441|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.4484|±  |0.0334|
|  - management                         |      1|none  |     0|acc   |↑  |0.5534|±  |0.0492|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.7094|±  |0.0297|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.4100|±  |0.0494|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.6373|±  |0.0172|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.4150|±  |0.0282|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.4433|±  |0.0296|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.2868|±  |0.0275|
|  - virology                           |      1|none  |     0|acc   |↑  |0.2831|±  |0.0351|
| - social sciences                     |      2|none  |      |acc   |↑  |0.5814|±  |0.0088|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.4211|±  |0.0464|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.5455|±  |0.0355|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.7150|±  |0.0326|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.5692|±  |0.0251|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.6429|±  |0.0311|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.6606|±  |0.0203|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.4198|±  |0.0433|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.5392|±  |0.0202|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.5727|±  |0.0474|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.4286|±  |0.0317|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.7363|±  |0.0312|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.5900|±  |0.0494|
| - stem                                |      2|none  |      |acc   |↑  |0.4532|±  |0.0088|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.3900|±  |0.0490|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.4000|±  |0.0423|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.5724|±  |0.0403|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.4931|±  |0.0418|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4900|±  |0.0502|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.4600|±  |0.0501|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3000|±  |0.0461|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.4608|±  |0.0496|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.3300|±  |0.0473|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.5574|±  |0.0325|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.5172|±  |0.0416|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4709|±  |0.0257|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.4484|±  |0.0283|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.4778|±  |0.0351|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.5100|±  |0.0502|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.3519|±  |0.0291|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.4040|±  |0.0401|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.4861|±  |0.0341|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.3661|±  |0.0457|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.4967|±  |0.0041|
| - humanities     |      2|none  |      |acc   |↑  |0.4814|±  |0.0070|
| - other          |      2|none  |      |acc   |↑  |0.4799|±  |0.0086|
| - social sciences|      2|none  |      |acc   |↑  |0.5814|±  |0.0088|
| - stem           |      2|none  |      |acc   |↑  |0.4532|±  |0.0088|

2025-05-16:02:49:00,737 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-16:02:49:00,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,885 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,887 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,896 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,899 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,902 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,905 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,911 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,917 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,923 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,937 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,960 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,963 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:00,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,697 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,747 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,751 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,759 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,787 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:01,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,588 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,591 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,903 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,905 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,906 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,909 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,911 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,965 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,975 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,982 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,985 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,989 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:02,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,029 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,032 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,036 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,043 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,058 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,072 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,076 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,079 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,086 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,098 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,113 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,135 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,154 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,158 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,158 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,161 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,245 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,247 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,256 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,264 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,267 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,269 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,290 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,292 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,297 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,300 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,311 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,314 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,320 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,322 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,328 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,331 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,333 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,346 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,349 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,351 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,354 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,364 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,369 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,372 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,377 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,379 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,390 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,398 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,409 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,420 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,423 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,428 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,452 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:03,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:04,467 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:04,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:04,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:04,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:04,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:04,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:04,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:04,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,411 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,416 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,420 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,423 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,427 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,433 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,438 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,440 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,479 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,481 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,489 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,497 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,528 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,547 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,550 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,554 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,561 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,569 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,571 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,574 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,582 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,591 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,594 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,605 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,610 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,621 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,639 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,641 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,643 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,649 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,657 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,660 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,662 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,663 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,665 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,666 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,671 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,673 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,674 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,676 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,677 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,684 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,688 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,690 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,692 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,707 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,714 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,716 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,721 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,723 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,727 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,733 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,735 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,740 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,744 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,747 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,751 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,759 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,799 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,808 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,812 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,820 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,822 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,826 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,829 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,830 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,835 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,837 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,842 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,845 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,856 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,861 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,862 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,866 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,868 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,872 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,936 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,941 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:05,948 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:08,322 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:08,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:49:08,328 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-16:02:49:08,332 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-16:02:49:08,332 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': 'shengyuanhu/benchmark_wmdp_ga_ckpt_140', 'tokenizer': 'HuggingFaceH4/zephyr-7b-beta'}
2025-05-16:02:49:08,872 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-16:02:49:09,056 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:12<00:25, 12.87s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:25<00:12, 12.71s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:35<00:00, 11.70s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:35<00:00, 11.99s/it]
2025-05-16:02:50:08,245 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,245 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,245 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,245 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,245 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,245 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,245 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,245 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,245 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,245 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,246 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,247 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:50:08,248 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-16:02:50:08,256 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 862.78it/s]100%|██████████| 100/100 [00:00<00:00, 865.42it/s]
2025-05-16:02:50:08,376 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 29%|██▊       | 89/310 [00:00<00:00, 884.12it/s] 57%|█████▋    | 178/310 [00:00<00:00, 887.41it/s] 86%|████████▌ | 267/310 [00:00<00:00, 879.89it/s]100%|██████████| 310/310 [00:00<00:00, 881.90it/s]
2025-05-16:02:50:08,737 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 881.34it/s]100%|██████████| 100/100 [00:00<00:00, 882.60it/s]
2025-05-16:02:50:08,855 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 62%|██████▏   | 90/145 [00:00<00:00, 892.87it/s]100%|██████████| 145/145 [00:00<00:00, 893.46it/s]
2025-05-16:02:50:09,022 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 873.43it/s]100%|██████████| 100/100 [00:00<00:00, 875.29it/s]
2025-05-16:02:50:09,140 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 44%|████▍     | 89/203 [00:00<00:00, 888.96it/s] 88%|████████▊ | 179/203 [00:00<00:00, 891.93it/s]100%|██████████| 203/203 [00:00<00:00, 891.27it/s]
2025-05-16:02:50:09,375 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 58%|█████▊    | 88/152 [00:00<00:00, 879.82it/s]100%|██████████| 152/152 [00:00<00:00, 886.76it/s]
2025-05-16:02:50:09,551 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 88%|████████▊ | 90/102 [00:00<00:00, 897.12it/s]100%|██████████| 102/102 [00:00<00:00, 895.51it/s]
2025-05-16:02:50:09,669 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 888.51it/s]100%|██████████| 100/100 [00:00<00:00, 883.85it/s]
2025-05-16:02:50:09,786 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 60%|██████    | 87/144 [00:00<00:00, 863.81it/s]100%|██████████| 144/144 [00:00<00:00, 869.28it/s]
2025-05-16:02:50:09,957 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 38%|███▊      | 89/235 [00:00<00:00, 883.58it/s] 76%|███████▌  | 178/235 [00:00<00:00, 882.88it/s]100%|██████████| 235/235 [00:00<00:00, 882.53it/s]
2025-05-16:02:50:10,231 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 78%|███████▊  | 87/112 [00:00<00:00, 866.56it/s]100%|██████████| 112/112 [00:00<00:00, 867.06it/s]
2025-05-16:02:50:10,365 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 33%|███▎      | 88/270 [00:00<00:00, 877.49it/s] 66%|██████▌   | 177/270 [00:00<00:00, 879.61it/s] 99%|█████████▊| 266/270 [00:00<00:00, 882.23it/s]100%|██████████| 270/270 [00:00<00:00, 880.91it/s]
2025-05-16:02:50:10,680 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 881.04it/s]100%|██████████| 100/100 [00:00<00:00, 877.59it/s]
2025-05-16:02:50:10,798 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 861.80it/s]100%|██████████| 100/100 [00:00<00:00, 861.39it/s]
2025-05-16:02:50:10,918 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 65%|██████▌   | 88/135 [00:00<00:00, 878.49it/s]100%|██████████| 135/135 [00:00<00:00, 879.03it/s]
2025-05-16:02:50:11,077 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 24%|██▎       | 89/378 [00:00<00:00, 881.45it/s] 47%|████▋     | 178/378 [00:00<00:00, 879.90it/s] 70%|███████   | 266/378 [00:00<00:00, 875.28it/s] 94%|█████████▎| 354/378 [00:00<00:00, 876.85it/s]100%|██████████| 378/378 [00:00<00:00, 877.71it/s]
2025-05-16:02:50:11,520 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 59%|█████▉    | 89/151 [00:00<00:00, 883.21it/s]100%|██████████| 151/151 [00:00<00:00, 882.29it/s]
2025-05-16:02:50:11,697 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 41%|████      | 88/216 [00:00<00:00, 876.79it/s] 82%|████████▏ | 177/216 [00:00<00:00, 880.55it/s]100%|██████████| 216/216 [00:00<00:00, 879.85it/s]
2025-05-16:02:50:11,950 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 32%|███▏      | 86/265 [00:00<00:00, 855.08it/s] 66%|██████▌   | 174/265 [00:00<00:00, 865.80it/s] 99%|█████████▉| 262/265 [00:00<00:00, 870.02it/s]100%|██████████| 265/265 [00:00<00:00, 867.43it/s]
2025-05-16:02:50:12,264 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 880.94it/s]100%|██████████| 100/100 [00:00<00:00, 880.36it/s]
2025-05-16:02:50:12,381 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 85%|████████▌ | 88/103 [00:00<00:00, 878.21it/s]100%|██████████| 103/103 [00:00<00:00, 877.53it/s]
2025-05-16:02:50:12,502 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 28%|██▊       | 87/306 [00:00<00:00, 863.88it/s] 58%|█████▊    | 176/306 [00:00<00:00, 873.59it/s] 87%|████████▋ | 265/306 [00:00<00:00, 878.94it/s]100%|██████████| 306/306 [00:00<00:00, 875.47it/s]
2025-05-16:02:50:12,862 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 51%|█████     | 88/173 [00:00<00:00, 873.76it/s]100%|██████████| 173/173 [00:00<00:00, 875.49it/s]
2025-05-16:02:50:13,066 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 54%|█████▎    | 89/166 [00:00<00:00, 884.38it/s]100%|██████████| 166/166 [00:00<00:00, 883.85it/s]
2025-05-16:02:50:13,260 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 32%|███▏      | 86/272 [00:00<00:00, 858.82it/s] 64%|██████▍   | 174/272 [00:00<00:00, 866.59it/s] 96%|█████████▌| 261/272 [00:00<00:00, 863.20it/s]100%|██████████| 272/272 [00:00<00:00, 862.56it/s]
2025-05-16:02:50:13,585 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 11%|█         | 87/783 [00:00<00:00, 868.16it/s] 22%|██▏       | 176/783 [00:00<00:00, 877.84it/s] 34%|███▎      | 264/783 [00:00<00:00, 873.25it/s] 45%|████▍     | 352/783 [00:00<00:00, 869.89it/s] 56%|█████▌    | 439/783 [00:00<00:00, 866.64it/s] 67%|██████▋   | 526/783 [00:00<00:00, 865.26it/s] 78%|███████▊  | 613/783 [00:00<00:00, 865.52it/s] 90%|████████▉ | 702/783 [00:00<00:00, 872.23it/s]100%|██████████| 783/783 [00:00<00:00, 871.49it/s]
2025-05-16:02:50:14,509 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 875.52it/s]100%|██████████| 100/100 [00:00<00:00, 873.05it/s]
2025-05-16:02:50:14,627 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 875.28it/s]100%|██████████| 100/100 [00:00<00:00, 874.41it/s]
2025-05-16:02:50:14,745 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 31%|███       | 87/282 [00:00<00:00, 869.17it/s] 62%|██████▏   | 174/282 [00:00<00:00, 853.29it/s] 92%|█████████▏| 260/282 [00:00<00:00, 825.82it/s]100%|██████████| 282/282 [00:00<00:00, 826.59it/s]
2025-05-16:02:50:15,096 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:02, 77.82it/s] 44%|████▎     | 102/234 [00:00<00:00, 354.08it/s] 81%|████████  | 189/234 [00:00<00:00, 530.69it/s]100%|██████████| 234/234 [00:00<00:00, 460.40it/s]
2025-05-16:02:50:15,613 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 34%|███▍      | 76/223 [00:00<00:00, 754.07it/s] 73%|███████▎  | 162/223 [00:00<00:00, 813.91it/s]100%|██████████| 223/223 [00:00<00:00, 793.44it/s]
2025-05-16:02:50:15,903 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 75%|███████▌  | 83/110 [00:00<00:00, 826.61it/s]100%|██████████| 110/110 [00:00<00:00, 822.30it/s]
2025-05-16:02:50:16,042 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 40%|████      | 81/201 [00:00<00:00, 803.58it/s] 83%|████████▎ | 166/201 [00:00<00:00, 826.82it/s]100%|██████████| 201/201 [00:00<00:00, 805.54it/s]
2025-05-16:02:50:16,299 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 41%|████      | 81/198 [00:00<00:00, 809.09it/s] 82%|████████▏ | 163/198 [00:00<00:00, 814.40it/s]100%|██████████| 198/198 [00:00<00:00, 807.61it/s]
2025-05-16:02:50:16,552 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 36%|███▌      | 88/245 [00:00<00:00, 878.38it/s] 72%|███████▏  | 176/245 [00:00<00:00, 806.11it/s]100%|██████████| 245/245 [00:00<00:00, 796.67it/s]
2025-05-16:02:50:16,869 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 16%|█▌        | 88/545 [00:00<00:00, 870.69it/s] 32%|███▏      | 176/545 [00:00<00:00, 845.91it/s] 48%|████▊     | 263/545 [00:00<00:00, 854.59it/s] 64%|██████▍   | 350/545 [00:00<00:00, 859.28it/s] 80%|████████  | 437/545 [00:00<00:00, 860.93it/s] 96%|█████████▌| 524/545 [00:00<00:00, 826.45it/s]100%|██████████| 545/545 [00:00<00:00, 836.55it/s]
2025-05-16:02:50:17,539 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 74%|███████▍  | 74/100 [00:00<00:00, 731.82it/s]100%|██████████| 100/100 [00:00<00:00, 731.98it/s]
2025-05-16:02:50:17,680 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 19%|█▉        | 75/390 [00:00<00:00, 747.36it/s] 39%|███▉      | 152/390 [00:00<00:00, 756.69it/s] 61%|██████    | 236/390 [00:00<00:00, 793.58it/s] 82%|████████▏ | 319/390 [00:00<00:00, 806.69it/s]100%|██████████| 390/390 [00:00<00:00, 782.39it/s]
2025-05-16:02:50:18,194 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 32%|███▏      | 75/238 [00:00<00:00, 749.52it/s] 63%|██████▎   | 150/238 [00:00<00:00, 749.49it/s] 95%|█████████▍| 226/238 [00:00<00:00, 753.97it/s]100%|██████████| 238/238 [00:00<00:00, 752.80it/s]
2025-05-16:02:50:18,520 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 68%|██████▊   | 77/114 [00:00<00:00, 762.55it/s]100%|██████████| 114/114 [00:00<00:00, 754.82it/s]
2025-05-16:02:50:18,675 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 13%|█▎        | 77/612 [00:00<00:00, 761.93it/s] 25%|██▌       | 154/612 [00:00<00:00, 765.30it/s] 38%|███▊      | 233/612 [00:00<00:00, 773.94it/s] 52%|█████▏    | 319/612 [00:00<00:00, 807.59it/s] 65%|██████▌   | 400/612 [00:00<00:00, 803.62it/s] 79%|███████▊  | 481/612 [00:00<00:00, 788.11it/s] 92%|█████████▏| 560/612 [00:00<00:00, 774.09it/s]100%|██████████| 612/612 [00:00<00:00, 778.66it/s]
2025-05-16:02:50:19,484 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 52%|█████▏    | 68/131 [00:00<00:00, 678.10it/s]100%|██████████| 131/131 [00:00<00:00, 712.32it/s]
2025-05-16:02:50:19,674 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 39%|███▉      | 76/193 [00:00<00:00, 750.79it/s] 79%|███████▉  | 152/193 [00:00<00:00, 752.67it/s]100%|██████████| 193/193 [00:00<00:00, 749.82it/s]
2025-05-16:02:50:19,939 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  8%|▊         | 76/895 [00:00<00:01, 756.92it/s] 17%|█▋        | 153/895 [00:00<00:00, 760.86it/s] 26%|██▌       | 230/895 [00:00<00:00, 763.39it/s] 34%|███▍      | 307/895 [00:00<00:00, 764.29it/s] 43%|████▎     | 384/895 [00:00<00:00, 765.15it/s] 52%|█████▏    | 461/895 [00:00<00:00, 765.82it/s] 60%|██████    | 538/895 [00:00<00:00, 764.82it/s] 69%|██████▊   | 615/895 [00:00<00:00, 757.35it/s] 78%|███████▊  | 695/895 [00:00<00:00, 770.08it/s] 87%|████████▋ | 783/895 [00:01<00:00, 803.71it/s] 97%|█████████▋| 867/895 [00:01<00:00, 814.52it/s]100%|██████████| 895/895 [00:01<00:00, 781.74it/s]
2025-05-16:02:50:21,116 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 32%|███▏      | 77/237 [00:00<00:00, 760.65it/s] 65%|██████▍   | 154/237 [00:00<00:00, 763.63it/s] 97%|█████████▋| 231/237 [00:00<00:00, 760.76it/s]100%|██████████| 237/237 [00:00<00:00, 760.05it/s]
2025-05-16:02:50:21,439 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 47%|████▋     | 77/165 [00:00<00:00, 763.84it/s] 93%|█████████▎| 154/165 [00:00<00:00, 764.88it/s]100%|██████████| 165/165 [00:00<00:00, 763.94it/s]
2025-05-16:02:50:21,662 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 25%|██▍       | 77/311 [00:00<00:00, 765.01it/s] 50%|████▉     | 154/311 [00:00<00:00, 765.25it/s] 74%|███████▍  | 231/311 [00:00<00:00, 766.97it/s] 99%|█████████▉| 308/311 [00:00<00:00, 766.73it/s]100%|██████████| 311/311 [00:00<00:00, 766.03it/s]
2025-05-16:02:50:22,079 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 22%|██▏       | 77/346 [00:00<00:00, 765.83it/s] 45%|████▍     | 154/346 [00:00<00:00, 749.09it/s] 66%|██████▌   | 229/346 [00:00<00:00, 747.18it/s] 88%|████████▊ | 305/346 [00:00<00:00, 749.14it/s]100%|██████████| 346/346 [00:00<00:00, 749.99it/s]
2025-05-16:02:50:22,554 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 37%|███▋      | 75/204 [00:00<00:00, 742.99it/s] 74%|███████▍  | 151/204 [00:00<00:00, 749.09it/s]100%|██████████| 204/204 [00:00<00:00, 750.60it/s]
2025-05-16:02:50:22,835 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 64%|██████▎   | 77/121 [00:00<00:00, 763.99it/s]100%|██████████| 121/121 [00:00<00:00, 771.83it/s]
2025-05-16:02:50:22,997 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  6%|▌         | 88/1534 [00:00<00:01, 874.85it/s] 11%|█▏        | 176/1534 [00:00<00:01, 829.09it/s] 17%|█▋        | 260/1534 [00:00<00:01, 797.34it/s] 22%|██▏       | 340/1534 [00:00<00:01, 784.58it/s] 27%|██▋       | 419/1534 [00:00<00:01, 777.09it/s] 32%|███▏      | 497/1534 [00:00<00:01, 770.66it/s] 37%|███▋      | 575/1534 [00:00<00:01, 770.46it/s] 43%|████▎     | 653/1534 [00:00<00:01, 765.38it/s] 48%|████▊     | 730/1534 [00:00<00:01, 764.46it/s] 53%|█████▎    | 807/1534 [00:01<00:00, 759.83it/s] 58%|█████▊    | 883/1534 [00:01<00:00, 757.48it/s] 63%|██████▎   | 960/1534 [00:01<00:00, 761.06it/s] 68%|██████▊   | 1037/1534 [00:01<00:00, 761.83it/s] 73%|███████▎  | 1114/1534 [00:01<00:00, 759.01it/s] 78%|███████▊  | 1190/1534 [00:01<00:00, 758.30it/s] 83%|████████▎ | 1266/1534 [00:01<00:00, 757.29it/s] 87%|████████▋ | 1342/1534 [00:01<00:00, 756.89it/s] 92%|█████████▏| 1418/1534 [00:01<00:00, 756.28it/s] 97%|█████████▋| 1495/1534 [00:01<00:00, 758.36it/s]100%|██████████| 1534/1534 [00:01<00:00, 767.40it/s]
2025-05-16:02:50:25,046 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 45%|████▌     | 77/171 [00:00<00:00, 764.65it/s] 90%|█████████ | 154/171 [00:00<00:00, 765.57it/s]100%|██████████| 171/171 [00:00<00:00, 765.82it/s]
2025-05-16:02:50:25,277 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 72%|███████▏  | 78/108 [00:00<00:00, 773.74it/s]100%|██████████| 108/108 [00:00<00:00, 772.62it/s]
2025-05-16:02:50:25,421 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 63%|██████▎   | 79/126 [00:00<00:00, 782.02it/s]100%|██████████| 126/126 [00:00<00:00, 795.03it/s]
2025-05-16:02:50:25,585 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 27%|██▋       | 88/324 [00:00<00:00, 241.40it/s] 53%|█████▎    | 172/324 [00:00<00:00, 409.16it/s] 77%|███████▋  | 249/324 [00:00<00:00, 511.26it/s]100%|██████████| 324/324 [00:00<00:00, 487.61it/s]
2025-05-16:02:50:26,261 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 46%|████▌     | 75/163 [00:00<00:00, 748.19it/s] 93%|█████████▎| 151/163 [00:00<00:00, 754.37it/s]100%|██████████| 163/163 [00:00<00:00, 753.81it/s]
2025-05-16:02:50:26,484 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<31:40:23,  2.03s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:02<34:17, 27.27it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:03<21:36, 43.23it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<17:08, 54.43it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<14:51, 62.71it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<13:29, 68.96it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:06<12:35, 73.87it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<11:57, 77.70it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<11:23, 81.40it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<10:55, 84.79it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:35, 87.32it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<10:17, 89.85it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:04, 91.71it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<09:48, 93.98it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:12<09:37, 95.67it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:13<09:26, 97.51it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:13<09:17, 98.93it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:14<09:07, 100.62it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:14<08:59, 102.01it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:15<08:53, 103.06it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:16<08:39, 105.56it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:16<08:30, 107.38it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:17<08:23, 108.85it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:17<08:15, 110.47it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:18<08:08, 111.85it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:18<08:03, 112.83it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:19<07:59, 113.76it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:19<07:53, 114.91it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:20<07:48, 116.05it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:21<07:45, 116.73it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:21<07:38, 118.40it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:22<07:33, 119.55it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:22<07:28, 120.58it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:23<07:23, 121.93it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:23<07:18, 123.09it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:24<07:12, 124.82it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:24<07:07, 126.11it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:25<07:02, 127.21it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:25<06:59, 128.02it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:26<06:56, 128.71it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:26<06:54, 129.41it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:27<06:50, 130.55it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:27<06:46, 131.58it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:27<06:44, 132.13it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:28<06:41, 132.76it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:28<06:39, 133.40it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:29<06:37, 133.78it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:29<06:35, 134.33it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:30<06:32, 135.28it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:30<06:29, 136.09it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:31<06:27, 136.64it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:31<06:25, 137.18it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:32<06:23, 137.77it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:32<06:21, 138.34it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:33<06:20, 138.64it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:33<06:18, 139.04it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:34<06:11, 141.48it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:34<06:06, 143.19it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:34<06:02, 144.70it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:35<05:59, 145.70it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:35<05:56, 146.73it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:36<05:54, 147.55it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:36<05:52, 148.22it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:37<05:48, 149.61it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:37<05:45, 150.72it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:37<05:42, 151.72it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:38<05:41, 152.19it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:38<05:39, 152.81it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:39<05:37, 153.35it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:39<05:37, 153.49it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:39<05:35, 153.91it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:40<05:34, 154.44it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:40<05:33, 154.74it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:41<05:29, 156.07it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:41<05:27, 157.00it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:41<05:25, 157.61it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:42<05:24, 158.34it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:42<05:22, 158.83it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:43<05:21, 159.33it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:43<05:19, 160.00it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:43<05:19, 159.83it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:44<05:17, 160.39it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:44<05:14, 161.65it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:45<05:12, 162.70it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:45<05:11, 163.23it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:45<05:09, 163.77it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:46<05:08, 164.34it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:46<05:04, 166.03it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:47<05:01, 167.61it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:47<04:59, 168.60it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:47<04:57, 169.62it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:48<04:55, 170.29it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:48<04:50, 173.34it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:48<04:46, 175.33it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:49<04:43, 176.83it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:49<04:40, 178.50it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:49<04:39, 179.15it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:50<04:37, 179.91it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:50<04:36, 180.69it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:50<04:35, 180.72it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:51<04:34, 181.57it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:51<04:33, 181.92it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:52<04:32, 182.43it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:52<04:31, 182.87it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:52<04:29, 183.38it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:53<04:28, 184.14it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:53<04:27, 184.48it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:53<04:26, 185.29it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:54<04:25, 185.73it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:54<04:23, 186.96it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:54<04:22, 187.45it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:55<04:19, 188.87it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:55<04:18, 189.51it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:55<04:17, 190.37it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:56<04:16, 190.75it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:56<04:15, 191.35it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:56<04:14, 191.70it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:57<04:13, 192.03it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:57<04:10, 193.73it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:57<04:09, 194.86it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [00:58<04:07, 195.83it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [00:58<04:06, 196.51it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [00:58<04:05, 196.90it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [00:59<03:58, 202.34it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [00:59<03:53, 206.23it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [00:59<03:50, 209.03it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [00:59<03:47, 211.33it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:00<03:44, 213.71it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:00<03:43, 215.08it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:00<03:41, 216.35it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:01<03:40, 217.11it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:01<03:38, 218.48it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:01<03:37, 219.25it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:01<03:36, 220.16it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:02<03:35, 220.70it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:02<03:34, 221.19it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:02<03:32, 223.50it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:03<03:30, 225.14it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:03<03:29, 226.12it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:03<03:27, 227.41it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:03<03:26, 228.44it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:04<03:25, 229.32it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:04<03:24, 230.09it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:04<03:22, 231.75it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:04<03:21, 233.12it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:05<03:20, 234.06it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:05<03:19, 234.92it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:05<03:18, 235.75it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:06<03:17, 236.55it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:06<03:16, 237.23it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:06<03:15, 238.71it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:06<03:13, 240.25it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:07<03:12, 241.35it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:07<03:11, 242.09it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:07<03:10, 242.82it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:07<03:09, 243.62it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:08<03:08, 244.46it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:08<03:07, 246.10it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:08<03:06, 246.99it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:08<03:05, 247.57it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:09<03:04, 249.38it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:09<03:02, 250.99it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:09<03:01, 252.60it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:09<03:01, 252.50it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:10<03:00, 253.37it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:10<02:58, 255.39it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:10<02:57, 257.11it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:10<02:55, 258.69it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:11<02:54, 260.11it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:11<02:53, 261.45it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:11<02:52, 262.61it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:11<02:51, 263.55it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:12<02:51, 263.53it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:12<02:50, 263.98it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:12<02:47, 269.47it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:12<02:44, 273.08it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:13<02:43, 275.10it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:13<02:42, 276.54it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:13<02:40, 278.11it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:13<02:39, 280.47it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:13<02:38, 281.78it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:14<02:37, 282.71it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:14<02:37, 282.75it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:14<02:36, 283.48it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:14<02:35, 285.93it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:15<02:33, 288.29it/s]Running loglikelihood requests:  21%|██        | 11905/56168 [01:15<02:32, 290.13it/s]Running loglikelihood requests:  21%|██▏       | 11969/56168 [01:15<02:31, 291.80it/s]Running loglikelihood requests:  21%|██▏       | 12033/56168 [01:15<02:30, 292.71it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [01:15<02:30, 293.23it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [01:16<02:29, 294.37it/s]Running loglikelihood requests:  22%|██▏       | 12225/56168 [01:16<02:29, 294.81it/s]Running loglikelihood requests:  22%|██▏       | 12289/56168 [01:16<02:28, 295.27it/s]Running loglikelihood requests:  22%|██▏       | 12353/56168 [01:16<02:28, 295.45it/s]Running loglikelihood requests:  22%|██▏       | 12417/56168 [01:17<02:27, 295.83it/s]Running loglikelihood requests:  22%|██▏       | 12481/56168 [01:17<02:27, 296.51it/s]Running loglikelihood requests:  22%|██▏       | 12545/56168 [01:17<02:26, 297.13it/s]Running loglikelihood requests:  22%|██▏       | 12609/56168 [01:17<02:26, 298.09it/s]Running loglikelihood requests:  23%|██▎       | 12673/56168 [01:17<02:25, 298.22it/s]Running loglikelihood requests:  23%|██▎       | 12737/56168 [01:18<02:25, 299.47it/s]Running loglikelihood requests:  23%|██▎       | 12801/56168 [01:18<02:24, 300.08it/s]Running loglikelihood requests:  23%|██▎       | 12865/56168 [01:18<02:23, 300.74it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [01:18<02:23, 300.86it/s]Running loglikelihood requests:  23%|██▎       | 12993/56168 [01:18<02:23, 301.56it/s]Running loglikelihood requests:  23%|██▎       | 13057/56168 [01:19<02:22, 301.56it/s]Running loglikelihood requests:  23%|██▎       | 13121/56168 [01:19<02:22, 302.24it/s]Running loglikelihood requests:  23%|██▎       | 13185/56168 [01:19<02:22, 302.55it/s]Running loglikelihood requests:  24%|██▎       | 13249/56168 [01:19<02:21, 303.45it/s]Running loglikelihood requests:  24%|██▎       | 13313/56168 [01:20<02:20, 304.21it/s]Running loglikelihood requests:  24%|██▍       | 13377/56168 [01:20<02:20, 304.80it/s]Running loglikelihood requests:  24%|██▍       | 13441/56168 [01:20<02:19, 305.60it/s]Running loglikelihood requests:  24%|██▍       | 13505/56168 [01:20<02:19, 304.91it/s]Running loglikelihood requests:  24%|██▍       | 13569/56168 [01:20<02:19, 305.23it/s]Running loglikelihood requests:  24%|██▍       | 13633/56168 [01:21<02:19, 305.56it/s]Running loglikelihood requests:  24%|██▍       | 13697/56168 [01:21<02:19, 305.23it/s]Running loglikelihood requests:  24%|██▍       | 13761/56168 [01:21<02:19, 304.90it/s]Running loglikelihood requests:  25%|██▍       | 13825/56168 [01:21<02:18, 304.92it/s]Running loglikelihood requests:  25%|██▍       | 13889/56168 [01:21<02:18, 305.43it/s]Running loglikelihood requests:  25%|██▍       | 13953/56168 [01:22<02:17, 305.91it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [01:22<02:17, 306.36it/s]Running loglikelihood requests:  25%|██▌       | 14081/56168 [01:22<02:17, 305.68it/s]Running loglikelihood requests:  25%|██▌       | 14145/56168 [01:22<02:17, 306.70it/s]Running loglikelihood requests:  25%|██▌       | 14209/56168 [01:22<02:16, 307.38it/s]Running loglikelihood requests:  25%|██▌       | 14273/56168 [01:23<02:16, 307.01it/s]Running loglikelihood requests:  26%|██▌       | 14337/56168 [01:23<02:14, 310.09it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [01:23<02:13, 312.24it/s]Running loglikelihood requests:  26%|██▌       | 14465/56168 [01:23<02:13, 313.54it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [01:23<02:12, 313.76it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [01:24<02:12, 314.55it/s]Running loglikelihood requests:  26%|██▌       | 14657/56168 [01:24<02:11, 315.77it/s]Running loglikelihood requests:  26%|██▌       | 14721/56168 [01:24<02:10, 316.77it/s]Running loglikelihood requests:  26%|██▋       | 14785/56168 [01:24<02:10, 317.51it/s]Running loglikelihood requests:  26%|██▋       | 14849/56168 [01:24<02:10, 317.41it/s]Running loglikelihood requests:  27%|██▋       | 14913/56168 [01:25<02:09, 317.73it/s]Running loglikelihood requests:  27%|██▋       | 14977/56168 [01:25<02:09, 318.56it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [01:25<02:08, 319.93it/s]Running loglikelihood requests:  27%|██▋       | 15105/56168 [01:25<02:08, 320.09it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [01:25<02:08, 318.90it/s]Running loglikelihood requests:  27%|██▋       | 15233/56168 [01:26<02:08, 318.50it/s]Running loglikelihood requests:  27%|██▋       | 15297/56168 [01:26<02:08, 318.40it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [01:26<02:07, 319.17it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [01:26<02:07, 319.54it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [01:26<02:07, 319.86it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [01:27<02:06, 319.88it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [01:27<02:06, 320.41it/s]Running loglikelihood requests:  28%|██▊       | 15681/56168 [01:27<02:06, 320.76it/s]Running loglikelihood requests:  28%|██▊       | 15745/56168 [01:27<02:06, 320.66it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [01:27<02:05, 320.57it/s]Running loglikelihood requests:  28%|██▊       | 15873/56168 [01:28<02:05, 320.25it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [01:28<02:05, 320.63it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [01:28<02:05, 320.75it/s]Running loglikelihood requests:  29%|██▊       | 16065/56168 [01:28<02:04, 321.60it/s]Running loglikelihood requests:  29%|██▊       | 16129/56168 [01:28<02:04, 321.89it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [01:29<02:04, 321.34it/s]Running loglikelihood requests:  29%|██▉       | 16257/56168 [01:29<02:04, 321.05it/s]Running loglikelihood requests:  29%|██▉       | 16321/56168 [01:29<02:04, 320.94it/s]Running loglikelihood requests:  29%|██▉       | 16385/56168 [01:29<02:03, 321.42it/s]Running loglikelihood requests:  29%|██▉       | 16453/56168 [01:29<02:01, 327.73it/s]Running loglikelihood requests:  29%|██▉       | 16517/56168 [01:30<02:01, 325.50it/s]Running loglikelihood requests:  30%|██▉       | 16581/56168 [01:30<02:01, 324.68it/s]Running loglikelihood requests:  30%|██▉       | 16645/56168 [01:30<02:02, 323.44it/s]Running loglikelihood requests:  30%|██▉       | 16709/56168 [01:30<02:02, 323.40it/s]Running loglikelihood requests:  30%|██▉       | 16773/56168 [01:30<02:01, 323.76it/s]Running loglikelihood requests:  30%|██▉       | 16837/56168 [01:31<02:01, 323.67it/s]Running loglikelihood requests:  30%|███       | 16901/56168 [01:31<02:01, 323.45it/s]Running loglikelihood requests:  30%|███       | 16965/56168 [01:31<02:01, 323.15it/s]Running loglikelihood requests:  30%|███       | 17029/56168 [01:31<02:00, 323.50it/s]Running loglikelihood requests:  30%|███       | 17093/56168 [01:31<02:00, 323.77it/s]Running loglikelihood requests:  31%|███       | 17157/56168 [01:32<01:59, 327.82it/s]Running loglikelihood requests:  31%|███       | 17221/56168 [01:32<01:57, 330.99it/s]Running loglikelihood requests:  31%|███       | 17285/56168 [01:32<01:56, 333.90it/s]Running loglikelihood requests:  31%|███       | 17349/56168 [01:32<01:56, 334.15it/s]Running loglikelihood requests:  31%|███       | 17413/56168 [01:32<01:55, 335.47it/s]Running loglikelihood requests:  31%|███       | 17477/56168 [01:33<01:55, 335.95it/s]Running loglikelihood requests:  31%|███       | 17541/56168 [01:33<01:54, 337.19it/s]Running loglikelihood requests:  31%|███▏      | 17605/56168 [01:33<01:54, 337.78it/s]Running loglikelihood requests:  31%|███▏      | 17669/56168 [01:33<01:54, 337.45it/s]Running loglikelihood requests:  32%|███▏      | 17733/56168 [01:33<01:53, 337.86it/s]Running loglikelihood requests:  32%|███▏      | 17797/56168 [01:34<01:53, 338.58it/s]Running loglikelihood requests:  32%|███▏      | 17861/56168 [01:34<01:53, 338.57it/s]Running loglikelihood requests:  32%|███▏      | 17925/56168 [01:34<01:52, 338.89it/s]Running loglikelihood requests:  32%|███▏      | 17989/56168 [01:34<01:52, 338.87it/s]Running loglikelihood requests:  32%|███▏      | 18053/56168 [01:34<01:52, 338.78it/s]Running loglikelihood requests:  32%|███▏      | 18117/56168 [01:34<01:52, 339.26it/s]Running loglikelihood requests:  32%|███▏      | 18181/56168 [01:35<01:51, 339.89it/s]Running loglikelihood requests:  32%|███▏      | 18245/56168 [01:35<01:51, 339.63it/s]Running loglikelihood requests:  33%|███▎      | 18309/56168 [01:35<01:51, 339.61it/s]Running loglikelihood requests:  33%|███▎      | 18373/56168 [01:35<01:50, 340.59it/s]Running loglikelihood requests:  33%|███▎      | 18437/56168 [01:35<01:51, 339.84it/s]Running loglikelihood requests:  33%|███▎      | 18501/56168 [01:36<01:50, 341.38it/s]Running loglikelihood requests:  33%|███▎      | 18565/56168 [01:36<01:49, 342.24it/s]Running loglikelihood requests:  33%|███▎      | 18629/56168 [01:36<01:49, 342.10it/s]Running loglikelihood requests:  33%|███▎      | 18693/56168 [01:36<01:49, 341.74it/s]Running loglikelihood requests:  33%|███▎      | 18757/56168 [01:36<01:49, 341.59it/s]Running loglikelihood requests:  34%|███▎      | 18821/56168 [01:37<01:49, 341.76it/s]Running loglikelihood requests:  34%|███▎      | 18885/56168 [01:37<01:48, 342.18it/s]Running loglikelihood requests:  34%|███▎      | 18949/56168 [01:37<01:48, 341.54it/s]Running loglikelihood requests:  34%|███▍      | 19013/56168 [01:37<01:48, 342.01it/s]Running loglikelihood requests:  34%|███▍      | 19077/56168 [01:37<01:48, 343.31it/s]Running loglikelihood requests:  34%|███▍      | 19141/56168 [01:37<01:47, 343.25it/s]Running loglikelihood requests:  34%|███▍      | 19205/56168 [01:38<01:47, 343.33it/s]Running loglikelihood requests:  34%|███▍      | 19269/56168 [01:38<01:47, 343.26it/s]Running loglikelihood requests:  34%|███▍      | 19333/56168 [01:38<01:47, 343.55it/s]Running loglikelihood requests:  35%|███▍      | 19397/56168 [01:38<01:46, 344.28it/s]Running loglikelihood requests:  35%|███▍      | 19461/56168 [01:38<01:45, 347.22it/s]Running loglikelihood requests:  35%|███▍      | 19525/56168 [01:39<01:45, 348.97it/s]Running loglikelihood requests:  35%|███▍      | 19589/56168 [01:39<01:44, 350.17it/s]Running loglikelihood requests:  35%|███▍      | 19653/56168 [01:39<01:44, 351.04it/s]Running loglikelihood requests:  35%|███▌      | 19717/56168 [01:39<01:43, 353.22it/s]Running loglikelihood requests:  35%|███▌      | 19781/56168 [01:39<01:43, 353.19it/s]Running loglikelihood requests:  35%|███▌      | 19845/56168 [01:39<01:42, 354.93it/s]Running loglikelihood requests:  35%|███▌      | 19909/56168 [01:40<01:42, 355.17it/s]Running loglikelihood requests:  36%|███▌      | 19973/56168 [01:40<01:42, 354.27it/s]Running loglikelihood requests:  36%|███▌      | 20041/56168 [01:40<01:40, 360.62it/s]Running loglikelihood requests:  36%|███▌      | 20105/56168 [01:40<01:40, 359.47it/s]Running loglikelihood requests:  36%|███▌      | 20169/56168 [01:40<01:40, 358.49it/s]Running loglikelihood requests:  36%|███▌      | 20233/56168 [01:41<01:40, 357.13it/s]Running loglikelihood requests:  36%|███▌      | 20297/56168 [01:41<01:40, 356.50it/s]Running loglikelihood requests:  36%|███▋      | 20361/56168 [01:41<01:40, 357.14it/s]Running loglikelihood requests:  36%|███▋      | 20425/56168 [01:41<01:39, 358.33it/s]Running loglikelihood requests:  36%|███▋      | 20489/56168 [01:41<01:39, 359.11it/s]Running loglikelihood requests:  37%|███▋      | 20553/56168 [01:41<01:39, 359.31it/s]Running loglikelihood requests:  37%|███▋      | 20617/56168 [01:42<01:38, 359.24it/s]Running loglikelihood requests:  37%|███▋      | 20681/56168 [01:42<01:38, 359.01it/s]Running loglikelihood requests:  37%|███▋      | 20745/56168 [01:42<01:38, 359.38it/s]Running loglikelihood requests:  37%|███▋      | 20809/56168 [01:42<01:38, 360.06it/s]Running loglikelihood requests:  37%|███▋      | 20873/56168 [01:42<01:38, 359.96it/s]Running loglikelihood requests:  37%|███▋      | 20937/56168 [01:42<01:38, 358.80it/s]Running loglikelihood requests:  37%|███▋      | 21001/56168 [01:43<01:38, 358.82it/s]Running loglikelihood requests:  38%|███▊      | 21065/56168 [01:43<01:37, 359.79it/s]Running loglikelihood requests:  38%|███▊      | 21129/56168 [01:43<01:37, 361.19it/s]Running loglikelihood requests:  38%|███▊      | 21193/56168 [01:43<01:36, 360.92it/s]Running loglikelihood requests:  38%|███▊      | 21257/56168 [01:43<01:36, 361.97it/s]Running loglikelihood requests:  38%|███▊      | 21321/56168 [01:44<01:35, 363.21it/s]Running loglikelihood requests:  38%|███▊      | 21385/56168 [01:44<01:35, 364.69it/s]Running loglikelihood requests:  38%|███▊      | 21449/56168 [01:44<01:35, 364.35it/s]Running loglikelihood requests:  38%|███▊      | 21513/56168 [01:44<01:35, 364.12it/s]Running loglikelihood requests:  38%|███▊      | 21577/56168 [01:44<01:34, 365.18it/s]Running loglikelihood requests:  39%|███▊      | 21641/56168 [01:44<01:34, 365.97it/s]Running loglikelihood requests:  39%|███▊      | 21705/56168 [01:45<01:34, 366.56it/s]Running loglikelihood requests:  39%|███▉      | 21769/56168 [01:45<01:33, 366.59it/s]Running loglikelihood requests:  39%|███▉      | 21833/56168 [01:45<01:33, 367.74it/s]Running loglikelihood requests:  39%|███▉      | 21897/56168 [01:45<01:33, 367.42it/s]Running loglikelihood requests:  39%|███▉      | 21961/56168 [01:45<01:33, 367.70it/s]Running loglikelihood requests:  39%|███▉      | 22025/56168 [01:45<01:32, 369.18it/s]Running loglikelihood requests:  39%|███▉      | 22089/56168 [01:46<01:32, 367.42it/s]Running loglikelihood requests:  39%|███▉      | 22153/56168 [01:46<01:32, 368.21it/s]Running loglikelihood requests:  40%|███▉      | 22217/56168 [01:46<01:32, 368.20it/s]Running loglikelihood requests:  40%|███▉      | 22281/56168 [01:46<01:32, 368.14it/s]Running loglikelihood requests:  40%|███▉      | 22345/56168 [01:46<01:31, 368.92it/s]Running loglikelihood requests:  40%|███▉      | 22409/56168 [01:47<01:31, 369.58it/s]Running loglikelihood requests:  40%|████      | 22473/56168 [01:47<01:31, 369.75it/s]Running loglikelihood requests:  40%|████      | 22537/56168 [01:47<01:31, 369.50it/s]Running loglikelihood requests:  40%|████      | 22601/56168 [01:47<01:30, 370.27it/s]Running loglikelihood requests:  40%|████      | 22665/56168 [01:47<01:30, 370.82it/s]Running loglikelihood requests:  40%|████      | 22729/56168 [01:47<01:30, 371.35it/s]Running loglikelihood requests:  41%|████      | 22793/56168 [01:48<01:29, 371.78it/s]Running loglikelihood requests:  41%|████      | 22857/56168 [01:48<01:29, 372.64it/s]Running loglikelihood requests:  41%|████      | 22921/56168 [01:48<01:29, 373.54it/s]Running loglikelihood requests:  41%|████      | 22985/56168 [01:48<01:28, 374.34it/s]Running loglikelihood requests:  41%|████      | 23049/56168 [01:48<01:28, 373.47it/s]Running loglikelihood requests:  41%|████      | 23113/56168 [01:48<01:28, 374.01it/s]Running loglikelihood requests:  41%|████▏     | 23177/56168 [01:49<01:28, 374.48it/s]Running loglikelihood requests:  41%|████▏     | 23241/56168 [01:49<01:27, 374.90it/s]Running loglikelihood requests:  41%|████▏     | 23305/56168 [01:49<01:27, 374.84it/s]Running loglikelihood requests:  42%|████▏     | 23369/56168 [01:49<01:27, 375.16it/s]Running loglikelihood requests:  42%|████▏     | 23433/56168 [01:49<01:27, 376.14it/s]Running loglikelihood requests:  42%|████▏     | 23497/56168 [01:49<01:26, 376.26it/s]Running loglikelihood requests:  42%|████▏     | 23561/56168 [01:50<01:26, 377.16it/s]Running loglikelihood requests:  42%|████▏     | 23625/56168 [01:50<01:26, 376.48it/s]Running loglikelihood requests:  42%|████▏     | 23689/56168 [01:50<01:26, 377.44it/s]Running loglikelihood requests:  42%|████▏     | 23753/56168 [01:50<01:22, 390.67it/s]Running loglikelihood requests:  42%|████▏     | 23817/56168 [01:50<01:21, 398.60it/s]Running loglikelihood requests:  43%|████▎     | 23881/56168 [01:50<01:19, 405.51it/s]Running loglikelihood requests:  43%|████▎     | 23945/56168 [01:51<01:18, 410.17it/s]Running loglikelihood requests:  43%|████▎     | 24009/56168 [01:51<01:17, 414.33it/s]Running loglikelihood requests:  43%|████▎     | 24073/56168 [01:51<01:16, 416.82it/s]Running loglikelihood requests:  43%|████▎     | 24137/56168 [01:51<01:16, 419.63it/s]Running loglikelihood requests:  43%|████▎     | 24201/56168 [01:51<01:15, 420.98it/s]Running loglikelihood requests:  43%|████▎     | 24265/56168 [01:51<01:15, 422.52it/s]Running loglikelihood requests:  43%|████▎     | 24329/56168 [01:51<01:15, 422.62it/s]Running loglikelihood requests:  43%|████▎     | 24393/56168 [01:52<01:14, 424.27it/s]Running loglikelihood requests:  44%|████▎     | 24457/56168 [01:52<01:14, 423.43it/s]Running loglikelihood requests:  44%|████▎     | 24521/56168 [01:52<01:14, 424.09it/s]Running loglikelihood requests:  44%|████▍     | 24585/56168 [01:52<01:14, 424.59it/s]Running loglikelihood requests:  44%|████▍     | 24649/56168 [01:52<01:14, 425.53it/s]Running loglikelihood requests:  44%|████▍     | 24713/56168 [01:52<01:13, 425.80it/s]Running loglikelihood requests:  44%|████▍     | 24777/56168 [01:52<01:13, 425.16it/s]Running loglikelihood requests:  44%|████▍     | 24841/56168 [01:53<01:13, 426.87it/s]Running loglikelihood requests:  44%|████▍     | 24905/56168 [01:53<01:13, 425.60it/s]Running loglikelihood requests:  44%|████▍     | 24969/56168 [01:53<01:13, 426.89it/s]Running loglikelihood requests:  45%|████▍     | 25033/56168 [01:53<01:12, 426.56it/s]Running loglikelihood requests:  45%|████▍     | 25097/56168 [01:53<01:12, 427.22it/s]Running loglikelihood requests:  45%|████▍     | 25161/56168 [01:53<01:12, 427.68it/s]Running loglikelihood requests:  45%|████▍     | 25225/56168 [01:54<01:12, 427.07it/s]Running loglikelihood requests:  45%|████▌     | 25289/56168 [01:54<01:12, 428.60it/s]Running loglikelihood requests:  45%|████▌     | 25353/56168 [01:54<01:12, 427.70it/s]Running loglikelihood requests:  45%|████▌     | 25417/56168 [01:54<01:11, 427.52it/s]Running loglikelihood requests:  45%|████▌     | 25481/56168 [01:54<01:11, 427.30it/s]Running loglikelihood requests:  45%|████▌     | 25545/56168 [01:54<01:11, 426.28it/s]Running loglikelihood requests:  46%|████▌     | 25609/56168 [01:54<01:11, 427.63it/s]Running loglikelihood requests:  46%|████▌     | 25673/56168 [01:55<01:11, 428.24it/s]Running loglikelihood requests:  46%|████▌     | 25737/56168 [01:55<01:11, 428.16it/s]Running loglikelihood requests:  46%|████▌     | 25801/56168 [01:55<01:10, 428.32it/s]Running loglikelihood requests:  46%|████▌     | 25865/56168 [01:55<01:10, 428.77it/s]Running loglikelihood requests:  46%|████▌     | 25929/56168 [01:55<01:10, 428.52it/s]Running loglikelihood requests:  46%|████▋     | 25993/56168 [01:55<01:10, 429.45it/s]Running loglikelihood requests:  46%|████▋     | 26057/56168 [01:55<01:10, 429.83it/s]Running loglikelihood requests:  47%|████▋     | 26121/56168 [01:56<01:09, 430.04it/s]Running loglikelihood requests:  47%|████▋     | 26185/56168 [01:56<01:09, 429.54it/s]Running loglikelihood requests:  47%|████▋     | 26249/56168 [01:56<01:09, 430.05it/s]Running loglikelihood requests:  47%|████▋     | 26313/56168 [01:56<01:09, 429.96it/s]Running loglikelihood requests:  47%|████▋     | 26377/56168 [01:56<01:09, 429.87it/s]Running loglikelihood requests:  47%|████▋     | 26441/56168 [01:56<01:08, 430.87it/s]Running loglikelihood requests:  47%|████▋     | 26505/56168 [01:57<01:08, 431.09it/s]Running loglikelihood requests:  47%|████▋     | 26569/56168 [01:57<01:08, 430.84it/s]Running loglikelihood requests:  47%|████▋     | 26633/56168 [01:57<01:08, 429.85it/s]Running loglikelihood requests:  48%|████▊     | 26697/56168 [01:57<01:08, 432.38it/s]Running loglikelihood requests:  48%|████▊     | 26761/56168 [01:57<01:08, 432.03it/s]Running loglikelihood requests:  48%|████▊     | 26825/56168 [01:57<01:07, 431.67it/s]Running loglikelihood requests:  48%|████▊     | 26889/56168 [01:57<01:07, 435.36it/s]Running loglikelihood requests:  48%|████▊     | 26953/56168 [01:58<01:06, 438.26it/s]Running loglikelihood requests:  48%|████▊     | 27017/56168 [01:58<01:06, 440.25it/s]Running loglikelihood requests:  48%|████▊     | 27081/56168 [01:58<01:06, 440.58it/s]Running loglikelihood requests:  48%|████▊     | 27145/56168 [01:58<01:05, 441.68it/s]Running loglikelihood requests:  48%|████▊     | 27209/56168 [01:58<01:05, 441.46it/s]Running loglikelihood requests:  49%|████▊     | 27273/56168 [01:58<01:05, 441.38it/s]Running loglikelihood requests:  49%|████▊     | 27337/56168 [01:58<01:05, 441.27it/s]Running loglikelihood requests:  49%|████▉     | 27401/56168 [01:59<01:05, 441.59it/s]Running loglikelihood requests:  49%|████▉     | 27465/56168 [01:59<01:04, 441.59it/s]Running loglikelihood requests:  49%|████▉     | 27529/56168 [01:59<01:04, 440.77it/s]Running loglikelihood requests:  49%|████▉     | 27593/56168 [01:59<01:04, 441.65it/s]Running loglikelihood requests:  49%|████▉     | 27657/56168 [01:59<01:04, 443.41it/s]Running loglikelihood requests:  49%|████▉     | 27721/56168 [01:59<01:03, 445.25it/s]Running loglikelihood requests:  49%|████▉     | 27785/56168 [01:59<01:03, 444.03it/s]Running loglikelihood requests:  50%|████▉     | 27849/56168 [02:00<01:03, 445.06it/s]Running loglikelihood requests:  50%|████▉     | 27913/56168 [02:00<01:03, 445.08it/s]Running loglikelihood requests:  50%|████▉     | 27977/56168 [02:00<01:03, 446.04it/s]Running loglikelihood requests:  50%|████▉     | 28041/56168 [02:00<01:03, 445.11it/s]Running loglikelihood requests:  50%|█████     | 28105/56168 [02:00<01:03, 444.95it/s]Running loglikelihood requests:  50%|█████     | 28169/56168 [02:00<01:02, 444.83it/s]Running loglikelihood requests:  50%|█████     | 28233/56168 [02:00<01:02, 445.39it/s]Running loglikelihood requests:  50%|█████     | 28297/56168 [02:01<01:02, 446.57it/s]Running loglikelihood requests:  50%|█████     | 28361/56168 [02:01<01:02, 445.85it/s]Running loglikelihood requests:  51%|█████     | 28425/56168 [02:01<01:02, 445.93it/s]Running loglikelihood requests:  51%|█████     | 28489/56168 [02:01<01:02, 446.42it/s]Running loglikelihood requests:  51%|█████     | 28553/56168 [02:01<01:01, 445.86it/s]Running loglikelihood requests:  51%|█████     | 28617/56168 [02:01<01:01, 446.35it/s]Running loglikelihood requests:  51%|█████     | 28681/56168 [02:01<01:01, 445.54it/s]Running loglikelihood requests:  51%|█████     | 28745/56168 [02:02<01:01, 446.06it/s]Running loglikelihood requests:  51%|█████▏    | 28809/56168 [02:02<01:01, 446.74it/s]Running loglikelihood requests:  51%|█████▏    | 28873/56168 [02:02<01:01, 445.52it/s]Running loglikelihood requests:  52%|█████▏    | 28937/56168 [02:02<01:00, 446.56it/s]Running loglikelihood requests:  52%|█████▏    | 29001/56168 [02:02<01:00, 446.92it/s]Running loglikelihood requests:  52%|█████▏    | 29065/56168 [02:02<01:00, 446.88it/s]Running loglikelihood requests:  52%|█████▏    | 29129/56168 [02:02<01:00, 447.80it/s]Running loglikelihood requests:  52%|█████▏    | 29193/56168 [02:03<01:00, 448.89it/s]Running loglikelihood requests:  52%|█████▏    | 29257/56168 [02:03<00:59, 450.28it/s]Running loglikelihood requests:  52%|█████▏    | 29321/56168 [02:03<00:59, 450.77it/s]Running loglikelihood requests:  52%|█████▏    | 29385/56168 [02:03<00:59, 451.01it/s]Running loglikelihood requests:  52%|█████▏    | 29449/56168 [02:03<00:59, 450.84it/s]Running loglikelihood requests:  53%|█████▎    | 29513/56168 [02:03<00:59, 450.88it/s]Running loglikelihood requests:  53%|█████▎    | 29577/56168 [02:03<00:58, 452.20it/s]Running loglikelihood requests:  53%|█████▎    | 29641/56168 [02:04<00:58, 452.31it/s]Running loglikelihood requests:  53%|█████▎    | 29705/56168 [02:04<00:58, 453.66it/s]Running loglikelihood requests:  53%|█████▎    | 29769/56168 [02:04<00:58, 454.80it/s]Running loglikelihood requests:  53%|█████▎    | 29833/56168 [02:04<00:58, 454.03it/s]Running loglikelihood requests:  53%|█████▎    | 29901/56168 [02:04<00:56, 461.20it/s]Running loglikelihood requests:  53%|█████▎    | 29965/56168 [02:04<00:57, 456.72it/s]Running loglikelihood requests:  53%|█████▎    | 30029/56168 [02:04<00:57, 455.82it/s]Running loglikelihood requests:  54%|█████▎    | 30093/56168 [02:05<00:57, 453.26it/s]Running loglikelihood requests:  54%|█████▎    | 30157/56168 [02:05<00:57, 452.31it/s]Running loglikelihood requests:  54%|█████▍    | 30221/56168 [02:05<00:57, 451.90it/s]Running loglikelihood requests:  54%|█████▍    | 30285/56168 [02:05<00:57, 451.15it/s]Running loglikelihood requests:  54%|█████▍    | 30349/56168 [02:05<00:57, 452.40it/s]Running loglikelihood requests:  54%|█████▍    | 30413/56168 [02:05<00:56, 453.28it/s]Running loglikelihood requests:  54%|█████▍    | 30477/56168 [02:05<00:56, 451.14it/s]Running loglikelihood requests:  54%|█████▍    | 30545/56168 [02:06<00:55, 459.57it/s]Running loglikelihood requests:  54%|█████▍    | 30609/56168 [02:06<00:55, 458.52it/s]Running loglikelihood requests:  55%|█████▍    | 30673/56168 [02:06<00:56, 455.26it/s]Running loglikelihood requests:  55%|█████▍    | 30737/56168 [02:06<00:55, 462.06it/s]Running loglikelihood requests:  55%|█████▍    | 30801/56168 [02:06<00:54, 464.42it/s]Running loglikelihood requests:  55%|█████▍    | 30865/56168 [02:06<00:54, 467.77it/s]Running loglikelihood requests:  55%|█████▌    | 30929/56168 [02:06<00:53, 472.27it/s]Running loglikelihood requests:  55%|█████▌    | 30993/56168 [02:07<00:53, 473.84it/s]Running loglikelihood requests:  55%|█████▌    | 31057/56168 [02:07<00:53, 473.17it/s]Running loglikelihood requests:  55%|█████▌    | 31121/56168 [02:07<00:52, 473.69it/s]Running loglikelihood requests:  56%|█████▌    | 31185/56168 [02:07<00:52, 472.57it/s]Running loglikelihood requests:  56%|█████▌    | 31249/56168 [02:07<00:52, 474.66it/s]Running loglikelihood requests:  56%|█████▌    | 31313/56168 [02:07<00:52, 475.77it/s]Running loglikelihood requests:  56%|█████▌    | 31377/56168 [02:07<00:52, 474.55it/s]Running loglikelihood requests:  56%|█████▌    | 31441/56168 [02:07<00:52, 473.74it/s]Running loglikelihood requests:  56%|█████▌    | 31505/56168 [02:08<00:52, 474.28it/s]Running loglikelihood requests:  56%|█████▌    | 31569/56168 [02:08<00:51, 473.84it/s]Running loglikelihood requests:  56%|█████▋    | 31633/56168 [02:08<00:51, 473.93it/s]Running loglikelihood requests:  56%|█████▋    | 31697/56168 [02:08<00:51, 475.02it/s]Running loglikelihood requests:  57%|█████▋    | 31761/56168 [02:08<00:51, 474.90it/s]Running loglikelihood requests:  57%|█████▋    | 31825/56168 [02:08<00:51, 474.51it/s]Running loglikelihood requests:  57%|█████▋    | 31889/56168 [02:08<00:51, 475.89it/s]Running loglikelihood requests:  57%|█████▋    | 31953/56168 [02:09<00:50, 474.83it/s]Running loglikelihood requests:  57%|█████▋    | 32017/56168 [02:09<00:50, 475.05it/s]Running loglikelihood requests:  57%|█████▋    | 32081/56168 [02:09<00:50, 475.74it/s]Running loglikelihood requests:  57%|█████▋    | 32145/56168 [02:09<00:50, 475.59it/s]Running loglikelihood requests:  57%|█████▋    | 32209/56168 [02:09<00:50, 475.39it/s]Running loglikelihood requests:  57%|█████▋    | 32273/56168 [02:09<00:50, 475.29it/s]Running loglikelihood requests:  58%|█████▊    | 32337/56168 [02:09<00:50, 475.32it/s]Running loglikelihood requests:  58%|█████▊    | 32401/56168 [02:09<00:50, 473.16it/s]Running loglikelihood requests:  58%|█████▊    | 32465/56168 [02:10<00:49, 474.34it/s]Running loglikelihood requests:  58%|█████▊    | 32529/56168 [02:10<00:49, 475.99it/s]Running loglikelihood requests:  58%|█████▊    | 32593/56168 [02:10<00:49, 476.79it/s]Running loglikelihood requests:  58%|█████▊    | 32657/56168 [02:10<00:49, 476.70it/s]Running loglikelihood requests:  58%|█████▊    | 32721/56168 [02:10<00:49, 476.32it/s]Running loglikelihood requests:  58%|█████▊    | 32785/56168 [02:10<00:49, 476.43it/s]Running loglikelihood requests:  58%|█████▊    | 32849/56168 [02:10<00:49, 474.69it/s]Running loglikelihood requests:  59%|█████▊    | 32913/56168 [02:11<00:49, 472.32it/s]Running loglikelihood requests:  59%|█████▊    | 32977/56168 [02:11<00:48, 473.57it/s]Running loglikelihood requests:  59%|█████▉    | 33041/56168 [02:11<00:48, 475.97it/s]Running loglikelihood requests:  59%|█████▉    | 33105/56168 [02:11<00:48, 477.68it/s]Running loglikelihood requests:  59%|█████▉    | 33169/56168 [02:11<00:48, 478.26it/s]Running loglikelihood requests:  59%|█████▉    | 33233/56168 [02:11<00:47, 479.72it/s]Running loglikelihood requests:  59%|█████▉    | 33297/56168 [02:11<00:47, 479.07it/s]Running loglikelihood requests:  59%|█████▉    | 33361/56168 [02:11<00:47, 479.11it/s]Running loglikelihood requests:  60%|█████▉    | 33425/56168 [02:12<00:47, 478.25it/s]Running loglikelihood requests:  60%|█████▉    | 33489/56168 [02:12<00:47, 479.03it/s]Running loglikelihood requests:  60%|█████▉    | 33553/56168 [02:12<00:47, 479.80it/s]Running loglikelihood requests:  60%|█████▉    | 33617/56168 [02:12<00:47, 479.47it/s]Running loglikelihood requests:  60%|█████▉    | 33681/56168 [02:12<00:46, 480.41it/s]Running loglikelihood requests:  60%|██████    | 33745/56168 [02:12<00:46, 480.69it/s]Running loglikelihood requests:  60%|██████    | 33809/56168 [02:12<00:46, 480.47it/s]Running loglikelihood requests:  60%|██████    | 33873/56168 [02:13<00:46, 481.81it/s]Running loglikelihood requests:  60%|██████    | 33937/56168 [02:13<00:46, 480.37it/s]Running loglikelihood requests:  61%|██████    | 34001/56168 [02:13<00:46, 480.80it/s]Running loglikelihood requests:  61%|██████    | 34065/56168 [02:13<00:46, 479.97it/s]Running loglikelihood requests:  61%|██████    | 34129/56168 [02:13<00:45, 480.04it/s]Running loglikelihood requests:  61%|██████    | 34193/56168 [02:13<00:45, 479.99it/s]Running loglikelihood requests:  61%|██████    | 34257/56168 [02:13<00:45, 480.11it/s]Running loglikelihood requests:  61%|██████    | 34321/56168 [02:13<00:45, 480.43it/s]Running loglikelihood requests:  61%|██████    | 34385/56168 [02:14<00:45, 480.42it/s]Running loglikelihood requests:  61%|██████▏   | 34449/56168 [02:14<00:45, 480.11it/s]Running loglikelihood requests:  61%|██████▏   | 34513/56168 [02:14<00:45, 480.39it/s]Running loglikelihood requests:  62%|██████▏   | 34577/56168 [02:14<00:45, 479.70it/s]Running loglikelihood requests:  62%|██████▏   | 34641/56168 [02:14<00:44, 480.43it/s]Running loglikelihood requests:  62%|██████▏   | 34705/56168 [02:14<00:44, 481.29it/s]Running loglikelihood requests:  62%|██████▏   | 34769/56168 [02:14<00:44, 480.66it/s]Running loglikelihood requests:  62%|██████▏   | 34833/56168 [02:15<00:44, 480.62it/s]Running loglikelihood requests:  62%|██████▏   | 34897/56168 [02:15<00:44, 481.16it/s]Running loglikelihood requests:  62%|██████▏   | 34961/56168 [02:15<00:43, 482.68it/s]Running loglikelihood requests:  62%|██████▏   | 35025/56168 [02:15<00:43, 483.15it/s]Running loglikelihood requests:  62%|██████▏   | 35089/56168 [02:15<00:43, 485.03it/s]Running loglikelihood requests:  63%|██████▎   | 35153/56168 [02:15<00:43, 484.39it/s]Running loglikelihood requests:  63%|██████▎   | 35217/56168 [02:15<00:43, 482.81it/s]Running loglikelihood requests:  63%|██████▎   | 35281/56168 [02:15<00:43, 482.46it/s]Running loglikelihood requests:  63%|██████▎   | 35345/56168 [02:16<00:43, 481.80it/s]Running loglikelihood requests:  63%|██████▎   | 35409/56168 [02:16<00:42, 483.04it/s]Running loglikelihood requests:  63%|██████▎   | 35473/56168 [02:16<00:42, 482.03it/s]Running loglikelihood requests:  63%|██████▎   | 35537/56168 [02:16<00:42, 489.23it/s]Running loglikelihood requests:  63%|██████▎   | 35601/56168 [02:16<00:41, 493.82it/s]Running loglikelihood requests:  63%|██████▎   | 35665/56168 [02:16<00:41, 495.56it/s]Running loglikelihood requests:  64%|██████▎   | 35729/56168 [02:16<00:41, 498.39it/s]Running loglikelihood requests:  64%|██████▎   | 35793/56168 [02:17<00:40, 499.32it/s]Running loglikelihood requests:  64%|██████▍   | 35857/56168 [02:17<00:40, 500.34it/s]Running loglikelihood requests:  64%|██████▍   | 35921/56168 [02:17<00:40, 501.90it/s]Running loglikelihood requests:  64%|██████▍   | 35985/56168 [02:17<00:40, 503.96it/s]Running loglikelihood requests:  64%|██████▍   | 36049/56168 [02:17<00:39, 504.34it/s]Running loglikelihood requests:  64%|██████▍   | 36113/56168 [02:17<00:39, 504.81it/s]Running loglikelihood requests:  64%|██████▍   | 36177/56168 [02:17<00:39, 505.23it/s]Running loglikelihood requests:  65%|██████▍   | 36241/56168 [02:17<00:39, 505.42it/s]Running loglikelihood requests:  65%|██████▍   | 36305/56168 [02:18<00:39, 507.84it/s]Running loglikelihood requests:  65%|██████▍   | 36369/56168 [02:18<00:38, 509.34it/s]Running loglikelihood requests:  65%|██████▍   | 36433/56168 [02:18<00:38, 507.47it/s]Running loglikelihood requests:  65%|██████▍   | 36497/56168 [02:18<00:38, 507.07it/s]Running loglikelihood requests:  65%|██████▌   | 36561/56168 [02:18<00:38, 507.78it/s]Running loglikelihood requests:  65%|██████▌   | 36625/56168 [02:18<00:38, 506.79it/s]Running loglikelihood requests:  65%|██████▌   | 36689/56168 [02:18<00:38, 505.73it/s]Running loglikelihood requests:  65%|██████▌   | 36753/56168 [02:18<00:38, 505.14it/s]Running loglikelihood requests:  66%|██████▌   | 36817/56168 [02:19<00:38, 505.26it/s]Running loglikelihood requests:  66%|██████▌   | 36881/56168 [02:19<00:38, 503.19it/s]Running loglikelihood requests:  66%|██████▌   | 36945/56168 [02:19<00:38, 505.06it/s]Running loglikelihood requests:  66%|██████▌   | 37009/56168 [02:19<00:37, 506.40it/s]Running loglikelihood requests:  66%|██████▌   | 37073/56168 [02:19<00:37, 506.47it/s]Running loglikelihood requests:  66%|██████▌   | 37137/56168 [02:19<00:37, 507.40it/s]Running loglikelihood requests:  66%|██████▌   | 37201/56168 [02:19<00:37, 507.62it/s]Running loglikelihood requests:  66%|██████▋   | 37265/56168 [02:19<00:37, 507.94it/s]Running loglikelihood requests:  66%|██████▋   | 37333/56168 [02:20<00:36, 517.21it/s]Running loglikelihood requests:  67%|██████▋   | 37397/56168 [02:20<00:36, 514.55it/s]Running loglikelihood requests:  67%|██████▋   | 37461/56168 [02:20<00:36, 511.73it/s]Running loglikelihood requests:  67%|██████▋   | 37525/56168 [02:20<00:36, 510.67it/s]Running loglikelihood requests:  67%|██████▋   | 37589/56168 [02:20<00:36, 510.39it/s]Running loglikelihood requests:  67%|██████▋   | 37653/56168 [02:20<00:36, 509.47it/s]Running loglikelihood requests:  67%|██████▋   | 37717/56168 [02:20<00:36, 507.67it/s]Running loglikelihood requests:  67%|██████▋   | 37781/56168 [02:20<00:36, 509.76it/s]Running loglikelihood requests:  67%|██████▋   | 37845/56168 [02:21<00:35, 512.72it/s]Running loglikelihood requests:  67%|██████▋   | 37909/56168 [02:21<00:35, 513.52it/s]Running loglikelihood requests:  68%|██████▊   | 37973/56168 [02:21<00:35, 512.89it/s]Running loglikelihood requests:  68%|██████▊   | 38037/56168 [02:21<00:35, 512.01it/s]Running loglikelihood requests:  68%|██████▊   | 38101/56168 [02:21<00:35, 511.73it/s]Running loglikelihood requests:  68%|██████▊   | 38165/56168 [02:21<00:35, 511.42it/s]Running loglikelihood requests:  68%|██████▊   | 38229/56168 [02:21<00:34, 512.64it/s]Running loglikelihood requests:  68%|██████▊   | 38293/56168 [02:21<00:34, 513.78it/s]Running loglikelihood requests:  68%|██████▊   | 38357/56168 [02:22<00:34, 514.17it/s]Running loglikelihood requests:  68%|██████▊   | 38421/56168 [02:22<00:34, 513.89it/s]Running loglikelihood requests:  69%|██████▊   | 38485/56168 [02:22<00:34, 514.44it/s]Running loglikelihood requests:  69%|██████▊   | 38549/56168 [02:22<00:34, 514.27it/s]Running loglikelihood requests:  69%|██████▊   | 38613/56168 [02:22<00:34, 514.99it/s]Running loglikelihood requests:  69%|██████▉   | 38677/56168 [02:22<00:33, 514.64it/s]Running loglikelihood requests:  69%|██████▉   | 38741/56168 [02:22<00:33, 515.13it/s]Running loglikelihood requests:  69%|██████▉   | 38805/56168 [02:22<00:33, 514.52it/s]Running loglikelihood requests:  69%|██████▉   | 38869/56168 [02:23<00:33, 513.12it/s]Running loglikelihood requests:  69%|██████▉   | 38933/56168 [02:23<00:33, 513.12it/s]Running loglikelihood requests:  69%|██████▉   | 38997/56168 [02:23<00:33, 513.36it/s]Running loglikelihood requests:  70%|██████▉   | 39061/56168 [02:23<00:33, 513.47it/s]Running loglikelihood requests:  70%|██████▉   | 39125/56168 [02:23<00:33, 513.56it/s]Running loglikelihood requests:  70%|██████▉   | 39189/56168 [02:23<00:33, 512.83it/s]Running loglikelihood requests:  70%|██████▉   | 39253/56168 [02:23<00:32, 513.25it/s]Running loglikelihood requests:  70%|██████▉   | 39317/56168 [02:23<00:32, 514.65it/s]Running loglikelihood requests:  70%|███████   | 39381/56168 [02:24<00:32, 515.94it/s]Running loglikelihood requests:  70%|███████   | 39445/56168 [02:24<00:32, 515.98it/s]Running loglikelihood requests:  70%|███████   | 39509/56168 [02:24<00:32, 516.81it/s]Running loglikelihood requests:  70%|███████   | 39573/56168 [02:24<00:32, 518.38it/s]Running loglikelihood requests:  71%|███████   | 39637/56168 [02:24<00:31, 519.12it/s]Running loglikelihood requests:  71%|███████   | 39701/56168 [02:24<00:31, 519.78it/s]Running loglikelihood requests:  71%|███████   | 39765/56168 [02:24<00:31, 519.05it/s]Running loglikelihood requests:  71%|███████   | 39829/56168 [02:24<00:31, 518.35it/s]Running loglikelihood requests:  71%|███████   | 39893/56168 [02:25<00:31, 517.88it/s]Running loglikelihood requests:  71%|███████   | 39957/56168 [02:25<00:31, 517.34it/s]Running loglikelihood requests:  71%|███████▏  | 40021/56168 [02:25<00:31, 518.01it/s]Running loglikelihood requests:  71%|███████▏  | 40085/56168 [02:25<00:30, 518.85it/s]Running loglikelihood requests:  71%|███████▏  | 40149/56168 [02:25<00:30, 520.13it/s]Running loglikelihood requests:  72%|███████▏  | 40213/56168 [02:25<00:30, 520.54it/s]Running loglikelihood requests:  72%|███████▏  | 40277/56168 [02:25<00:30, 521.79it/s]Running loglikelihood requests:  72%|███████▏  | 40341/56168 [02:25<00:30, 523.67it/s]Running loglikelihood requests:  72%|███████▏  | 40405/56168 [02:26<00:30, 520.58it/s]Running loglikelihood requests:  72%|███████▏  | 40469/56168 [02:26<00:30, 519.31it/s]Running loglikelihood requests:  72%|███████▏  | 40533/56168 [02:26<00:30, 517.17it/s]Running loglikelihood requests:  72%|███████▏  | 40597/56168 [02:26<00:30, 515.83it/s]Running loglikelihood requests:  72%|███████▏  | 40661/56168 [02:26<00:30, 514.23it/s]Running loglikelihood requests:  73%|███████▎  | 40725/56168 [02:26<00:30, 513.71it/s]Running loglikelihood requests:  73%|███████▎  | 40789/56168 [02:26<00:29, 515.80it/s]Running loglikelihood requests:  73%|███████▎  | 40853/56168 [02:26<00:29, 517.55it/s]Running loglikelihood requests:  73%|███████▎  | 40921/56168 [02:27<00:28, 526.75it/s]Running loglikelihood requests:  73%|███████▎  | 40985/56168 [02:27<00:28, 523.91it/s]Running loglikelihood requests:  73%|███████▎  | 41049/56168 [02:27<00:28, 524.20it/s]Running loglikelihood requests:  73%|███████▎  | 41113/56168 [02:27<00:28, 523.93it/s]Running loglikelihood requests:  73%|███████▎  | 41177/56168 [02:27<00:28, 524.11it/s]Running loglikelihood requests:  73%|███████▎  | 41241/56168 [02:27<00:28, 523.47it/s]Running loglikelihood requests:  74%|███████▎  | 41305/56168 [02:27<00:28, 523.67it/s]Running loglikelihood requests:  74%|███████▎  | 41369/56168 [02:27<00:27, 534.46it/s]Running loglikelihood requests:  74%|███████▍  | 41433/56168 [02:27<00:27, 541.04it/s]Running loglikelihood requests:  74%|███████▍  | 41497/56168 [02:28<00:26, 545.56it/s]Running loglikelihood requests:  74%|███████▍  | 41561/56168 [02:28<00:26, 549.11it/s]Running loglikelihood requests:  74%|███████▍  | 41625/56168 [02:28<00:26, 551.07it/s]Running loglikelihood requests:  74%|███████▍  | 41689/56168 [02:28<00:26, 552.73it/s]Running loglikelihood requests:  74%|███████▍  | 41753/56168 [02:28<00:25, 555.04it/s]Running loglikelihood requests:  74%|███████▍  | 41817/56168 [02:28<00:25, 555.54it/s]Running loglikelihood requests:  75%|███████▍  | 41881/56168 [02:28<00:25, 555.16it/s]Running loglikelihood requests:  75%|███████▍  | 41945/56168 [02:28<00:25, 557.38it/s]Running loglikelihood requests:  75%|███████▍  | 42009/56168 [02:29<00:25, 556.86it/s]Running loglikelihood requests:  75%|███████▍  | 42073/56168 [02:29<00:25, 556.22it/s]Running loglikelihood requests:  75%|███████▌  | 42137/56168 [02:29<00:25, 555.88it/s]Running loglikelihood requests:  75%|███████▌  | 42201/56168 [02:29<00:25, 556.34it/s]Running loglikelihood requests:  75%|███████▌  | 42265/56168 [02:29<00:25, 555.55it/s]Running loglikelihood requests:  75%|███████▌  | 42329/56168 [02:29<00:24, 556.54it/s]Running loglikelihood requests:  75%|███████▌  | 42393/56168 [02:29<00:24, 559.49it/s]Running loglikelihood requests:  76%|███████▌  | 42457/56168 [02:29<00:24, 558.33it/s]Running loglikelihood requests:  76%|███████▌  | 42521/56168 [02:29<00:24, 558.04it/s]Running loglikelihood requests:  76%|███████▌  | 42585/56168 [02:30<00:24, 558.32it/s]Running loglikelihood requests:  76%|███████▌  | 42649/56168 [02:30<00:24, 557.77it/s]Running loglikelihood requests:  76%|███████▌  | 42713/56168 [02:30<00:24, 559.02it/s]Running loglikelihood requests:  76%|███████▌  | 42777/56168 [02:30<00:23, 560.74it/s]Running loglikelihood requests:  76%|███████▋  | 42841/56168 [02:30<00:23, 558.51it/s]Running loglikelihood requests:  76%|███████▋  | 42905/56168 [02:30<00:23, 556.77it/s]Running loglikelihood requests:  77%|███████▋  | 42969/56168 [02:30<00:23, 557.47it/s]Running loglikelihood requests:  77%|███████▋  | 43033/56168 [02:30<00:23, 557.57it/s]Running loglikelihood requests:  77%|███████▋  | 43097/56168 [02:30<00:23, 560.28it/s]Running loglikelihood requests:  77%|███████▋  | 43161/56168 [02:31<00:23, 561.59it/s]Running loglikelihood requests:  77%|███████▋  | 43225/56168 [02:31<00:23, 561.59it/s]Running loglikelihood requests:  77%|███████▋  | 43289/56168 [02:31<00:22, 562.00it/s]Running loglikelihood requests:  77%|███████▋  | 43353/56168 [02:31<00:22, 562.82it/s]Running loglikelihood requests:  77%|███████▋  | 43417/56168 [02:31<00:22, 563.14it/s]Running loglikelihood requests:  77%|███████▋  | 43481/56168 [02:31<00:22, 563.43it/s]Running loglikelihood requests:  78%|███████▊  | 43545/56168 [02:31<00:22, 562.21it/s]Running loglikelihood requests:  78%|███████▊  | 43609/56168 [02:31<00:22, 562.71it/s]Running loglikelihood requests:  78%|███████▊  | 43673/56168 [02:31<00:22, 562.09it/s]Running loglikelihood requests:  78%|███████▊  | 43741/56168 [02:32<00:21, 570.43it/s]Running loglikelihood requests:  78%|███████▊  | 43805/56168 [02:32<00:21, 568.49it/s]Running loglikelihood requests:  78%|███████▊  | 43869/56168 [02:32<00:21, 565.76it/s]Running loglikelihood requests:  78%|███████▊  | 43933/56168 [02:32<00:21, 563.67it/s]Running loglikelihood requests:  78%|███████▊  | 43997/56168 [02:32<00:21, 563.73it/s]Running loglikelihood requests:  78%|███████▊  | 44061/56168 [02:32<00:21, 564.32it/s]Running loglikelihood requests:  79%|███████▊  | 44125/56168 [02:32<00:21, 566.26it/s]Running loglikelihood requests:  79%|███████▊  | 44189/56168 [02:32<00:21, 567.24it/s]Running loglikelihood requests:  79%|███████▉  | 44253/56168 [02:32<00:21, 565.64it/s]Running loglikelihood requests:  79%|███████▉  | 44317/56168 [02:33<00:20, 567.16it/s]Running loglikelihood requests:  79%|███████▉  | 44381/56168 [02:33<00:20, 566.52it/s]Running loglikelihood requests:  79%|███████▉  | 44445/56168 [02:33<00:20, 565.99it/s]Running loglikelihood requests:  79%|███████▉  | 44509/56168 [02:33<00:20, 566.44it/s]Running loglikelihood requests:  79%|███████▉  | 44573/56168 [02:33<00:20, 567.76it/s]Running loglikelihood requests:  79%|███████▉  | 44637/56168 [02:33<00:20, 568.57it/s]Running loglikelihood requests:  80%|███████▉  | 44701/56168 [02:33<00:20, 568.57it/s]Running loglikelihood requests:  80%|███████▉  | 44765/56168 [02:33<00:20, 570.06it/s]Running loglikelihood requests:  80%|███████▉  | 44829/56168 [02:34<00:19, 570.19it/s]Running loglikelihood requests:  80%|███████▉  | 44893/56168 [02:34<00:19, 570.54it/s]Running loglikelihood requests:  80%|████████  | 44957/56168 [02:34<00:19, 570.24it/s]Running loglikelihood requests:  80%|████████  | 45021/56168 [02:34<00:19, 570.90it/s]Running loglikelihood requests:  80%|████████  | 45085/56168 [02:34<00:19, 571.03it/s]Running loglikelihood requests:  80%|████████  | 45149/56168 [02:34<00:19, 570.54it/s]Running loglikelihood requests:  80%|████████  | 45213/56168 [02:34<00:19, 570.58it/s]Running loglikelihood requests:  81%|████████  | 45277/56168 [02:34<00:19, 568.06it/s]Running loglikelihood requests:  81%|████████  | 45341/56168 [02:34<00:19, 568.23it/s]Running loglikelihood requests:  81%|████████  | 45405/56168 [02:35<00:18, 567.50it/s]Running loglikelihood requests:  81%|████████  | 45469/56168 [02:35<00:18, 569.21it/s]Running loglikelihood requests:  81%|████████  | 45533/56168 [02:35<00:18, 568.67it/s]Running loglikelihood requests:  81%|████████  | 45597/56168 [02:35<00:18, 569.16it/s]Running loglikelihood requests:  81%|████████▏ | 45661/56168 [02:35<00:18, 569.66it/s]Running loglikelihood requests:  81%|████████▏ | 45725/56168 [02:35<00:18, 569.53it/s]Running loglikelihood requests:  82%|████████▏ | 45789/56168 [02:35<00:18, 569.80it/s]Running loglikelihood requests:  82%|████████▏ | 45853/56168 [02:35<00:18, 569.52it/s]Running loglikelihood requests:  82%|████████▏ | 45917/56168 [02:35<00:17, 571.96it/s]Running loglikelihood requests:  82%|████████▏ | 45981/56168 [02:36<00:17, 570.92it/s]Running loglikelihood requests:  82%|████████▏ | 46045/56168 [02:36<00:17, 572.41it/s]Running loglikelihood requests:  82%|████████▏ | 46109/56168 [02:36<00:17, 572.37it/s]Running loglikelihood requests:  82%|████████▏ | 46173/56168 [02:36<00:17, 573.35it/s]Running loglikelihood requests:  82%|████████▏ | 46237/56168 [02:36<00:17, 571.92it/s]Running loglikelihood requests:  82%|████████▏ | 46301/56168 [02:36<00:17, 572.08it/s]Running loglikelihood requests:  83%|████████▎ | 46365/56168 [02:36<00:17, 572.39it/s]Running loglikelihood requests:  83%|████████▎ | 46429/56168 [02:36<00:16, 573.57it/s]Running loglikelihood requests:  83%|████████▎ | 46493/56168 [02:36<00:16, 574.27it/s]Running loglikelihood requests:  83%|████████▎ | 46557/56168 [02:37<00:16, 574.42it/s]Running loglikelihood requests:  83%|████████▎ | 46621/56168 [02:37<00:16, 575.73it/s]Running loglikelihood requests:  83%|████████▎ | 46685/56168 [02:37<00:16, 575.41it/s]Running loglikelihood requests:  83%|████████▎ | 46749/56168 [02:37<00:16, 576.73it/s]Running loglikelihood requests:  83%|████████▎ | 46813/56168 [02:37<00:16, 577.10it/s]Running loglikelihood requests:  83%|████████▎ | 46877/56168 [02:37<00:16, 577.24it/s]Running loglikelihood requests:  84%|████████▎ | 46941/56168 [02:37<00:15, 578.14it/s]Running loglikelihood requests:  84%|████████▎ | 47005/56168 [02:37<00:15, 578.39it/s]Running loglikelihood requests:  84%|████████▍ | 47069/56168 [02:37<00:15, 578.30it/s]Running loglikelihood requests:  84%|████████▍ | 47133/56168 [02:38<00:15, 573.58it/s]Running loglikelihood requests:  84%|████████▍ | 47197/56168 [02:38<00:15, 574.31it/s]Running loglikelihood requests:  84%|████████▍ | 47261/56168 [02:38<00:15, 575.62it/s]Running loglikelihood requests:  84%|████████▍ | 47325/56168 [02:38<00:15, 575.66it/s]Running loglikelihood requests:  84%|████████▍ | 47389/56168 [02:38<00:15, 576.61it/s]Running loglikelihood requests:  84%|████████▍ | 47453/56168 [02:38<00:15, 577.94it/s]Running loglikelihood requests:  85%|████████▍ | 47517/56168 [02:38<00:14, 577.57it/s]Running loglikelihood requests:  85%|████████▍ | 47581/56168 [02:38<00:14, 578.83it/s]Running loglikelihood requests:  85%|████████▍ | 47645/56168 [02:38<00:14, 577.83it/s]Running loglikelihood requests:  85%|████████▍ | 47709/56168 [02:39<00:14, 579.76it/s]Running loglikelihood requests:  85%|████████▌ | 47773/56168 [02:39<00:14, 577.80it/s]Running loglikelihood requests:  85%|████████▌ | 47837/56168 [02:39<00:14, 577.58it/s]Running loglikelihood requests:  85%|████████▌ | 47901/56168 [02:39<00:14, 576.78it/s]Running loglikelihood requests:  85%|████████▌ | 47965/56168 [02:39<00:14, 577.97it/s]Running loglikelihood requests:  86%|████████▌ | 48029/56168 [02:39<00:14, 576.60it/s]Running loglikelihood requests:  86%|████████▌ | 48093/56168 [02:39<00:13, 577.17it/s]Running loglikelihood requests:  86%|████████▌ | 48157/56168 [02:39<00:13, 575.73it/s]Running loglikelihood requests:  86%|████████▌ | 48221/56168 [02:39<00:13, 577.81it/s]Running loglikelihood requests:  86%|████████▌ | 48285/56168 [02:40<00:13, 577.83it/s]Running loglikelihood requests:  86%|████████▌ | 48349/56168 [02:40<00:13, 584.54it/s]Running loglikelihood requests:  86%|████████▌ | 48413/56168 [02:40<00:13, 588.64it/s]Running loglikelihood requests:  86%|████████▋ | 48477/56168 [02:40<00:13, 591.35it/s]Running loglikelihood requests:  86%|████████▋ | 48541/56168 [02:40<00:12, 593.96it/s]Running loglikelihood requests:  87%|████████▋ | 48605/56168 [02:40<00:12, 595.63it/s]Running loglikelihood requests:  87%|████████▋ | 48669/56168 [02:40<00:12, 595.61it/s]Running loglikelihood requests:  87%|████████▋ | 48733/56168 [02:40<00:12, 599.08it/s]Running loglikelihood requests:  87%|████████▋ | 48797/56168 [02:40<00:12, 602.57it/s]Running loglikelihood requests:  87%|████████▋ | 48861/56168 [02:40<00:12, 602.82it/s]Running loglikelihood requests:  87%|████████▋ | 48925/56168 [02:41<00:12, 601.72it/s]Running loglikelihood requests:  87%|████████▋ | 48989/56168 [02:41<00:11, 600.91it/s]Running loglikelihood requests:  87%|████████▋ | 49053/56168 [02:41<00:11, 602.32it/s]Running loglikelihood requests:  87%|████████▋ | 49117/56168 [02:41<00:11, 603.76it/s]Running loglikelihood requests:  88%|████████▊ | 49181/56168 [02:41<00:11, 603.18it/s]Running loglikelihood requests:  88%|████████▊ | 49245/56168 [02:41<00:11, 602.47it/s]Running loglikelihood requests:  88%|████████▊ | 49309/56168 [02:41<00:11, 602.60it/s]Running loglikelihood requests:  88%|████████▊ | 49373/56168 [02:41<00:11, 603.54it/s]Running loglikelihood requests:  88%|████████▊ | 49437/56168 [02:41<00:11, 603.44it/s]Running loglikelihood requests:  88%|████████▊ | 49501/56168 [02:42<00:11, 603.04it/s]Running loglikelihood requests:  88%|████████▊ | 49565/56168 [02:42<00:10, 602.98it/s]Running loglikelihood requests:  88%|████████▊ | 49629/56168 [02:42<00:10, 603.97it/s]Running loglikelihood requests:  88%|████████▊ | 49693/56168 [02:42<00:10, 603.25it/s]Running loglikelihood requests:  89%|████████▊ | 49757/56168 [02:42<00:10, 603.61it/s]Running loglikelihood requests:  89%|████████▊ | 49821/56168 [02:42<00:10, 603.71it/s]Running loglikelihood requests:  89%|████████▉ | 49885/56168 [02:42<00:10, 603.73it/s]Running loglikelihood requests:  89%|████████▉ | 49953/56168 [02:42<00:10, 614.07it/s]Running loglikelihood requests:  89%|████████▉ | 50017/56168 [02:42<00:10, 610.90it/s]Running loglikelihood requests:  89%|████████▉ | 50081/56168 [02:43<00:09, 609.08it/s]Running loglikelihood requests:  89%|████████▉ | 50145/56168 [02:43<00:09, 609.03it/s]Running loglikelihood requests:  89%|████████▉ | 50209/56168 [02:43<00:09, 607.90it/s]Running loglikelihood requests:  90%|████████▉ | 50273/56168 [02:43<00:09, 607.03it/s]Running loglikelihood requests:  90%|████████▉ | 50337/56168 [02:43<00:09, 606.45it/s]Running loglikelihood requests:  90%|████████▉ | 50401/56168 [02:43<00:09, 607.11it/s]Running loglikelihood requests:  90%|████████▉ | 50465/56168 [02:43<00:09, 606.67it/s]Running loglikelihood requests:  90%|████████▉ | 50529/56168 [02:43<00:09, 605.96it/s]Running loglikelihood requests:  90%|█████████ | 50593/56168 [02:43<00:09, 608.07it/s]Running loglikelihood requests:  90%|█████████ | 50657/56168 [02:43<00:09, 607.44it/s]Running loglikelihood requests:  90%|█████████ | 50721/56168 [02:44<00:08, 608.42it/s]Running loglikelihood requests:  90%|█████████ | 50789/56168 [02:44<00:08, 618.54it/s]Running loglikelihood requests:  91%|█████████ | 50853/56168 [02:44<00:08, 615.56it/s]Running loglikelihood requests:  91%|█████████ | 50917/56168 [02:44<00:08, 613.70it/s]Running loglikelihood requests:  91%|█████████ | 50981/56168 [02:44<00:08, 612.69it/s]Running loglikelihood requests:  91%|█████████ | 51045/56168 [02:44<00:08, 611.18it/s]Running loglikelihood requests:  91%|█████████ | 51109/56168 [02:44<00:08, 609.08it/s]Running loglikelihood requests:  91%|█████████ | 51173/56168 [02:44<00:08, 609.29it/s]Running loglikelihood requests:  91%|█████████ | 51237/56168 [02:44<00:08, 609.94it/s]Running loglikelihood requests:  91%|█████████▏| 51301/56168 [02:45<00:07, 610.09it/s]Running loglikelihood requests:  91%|█████████▏| 51365/56168 [02:45<00:07, 610.00it/s]Running loglikelihood requests:  92%|█████████▏| 51429/56168 [02:45<00:07, 609.39it/s]Running loglikelihood requests:  92%|█████████▏| 51493/56168 [02:45<00:07, 609.29it/s]Running loglikelihood requests:  92%|█████████▏| 51557/56168 [02:45<00:07, 609.54it/s]Running loglikelihood requests:  92%|█████████▏| 51621/56168 [02:45<00:07, 609.76it/s]Running loglikelihood requests:  92%|█████████▏| 51685/56168 [02:45<00:07, 610.92it/s]Running loglikelihood requests:  92%|█████████▏| 51749/56168 [02:45<00:07, 609.98it/s]Running loglikelihood requests:  92%|█████████▏| 51813/56168 [02:45<00:07, 610.46it/s]Running loglikelihood requests:  92%|█████████▏| 51877/56168 [02:45<00:07, 611.80it/s]Running loglikelihood requests:  92%|█████████▏| 51941/56168 [02:46<00:06, 612.61it/s]Running loglikelihood requests:  93%|█████████▎| 52005/56168 [02:46<00:06, 612.75it/s]Running loglikelihood requests:  93%|█████████▎| 52069/56168 [02:46<00:06, 612.44it/s]Running loglikelihood requests:  93%|█████████▎| 52133/56168 [02:46<00:06, 611.81it/s]Running loglikelihood requests:  93%|█████████▎| 52197/56168 [02:46<00:06, 611.68it/s]Running loglikelihood requests:  93%|█████████▎| 52261/56168 [02:46<00:06, 612.50it/s]Running loglikelihood requests:  93%|█████████▎| 52325/56168 [02:46<00:06, 612.37it/s]Running loglikelihood requests:  93%|█████████▎| 52389/56168 [02:46<00:06, 613.44it/s]Running loglikelihood requests:  93%|█████████▎| 52453/56168 [02:46<00:06, 616.24it/s]Running loglikelihood requests:  93%|█████████▎| 52517/56168 [02:46<00:05, 617.71it/s]Running loglikelihood requests:  94%|█████████▎| 52581/56168 [02:47<00:05, 616.49it/s]Running loglikelihood requests:  94%|█████████▎| 52645/56168 [02:47<00:05, 616.61it/s]Running loglikelihood requests:  94%|█████████▍| 52709/56168 [02:47<00:05, 617.32it/s]Running loglikelihood requests:  94%|█████████▍| 52773/56168 [02:47<00:05, 617.12it/s]Running loglikelihood requests:  94%|█████████▍| 52837/56168 [02:47<00:05, 616.70it/s]Running loglikelihood requests:  94%|█████████▍| 52901/56168 [02:47<00:05, 616.02it/s]Running loglikelihood requests:  94%|█████████▍| 52965/56168 [02:47<00:05, 613.90it/s]Running loglikelihood requests:  94%|█████████▍| 53029/56168 [02:47<00:05, 614.55it/s]Running loglikelihood requests:  95%|█████████▍| 53093/56168 [02:47<00:04, 616.24it/s]Running loglikelihood requests:  95%|█████████▍| 53157/56168 [02:48<00:04, 617.73it/s]Running loglikelihood requests:  95%|█████████▍| 53221/56168 [02:48<00:04, 618.87it/s]Running loglikelihood requests:  95%|█████████▍| 53285/56168 [02:48<00:04, 619.21it/s]Running loglikelihood requests:  95%|█████████▍| 53349/56168 [02:48<00:04, 620.04it/s]Running loglikelihood requests:  95%|█████████▌| 53413/56168 [02:48<00:04, 619.80it/s]Running loglikelihood requests:  95%|█████████▌| 53477/56168 [02:48<00:04, 619.45it/s]Running loglikelihood requests:  95%|█████████▌| 53541/56168 [02:48<00:04, 618.71it/s]Running loglikelihood requests:  95%|█████████▌| 53605/56168 [02:48<00:04, 617.90it/s]Running loglikelihood requests:  96%|█████████▌| 53669/56168 [02:48<00:04, 617.98it/s]Running loglikelihood requests:  96%|█████████▌| 53733/56168 [02:48<00:03, 619.82it/s]Running loglikelihood requests:  96%|█████████▌| 53797/56168 [02:49<00:03, 620.92it/s]Running loglikelihood requests:  96%|█████████▌| 53861/56168 [02:49<00:03, 621.10it/s]Running loglikelihood requests:  96%|█████████▌| 53925/56168 [02:49<00:03, 622.07it/s]Running loglikelihood requests:  96%|█████████▌| 53989/56168 [02:49<00:03, 623.48it/s]Running loglikelihood requests:  96%|█████████▌| 54053/56168 [02:49<00:03, 623.74it/s]Running loglikelihood requests:  96%|█████████▋| 54117/56168 [02:49<00:03, 623.04it/s]Running loglikelihood requests:  97%|█████████▋| 54204/56168 [02:49<00:02, 695.51it/s]Running loglikelihood requests:  97%|█████████▋| 54292/56168 [02:49<00:02, 749.92it/s]Running loglikelihood requests:  97%|█████████▋| 54373/56168 [02:49<00:02, 612.32it/s]Running loglikelihood requests:  97%|█████████▋| 54464/56168 [02:50<00:02, 687.49it/s]Running loglikelihood requests:  97%|█████████▋| 54552/56168 [02:50<00:02, 738.56it/s]Running loglikelihood requests:  97%|█████████▋| 54630/56168 [02:50<00:02, 608.17it/s]Running loglikelihood requests:  97%|█████████▋| 54714/56168 [02:50<00:02, 664.06it/s]Running loglikelihood requests:  98%|█████████▊| 54801/56168 [02:50<00:01, 716.54it/s]Running loglikelihood requests:  98%|█████████▊| 54885/56168 [02:50<00:02, 609.59it/s]Running loglikelihood requests:  98%|█████████▊| 54973/56168 [02:50<00:01, 673.78it/s]Running loglikelihood requests:  98%|█████████▊| 55064/56168 [02:50<00:01, 733.52it/s]Running loglikelihood requests:  98%|█████████▊| 55143/56168 [02:51<00:01, 612.10it/s]Running loglikelihood requests:  98%|█████████▊| 55232/56168 [02:51<00:01, 677.78it/s]Running loglikelihood requests:  98%|█████████▊| 55319/56168 [02:51<00:01, 726.18it/s]Running loglikelihood requests:  99%|█████████▊| 55398/56168 [02:51<00:01, 607.78it/s]Running loglikelihood requests:  99%|█████████▉| 55489/56168 [02:51<00:01, 678.99it/s]Running loglikelihood requests:  99%|█████████▉| 55578/56168 [02:51<00:00, 732.15it/s]Running loglikelihood requests:  99%|█████████▉| 55657/56168 [02:51<00:00, 614.87it/s]Running loglikelihood requests:  99%|█████████▉| 55753/56168 [02:51<00:00, 696.49it/s]Running loglikelihood requests:  99%|█████████▉| 55845/56168 [02:52<00:00, 622.82it/s]Running loglikelihood requests: 100%|█████████▉| 55937/56168 [02:52<00:00, 691.17it/s]Running loglikelihood requests: 100%|█████████▉| 56037/56168 [02:52<00:00, 637.44it/s]Running loglikelihood requests: 100%|█████████▉| 56136/56168 [02:52<00:00, 717.26it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:52<00:00, 325.44it/s]
2025-05-16:02:53:54,661 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=shengyuanhu/benchmark_wmdp_ga_ckpt_140,tokenizer=HuggingFaceH4/zephyr-7b-beta), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.6045|±  |0.0040|
| - humanities                          |      2|none  |      |acc   |↑  |0.5705|±  |0.0069|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.4206|±  |0.0442|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.7394|±  |0.0343|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.7451|±  |0.0306|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.8059|±  |0.0257|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.7025|±  |0.0417|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.6944|±  |0.0445|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.7055|±  |0.0358|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6474|±  |0.0257|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.3832|±  |0.0163|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6463|±  |0.0272|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.6852|±  |0.0258|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4941|±  |0.0128|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.8363|±  |0.0284|
| - other                               |      2|none  |      |acc   |↑  |0.6604|±  |0.0083|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.6200|±  |0.0488|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.6604|±  |0.0291|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.6185|±  |0.0370|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.4200|±  |0.0496|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6323|±  |0.0324|
|  - management                         |      1|none  |     0|acc   |↑  |0.6602|±  |0.0469|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.7778|±  |0.0272|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.6200|±  |0.0488|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.7880|±  |0.0146|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.6307|±  |0.0276|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.4574|±  |0.0297|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.6949|±  |0.0280|
|  - virology                           |      1|none  |     0|acc   |↑  |0.5120|±  |0.0389|
| - social sciences                     |      2|none  |      |acc   |↑  |0.6864|±  |0.0082|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.5439|±  |0.0469|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.6970|±  |0.0327|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8031|±  |0.0287|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.5744|±  |0.0251|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.6218|±  |0.0315|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.7908|±  |0.0174|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7634|±  |0.0373|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.6275|±  |0.0196|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6455|±  |0.0458|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.6204|±  |0.0311|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8458|±  |0.0255|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.7700|±  |0.0423|
| - stem                                |      2|none  |      |acc   |↑  |0.5201|±  |0.0087|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.3400|±  |0.0476|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.5704|±  |0.0428|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.6250|±  |0.0394|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.6389|±  |0.0402|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4700|±  |0.0502|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.4600|±  |0.0501|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3000|±  |0.0461|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5784|±  |0.0491|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.6600|±  |0.0476|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.5319|±  |0.0326|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.5241|±  |0.0416|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4603|±  |0.0257|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7129|±  |0.0257|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.5074|±  |0.0352|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.5800|±  |0.0496|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.4074|±  |0.0300|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.3974|±  |0.0400|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.5139|±  |0.0341|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.5000|±  |0.0475|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.6045|±  |0.0040|
| - humanities     |      2|none  |      |acc   |↑  |0.5705|±  |0.0069|
| - other          |      2|none  |      |acc   |↑  |0.6604|±  |0.0083|
| - social sciences|      2|none  |      |acc   |↑  |0.6864|±  |0.0082|
| - stem           |      2|none  |      |acc   |↑  |0.5201|±  |0.0087|

2025-05-16:02:54:00,306 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-16:02:54:00,423 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,428 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,430 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,433 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,435 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,438 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,440 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,443 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,445 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,448 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,479 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,482 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,489 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:00,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,114 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,117 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,123 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,132 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,135 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,138 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,144 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,148 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,162 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,166 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,170 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,173 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,181 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,184 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,194 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,197 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,206 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,216 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,219 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,856 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,861 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,870 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,872 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,874 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,880 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:01,883 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,154 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,158 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,161 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,216 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,219 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,229 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,232 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,241 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,260 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,263 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,266 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,273 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,276 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,279 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,282 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,285 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,292 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,298 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,301 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,304 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,313 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,316 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,320 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,323 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,326 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,342 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,346 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,349 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,362 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,365 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,372 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,375 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,378 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,381 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,454 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,459 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,461 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,482 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,489 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,528 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,535 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,547 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,553 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,566 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,582 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,591 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,605 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,618 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,627 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,635 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,637 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:02,648 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:03,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:03,535 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:03,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:03,538 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:03,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:03,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:03,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:03,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,319 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,322 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,327 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,328 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,330 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,331 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,333 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,334 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,337 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,340 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,342 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,343 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,345 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,346 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,349 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,351 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,354 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,357 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,364 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,366 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,369 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,370 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,372 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,373 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,375 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,376 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,378 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,379 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,381 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,386 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,388 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,392 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,394 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,395 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,398 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,400 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,403 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,406 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,409 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,410 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,416 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,419 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,424 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,427 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,428 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,430 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,433 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,438 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,440 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,441 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,443 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,452 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,459 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,461 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,467 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,471 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,474 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,476 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,479 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,482 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,485 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,489 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,492 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,497 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,507 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,522 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,528 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,554 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,561 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,566 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,571 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,574 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,581 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,588 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,594 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,597 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,599 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,608 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,610 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,615 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,621 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,625 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,630 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,635 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,637 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,639 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,643 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,648 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,649 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,653 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,657 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,658 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,660 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,661 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,662 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,663 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,665 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,666 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,669 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,671 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,672 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,674 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,675 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,676 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,678 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,684 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,688 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,689 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,692 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,694 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,697 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,707 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,711 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,714 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,716 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,718 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:04,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:06,842 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:06,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:54:06,847 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-16:02:54:06,850 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-16:02:54:06,850 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': 'shengyuanhu/benchmark_wmdp_kl_ckpt_140', 'tokenizer': 'HuggingFaceH4/zephyr-7b-beta'}
2025-05-16:02:54:07,609 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-16:02:54:07,856 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:12<00:24, 12.07s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:24<00:12, 12.07s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:35<00:00, 11.60s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:35<00:00, 11.73s/it]
2025-05-16:02:55:01,686 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,686 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,686 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,686 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,686 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,686 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,686 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,686 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,686 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,686 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,687 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,688 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:02:55:01,689 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-16:02:55:01,696 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 74%|███████▍  | 74/100 [00:00<00:00, 737.30it/s]100%|██████████| 100/100 [00:00<00:00, 723.55it/s]
2025-05-16:02:55:01,838 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 24%|██▍       | 74/310 [00:00<00:00, 739.32it/s] 48%|████▊     | 148/310 [00:00<00:00, 726.05it/s] 71%|███████▏  | 221/310 [00:00<00:00, 709.94it/s] 95%|█████████▌| 295/310 [00:00<00:00, 719.61it/s]100%|██████████| 310/310 [00:00<00:00, 720.93it/s]
2025-05-16:02:55:02,281 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 73%|███████▎  | 73/100 [00:00<00:00, 721.20it/s]100%|██████████| 100/100 [00:00<00:00, 727.41it/s]
2025-05-16:02:55:02,423 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 52%|█████▏    | 75/145 [00:00<00:00, 749.84it/s]100%|██████████| 145/145 [00:00<00:00, 751.03it/s]
2025-05-16:02:55:02,622 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 73%|███████▎  | 73/100 [00:00<00:00, 728.02it/s]100%|██████████| 100/100 [00:00<00:00, 732.47it/s]
2025-05-16:02:55:02,763 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 37%|███▋      | 75/203 [00:00<00:00, 747.72it/s] 74%|███████▍  | 150/203 [00:00<00:00, 738.74it/s]100%|██████████| 203/203 [00:00<00:00, 741.20it/s]
2025-05-16:02:55:03,045 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 49%|████▉     | 75/152 [00:00<00:00, 742.26it/s] 99%|█████████▊| 150/152 [00:00<00:00, 745.42it/s]100%|██████████| 152/152 [00:00<00:00, 744.29it/s]
2025-05-16:02:55:03,256 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 73%|███████▎  | 74/102 [00:00<00:00, 730.82it/s]100%|██████████| 102/102 [00:00<00:00, 735.13it/s]
2025-05-16:02:55:03,399 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 751.26it/s]100%|██████████| 100/100 [00:00<00:00, 751.70it/s]
2025-05-16:02:55:03,537 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 52%|█████▏    | 75/144 [00:00<00:00, 749.90it/s]100%|██████████| 144/144 [00:00<00:00, 744.59it/s]
2025-05-16:02:55:03,736 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 32%|███▏      | 76/235 [00:00<00:00, 756.98it/s] 65%|██████▍   | 152/235 [00:00<00:00, 751.40it/s] 97%|█████████▋| 228/235 [00:00<00:00, 750.47it/s]100%|██████████| 235/235 [00:00<00:00, 751.16it/s]
2025-05-16:02:55:04,058 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 65%|██████▌   | 73/112 [00:00<00:00, 728.31it/s]100%|██████████| 112/112 [00:00<00:00, 733.29it/s]
2025-05-16:02:55:04,216 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 28%|██▊       | 76/270 [00:00<00:00, 752.16it/s] 56%|█████▋    | 152/270 [00:00<00:00, 752.78it/s] 84%|████████▍ | 228/270 [00:00<00:00, 750.80it/s]100%|██████████| 270/270 [00:00<00:00, 748.88it/s]
2025-05-16:02:55:04,586 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 757.44it/s]100%|██████████| 100/100 [00:00<00:00, 757.68it/s]
2025-05-16:02:55:04,723 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 748.36it/s]100%|██████████| 100/100 [00:00<00:00, 749.11it/s]
2025-05-16:02:55:04,861 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 56%|█████▌    | 75/135 [00:00<00:00, 747.93it/s]100%|██████████| 135/135 [00:00<00:00, 757.55it/s]
2025-05-16:02:55:05,044 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 22%|██▏       | 85/378 [00:00<00:00, 845.05it/s] 45%|████▌     | 171/378 [00:00<00:00, 853.69it/s] 68%|██████▊   | 258/378 [00:00<00:00, 858.35it/s] 92%|█████████▏| 346/378 [00:00<00:00, 863.11it/s]100%|██████████| 378/378 [00:00<00:00, 853.53it/s]
2025-05-16:02:55:05,500 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 51%|█████     | 77/151 [00:00<00:00, 760.10it/s]100%|██████████| 151/151 [00:00<00:00, 752.94it/s]
2025-05-16:02:55:05,707 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 35%|███▍      | 75/216 [00:00<00:00, 749.04it/s] 70%|██████▉   | 151/216 [00:00<00:00, 751.66it/s]100%|██████████| 216/216 [00:00<00:00, 752.16it/s]
2025-05-16:02:55:06,003 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 29%|██▊       | 76/265 [00:00<00:00, 758.89it/s] 57%|█████▋    | 152/265 [00:00<00:00, 754.13it/s] 86%|████████▌ | 228/265 [00:00<00:00, 742.62it/s]100%|██████████| 265/265 [00:00<00:00, 745.66it/s]
2025-05-16:02:55:06,368 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 747.02it/s]100%|██████████| 100/100 [00:00<00:00, 744.65it/s]
2025-05-16:02:55:06,508 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 73%|███████▎  | 75/103 [00:00<00:00, 748.87it/s]100%|██████████| 103/103 [00:00<00:00, 747.46it/s]
2025-05-16:02:55:06,650 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 25%|██▍       | 75/306 [00:00<00:00, 749.54it/s] 49%|████▉     | 150/306 [00:00<00:00, 748.12it/s] 74%|███████▎  | 225/306 [00:00<00:00, 741.43it/s] 98%|█████████▊| 300/306 [00:00<00:00, 743.10it/s]100%|██████████| 306/306 [00:00<00:00, 743.34it/s]
2025-05-16:02:55:07,073 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 43%|████▎     | 74/173 [00:00<00:00, 738.58it/s] 86%|████████▌ | 149/173 [00:00<00:00, 739.82it/s]100%|██████████| 173/173 [00:00<00:00, 739.34it/s]
2025-05-16:02:55:07,315 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 46%|████▌     | 76/166 [00:00<00:00, 749.94it/s] 91%|█████████ | 151/166 [00:00<00:00, 749.12it/s]100%|██████████| 166/166 [00:00<00:00, 748.41it/s]
2025-05-16:02:55:07,543 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 28%|██▊       | 75/272 [00:00<00:00, 749.23it/s] 55%|█████▌    | 150/272 [00:00<00:00, 736.53it/s] 83%|████████▎ | 225/272 [00:00<00:00, 740.02it/s]100%|██████████| 272/272 [00:00<00:00, 740.51it/s]
2025-05-16:02:55:07,922 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 10%|▉         | 76/783 [00:00<00:00, 753.89it/s] 19%|█▉        | 152/783 [00:00<00:00, 753.28it/s] 29%|██▉       | 228/783 [00:00<00:00, 753.69it/s] 39%|███▉      | 304/783 [00:00<00:00, 752.45it/s] 49%|████▊     | 380/783 [00:00<00:00, 745.70it/s] 58%|█████▊    | 456/783 [00:00<00:00, 747.99it/s] 68%|██████▊   | 531/783 [00:00<00:00, 744.23it/s] 78%|███████▊  | 607/783 [00:00<00:00, 748.58it/s] 87%|████████▋ | 683/783 [00:00<00:00, 749.63it/s] 97%|█████████▋| 759/783 [00:01<00:00, 750.23it/s]100%|██████████| 783/783 [00:01<00:00, 749.52it/s]
2025-05-16:02:55:08,994 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 752.60it/s]100%|██████████| 100/100 [00:00<00:00, 752.34it/s]
2025-05-16:02:55:09,132 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 747.08it/s]100%|██████████| 100/100 [00:00<00:00, 750.85it/s]
2025-05-16:02:55:09,269 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 29%|██▉       | 83/282 [00:00<00:00, 825.55it/s] 60%|█████▉    | 169/282 [00:00<00:00, 841.63it/s] 91%|█████████ | 256/282 [00:00<00:00, 850.65it/s]100%|██████████| 282/282 [00:00<00:00, 847.29it/s]
2025-05-16:02:55:09,612 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:02, 76.87it/s] 40%|████      | 94/234 [00:00<00:00, 321.85it/s] 72%|███████▏  | 169/234 [00:00<00:00, 468.10it/s]100%|██████████| 234/234 [00:00<00:00, 437.26it/s]
2025-05-16:02:55:10,155 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 32%|███▏      | 71/223 [00:00<00:00, 709.70it/s] 65%|██████▌   | 146/223 [00:00<00:00, 727.78it/s] 99%|█████████▊| 220/223 [00:00<00:00, 732.25it/s]100%|██████████| 223/223 [00:00<00:00, 728.85it/s]
2025-05-16:02:55:10,470 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 67%|██████▋   | 74/110 [00:00<00:00, 738.89it/s]100%|██████████| 110/110 [00:00<00:00, 740.86it/s]
2025-05-16:02:55:10,623 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 37%|███▋      | 75/201 [00:00<00:00, 743.59it/s] 75%|███████▌  | 151/201 [00:00<00:00, 748.08it/s]100%|██████████| 201/201 [00:00<00:00, 748.78it/s]
2025-05-16:02:55:10,899 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 38%|███▊      | 75/198 [00:00<00:00, 748.43it/s] 76%|███████▌  | 150/198 [00:00<00:00, 744.68it/s]100%|██████████| 198/198 [00:00<00:00, 744.68it/s]
2025-05-16:02:55:11,173 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 31%|███       | 75/245 [00:00<00:00, 746.88it/s] 61%|██████    | 150/245 [00:00<00:00, 726.23it/s] 92%|█████████▏| 225/245 [00:00<00:00, 732.68it/s]100%|██████████| 245/245 [00:00<00:00, 734.03it/s]
2025-05-16:02:55:11,516 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 14%|█▍        | 75/545 [00:00<00:00, 740.64it/s] 28%|██▊       | 150/545 [00:00<00:00, 739.78it/s] 41%|████▏     | 225/545 [00:00<00:00, 742.69it/s] 55%|█████▌    | 301/545 [00:00<00:00, 746.76it/s] 69%|██████▉   | 376/545 [00:00<00:00, 746.89it/s] 83%|████████▎ | 451/545 [00:00<00:00, 745.77it/s] 97%|█████████▋| 526/545 [00:00<00:00, 745.39it/s]100%|██████████| 545/545 [00:00<00:00, 744.74it/s]
2025-05-16:02:55:12,268 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 737.35it/s]100%|██████████| 100/100 [00:00<00:00, 728.28it/s]
2025-05-16:02:55:12,410 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 19%|█▉        | 75/390 [00:00<00:00, 739.93it/s] 38%|███▊      | 149/390 [00:00<00:00, 739.48it/s] 57%|█████▋    | 224/390 [00:00<00:00, 743.21it/s] 77%|███████▋  | 299/390 [00:00<00:00, 743.06it/s] 96%|█████████▌| 374/390 [00:00<00:00, 744.76it/s]100%|██████████| 390/390 [00:00<00:00, 743.75it/s]
2025-05-16:02:55:12,949 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 32%|███▏      | 75/238 [00:00<00:00, 744.14it/s] 63%|██████▎   | 150/238 [00:00<00:00, 746.95it/s] 95%|█████████▍| 225/238 [00:00<00:00, 745.82it/s]100%|██████████| 238/238 [00:00<00:00, 745.14it/s]
2025-05-16:02:55:13,278 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 66%|██████▌   | 75/114 [00:00<00:00, 746.40it/s]100%|██████████| 114/114 [00:00<00:00, 752.23it/s]
2025-05-16:02:55:13,434 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 14%|█▍        | 87/612 [00:00<00:00, 862.94it/s] 28%|██▊       | 174/612 [00:00<00:00, 866.58it/s] 43%|████▎     | 261/612 [00:00<00:00, 858.85it/s] 57%|█████▋    | 348/612 [00:00<00:00, 860.09it/s] 71%|███████   | 435/612 [00:00<00:00, 819.61it/s] 85%|████████▍ | 518/612 [00:00<00:00, 795.36it/s] 98%|█████████▊| 598/612 [00:00<00:00, 783.00it/s]100%|██████████| 612/612 [00:00<00:00, 811.55it/s]
2025-05-16:02:55:14,209 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 52%|█████▏    | 68/131 [00:00<00:00, 679.05it/s]100%|██████████| 131/131 [00:00<00:00, 712.22it/s]
2025-05-16:02:55:14,398 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 39%|███▉      | 75/193 [00:00<00:00, 745.74it/s] 78%|███████▊  | 151/193 [00:00<00:00, 750.99it/s]100%|██████████| 193/193 [00:00<00:00, 749.89it/s]
2025-05-16:02:55:14,663 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  8%|▊         | 76/895 [00:00<00:01, 753.97it/s] 17%|█▋        | 153/895 [00:00<00:00, 759.46it/s] 26%|██▌       | 229/895 [00:00<00:00, 758.69it/s] 34%|███▍      | 305/895 [00:00<00:00, 752.53it/s] 43%|████▎     | 381/895 [00:00<00:00, 753.00it/s] 51%|█████     | 458/895 [00:00<00:00, 756.29it/s] 60%|█████▉    | 535/895 [00:00<00:00, 759.27it/s] 68%|██████▊   | 611/895 [00:00<00:00, 758.65it/s] 77%|███████▋  | 688/895 [00:00<00:00, 761.69it/s] 85%|████████▌ | 765/895 [00:01<00:00, 760.55it/s] 94%|█████████▍| 842/895 [00:01<00:00, 760.61it/s]100%|██████████| 895/895 [00:01<00:00, 759.23it/s]
2025-05-16:02:55:15,874 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 32%|███▏      | 76/237 [00:00<00:00, 756.11it/s] 65%|██████▍   | 153/237 [00:00<00:00, 760.96it/s] 97%|█████████▋| 230/237 [00:00<00:00, 761.31it/s]100%|██████████| 237/237 [00:00<00:00, 759.60it/s]
2025-05-16:02:55:16,196 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 45%|████▌     | 75/165 [00:00<00:00, 749.58it/s] 92%|█████████▏| 151/165 [00:00<00:00, 755.44it/s]100%|██████████| 165/165 [00:00<00:00, 753.66it/s]
2025-05-16:02:55:16,422 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 25%|██▍       | 77/311 [00:00<00:00, 764.42it/s] 50%|████▉     | 154/311 [00:00<00:00, 754.09it/s] 74%|███████▍  | 231/311 [00:00<00:00, 757.77it/s] 99%|█████████▉| 308/311 [00:00<00:00, 762.12it/s]100%|██████████| 311/311 [00:00<00:00, 760.21it/s]
2025-05-16:02:55:16,843 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 22%|██▏       | 77/346 [00:00<00:00, 764.11it/s] 45%|████▍     | 154/346 [00:00<00:00, 765.32it/s] 67%|██████▋   | 231/346 [00:00<00:00, 766.19it/s] 90%|█████████ | 313/346 [00:00<00:00, 786.72it/s]100%|██████████| 346/346 [00:00<00:00, 787.11it/s]
2025-05-16:02:55:17,296 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 43%|████▎     | 88/204 [00:00<00:00, 875.87it/s] 86%|████████▋ | 176/204 [00:00<00:00, 866.60it/s]100%|██████████| 204/204 [00:00<00:00, 868.22it/s]
2025-05-16:02:55:17,540 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 74%|███████▎  | 89/121 [00:00<00:00, 888.68it/s]100%|██████████| 121/121 [00:00<00:00, 887.10it/s]
2025-05-16:02:55:17,681 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  6%|▌         | 89/1534 [00:00<00:01, 889.70it/s] 12%|█▏        | 179/1534 [00:00<00:01, 890.39it/s] 18%|█▊        | 269/1534 [00:00<00:01, 891.50it/s] 23%|██▎       | 359/1534 [00:00<00:01, 877.38it/s] 29%|██▉       | 447/1534 [00:00<00:01, 808.86it/s] 34%|███▍      | 529/1534 [00:00<00:01, 776.14it/s] 40%|███▉      | 608/1534 [00:00<00:01, 770.62it/s] 45%|████▍     | 686/1534 [00:00<00:01, 763.62it/s] 50%|████▉     | 763/1534 [00:00<00:01, 748.05it/s] 55%|█████▍    | 838/1534 [00:01<00:00, 747.15it/s] 60%|█████▉    | 913/1534 [00:01<00:00, 747.11it/s] 64%|██████▍   | 988/1534 [00:01<00:00, 741.83it/s] 69%|██████▉   | 1063/1534 [00:01<00:00, 743.12it/s] 74%|███████▍  | 1138/1534 [00:01<00:00, 744.26it/s] 79%|███████▉  | 1214/1534 [00:01<00:00, 746.79it/s] 84%|████████▍ | 1289/1534 [00:01<00:00, 744.50it/s] 89%|████████▉ | 1365/1534 [00:01<00:00, 746.76it/s] 94%|█████████▍| 1441/1534 [00:01<00:00, 749.76it/s] 99%|█████████▉| 1517/1534 [00:01<00:00, 750.01it/s]100%|██████████| 1534/1534 [00:01<00:00, 768.91it/s]
2025-05-16:02:55:19,728 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 43%|████▎     | 74/171 [00:00<00:00, 730.23it/s] 87%|████████▋ | 149/171 [00:00<00:00, 741.15it/s]100%|██████████| 171/171 [00:00<00:00, 741.40it/s]
2025-05-16:02:55:19,966 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 70%|███████   | 76/108 [00:00<00:00, 757.97it/s]100%|██████████| 108/108 [00:00<00:00, 758.30it/s]
2025-05-16:02:55:20,114 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 60%|██████    | 76/126 [00:00<00:00, 758.72it/s]100%|██████████| 126/126 [00:00<00:00, 748.10it/s]
2025-05-16:02:55:20,288 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 23%|██▎       | 76/324 [00:00<00:00, 757.96it/s] 47%|████▋     | 152/324 [00:00<00:00, 280.83it/s] 70%|███████   | 228/324 [00:00<00:00, 394.04it/s] 94%|█████████▍| 304/324 [00:00<00:00, 485.99it/s]100%|██████████| 324/324 [00:00<00:00, 451.48it/s]
2025-05-16:02:55:21,018 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 46%|████▌     | 75/163 [00:00<00:00, 749.51it/s] 93%|█████████▎| 151/163 [00:00<00:00, 754.41it/s]100%|██████████| 163/163 [00:00<00:00, 753.86it/s]
2025-05-16:02:55:21,242 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<31:15:24,  2.00s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:02<34:02, 27.47it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:03<21:30, 43.42it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<17:04, 54.62it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<14:49, 62.87it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<13:27, 69.15it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:06<12:34, 73.95it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<11:56, 77.77it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<11:22, 81.53it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<10:54, 84.89it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:34, 87.48it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<10:16, 89.95it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:03, 91.81it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<09:48, 94.02it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:12<09:36, 95.80it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:12<09:25, 97.61it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:13<09:17, 98.97it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:14<09:06, 100.72it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:14<08:59, 101.96it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:15<08:53, 103.09it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:15<08:40, 105.44it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:16<08:30, 107.29it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:17<08:23, 108.86it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:17<08:14, 110.53it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:18<08:08, 111.90it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:18<08:03, 112.83it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:19<08:00, 113.48it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:19<07:54, 114.82it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:20<07:49, 115.91it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:20<07:45, 116.78it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:21<07:38, 118.24it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:22<07:33, 119.55it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:22<07:28, 120.56it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:23<07:22, 122.13it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:23<07:18, 123.09it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:24<07:11, 124.95it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:24<07:06, 126.18it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:25<07:02, 127.32it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:25<06:58, 128.27it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:26<06:55, 129.10it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:26<06:52, 129.81it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:26<06:49, 130.84it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:27<06:45, 131.81it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:27<06:43, 132.37it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:28<06:41, 132.93it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:28<06:38, 133.58it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:29<06:37, 133.98it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:29<06:35, 134.41it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:30<06:32, 135.41it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:30<06:29, 136.27it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:31<06:26, 137.01it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:31<06:24, 137.42it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:32<06:22, 138.06it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:32<06:21, 138.35it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:33<06:19, 138.72it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:33<06:18, 139.03it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:33<06:11, 141.53it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:34<06:06, 143.29it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:34<06:03, 144.48it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:35<05:59, 145.75it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:35<05:57, 146.47it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:36<05:54, 147.41it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:36<05:52, 148.11it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:36<05:48, 149.49it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:37<05:45, 150.71it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:37<05:43, 151.40it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:38<05:41, 151.98it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:38<05:39, 152.70it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:39<05:38, 152.93it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:39<05:37, 153.44it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:39<05:36, 153.82it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:40<05:34, 154.24it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:40<05:33, 154.67it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:41<05:29, 156.11it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:41<05:27, 156.95it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:41<05:25, 157.60it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:42<05:24, 158.19it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:42<05:22, 158.72it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:43<05:21, 159.10it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:43<05:19, 159.75it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:43<05:18, 160.24it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:44<05:17, 160.54it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:44<05:14, 161.77it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:45<05:12, 162.84it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:45<05:10, 163.52it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:45<05:09, 164.12it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:46<05:07, 164.71it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:46<05:04, 166.37it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:46<05:01, 167.65it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:47<04:59, 168.62it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:47<04:57, 169.52it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:48<04:56, 170.01it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:48<04:50, 173.04it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:48<04:46, 175.34it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:49<04:43, 176.70it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:49<04:41, 177.83it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:49<04:39, 178.68it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:50<04:38, 179.68it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:50<04:37, 180.11it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:50<04:35, 180.75it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:51<04:34, 181.13it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:51<04:33, 181.58it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:51<04:32, 182.30it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:52<04:31, 182.90it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:52<04:30, 182.92it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:53<04:28, 184.38it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:53<04:26, 185.00it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:53<04:25, 185.54it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:54<04:23, 186.81it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:54<04:21, 188.10it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:54<04:21, 187.92it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:55<04:19, 188.80it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:55<04:17, 189.96it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:55<04:17, 190.41it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:56<04:16, 190.61it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:56<04:15, 191.15it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:56<04:14, 191.62it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:57<04:17, 189.29it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:57<04:12, 192.30it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:57<04:10, 194.08it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [00:58<04:08, 195.00it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [00:58<04:06, 196.26it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [00:58<04:04, 197.58it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [00:58<03:57, 203.01it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [00:59<03:53, 206.58it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [00:59<03:49, 209.74it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [00:59<03:46, 212.29it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:00<03:44, 213.98it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:00<03:42, 215.44it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:00<03:40, 217.08it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:01<03:39, 217.88it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:01<03:38, 219.13it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:01<03:36, 220.38it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:01<03:35, 221.15it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:02<03:34, 221.56it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:02<03:33, 222.22it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:02<03:31, 224.47it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:03<03:29, 226.13it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:03<03:28, 226.79it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:03<03:27, 227.76it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:03<03:26, 229.09it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:04<03:25, 229.86it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:04<03:24, 230.23it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:04<03:22, 231.63it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:04<03:21, 232.79it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:05<03:20, 233.81it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:05<03:19, 234.35it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:05<03:19, 234.78it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:06<03:18, 234.83it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:06<03:17, 235.70it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:06<03:16, 237.58it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:06<03:14, 239.08it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:07<03:13, 240.27it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:07<03:12, 241.25it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:07<03:11, 241.24it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:07<03:11, 241.98it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:08<03:10, 242.37it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:08<03:09, 243.30it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:08<03:08, 243.99it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:08<03:07, 244.68it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:09<03:06, 246.82it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:09<03:04, 248.72it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:09<03:03, 249.59it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:09<03:02, 250.83it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:10<03:02, 250.74it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:10<03:00, 253.07it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:10<02:58, 254.52it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:10<02:57, 256.81it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:11<02:55, 258.42it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:11<02:54, 259.49it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:11<02:53, 260.56it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:11<02:52, 261.72it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:12<02:52, 262.40it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:12<02:51, 263.38it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:12<02:47, 268.32it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:12<02:45, 272.05it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:13<02:43, 274.21it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:13<02:42, 276.42it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:13<02:40, 278.13it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:13<02:39, 279.82it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:13<02:38, 281.06it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:14<02:38, 282.10it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:14<02:37, 282.90it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:14<02:36, 284.20it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:14<02:34, 287.73it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:15<02:32, 290.18it/s]Running loglikelihood requests:  21%|██        | 11905/56168 [01:15<02:31, 291.46it/s]Running loglikelihood requests:  21%|██▏       | 11969/56168 [01:15<02:30, 293.01it/s]Running loglikelihood requests:  21%|██▏       | 12033/56168 [01:15<02:29, 294.57it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [01:15<02:29, 294.98it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [01:16<02:28, 295.99it/s]Running loglikelihood requests:  22%|██▏       | 12225/56168 [01:16<02:28, 296.41it/s]Running loglikelihood requests:  22%|██▏       | 12289/56168 [01:16<02:27, 296.93it/s]Running loglikelihood requests:  22%|██▏       | 12353/56168 [01:16<02:27, 297.57it/s]Running loglikelihood requests:  22%|██▏       | 12417/56168 [01:17<02:26, 297.63it/s]Running loglikelihood requests:  22%|██▏       | 12481/56168 [01:17<02:26, 298.29it/s]Running loglikelihood requests:  22%|██▏       | 12545/56168 [01:17<02:25, 299.20it/s]Running loglikelihood requests:  22%|██▏       | 12609/56168 [01:17<02:25, 299.32it/s]Running loglikelihood requests:  23%|██▎       | 12673/56168 [01:17<02:25, 299.50it/s]Running loglikelihood requests:  23%|██▎       | 12737/56168 [01:18<02:24, 300.96it/s]Running loglikelihood requests:  23%|██▎       | 12801/56168 [01:18<02:23, 302.21it/s]Running loglikelihood requests:  23%|██▎       | 12865/56168 [01:18<02:23, 302.03it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [01:18<02:22, 303.15it/s]Running loglikelihood requests:  23%|██▎       | 12993/56168 [01:18<02:22, 302.88it/s]Running loglikelihood requests:  23%|██▎       | 13057/56168 [01:19<02:21, 303.62it/s]Running loglikelihood requests:  23%|██▎       | 13121/56168 [01:19<02:21, 304.29it/s]Running loglikelihood requests:  23%|██▎       | 13185/56168 [01:19<02:21, 304.63it/s]Running loglikelihood requests:  24%|██▎       | 13249/56168 [01:19<02:20, 305.47it/s]Running loglikelihood requests:  24%|██▎       | 13313/56168 [01:19<02:20, 305.71it/s]Running loglikelihood requests:  24%|██▍       | 13377/56168 [01:20<02:20, 305.56it/s]Running loglikelihood requests:  24%|██▍       | 13441/56168 [01:20<02:19, 306.48it/s]Running loglikelihood requests:  24%|██▍       | 13505/56168 [01:20<02:19, 306.29it/s]Running loglikelihood requests:  24%|██▍       | 13569/56168 [01:20<02:19, 306.16it/s]Running loglikelihood requests:  24%|██▍       | 13633/56168 [01:21<02:18, 307.00it/s]Running loglikelihood requests:  24%|██▍       | 13697/56168 [01:21<02:18, 306.58it/s]Running loglikelihood requests:  24%|██▍       | 13761/56168 [01:21<02:18, 306.30it/s]Running loglikelihood requests:  25%|██▍       | 13825/56168 [01:21<02:18, 306.05it/s]Running loglikelihood requests:  25%|██▍       | 13889/56168 [01:21<02:18, 306.28it/s]Running loglikelihood requests:  25%|██▍       | 13953/56168 [01:22<02:17, 307.17it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [01:22<02:17, 307.06it/s]Running loglikelihood requests:  25%|██▌       | 14081/56168 [01:22<02:16, 307.33it/s]Running loglikelihood requests:  25%|██▌       | 14145/56168 [01:22<02:16, 307.22it/s]Running loglikelihood requests:  25%|██▌       | 14209/56168 [01:22<02:16, 307.68it/s]Running loglikelihood requests:  25%|██▌       | 14273/56168 [01:23<02:16, 308.02it/s]Running loglikelihood requests:  26%|██▌       | 14337/56168 [01:23<02:14, 310.50it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [01:23<02:13, 312.41it/s]Running loglikelihood requests:  26%|██▌       | 14465/56168 [01:23<02:13, 313.34it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [01:23<02:12, 314.99it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [01:24<02:11, 315.98it/s]Running loglikelihood requests:  26%|██▌       | 14657/56168 [01:24<02:11, 316.58it/s]Running loglikelihood requests:  26%|██▌       | 14721/56168 [01:24<02:10, 317.32it/s]Running loglikelihood requests:  26%|██▋       | 14785/56168 [01:24<02:10, 318.27it/s]Running loglikelihood requests:  26%|██▋       | 14849/56168 [01:24<02:09, 318.62it/s]Running loglikelihood requests:  27%|██▋       | 14913/56168 [01:25<02:09, 318.68it/s]Running loglikelihood requests:  27%|██▋       | 14977/56168 [01:25<02:08, 319.33it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [01:25<02:08, 319.46it/s]Running loglikelihood requests:  27%|██▋       | 15105/56168 [01:25<02:08, 319.57it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [01:25<02:08, 319.42it/s]Running loglikelihood requests:  27%|██▋       | 15233/56168 [01:26<02:08, 319.15it/s]Running loglikelihood requests:  27%|██▋       | 15297/56168 [01:26<02:08, 318.52it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [01:26<02:07, 319.07it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [01:26<02:07, 319.54it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [01:26<02:07, 319.99it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [01:27<02:06, 320.14it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [01:27<02:06, 320.29it/s]Running loglikelihood requests:  28%|██▊       | 15681/56168 [01:27<02:06, 320.25it/s]Running loglikelihood requests:  28%|██▊       | 15745/56168 [01:27<02:06, 320.53it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [01:27<02:05, 320.52it/s]Running loglikelihood requests:  28%|██▊       | 15873/56168 [01:28<02:06, 319.73it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [01:28<02:05, 319.48it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [01:28<02:05, 319.62it/s]Running loglikelihood requests:  29%|██▊       | 16065/56168 [01:28<02:05, 320.26it/s]Running loglikelihood requests:  29%|██▊       | 16129/56168 [01:28<02:04, 320.92it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [01:29<02:04, 322.03it/s]Running loglikelihood requests:  29%|██▉       | 16257/56168 [01:29<02:03, 322.49it/s]Running loglikelihood requests:  29%|██▉       | 16321/56168 [01:29<02:03, 322.18it/s]Running loglikelihood requests:  29%|██▉       | 16385/56168 [01:29<02:03, 322.10it/s]Running loglikelihood requests:  29%|██▉       | 16453/56168 [01:29<02:00, 328.42it/s]Running loglikelihood requests:  29%|██▉       | 16517/56168 [01:30<02:01, 327.41it/s]Running loglikelihood requests:  30%|██▉       | 16581/56168 [01:30<02:01, 325.55it/s]Running loglikelihood requests:  30%|██▉       | 16645/56168 [01:30<02:01, 324.49it/s]Running loglikelihood requests:  30%|██▉       | 16709/56168 [01:30<02:02, 323.25it/s]Running loglikelihood requests:  30%|██▉       | 16773/56168 [01:30<02:01, 323.24it/s]Running loglikelihood requests:  30%|██▉       | 16837/56168 [01:31<02:01, 324.03it/s]Running loglikelihood requests:  30%|███       | 16901/56168 [01:31<02:01, 323.80it/s]Running loglikelihood requests:  30%|███       | 16965/56168 [01:31<02:01, 323.82it/s]Running loglikelihood requests:  30%|███       | 17029/56168 [01:31<02:00, 323.60it/s]Running loglikelihood requests:  30%|███       | 17093/56168 [01:31<02:00, 323.15it/s]Running loglikelihood requests:  31%|███       | 17157/56168 [01:32<01:59, 327.54it/s]Running loglikelihood requests:  31%|███       | 17221/56168 [01:32<01:57, 330.36it/s]Running loglikelihood requests:  31%|███       | 17285/56168 [01:32<01:56, 333.12it/s]Running loglikelihood requests:  31%|███       | 17349/56168 [01:32<01:55, 335.93it/s]Running loglikelihood requests:  31%|███       | 17413/56168 [01:32<01:54, 337.18it/s]Running loglikelihood requests:  31%|███       | 17477/56168 [01:33<01:54, 337.33it/s]Running loglikelihood requests:  31%|███       | 17541/56168 [01:33<01:54, 338.38it/s]Running loglikelihood requests:  31%|███▏      | 17605/56168 [01:33<01:53, 339.65it/s]Running loglikelihood requests:  31%|███▏      | 17669/56168 [01:33<01:53, 339.68it/s]Running loglikelihood requests:  32%|███▏      | 17733/56168 [01:33<01:52, 340.27it/s]Running loglikelihood requests:  32%|███▏      | 17797/56168 [01:33<01:52, 340.55it/s]Running loglikelihood requests:  32%|███▏      | 17861/56168 [01:34<01:52, 340.62it/s]Running loglikelihood requests:  32%|███▏      | 17925/56168 [01:34<01:52, 341.12it/s]Running loglikelihood requests:  32%|███▏      | 17989/56168 [01:34<01:51, 341.70it/s]Running loglikelihood requests:  32%|███▏      | 18053/56168 [01:34<01:51, 342.05it/s]Running loglikelihood requests:  32%|███▏      | 18117/56168 [01:34<01:51, 341.99it/s]Running loglikelihood requests:  32%|███▏      | 18181/56168 [01:35<01:51, 341.74it/s]Running loglikelihood requests:  32%|███▏      | 18245/56168 [01:35<01:50, 342.19it/s]Running loglikelihood requests:  33%|███▎      | 18309/56168 [01:35<01:50, 343.24it/s]Running loglikelihood requests:  33%|███▎      | 18373/56168 [01:35<01:50, 342.81it/s]Running loglikelihood requests:  33%|███▎      | 18437/56168 [01:35<01:50, 342.42it/s]Running loglikelihood requests:  33%|███▎      | 18501/56168 [01:36<01:50, 342.01it/s]Running loglikelihood requests:  33%|███▎      | 18565/56168 [01:36<01:50, 341.69it/s]Running loglikelihood requests:  33%|███▎      | 18629/56168 [01:36<01:49, 342.36it/s]Running loglikelihood requests:  33%|███▎      | 18693/56168 [01:36<01:49, 342.62it/s]Running loglikelihood requests:  33%|███▎      | 18757/56168 [01:36<01:48, 343.70it/s]Running loglikelihood requests:  34%|███▎      | 18821/56168 [01:36<01:48, 344.44it/s]Running loglikelihood requests:  34%|███▎      | 18885/56168 [01:37<01:48, 344.87it/s]Running loglikelihood requests:  34%|███▎      | 18949/56168 [01:37<01:48, 344.55it/s]Running loglikelihood requests:  34%|███▍      | 19013/56168 [01:37<01:47, 344.21it/s]Running loglikelihood requests:  34%|███▍      | 19077/56168 [01:37<01:47, 344.45it/s]Running loglikelihood requests:  34%|███▍      | 19141/56168 [01:37<01:47, 345.10it/s]Running loglikelihood requests:  34%|███▍      | 19205/56168 [01:38<01:46, 345.88it/s]Running loglikelihood requests:  34%|███▍      | 19269/56168 [01:38<01:46, 346.30it/s]Running loglikelihood requests:  34%|███▍      | 19333/56168 [01:38<01:46, 347.05it/s]Running loglikelihood requests:  35%|███▍      | 19397/56168 [01:38<01:46, 346.78it/s]Running loglikelihood requests:  35%|███▍      | 19461/56168 [01:38<01:45, 348.65it/s]Running loglikelihood requests:  35%|███▍      | 19525/56168 [01:38<01:44, 349.73it/s]Running loglikelihood requests:  35%|███▍      | 19589/56168 [01:39<01:44, 350.60it/s]Running loglikelihood requests:  35%|███▍      | 19653/56168 [01:39<01:43, 352.08it/s]Running loglikelihood requests:  35%|███▌      | 19717/56168 [01:39<01:43, 352.64it/s]Running loglikelihood requests:  35%|███▌      | 19781/56168 [01:39<01:42, 354.20it/s]Running loglikelihood requests:  35%|███▌      | 19845/56168 [01:39<01:42, 354.70it/s]Running loglikelihood requests:  35%|███▌      | 19909/56168 [01:40<01:41, 355.58it/s]Running loglikelihood requests:  36%|███▌      | 19973/56168 [01:40<01:41, 357.51it/s]Running loglikelihood requests:  36%|███▌      | 20041/56168 [01:40<01:39, 362.70it/s]Running loglikelihood requests:  36%|███▌      | 20105/56168 [01:40<01:39, 361.31it/s]Running loglikelihood requests:  36%|███▌      | 20169/56168 [01:40<01:40, 359.89it/s]Running loglikelihood requests:  36%|███▌      | 20233/56168 [01:40<01:39, 359.37it/s]Running loglikelihood requests:  36%|███▌      | 20297/56168 [01:41<01:39, 359.08it/s]Running loglikelihood requests:  36%|███▋      | 20361/56168 [01:41<01:39, 359.19it/s]Running loglikelihood requests:  36%|███▋      | 20425/56168 [01:41<01:39, 359.46it/s]Running loglikelihood requests:  36%|███▋      | 20489/56168 [01:41<01:39, 358.31it/s]Running loglikelihood requests:  37%|███▋      | 20553/56168 [01:41<01:39, 359.01it/s]Running loglikelihood requests:  37%|███▋      | 20617/56168 [01:42<01:38, 359.59it/s]Running loglikelihood requests:  37%|███▋      | 20681/56168 [01:42<01:38, 360.87it/s]Running loglikelihood requests:  37%|███▋      | 20745/56168 [01:42<01:38, 360.97it/s]Running loglikelihood requests:  37%|███▋      | 20809/56168 [01:42<01:38, 360.72it/s]Running loglikelihood requests:  37%|███▋      | 20873/56168 [01:42<01:37, 360.69it/s]Running loglikelihood requests:  37%|███▋      | 20937/56168 [01:42<01:37, 361.44it/s]Running loglikelihood requests:  37%|███▋      | 21001/56168 [01:43<01:37, 360.54it/s]Running loglikelihood requests:  38%|███▊      | 21065/56168 [01:43<01:37, 360.00it/s]Running loglikelihood requests:  38%|███▊      | 21129/56168 [01:43<01:37, 360.87it/s]Running loglikelihood requests:  38%|███▊      | 21193/56168 [01:43<01:36, 361.66it/s]Running loglikelihood requests:  38%|███▊      | 21257/56168 [01:43<01:36, 361.49it/s]Running loglikelihood requests:  38%|███▊      | 21321/56168 [01:43<01:36, 361.62it/s]Running loglikelihood requests:  38%|███▊      | 21385/56168 [01:44<01:35, 362.92it/s]Running loglikelihood requests:  38%|███▊      | 21449/56168 [01:44<01:35, 364.32it/s]Running loglikelihood requests:  38%|███▊      | 21513/56168 [01:44<01:34, 365.07it/s]Running loglikelihood requests:  38%|███▊      | 21577/56168 [01:44<01:34, 365.21it/s]Running loglikelihood requests:  39%|███▊      | 21641/56168 [01:44<01:34, 366.41it/s]Running loglikelihood requests:  39%|███▊      | 21705/56168 [01:45<01:33, 367.91it/s]Running loglikelihood requests:  39%|███▉      | 21769/56168 [01:45<01:33, 368.72it/s]Running loglikelihood requests:  39%|███▉      | 21833/56168 [01:45<01:33, 368.95it/s]Running loglikelihood requests:  39%|███▉      | 21897/56168 [01:45<01:32, 368.94it/s]Running loglikelihood requests:  39%|███▉      | 21961/56168 [01:45<01:32, 370.33it/s]Running loglikelihood requests:  39%|███▉      | 22025/56168 [01:45<01:32, 370.27it/s]Running loglikelihood requests:  39%|███▉      | 22089/56168 [01:46<01:31, 370.55it/s]Running loglikelihood requests:  39%|███▉      | 22153/56168 [01:46<01:32, 369.64it/s]Running loglikelihood requests:  40%|███▉      | 22217/56168 [01:46<01:31, 369.91it/s]Running loglikelihood requests:  40%|███▉      | 22281/56168 [01:46<01:31, 370.33it/s]Running loglikelihood requests:  40%|███▉      | 22345/56168 [01:46<01:31, 370.13it/s]Running loglikelihood requests:  40%|███▉      | 22409/56168 [01:46<01:31, 370.35it/s]Running loglikelihood requests:  40%|████      | 22473/56168 [01:47<01:31, 369.95it/s]Running loglikelihood requests:  40%|████      | 22537/56168 [01:47<01:30, 370.47it/s]Running loglikelihood requests:  40%|████      | 22601/56168 [01:47<01:30, 370.20it/s]Running loglikelihood requests:  40%|████      | 22665/56168 [01:47<01:30, 371.80it/s]Running loglikelihood requests:  40%|████      | 22729/56168 [01:47<01:30, 371.29it/s]Running loglikelihood requests:  41%|████      | 22793/56168 [01:47<01:29, 371.56it/s]Running loglikelihood requests:  41%|████      | 22857/56168 [01:48<01:29, 372.02it/s]Running loglikelihood requests:  41%|████      | 22921/56168 [01:48<01:29, 372.65it/s]Running loglikelihood requests:  41%|████      | 22985/56168 [01:48<01:29, 371.94it/s]Running loglikelihood requests:  41%|████      | 23049/56168 [01:48<01:28, 372.29it/s]Running loglikelihood requests:  41%|████      | 23113/56168 [01:48<01:28, 371.69it/s]Running loglikelihood requests:  41%|████▏     | 23177/56168 [01:48<01:28, 372.65it/s]Running loglikelihood requests:  41%|████▏     | 23241/56168 [01:49<01:28, 371.44it/s]Running loglikelihood requests:  41%|████▏     | 23305/56168 [01:49<01:28, 371.78it/s]Running loglikelihood requests:  42%|████▏     | 23369/56168 [01:49<01:28, 371.11it/s]Running loglikelihood requests:  42%|████▏     | 23433/56168 [01:49<01:27, 372.23it/s]Running loglikelihood requests:  42%|████▏     | 23497/56168 [01:49<01:27, 372.44it/s]Running loglikelihood requests:  42%|████▏     | 23561/56168 [01:50<01:27, 372.67it/s]Running loglikelihood requests:  42%|████▏     | 23625/56168 [01:50<01:27, 373.45it/s]Running loglikelihood requests:  42%|████▏     | 23689/56168 [01:50<01:27, 373.19it/s]Running loglikelihood requests:  42%|████▏     | 23753/56168 [01:50<01:24, 385.51it/s]Running loglikelihood requests:  42%|████▏     | 23817/56168 [01:50<01:21, 395.13it/s]Running loglikelihood requests:  43%|████▎     | 23881/56168 [01:50<01:20, 401.94it/s]Running loglikelihood requests:  43%|████▎     | 23945/56168 [01:50<01:19, 407.10it/s]Running loglikelihood requests:  43%|████▎     | 24009/56168 [01:51<01:18, 410.21it/s]Running loglikelihood requests:  43%|████▎     | 24073/56168 [01:51<01:17, 411.67it/s]Running loglikelihood requests:  43%|████▎     | 24137/56168 [01:51<01:17, 415.12it/s]Running loglikelihood requests:  43%|████▎     | 24201/56168 [01:51<01:16, 416.17it/s]Running loglikelihood requests:  43%|████▎     | 24265/56168 [01:51<01:16, 417.45it/s]Running loglikelihood requests:  43%|████▎     | 24329/56168 [01:51<01:16, 418.46it/s]Running loglikelihood requests:  43%|████▎     | 24393/56168 [01:52<01:15, 419.31it/s]Running loglikelihood requests:  44%|████▎     | 24457/56168 [01:52<01:15, 419.55it/s]Running loglikelihood requests:  44%|████▎     | 24521/56168 [01:52<01:15, 421.29it/s]Running loglikelihood requests:  44%|████▍     | 24585/56168 [01:52<01:14, 421.13it/s]Running loglikelihood requests:  44%|████▍     | 24649/56168 [01:52<01:14, 421.91it/s]Running loglikelihood requests:  44%|████▍     | 24713/56168 [01:52<01:14, 420.73it/s]Running loglikelihood requests:  44%|████▍     | 24777/56168 [01:52<01:14, 421.12it/s]Running loglikelihood requests:  44%|████▍     | 24841/56168 [01:53<01:14, 421.00it/s]Running loglikelihood requests:  44%|████▍     | 24905/56168 [01:53<01:13, 423.15it/s]Running loglikelihood requests:  44%|████▍     | 24969/56168 [01:53<01:13, 423.37it/s]Running loglikelihood requests:  45%|████▍     | 25033/56168 [01:53<01:13, 424.28it/s]Running loglikelihood requests:  45%|████▍     | 25097/56168 [01:53<01:13, 424.88it/s]Running loglikelihood requests:  45%|████▍     | 25161/56168 [01:53<01:12, 425.28it/s]Running loglikelihood requests:  45%|████▍     | 25225/56168 [01:53<01:12, 425.91it/s]Running loglikelihood requests:  45%|████▌     | 25289/56168 [01:54<01:12, 425.05it/s]Running loglikelihood requests:  45%|████▌     | 25353/56168 [01:54<01:12, 426.40it/s]Running loglikelihood requests:  45%|████▌     | 25417/56168 [01:54<01:12, 426.30it/s]Running loglikelihood requests:  45%|████▌     | 25481/56168 [01:54<01:11, 428.29it/s]Running loglikelihood requests:  45%|████▌     | 25545/56168 [01:54<01:11, 428.16it/s]Running loglikelihood requests:  46%|████▌     | 25609/56168 [01:54<01:11, 428.38it/s]Running loglikelihood requests:  46%|████▌     | 25673/56168 [01:55<01:10, 430.02it/s]Running loglikelihood requests:  46%|████▌     | 25737/56168 [01:55<01:10, 429.92it/s]Running loglikelihood requests:  46%|████▌     | 25801/56168 [01:55<01:10, 430.14it/s]Running loglikelihood requests:  46%|████▌     | 25865/56168 [01:55<01:10, 431.84it/s]Running loglikelihood requests:  46%|████▌     | 25929/56168 [01:55<01:10, 431.11it/s]Running loglikelihood requests:  46%|████▋     | 25993/56168 [01:55<01:10, 430.78it/s]Running loglikelihood requests:  46%|████▋     | 26057/56168 [01:55<01:09, 430.45it/s]Running loglikelihood requests:  47%|████▋     | 26121/56168 [01:56<01:09, 429.85it/s]Running loglikelihood requests:  47%|████▋     | 26185/56168 [01:56<01:09, 429.92it/s]Running loglikelihood requests:  47%|████▋     | 26249/56168 [01:56<01:09, 430.44it/s]Running loglikelihood requests:  47%|████▋     | 26313/56168 [01:56<01:09, 429.05it/s]Running loglikelihood requests:  47%|████▋     | 26377/56168 [01:56<01:09, 431.58it/s]Running loglikelihood requests:  47%|████▋     | 26441/56168 [01:56<01:08, 432.02it/s]Running loglikelihood requests:  47%|████▋     | 26505/56168 [01:56<01:08, 432.49it/s]Running loglikelihood requests:  47%|████▋     | 26569/56168 [01:57<01:08, 433.17it/s]Running loglikelihood requests:  47%|████▋     | 26633/56168 [01:57<01:08, 433.08it/s]Running loglikelihood requests:  48%|████▊     | 26697/56168 [01:57<01:08, 432.92it/s]Running loglikelihood requests:  48%|████▊     | 26761/56168 [01:57<01:07, 433.68it/s]Running loglikelihood requests:  48%|████▊     | 26825/56168 [01:57<01:07, 434.04it/s]Running loglikelihood requests:  48%|████▊     | 26889/56168 [01:57<01:07, 436.18it/s]Running loglikelihood requests:  48%|████▊     | 26953/56168 [01:57<01:06, 437.49it/s]Running loglikelihood requests:  48%|████▊     | 27017/56168 [01:58<01:06, 437.46it/s]Running loglikelihood requests:  48%|████▊     | 27081/56168 [01:58<01:06, 438.21it/s]Running loglikelihood requests:  48%|████▊     | 27145/56168 [01:58<01:06, 439.16it/s]Running loglikelihood requests:  48%|████▊     | 27209/56168 [01:58<01:05, 439.69it/s]Running loglikelihood requests:  49%|████▊     | 27273/56168 [01:58<01:05, 440.69it/s]Running loglikelihood requests:  49%|████▊     | 27337/56168 [01:58<01:05, 441.40it/s]Running loglikelihood requests:  49%|████▉     | 27401/56168 [01:59<01:05, 440.64it/s]Running loglikelihood requests:  49%|████▉     | 27465/56168 [01:59<01:05, 439.82it/s]Running loglikelihood requests:  49%|████▉     | 27529/56168 [01:59<01:05, 439.91it/s]Running loglikelihood requests:  49%|████▉     | 27593/56168 [01:59<01:04, 440.97it/s]Running loglikelihood requests:  49%|████▉     | 27657/56168 [01:59<01:04, 442.32it/s]Running loglikelihood requests:  49%|████▉     | 27721/56168 [01:59<01:04, 444.02it/s]Running loglikelihood requests:  49%|████▉     | 27785/56168 [01:59<01:03, 444.04it/s]Running loglikelihood requests:  50%|████▉     | 27849/56168 [02:00<01:03, 442.94it/s]Running loglikelihood requests:  50%|████▉     | 27913/56168 [02:00<01:03, 442.51it/s]Running loglikelihood requests:  50%|████▉     | 27977/56168 [02:00<01:03, 443.18it/s]Running loglikelihood requests:  50%|████▉     | 28041/56168 [02:00<01:03, 445.12it/s]Running loglikelihood requests:  50%|█████     | 28105/56168 [02:00<01:02, 446.03it/s]Running loglikelihood requests:  50%|█████     | 28169/56168 [02:00<01:02, 446.05it/s]Running loglikelihood requests:  50%|█████     | 28233/56168 [02:00<01:02, 446.42it/s]Running loglikelihood requests:  50%|█████     | 28297/56168 [02:01<01:02, 447.04it/s]Running loglikelihood requests:  50%|█████     | 28361/56168 [02:01<01:02, 447.24it/s]Running loglikelihood requests:  51%|█████     | 28425/56168 [02:01<01:02, 447.04it/s]Running loglikelihood requests:  51%|█████     | 28489/56168 [02:01<01:01, 447.05it/s]Running loglikelihood requests:  51%|█████     | 28553/56168 [02:01<01:01, 446.01it/s]Running loglikelihood requests:  51%|█████     | 28617/56168 [02:01<01:01, 444.56it/s]Running loglikelihood requests:  51%|█████     | 28681/56168 [02:01<01:01, 445.45it/s]Running loglikelihood requests:  51%|█████     | 28745/56168 [02:02<01:01, 446.04it/s]Running loglikelihood requests:  51%|█████▏    | 28809/56168 [02:02<01:01, 446.30it/s]Running loglikelihood requests:  51%|█████▏    | 28873/56168 [02:02<01:01, 446.74it/s]Running loglikelihood requests:  52%|█████▏    | 28937/56168 [02:02<01:00, 447.20it/s]Running loglikelihood requests:  52%|█████▏    | 29001/56168 [02:02<01:00, 448.42it/s]Running loglikelihood requests:  52%|█████▏    | 29065/56168 [02:02<01:00, 449.69it/s]Running loglikelihood requests:  52%|█████▏    | 29129/56168 [02:02<01:00, 449.85it/s]Running loglikelihood requests:  52%|█████▏    | 29193/56168 [02:03<00:59, 450.98it/s]Running loglikelihood requests:  52%|█████▏    | 29257/56168 [02:03<00:59, 451.82it/s]Running loglikelihood requests:  52%|█████▏    | 29321/56168 [02:03<00:59, 450.32it/s]Running loglikelihood requests:  52%|█████▏    | 29385/56168 [02:03<00:59, 449.42it/s]Running loglikelihood requests:  52%|█████▏    | 29449/56168 [02:03<00:59, 449.65it/s]Running loglikelihood requests:  53%|█████▎    | 29513/56168 [02:03<00:59, 449.21it/s]Running loglikelihood requests:  53%|█████▎    | 29577/56168 [02:03<00:59, 449.65it/s]Running loglikelihood requests:  53%|█████▎    | 29641/56168 [02:04<00:59, 449.17it/s]Running loglikelihood requests:  53%|█████▎    | 29705/56168 [02:04<00:58, 449.50it/s]Running loglikelihood requests:  53%|█████▎    | 29769/56168 [02:04<00:58, 448.72it/s]Running loglikelihood requests:  53%|█████▎    | 29833/56168 [02:04<00:58, 449.35it/s]Running loglikelihood requests:  53%|█████▎    | 29901/56168 [02:04<00:57, 457.97it/s]Running loglikelihood requests:  53%|█████▎    | 29965/56168 [02:04<00:57, 456.37it/s]Running loglikelihood requests:  53%|█████▎    | 30029/56168 [02:04<00:57, 453.31it/s]Running loglikelihood requests:  54%|█████▎    | 30093/56168 [02:05<00:57, 453.31it/s]Running loglikelihood requests:  54%|█████▎    | 30157/56168 [02:05<00:57, 451.13it/s]Running loglikelihood requests:  54%|█████▍    | 30221/56168 [02:05<00:57, 449.96it/s]Running loglikelihood requests:  54%|█████▍    | 30285/56168 [02:05<00:57, 450.85it/s]Running loglikelihood requests:  54%|█████▍    | 30349/56168 [02:05<00:57, 451.13it/s]Running loglikelihood requests:  54%|█████▍    | 30413/56168 [02:05<00:57, 450.36it/s]Running loglikelihood requests:  54%|█████▍    | 30477/56168 [02:05<00:56, 450.80it/s]Running loglikelihood requests:  54%|█████▍    | 30545/56168 [02:06<00:55, 459.17it/s]Running loglikelihood requests:  54%|█████▍    | 30609/56168 [02:06<00:55, 457.60it/s]Running loglikelihood requests:  55%|█████▍    | 30673/56168 [02:06<00:55, 455.51it/s]Running loglikelihood requests:  55%|█████▍    | 30737/56168 [02:06<00:55, 460.51it/s]Running loglikelihood requests:  55%|█████▍    | 30801/56168 [02:06<00:54, 464.80it/s]Running loglikelihood requests:  55%|█████▍    | 30865/56168 [02:06<00:53, 469.77it/s]Running loglikelihood requests:  55%|█████▌    | 30929/56168 [02:06<00:53, 471.63it/s]Running loglikelihood requests:  55%|█████▌    | 30993/56168 [02:06<00:53, 473.31it/s]Running loglikelihood requests:  55%|█████▌    | 31057/56168 [02:07<00:53, 473.14it/s]Running loglikelihood requests:  55%|█████▌    | 31121/56168 [02:07<00:52, 474.32it/s]Running loglikelihood requests:  56%|█████▌    | 31185/56168 [02:07<00:52, 474.67it/s]Running loglikelihood requests:  56%|█████▌    | 31249/56168 [02:07<00:52, 477.10it/s]Running loglikelihood requests:  56%|█████▌    | 31313/56168 [02:07<00:52, 477.75it/s]Running loglikelihood requests:  56%|█████▌    | 31377/56168 [02:07<00:51, 477.75it/s]Running loglikelihood requests:  56%|█████▌    | 31441/56168 [02:07<00:51, 476.24it/s]Running loglikelihood requests:  56%|█████▌    | 31505/56168 [02:08<00:51, 477.39it/s]Running loglikelihood requests:  56%|█████▌    | 31569/56168 [02:08<00:51, 477.33it/s]Running loglikelihood requests:  56%|█████▋    | 31633/56168 [02:08<00:51, 476.89it/s]Running loglikelihood requests:  56%|█████▋    | 31697/56168 [02:08<00:51, 476.65it/s]Running loglikelihood requests:  57%|█████▋    | 31761/56168 [02:08<00:51, 475.96it/s]Running loglikelihood requests:  57%|█████▋    | 31825/56168 [02:08<00:51, 475.84it/s]Running loglikelihood requests:  57%|█████▋    | 31889/56168 [02:08<00:50, 477.98it/s]Running loglikelihood requests:  57%|█████▋    | 31953/56168 [02:08<00:50, 479.20it/s]Running loglikelihood requests:  57%|█████▋    | 32017/56168 [02:09<00:50, 478.34it/s]Running loglikelihood requests:  57%|█████▋    | 32081/56168 [02:09<00:50, 477.83it/s]Running loglikelihood requests:  57%|█████▋    | 32145/56168 [02:09<00:50, 476.89it/s]Running loglikelihood requests:  57%|█████▋    | 32209/56168 [02:09<00:50, 477.49it/s]Running loglikelihood requests:  57%|█████▋    | 32273/56168 [02:09<00:50, 476.48it/s]Running loglikelihood requests:  58%|█████▊    | 32337/56168 [02:09<00:50, 476.01it/s]Running loglikelihood requests:  58%|█████▊    | 32401/56168 [02:09<00:49, 476.72it/s]Running loglikelihood requests:  58%|█████▊    | 32465/56168 [02:10<00:49, 476.43it/s]Running loglikelihood requests:  58%|█████▊    | 32529/56168 [02:10<00:49, 476.85it/s]Running loglikelihood requests:  58%|█████▊    | 32593/56168 [02:10<00:49, 477.37it/s]Running loglikelihood requests:  58%|█████▊    | 32657/56168 [02:10<00:49, 477.08it/s]Running loglikelihood requests:  58%|█████▊    | 32721/56168 [02:10<00:49, 477.45it/s]Running loglikelihood requests:  58%|█████▊    | 32785/56168 [02:10<00:48, 479.05it/s]Running loglikelihood requests:  58%|█████▊    | 32849/56168 [02:10<00:48, 480.27it/s]Running loglikelihood requests:  59%|█████▊    | 32913/56168 [02:10<00:48, 482.09it/s]Running loglikelihood requests:  59%|█████▊    | 32977/56168 [02:11<00:48, 480.25it/s]Running loglikelihood requests:  59%|█████▉    | 33041/56168 [02:11<00:48, 480.87it/s]Running loglikelihood requests:  59%|█████▉    | 33105/56168 [02:11<00:48, 480.31it/s]Running loglikelihood requests:  59%|█████▉    | 33169/56168 [02:11<00:47, 480.74it/s]Running loglikelihood requests:  59%|█████▉    | 33233/56168 [02:11<00:47, 481.15it/s]Running loglikelihood requests:  59%|█████▉    | 33297/56168 [02:11<00:47, 479.73it/s]Running loglikelihood requests:  59%|█████▉    | 33361/56168 [02:11<00:47, 480.49it/s]Running loglikelihood requests:  60%|█████▉    | 33425/56168 [02:12<00:47, 479.78it/s]Running loglikelihood requests:  60%|█████▉    | 33489/56168 [02:12<00:47, 479.08it/s]Running loglikelihood requests:  60%|█████▉    | 33553/56168 [02:12<00:47, 480.32it/s]Running loglikelihood requests:  60%|█████▉    | 33617/56168 [02:12<00:47, 479.03it/s]Running loglikelihood requests:  60%|█████▉    | 33681/56168 [02:12<00:46, 479.86it/s]Running loglikelihood requests:  60%|██████    | 33745/56168 [02:12<00:46, 481.03it/s]Running loglikelihood requests:  60%|██████    | 33809/56168 [02:12<00:46, 482.36it/s]Running loglikelihood requests:  60%|██████    | 33873/56168 [02:12<00:46, 483.15it/s]Running loglikelihood requests:  60%|██████    | 33937/56168 [02:13<00:46, 482.35it/s]Running loglikelihood requests:  61%|██████    | 34001/56168 [02:13<00:46, 481.41it/s]Running loglikelihood requests:  61%|██████    | 34065/56168 [02:13<00:45, 480.70it/s]Running loglikelihood requests:  61%|██████    | 34129/56168 [02:13<00:45, 481.28it/s]Running loglikelihood requests:  61%|██████    | 34193/56168 [02:13<00:45, 480.70it/s]Running loglikelihood requests:  61%|██████    | 34257/56168 [02:13<00:45, 480.49it/s]Running loglikelihood requests:  61%|██████    | 34321/56168 [02:13<00:45, 481.38it/s]Running loglikelihood requests:  61%|██████    | 34385/56168 [02:14<00:45, 481.54it/s]Running loglikelihood requests:  61%|██████▏   | 34449/56168 [02:14<00:44, 483.19it/s]Running loglikelihood requests:  61%|██████▏   | 34513/56168 [02:14<00:44, 482.60it/s]Running loglikelihood requests:  62%|██████▏   | 34577/56168 [02:14<00:44, 482.96it/s]Running loglikelihood requests:  62%|██████▏   | 34641/56168 [02:14<00:44, 482.35it/s]Running loglikelihood requests:  62%|██████▏   | 34705/56168 [02:14<00:44, 481.27it/s]Running loglikelihood requests:  62%|██████▏   | 34769/56168 [02:14<00:44, 481.25it/s]Running loglikelihood requests:  62%|██████▏   | 34833/56168 [02:14<00:44, 481.49it/s]Running loglikelihood requests:  62%|██████▏   | 34897/56168 [02:15<00:44, 483.11it/s]Running loglikelihood requests:  62%|██████▏   | 34961/56168 [02:15<00:43, 482.65it/s]Running loglikelihood requests:  62%|██████▏   | 35025/56168 [02:15<00:43, 483.57it/s]Running loglikelihood requests:  62%|██████▏   | 35089/56168 [02:15<00:43, 484.14it/s]Running loglikelihood requests:  63%|██████▎   | 35153/56168 [02:15<00:43, 485.75it/s]Running loglikelihood requests:  63%|██████▎   | 35217/56168 [02:15<00:43, 483.98it/s]Running loglikelihood requests:  63%|██████▎   | 35281/56168 [02:15<00:43, 484.66it/s]Running loglikelihood requests:  63%|██████▎   | 35345/56168 [02:16<00:43, 484.18it/s]Running loglikelihood requests:  63%|██████▎   | 35409/56168 [02:16<00:42, 483.57it/s]Running loglikelihood requests:  63%|██████▎   | 35473/56168 [02:16<00:42, 483.59it/s]Running loglikelihood requests:  63%|██████▎   | 35537/56168 [02:16<00:42, 490.30it/s]Running loglikelihood requests:  63%|██████▎   | 35601/56168 [02:16<00:41, 495.77it/s]Running loglikelihood requests:  63%|██████▎   | 35665/56168 [02:16<00:41, 499.62it/s]Running loglikelihood requests:  64%|██████▎   | 35729/56168 [02:16<00:40, 502.10it/s]Running loglikelihood requests:  64%|██████▎   | 35793/56168 [02:16<00:40, 503.78it/s]Running loglikelihood requests:  64%|██████▍   | 35857/56168 [02:17<00:40, 504.61it/s]Running loglikelihood requests:  64%|██████▍   | 35921/56168 [02:17<00:40, 504.98it/s]Running loglikelihood requests:  64%|██████▍   | 35985/56168 [02:17<00:39, 506.11it/s]Running loglikelihood requests:  64%|██████▍   | 36049/56168 [02:17<00:39, 506.28it/s]Running loglikelihood requests:  64%|██████▍   | 36113/56168 [02:17<00:39, 506.06it/s]Running loglikelihood requests:  64%|██████▍   | 36177/56168 [02:17<00:39, 506.73it/s]Running loglikelihood requests:  65%|██████▍   | 36241/56168 [02:17<00:39, 506.68it/s]Running loglikelihood requests:  65%|██████▍   | 36305/56168 [02:17<00:39, 507.28it/s]Running loglikelihood requests:  65%|██████▍   | 36369/56168 [02:18<00:39, 507.54it/s]Running loglikelihood requests:  65%|██████▍   | 36433/56168 [02:18<00:38, 507.66it/s]Running loglikelihood requests:  65%|██████▍   | 36497/56168 [02:18<00:38, 506.27it/s]Running loglikelihood requests:  65%|██████▌   | 36561/56168 [02:18<00:38, 507.97it/s]Running loglikelihood requests:  65%|██████▌   | 36625/56168 [02:18<00:38, 509.56it/s]Running loglikelihood requests:  65%|██████▌   | 36689/56168 [02:18<00:38, 509.91it/s]Running loglikelihood requests:  65%|██████▌   | 36753/56168 [02:18<00:37, 511.20it/s]Running loglikelihood requests:  66%|██████▌   | 36817/56168 [02:18<00:37, 511.96it/s]Running loglikelihood requests:  66%|██████▌   | 36881/56168 [02:19<00:37, 512.74it/s]Running loglikelihood requests:  66%|██████▌   | 36945/56168 [02:19<00:37, 512.69it/s]Running loglikelihood requests:  66%|██████▌   | 37009/56168 [02:19<00:37, 511.85it/s]Running loglikelihood requests:  66%|██████▌   | 37073/56168 [02:19<00:37, 513.48it/s]Running loglikelihood requests:  66%|██████▌   | 37137/56168 [02:19<00:36, 514.56it/s]Running loglikelihood requests:  66%|██████▌   | 37201/56168 [02:19<00:36, 515.92it/s]Running loglikelihood requests:  66%|██████▋   | 37265/56168 [02:19<00:36, 517.79it/s]Running loglikelihood requests:  66%|██████▋   | 37333/56168 [02:19<00:35, 526.77it/s]Running loglikelihood requests:  67%|██████▋   | 37397/56168 [02:20<00:35, 523.89it/s]Running loglikelihood requests:  67%|██████▋   | 37461/56168 [02:20<00:35, 522.23it/s]Running loglikelihood requests:  67%|██████▋   | 37525/56168 [02:20<00:35, 520.36it/s]Running loglikelihood requests:  67%|██████▋   | 37589/56168 [02:20<00:35, 519.39it/s]Running loglikelihood requests:  67%|██████▋   | 37653/56168 [02:20<00:35, 518.21it/s]Running loglikelihood requests:  67%|██████▋   | 37717/56168 [02:20<00:35, 517.94it/s]Running loglikelihood requests:  67%|██████▋   | 37781/56168 [02:20<00:35, 518.48it/s]Running loglikelihood requests:  67%|██████▋   | 37845/56168 [02:20<00:35, 519.12it/s]Running loglikelihood requests:  67%|██████▋   | 37909/56168 [02:21<00:35, 519.90it/s]Running loglikelihood requests:  68%|██████▊   | 37973/56168 [02:21<00:34, 521.77it/s]Running loglikelihood requests:  68%|██████▊   | 38037/56168 [02:21<00:34, 522.20it/s]Running loglikelihood requests:  68%|██████▊   | 38101/56168 [02:21<00:34, 522.20it/s]Running loglikelihood requests:  68%|██████▊   | 38165/56168 [02:21<00:34, 521.87it/s]Running loglikelihood requests:  68%|██████▊   | 38229/56168 [02:21<00:34, 519.81it/s]Running loglikelihood requests:  68%|██████▊   | 38293/56168 [02:21<00:34, 519.21it/s]Running loglikelihood requests:  68%|██████▊   | 38357/56168 [02:21<00:34, 518.62it/s]Running loglikelihood requests:  68%|██████▊   | 38421/56168 [02:22<00:34, 518.76it/s]Running loglikelihood requests:  69%|██████▊   | 38485/56168 [02:22<00:33, 520.49it/s]Running loglikelihood requests:  69%|██████▊   | 38549/56168 [02:22<00:33, 521.27it/s]Running loglikelihood requests:  69%|██████▊   | 38613/56168 [02:22<00:33, 521.78it/s]Running loglikelihood requests:  69%|██████▉   | 38677/56168 [02:22<00:33, 522.45it/s]Running loglikelihood requests:  69%|██████▉   | 38741/56168 [02:22<00:33, 522.83it/s]Running loglikelihood requests:  69%|██████▉   | 38805/56168 [02:22<00:33, 523.40it/s]Running loglikelihood requests:  69%|██████▉   | 38869/56168 [02:22<00:33, 523.12it/s]Running loglikelihood requests:  69%|██████▉   | 38933/56168 [02:23<00:33, 522.13it/s]Running loglikelihood requests:  69%|██████▉   | 38997/56168 [02:23<00:32, 520.80it/s]Running loglikelihood requests:  70%|██████▉   | 39061/56168 [02:23<00:32, 519.77it/s]Running loglikelihood requests:  70%|██████▉   | 39125/56168 [02:23<00:32, 518.93it/s]Running loglikelihood requests:  70%|██████▉   | 39189/56168 [02:23<00:32, 518.94it/s]Running loglikelihood requests:  70%|██████▉   | 39253/56168 [02:23<00:32, 519.38it/s]Running loglikelihood requests:  70%|██████▉   | 39317/56168 [02:23<00:32, 520.07it/s]Running loglikelihood requests:  70%|███████   | 39381/56168 [02:23<00:32, 520.93it/s]Running loglikelihood requests:  70%|███████   | 39445/56168 [02:23<00:32, 521.73it/s]Running loglikelihood requests:  70%|███████   | 39509/56168 [02:24<00:31, 521.95it/s]Running loglikelihood requests:  70%|███████   | 39573/56168 [02:24<00:31, 522.77it/s]Running loglikelihood requests:  71%|███████   | 39637/56168 [02:24<00:31, 523.31it/s]Running loglikelihood requests:  71%|███████   | 39701/56168 [02:24<00:31, 524.53it/s]Running loglikelihood requests:  71%|███████   | 39765/56168 [02:24<00:31, 525.11it/s]Running loglikelihood requests:  71%|███████   | 39829/56168 [02:24<00:31, 525.30it/s]Running loglikelihood requests:  71%|███████   | 39893/56168 [02:24<00:31, 524.85it/s]Running loglikelihood requests:  71%|███████   | 39957/56168 [02:24<00:30, 523.73it/s]Running loglikelihood requests:  71%|███████▏  | 40021/56168 [02:25<00:30, 522.65it/s]Running loglikelihood requests:  71%|███████▏  | 40085/56168 [02:25<00:30, 522.57it/s]Running loglikelihood requests:  71%|███████▏  | 40149/56168 [02:25<00:30, 523.09it/s]Running loglikelihood requests:  72%|███████▏  | 40213/56168 [02:25<00:30, 524.10it/s]Running loglikelihood requests:  72%|███████▏  | 40277/56168 [02:25<00:30, 524.26it/s]Running loglikelihood requests:  72%|███████▏  | 40341/56168 [02:25<00:30, 526.34it/s]Running loglikelihood requests:  72%|███████▏  | 40405/56168 [02:25<00:29, 526.44it/s]Running loglikelihood requests:  72%|███████▏  | 40469/56168 [02:25<00:29, 527.37it/s]Running loglikelihood requests:  72%|███████▏  | 40533/56168 [02:26<00:29, 527.33it/s]Running loglikelihood requests:  72%|███████▏  | 40597/56168 [02:26<00:29, 528.30it/s]Running loglikelihood requests:  72%|███████▏  | 40661/56168 [02:26<00:29, 527.41it/s]Running loglikelihood requests:  73%|███████▎  | 40725/56168 [02:26<00:29, 526.70it/s]Running loglikelihood requests:  73%|███████▎  | 40789/56168 [02:26<00:29, 525.92it/s]Running loglikelihood requests:  73%|███████▎  | 40853/56168 [02:26<00:29, 525.19it/s]Running loglikelihood requests:  73%|███████▎  | 40921/56168 [02:26<00:28, 535.61it/s]Running loglikelihood requests:  73%|███████▎  | 40985/56168 [02:26<00:28, 533.59it/s]Running loglikelihood requests:  73%|███████▎  | 41049/56168 [02:27<00:28, 532.69it/s]Running loglikelihood requests:  73%|███████▎  | 41113/56168 [02:27<00:28, 531.70it/s]Running loglikelihood requests:  73%|███████▎  | 41177/56168 [02:27<00:28, 530.24it/s]Running loglikelihood requests:  73%|███████▎  | 41241/56168 [02:27<00:28, 529.05it/s]Running loglikelihood requests:  74%|███████▎  | 41305/56168 [02:27<00:28, 529.63it/s]Running loglikelihood requests:  74%|███████▎  | 41369/56168 [02:27<00:27, 541.08it/s]Running loglikelihood requests:  74%|███████▍  | 41433/56168 [02:27<00:26, 547.62it/s]Running loglikelihood requests:  74%|███████▍  | 41497/56168 [02:27<00:26, 553.47it/s]Running loglikelihood requests:  74%|███████▍  | 41561/56168 [02:27<00:26, 556.47it/s]Running loglikelihood requests:  74%|███████▍  | 41625/56168 [02:28<00:26, 559.26it/s]Running loglikelihood requests:  74%|███████▍  | 41689/56168 [02:28<00:25, 560.93it/s]Running loglikelihood requests:  74%|███████▍  | 41753/56168 [02:28<00:25, 561.52it/s]Running loglikelihood requests:  74%|███████▍  | 41817/56168 [02:28<00:25, 564.12it/s]Running loglikelihood requests:  75%|███████▍  | 41881/56168 [02:28<00:25, 564.37it/s]Running loglikelihood requests:  75%|███████▍  | 41945/56168 [02:28<00:25, 564.60it/s]Running loglikelihood requests:  75%|███████▍  | 42009/56168 [02:28<00:25, 563.60it/s]Running loglikelihood requests:  75%|███████▍  | 42073/56168 [02:28<00:25, 562.24it/s]Running loglikelihood requests:  75%|███████▌  | 42137/56168 [02:28<00:24, 563.70it/s]Running loglikelihood requests:  75%|███████▌  | 42201/56168 [02:29<00:24, 563.55it/s]Running loglikelihood requests:  75%|███████▌  | 42265/56168 [02:29<00:24, 564.45it/s]Running loglikelihood requests:  75%|███████▌  | 42329/56168 [02:29<00:24, 565.73it/s]Running loglikelihood requests:  75%|███████▌  | 42393/56168 [02:29<00:24, 564.44it/s]Running loglikelihood requests:  76%|███████▌  | 42457/56168 [02:29<00:24, 565.90it/s]Running loglikelihood requests:  76%|███████▌  | 42521/56168 [02:29<00:24, 565.59it/s]Running loglikelihood requests:  76%|███████▌  | 42585/56168 [02:29<00:24, 564.69it/s]Running loglikelihood requests:  76%|███████▌  | 42649/56168 [02:29<00:23, 563.83it/s]Running loglikelihood requests:  76%|███████▌  | 42713/56168 [02:30<00:23, 562.66it/s]Running loglikelihood requests:  76%|███████▌  | 42777/56168 [02:30<00:23, 562.51it/s]Running loglikelihood requests:  76%|███████▋  | 42841/56168 [02:30<00:23, 561.36it/s]Running loglikelihood requests:  76%|███████▋  | 42905/56168 [02:30<00:23, 560.78it/s]Running loglikelihood requests:  77%|███████▋  | 42969/56168 [02:30<00:23, 562.37it/s]Running loglikelihood requests:  77%|███████▋  | 43033/56168 [02:30<00:23, 560.74it/s]Running loglikelihood requests:  77%|███████▋  | 43097/56168 [02:30<00:23, 559.96it/s]Running loglikelihood requests:  77%|███████▋  | 43161/56168 [02:30<00:23, 560.05it/s]Running loglikelihood requests:  77%|███████▋  | 43225/56168 [02:30<00:23, 559.64it/s]Running loglikelihood requests:  77%|███████▋  | 43289/56168 [02:31<00:23, 557.81it/s]Running loglikelihood requests:  77%|███████▋  | 43353/56168 [02:31<00:22, 558.09it/s]Running loglikelihood requests:  77%|███████▋  | 43417/56168 [02:31<00:22, 557.35it/s]Running loglikelihood requests:  77%|███████▋  | 43481/56168 [02:31<00:22, 556.95it/s]Running loglikelihood requests:  78%|███████▊  | 43545/56168 [02:31<00:22, 560.35it/s]Running loglikelihood requests:  78%|███████▊  | 43609/56168 [02:31<00:22, 560.38it/s]Running loglikelihood requests:  78%|███████▊  | 43673/56168 [02:31<00:22, 562.95it/s]Running loglikelihood requests:  78%|███████▊  | 43741/56168 [02:31<00:21, 571.22it/s]Running loglikelihood requests:  78%|███████▊  | 43805/56168 [02:31<00:21, 568.01it/s]Running loglikelihood requests:  78%|███████▊  | 43869/56168 [02:32<00:21, 567.12it/s]Running loglikelihood requests:  78%|███████▊  | 43933/56168 [02:32<00:21, 566.41it/s]Running loglikelihood requests:  78%|███████▊  | 43997/56168 [02:32<00:21, 562.75it/s]Running loglikelihood requests:  78%|███████▊  | 44061/56168 [02:32<00:21, 562.26it/s]Running loglikelihood requests:  79%|███████▊  | 44125/56168 [02:32<00:21, 563.92it/s]Running loglikelihood requests:  79%|███████▊  | 44189/56168 [02:32<00:21, 566.46it/s]Running loglikelihood requests:  79%|███████▉  | 44253/56168 [02:32<00:21, 566.59it/s]Running loglikelihood requests:  79%|███████▉  | 44317/56168 [02:32<00:20, 565.97it/s]Running loglikelihood requests:  79%|███████▉  | 44381/56168 [02:32<00:20, 568.19it/s]Running loglikelihood requests:  79%|███████▉  | 44445/56168 [02:33<00:20, 567.75it/s]Running loglikelihood requests:  79%|███████▉  | 44509/56168 [02:33<00:20, 568.15it/s]Running loglikelihood requests:  79%|███████▉  | 44573/56168 [02:33<00:20, 565.41it/s]Running loglikelihood requests:  79%|███████▉  | 44637/56168 [02:33<00:20, 565.23it/s]Running loglikelihood requests:  80%|███████▉  | 44701/56168 [02:33<00:20, 565.39it/s]Running loglikelihood requests:  80%|███████▉  | 44765/56168 [02:33<00:20, 562.24it/s]Running loglikelihood requests:  80%|███████▉  | 44829/56168 [02:33<00:20, 565.21it/s]Running loglikelihood requests:  80%|███████▉  | 44893/56168 [02:33<00:19, 564.57it/s]Running loglikelihood requests:  80%|████████  | 44957/56168 [02:33<00:19, 563.26it/s]Running loglikelihood requests:  80%|████████  | 45021/56168 [02:34<00:19, 564.53it/s]Running loglikelihood requests:  80%|████████  | 45085/56168 [02:34<00:19, 562.67it/s]Running loglikelihood requests:  80%|████████  | 45149/56168 [02:34<00:19, 564.29it/s]Running loglikelihood requests:  80%|████████  | 45213/56168 [02:34<00:19, 566.20it/s]Running loglikelihood requests:  81%|████████  | 45277/56168 [02:34<00:19, 566.68it/s]Running loglikelihood requests:  81%|████████  | 45341/56168 [02:34<00:19, 567.34it/s]Running loglikelihood requests:  81%|████████  | 45405/56168 [02:34<00:18, 567.08it/s]Running loglikelihood requests:  81%|████████  | 45469/56168 [02:34<00:18, 567.62it/s]Running loglikelihood requests:  81%|████████  | 45533/56168 [02:35<00:18, 567.10it/s]Running loglikelihood requests:  81%|████████  | 45597/56168 [02:35<00:18, 569.06it/s]Running loglikelihood requests:  81%|████████▏ | 45661/56168 [02:35<00:18, 567.48it/s]Running loglikelihood requests:  81%|████████▏ | 45725/56168 [02:35<00:18, 567.66it/s]Running loglikelihood requests:  82%|████████▏ | 45789/56168 [02:35<00:18, 568.69it/s]Running loglikelihood requests:  82%|████████▏ | 45853/56168 [02:35<00:18, 567.46it/s]Running loglikelihood requests:  82%|████████▏ | 45917/56168 [02:35<00:17, 569.53it/s]Running loglikelihood requests:  82%|████████▏ | 45981/56168 [02:35<00:17, 569.84it/s]Running loglikelihood requests:  82%|████████▏ | 46045/56168 [02:35<00:17, 571.86it/s]Running loglikelihood requests:  82%|████████▏ | 46109/56168 [02:36<00:17, 572.17it/s]Running loglikelihood requests:  82%|████████▏ | 46173/56168 [02:36<00:17, 572.52it/s]Running loglikelihood requests:  82%|████████▏ | 46237/56168 [02:36<00:17, 571.37it/s]Running loglikelihood requests:  82%|████████▏ | 46301/56168 [02:36<00:17, 571.31it/s]Running loglikelihood requests:  83%|████████▎ | 46365/56168 [02:36<00:17, 572.57it/s]Running loglikelihood requests:  83%|████████▎ | 46429/56168 [02:36<00:17, 572.11it/s]Running loglikelihood requests:  83%|████████▎ | 46493/56168 [02:36<00:16, 573.95it/s]Running loglikelihood requests:  83%|████████▎ | 46557/56168 [02:36<00:16, 574.44it/s]Running loglikelihood requests:  83%|████████▎ | 46621/56168 [02:36<00:16, 575.53it/s]Running loglikelihood requests:  83%|████████▎ | 46685/56168 [02:37<00:16, 576.20it/s]Running loglikelihood requests:  83%|████████▎ | 46749/56168 [02:37<00:16, 576.43it/s]Running loglikelihood requests:  83%|████████▎ | 46813/56168 [02:37<00:16, 577.00it/s]Running loglikelihood requests:  83%|████████▎ | 46877/56168 [02:37<00:16, 578.17it/s]Running loglikelihood requests:  84%|████████▎ | 46941/56168 [02:37<00:15, 579.71it/s]Running loglikelihood requests:  84%|████████▎ | 47005/56168 [02:37<00:15, 577.04it/s]Running loglikelihood requests:  84%|████████▍ | 47069/56168 [02:37<00:15, 577.15it/s]Running loglikelihood requests:  84%|████████▍ | 47133/56168 [02:37<00:15, 575.46it/s]Running loglikelihood requests:  84%|████████▍ | 47197/56168 [02:37<00:15, 575.57it/s]Running loglikelihood requests:  84%|████████▍ | 47261/56168 [02:38<00:15, 575.64it/s]Running loglikelihood requests:  84%|████████▍ | 47325/56168 [02:38<00:15, 577.13it/s]Running loglikelihood requests:  84%|████████▍ | 47389/56168 [02:38<00:15, 576.75it/s]Running loglikelihood requests:  84%|████████▍ | 47453/56168 [02:38<00:15, 578.34it/s]Running loglikelihood requests:  85%|████████▍ | 47517/56168 [02:38<00:14, 577.11it/s]Running loglikelihood requests:  85%|████████▍ | 47581/56168 [02:38<00:14, 577.32it/s]Running loglikelihood requests:  85%|████████▍ | 47645/56168 [02:38<00:14, 577.32it/s]Running loglikelihood requests:  85%|████████▍ | 47709/56168 [02:38<00:14, 578.56it/s]Running loglikelihood requests:  85%|████████▌ | 47773/56168 [02:38<00:14, 577.88it/s]Running loglikelihood requests:  85%|████████▌ | 47837/56168 [02:39<00:14, 579.49it/s]Running loglikelihood requests:  85%|████████▌ | 47901/56168 [02:39<00:14, 577.76it/s]Running loglikelihood requests:  85%|████████▌ | 47965/56168 [02:39<00:14, 578.63it/s]Running loglikelihood requests:  86%|████████▌ | 48029/56168 [02:39<00:14, 579.29it/s]Running loglikelihood requests:  86%|████████▌ | 48093/56168 [02:39<00:13, 578.90it/s]Running loglikelihood requests:  86%|████████▌ | 48157/56168 [02:39<00:13, 578.34it/s]Running loglikelihood requests:  86%|████████▌ | 48221/56168 [02:39<00:13, 578.80it/s]Running loglikelihood requests:  86%|████████▌ | 48285/56168 [02:39<00:13, 578.78it/s]Running loglikelihood requests:  86%|████████▌ | 48349/56168 [02:39<00:13, 585.46it/s]Running loglikelihood requests:  86%|████████▌ | 48413/56168 [02:40<00:13, 592.77it/s]Running loglikelihood requests:  86%|████████▋ | 48477/56168 [02:40<00:12, 596.98it/s]Running loglikelihood requests:  86%|████████▋ | 48541/56168 [02:40<00:12, 597.53it/s]Running loglikelihood requests:  87%|████████▋ | 48605/56168 [02:40<00:12, 597.00it/s]Running loglikelihood requests:  87%|████████▋ | 48669/56168 [02:40<00:12, 597.77it/s]Running loglikelihood requests:  87%|████████▋ | 48733/56168 [02:40<00:12, 598.46it/s]Running loglikelihood requests:  87%|████████▋ | 48797/56168 [02:40<00:12, 597.97it/s]Running loglikelihood requests:  87%|████████▋ | 48861/56168 [02:40<00:12, 599.23it/s]Running loglikelihood requests:  87%|████████▋ | 48925/56168 [02:40<00:12, 600.05it/s]Running loglikelihood requests:  87%|████████▋ | 48989/56168 [02:40<00:11, 599.02it/s]Running loglikelihood requests:  87%|████████▋ | 49053/56168 [02:41<00:11, 598.90it/s]Running loglikelihood requests:  87%|████████▋ | 49117/56168 [02:41<00:11, 599.27it/s]Running loglikelihood requests:  88%|████████▊ | 49181/56168 [02:41<00:11, 600.21it/s]Running loglikelihood requests:  88%|████████▊ | 49245/56168 [02:41<00:11, 599.24it/s]Running loglikelihood requests:  88%|████████▊ | 49309/56168 [02:41<00:11, 598.31it/s]Running loglikelihood requests:  88%|████████▊ | 49373/56168 [02:41<00:11, 598.37it/s]Running loglikelihood requests:  88%|████████▊ | 49437/56168 [02:41<00:11, 599.43it/s]Running loglikelihood requests:  88%|████████▊ | 49501/56168 [02:41<00:11, 598.53it/s]Running loglikelihood requests:  88%|████████▊ | 49565/56168 [02:41<00:11, 598.86it/s]Running loglikelihood requests:  88%|████████▊ | 49629/56168 [02:42<00:10, 598.98it/s]Running loglikelihood requests:  88%|████████▊ | 49693/56168 [02:42<00:10, 598.18it/s]Running loglikelihood requests:  89%|████████▊ | 49757/56168 [02:42<00:10, 599.02it/s]Running loglikelihood requests:  89%|████████▊ | 49821/56168 [02:42<00:10, 599.42it/s]Running loglikelihood requests:  89%|████████▉ | 49885/56168 [02:42<00:10, 601.05it/s]Running loglikelihood requests:  89%|████████▉ | 49953/56168 [02:42<00:10, 613.35it/s]Running loglikelihood requests:  89%|████████▉ | 50017/56168 [02:42<00:10, 614.01it/s]Running loglikelihood requests:  89%|████████▉ | 50081/56168 [02:42<00:09, 614.74it/s]Running loglikelihood requests:  89%|████████▉ | 50145/56168 [02:42<00:09, 615.10it/s]Running loglikelihood requests:  89%|████████▉ | 50209/56168 [02:42<00:09, 615.99it/s]Running loglikelihood requests:  90%|████████▉ | 50273/56168 [02:43<00:09, 615.12it/s]Running loglikelihood requests:  90%|████████▉ | 50337/56168 [02:43<00:09, 613.29it/s]Running loglikelihood requests:  90%|████████▉ | 50401/56168 [02:43<00:09, 612.82it/s]Running loglikelihood requests:  90%|████████▉ | 50465/56168 [02:43<00:09, 612.35it/s]Running loglikelihood requests:  90%|████████▉ | 50529/56168 [02:43<00:09, 613.49it/s]Running loglikelihood requests:  90%|█████████ | 50593/56168 [02:43<00:09, 614.01it/s]Running loglikelihood requests:  90%|█████████ | 50657/56168 [02:43<00:08, 613.88it/s]Running loglikelihood requests:  90%|█████████ | 50721/56168 [02:43<00:08, 613.47it/s]Running loglikelihood requests:  90%|█████████ | 50789/56168 [02:43<00:08, 623.69it/s]Running loglikelihood requests:  91%|█████████ | 50853/56168 [02:44<00:08, 622.48it/s]Running loglikelihood requests:  91%|█████████ | 50917/56168 [02:44<00:08, 621.36it/s]Running loglikelihood requests:  91%|█████████ | 50981/56168 [02:44<00:08, 620.37it/s]Running loglikelihood requests:  91%|█████████ | 51045/56168 [02:44<00:08, 621.10it/s]Running loglikelihood requests:  91%|█████████ | 51109/56168 [02:44<00:08, 620.64it/s]Running loglikelihood requests:  91%|█████████ | 51173/56168 [02:44<00:08, 619.52it/s]Running loglikelihood requests:  91%|█████████ | 51237/56168 [02:44<00:07, 617.84it/s]Running loglikelihood requests:  91%|█████████▏| 51301/56168 [02:44<00:07, 617.10it/s]Running loglikelihood requests:  91%|█████████▏| 51365/56168 [02:44<00:07, 617.58it/s]Running loglikelihood requests:  92%|█████████▏| 51429/56168 [02:44<00:07, 618.53it/s]Running loglikelihood requests:  92%|█████████▏| 51493/56168 [02:45<00:07, 618.69it/s]Running loglikelihood requests:  92%|█████████▏| 51557/56168 [02:45<00:07, 618.71it/s]Running loglikelihood requests:  92%|█████████▏| 51621/56168 [02:45<00:07, 619.55it/s]Running loglikelihood requests:  92%|█████████▏| 51685/56168 [02:45<00:07, 618.94it/s]Running loglikelihood requests:  92%|█████████▏| 51749/56168 [02:45<00:07, 618.68it/s]Running loglikelihood requests:  92%|█████████▏| 51813/56168 [02:45<00:07, 618.99it/s]Running loglikelihood requests:  92%|█████████▏| 51877/56168 [02:45<00:06, 618.65it/s]Running loglikelihood requests:  92%|█████████▏| 51941/56168 [02:45<00:06, 619.57it/s]Running loglikelihood requests:  93%|█████████▎| 52005/56168 [02:45<00:06, 619.65it/s]Running loglikelihood requests:  93%|█████████▎| 52069/56168 [02:45<00:06, 620.57it/s]Running loglikelihood requests:  93%|█████████▎| 52133/56168 [02:46<00:06, 620.89it/s]Running loglikelihood requests:  93%|█████████▎| 52197/56168 [02:46<00:06, 621.05it/s]Running loglikelihood requests:  93%|█████████▎| 52261/56168 [02:46<00:06, 619.96it/s]Running loglikelihood requests:  93%|█████████▎| 52325/56168 [02:46<00:06, 618.81it/s]Running loglikelihood requests:  93%|█████████▎| 52389/56168 [02:46<00:06, 618.80it/s]Running loglikelihood requests:  93%|█████████▎| 52453/56168 [02:46<00:05, 619.60it/s]Running loglikelihood requests:  93%|█████████▎| 52517/56168 [02:46<00:05, 620.91it/s]Running loglikelihood requests:  94%|█████████▎| 52581/56168 [02:46<00:05, 621.85it/s]Running loglikelihood requests:  94%|█████████▎| 52645/56168 [02:46<00:05, 623.47it/s]Running loglikelihood requests:  94%|█████████▍| 52709/56168 [02:47<00:05, 624.44it/s]Running loglikelihood requests:  94%|█████████▍| 52773/56168 [02:47<00:05, 625.39it/s]Running loglikelihood requests:  94%|█████████▍| 52837/56168 [02:47<00:05, 625.65it/s]Running loglikelihood requests:  94%|█████████▍| 52901/56168 [02:47<00:05, 625.47it/s]Running loglikelihood requests:  94%|█████████▍| 52965/56168 [02:47<00:05, 624.22it/s]Running loglikelihood requests:  94%|█████████▍| 53029/56168 [02:47<00:05, 624.55it/s]Running loglikelihood requests:  95%|█████████▍| 53093/56168 [02:47<00:04, 623.34it/s]Running loglikelihood requests:  95%|█████████▍| 53157/56168 [02:47<00:04, 622.84it/s]Running loglikelihood requests:  95%|█████████▍| 53221/56168 [02:47<00:04, 622.47it/s]Running loglikelihood requests:  95%|█████████▍| 53285/56168 [02:47<00:04, 623.11it/s]Running loglikelihood requests:  95%|█████████▍| 53349/56168 [02:48<00:04, 624.21it/s]Running loglikelihood requests:  95%|█████████▌| 53413/56168 [02:48<00:04, 625.46it/s]Running loglikelihood requests:  95%|█████████▌| 53477/56168 [02:48<00:04, 626.80it/s]Running loglikelihood requests:  95%|█████████▌| 53541/56168 [02:48<00:04, 627.26it/s]Running loglikelihood requests:  95%|█████████▌| 53605/56168 [02:48<00:04, 627.20it/s]Running loglikelihood requests:  96%|█████████▌| 53669/56168 [02:48<00:03, 628.39it/s]Running loglikelihood requests:  96%|█████████▌| 53733/56168 [02:48<00:03, 628.62it/s]Running loglikelihood requests:  96%|█████████▌| 53797/56168 [02:48<00:03, 629.25it/s]Running loglikelihood requests:  96%|█████████▌| 53861/56168 [02:48<00:03, 630.90it/s]Running loglikelihood requests:  96%|█████████▌| 53925/56168 [02:48<00:03, 631.20it/s]Running loglikelihood requests:  96%|█████████▌| 53989/56168 [02:49<00:03, 631.80it/s]Running loglikelihood requests:  96%|█████████▌| 54053/56168 [02:49<00:03, 630.56it/s]Running loglikelihood requests:  96%|█████████▋| 54117/56168 [02:49<00:03, 629.36it/s]Running loglikelihood requests:  97%|█████████▋| 54212/56168 [02:49<00:02, 724.21it/s]Running loglikelihood requests:  97%|█████████▋| 54309/56168 [02:49<00:02, 632.86it/s]Running loglikelihood requests:  97%|█████████▋| 54401/56168 [02:49<00:02, 705.23it/s]Running loglikelihood requests:  97%|█████████▋| 54493/56168 [02:49<00:02, 762.00it/s]Running loglikelihood requests:  97%|█████████▋| 54573/56168 [02:49<00:02, 626.49it/s]Running loglikelihood requests:  97%|█████████▋| 54664/56168 [02:50<00:02, 694.79it/s]Running loglikelihood requests:  97%|█████████▋| 54757/56168 [02:50<00:02, 618.25it/s]Running loglikelihood requests:  98%|█████████▊| 54848/56168 [02:50<00:01, 685.47it/s]Running loglikelihood requests:  98%|█████████▊| 54923/56168 [02:50<00:01, 699.84it/s]Running loglikelihood requests:  98%|█████████▊| 55010/56168 [02:50<00:01, 744.11it/s]Running loglikelihood requests:  98%|█████████▊| 55089/56168 [02:50<00:01, 614.48it/s]Running loglikelihood requests:  98%|█████████▊| 55178/56168 [02:50<00:01, 680.39it/s]Running loglikelihood requests:  98%|█████████▊| 55255/56168 [02:50<00:01, 703.19it/s]Running loglikelihood requests:  99%|█████████▊| 55333/56168 [02:51<00:01, 590.17it/s]Running loglikelihood requests:  99%|█████████▊| 55424/56168 [02:51<00:01, 665.88it/s]Running loglikelihood requests:  99%|█████████▉| 55517/56168 [02:51<00:00, 732.50it/s]Running loglikelihood requests:  99%|█████████▉| 55596/56168 [02:51<00:00, 611.57it/s]Running loglikelihood requests:  99%|█████████▉| 55696/56168 [02:51<00:00, 703.47it/s]Running loglikelihood requests:  99%|█████████▉| 55781/56168 [02:51<00:00, 611.71it/s]Running loglikelihood requests: 100%|█████████▉| 55899/56168 [02:51<00:00, 742.13it/s]Running loglikelihood requests: 100%|█████████▉| 55983/56168 [02:52<00:00, 638.57it/s]Running loglikelihood requests: 100%|█████████▉| 56087/56168 [02:52<00:00, 729.68it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:52<00:00, 326.02it/s]
2025-05-16:02:58:53,772 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=shengyuanhu/benchmark_wmdp_kl_ckpt_140,tokenizer=HuggingFaceH4/zephyr-7b-beta), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.6067|±  |0.0040|
| - humanities                          |      2|none  |      |acc   |↑  |0.5741|±  |0.0069|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.4444|±  |0.0444|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.7333|±  |0.0345|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.7451|±  |0.0306|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.8101|±  |0.0255|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.7107|±  |0.0414|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.7037|±  |0.0441|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.7117|±  |0.0356|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6532|±  |0.0256|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.3821|±  |0.0163|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6463|±  |0.0272|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.7037|±  |0.0254|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4967|±  |0.0128|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.8363|±  |0.0284|
| - other                               |      2|none  |      |acc   |↑  |0.6611|±  |0.0083|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.6300|±  |0.0485|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.6604|±  |0.0291|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.6127|±  |0.0371|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.4400|±  |0.0499|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6278|±  |0.0324|
|  - management                         |      1|none  |     0|acc   |↑  |0.6602|±  |0.0469|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.7863|±  |0.0269|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.6200|±  |0.0488|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.7867|±  |0.0146|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.6307|±  |0.0276|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.4433|±  |0.0296|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.7096|±  |0.0276|
|  - virology                           |      1|none  |     0|acc   |↑  |0.5120|±  |0.0389|
| - social sciences                     |      2|none  |      |acc   |↑  |0.6883|±  |0.0082|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.5439|±  |0.0469|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.6970|±  |0.0327|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8031|±  |0.0287|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.5795|±  |0.0250|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.6261|±  |0.0314|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.7890|±  |0.0175|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7710|±  |0.0369|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.6275|±  |0.0196|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6455|±  |0.0458|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.6367|±  |0.0308|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8358|±  |0.0262|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.7800|±  |0.0416|
| - stem                                |      2|none  |      |acc   |↑  |0.5220|±  |0.0087|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.3500|±  |0.0479|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.5704|±  |0.0428|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.6250|±  |0.0394|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.6528|±  |0.0398|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.5000|±  |0.0503|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.4800|±  |0.0502|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3100|±  |0.0465|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5784|±  |0.0491|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.6800|±  |0.0469|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.5234|±  |0.0327|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.5241|±  |0.0416|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4524|±  |0.0256|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7290|±  |0.0253|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.5025|±  |0.0352|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.5800|±  |0.0496|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.4000|±  |0.0299|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.3974|±  |0.0400|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.5185|±  |0.0341|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.4732|±  |0.0474|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.6067|±  |0.0040|
| - humanities     |      2|none  |      |acc   |↑  |0.5741|±  |0.0069|
| - other          |      2|none  |      |acc   |↑  |0.6611|±  |0.0083|
| - social sciences|      2|none  |      |acc   |↑  |0.6883|±  |0.0082|
| - stem           |      2|none  |      |acc   |↑  |0.5220|±  |0.0087|

2025-05-16:02:58:58,610 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-16:02:58:58,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,747 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,799 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,814 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:58,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,454 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,476 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,479 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,482 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,497 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,550 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,553 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:58:59,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,215 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,224 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,229 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,528 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,597 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,625 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,635 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,641 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,648 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,657 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,660 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,664 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,673 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,676 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,686 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,689 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,692 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,729 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,735 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,829 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,846 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,853 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,860 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,862 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,870 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,872 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,877 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,881 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,897 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,899 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,901 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,906 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,917 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,919 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,921 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,923 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,925 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,927 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,931 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,933 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,953 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,956 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,960 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,965 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,985 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,990 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,995 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:00,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,008 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,010 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,012 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,019 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,023 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,936 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,975 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,977 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:01,980 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,868 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,870 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,877 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,880 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,889 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,891 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,896 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,902 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,903 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,905 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,907 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,915 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,917 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,919 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,922 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,924 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,925 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,927 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,931 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,936 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,937 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,941 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,950 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,955 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,959 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,960 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,963 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,965 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,968 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,977 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,979 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,980 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,982 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,985 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,987 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,990 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,994 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:02,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,005 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,008 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,010 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,013 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,016 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,019 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,038 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,046 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,053 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,059 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,064 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,066 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,070 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,073 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,075 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,077 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,079 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,082 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,084 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,086 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,088 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,089 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,093 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,095 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,098 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,107 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,111 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,112 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,114 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,117 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,121 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,132 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,140 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,142 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,144 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,153 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,156 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,161 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,163 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,164 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,166 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,167 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,168 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,170 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,171 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,172 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,176 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,178 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,181 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,182 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,183 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,186 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,189 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,190 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,194 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,197 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,198 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,202 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,206 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,207 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,212 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,216 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,218 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,228 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,230 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,241 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,243 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,245 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,247 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,252 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,260 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,263 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,266 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,268 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,271 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,273 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,276 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,279 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,281 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,284 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,289 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,292 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,294 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,297 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,301 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,302 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,304 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,312 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,314 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,320 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,322 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,323 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,327 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,328 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,330 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,405 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,410 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,416 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,419 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:03,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:05,740 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:05,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:02:59:05,746 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-16:02:59:05,749 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-16:02:59:05,749 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': 'shengyuanhu/wmdp_unlearn_npo_ckpt_100_zephyr', 'tokenizer': 'HuggingFaceH4/zephyr-7b-beta'}
2025-05-16:02:59:06,346 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-16:02:59:06,533 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:12<00:25, 12.79s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:25<00:12, 12.65s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:37<00:00, 12.25s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:37<00:00, 12.37s/it]
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,680 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,681 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:00:06,682 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-16:03:00:06,687 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 866.70it/s]100%|██████████| 100/100 [00:00<00:00, 868.26it/s]
2025-05-16:03:00:06,806 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 28%|██▊       | 86/310 [00:00<00:00, 859.09it/s] 56%|█████▌    | 173/310 [00:00<00:00, 865.09it/s] 84%|████████▍ | 261/310 [00:00<00:00, 869.96it/s]100%|██████████| 310/310 [00:00<00:00, 864.42it/s]
2025-05-16:03:00:07,174 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 874.17it/s]100%|██████████| 100/100 [00:00<00:00, 875.96it/s]
2025-05-16:03:00:07,293 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 57%|█████▋    | 83/145 [00:00<00:00, 827.04it/s]100%|██████████| 145/145 [00:00<00:00, 826.50it/s]
2025-05-16:03:00:07,473 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 79%|███████▉  | 79/100 [00:00<00:00, 789.66it/s]100%|██████████| 100/100 [00:00<00:00, 790.86it/s]
2025-05-16:03:00:07,604 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 41%|████      | 83/203 [00:00<00:00, 826.72it/s] 83%|████████▎ | 169/203 [00:00<00:00, 845.84it/s]100%|██████████| 203/203 [00:00<00:00, 847.73it/s]
2025-05-16:03:00:07,852 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 57%|█████▋    | 87/152 [00:00<00:00, 863.02it/s]100%|██████████| 152/152 [00:00<00:00, 874.72it/s]
2025-05-16:03:00:08,032 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 87%|████████▋ | 89/102 [00:00<00:00, 883.12it/s]100%|██████████| 102/102 [00:00<00:00, 882.51it/s]
2025-05-16:03:00:08,151 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 877.71it/s]100%|██████████| 100/100 [00:00<00:00, 876.98it/s]
2025-05-16:03:00:08,269 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 60%|██████    | 87/144 [00:00<00:00, 861.82it/s]100%|██████████| 144/144 [00:00<00:00, 864.43it/s]
2025-05-16:03:00:08,441 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 37%|███▋      | 88/235 [00:00<00:00, 872.66it/s] 75%|███████▍  | 176/235 [00:00<00:00, 872.94it/s]100%|██████████| 235/235 [00:00<00:00, 873.76it/s]
2025-05-16:03:00:08,718 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 79%|███████▊  | 88/112 [00:00<00:00, 877.10it/s]100%|██████████| 112/112 [00:00<00:00, 874.36it/s]
2025-05-16:03:00:08,850 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 32%|███▏      | 87/270 [00:00<00:00, 863.77it/s] 65%|██████▌   | 176/270 [00:00<00:00, 873.96it/s] 98%|█████████▊| 265/270 [00:00<00:00, 877.81it/s]100%|██████████| 270/270 [00:00<00:00, 875.43it/s]
2025-05-16:03:00:09,167 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 881.19it/s]100%|██████████| 100/100 [00:00<00:00, 879.81it/s]
2025-05-16:03:00:09,285 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 886.31it/s]100%|██████████| 100/100 [00:00<00:00, 871.59it/s]
2025-05-16:03:00:09,404 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 65%|██████▌   | 88/135 [00:00<00:00, 879.34it/s]100%|██████████| 135/135 [00:00<00:00, 879.07it/s]
2025-05-16:03:00:09,562 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 24%|██▎       | 89/378 [00:00<00:00, 881.56it/s] 47%|████▋     | 178/378 [00:00<00:00, 881.59it/s] 71%|███████   | 267/378 [00:00<00:00, 882.07it/s] 94%|█████████▍| 356/378 [00:00<00:00, 881.37it/s]100%|██████████| 378/378 [00:00<00:00, 881.43it/s]
2025-05-16:03:00:10,003 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 58%|█████▊    | 87/151 [00:00<00:00, 862.38it/s]100%|██████████| 151/151 [00:00<00:00, 867.59it/s]
2025-05-16:03:00:10,183 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 41%|████      | 88/216 [00:00<00:00, 876.50it/s] 81%|████████▏ | 176/216 [00:00<00:00, 877.82it/s]100%|██████████| 216/216 [00:00<00:00, 875.84it/s]
2025-05-16:03:00:10,437 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 34%|███▎      | 89/265 [00:00<00:00, 881.69it/s] 67%|██████▋   | 178/265 [00:00<00:00, 878.89it/s]100%|██████████| 265/265 [00:00<00:00, 874.39it/s]
2025-05-16:03:00:10,749 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 867.64it/s]100%|██████████| 100/100 [00:00<00:00, 868.27it/s]
2025-05-16:03:00:10,868 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 85%|████████▌ | 88/103 [00:00<00:00, 875.02it/s]100%|██████████| 103/103 [00:00<00:00, 873.69it/s]
2025-05-16:03:00:10,990 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 27%|██▋       | 84/306 [00:00<00:00, 838.14it/s] 55%|█████▍    | 168/306 [00:00<00:00, 806.16it/s] 82%|████████▏ | 251/306 [00:00<00:00, 815.56it/s]100%|██████████| 306/306 [00:00<00:00, 828.29it/s]
2025-05-16:03:00:11,369 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 51%|█████▏    | 89/173 [00:00<00:00, 883.31it/s]100%|██████████| 173/173 [00:00<00:00, 855.99it/s]
2025-05-16:03:00:11,577 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 51%|█████     | 85/166 [00:00<00:00, 840.45it/s]100%|██████████| 166/166 [00:00<00:00, 839.61it/s]
2025-05-16:03:00:11,782 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 31%|███       | 83/272 [00:00<00:00, 824.63it/s] 62%|██████▏   | 168/272 [00:00<00:00, 837.58it/s] 93%|█████████▎| 254/272 [00:00<00:00, 844.20it/s]100%|██████████| 272/272 [00:00<00:00, 837.06it/s]
2025-05-16:03:00:12,117 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 10%|█         | 81/783 [00:00<00:00, 808.27it/s] 21%|██        | 163/783 [00:00<00:00, 814.21it/s] 31%|███▏      | 245/783 [00:00<00:00, 808.53it/s] 42%|████▏     | 326/783 [00:00<00:00, 606.47it/s] 50%|█████     | 393/783 [00:00<00:00, 617.90it/s] 59%|█████▊    | 459/783 [00:00<00:00, 554.17it/s] 67%|██████▋   | 522/783 [00:00<00:00, 574.38it/s] 77%|███████▋  | 601/783 [00:00<00:00, 633.39it/s] 88%|████████▊ | 686/783 [00:01<00:00, 693.27it/s] 97%|█████████▋| 763/783 [00:01<00:00, 714.39it/s]100%|██████████| 783/783 [00:01<00:00, 671.94it/s]
2025-05-16:03:00:13,309 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 85%|████████▌ | 85/100 [00:00<00:00, 847.92it/s]100%|██████████| 100/100 [00:00<00:00, 845.54it/s]
2025-05-16:03:00:13,433 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 84%|████████▍ | 84/100 [00:00<00:00, 837.65it/s]100%|██████████| 100/100 [00:00<00:00, 834.77it/s]
2025-05-16:03:00:13,557 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 28%|██▊       | 78/282 [00:00<00:00, 776.55it/s] 55%|█████▌    | 156/282 [00:00<00:00, 756.11it/s] 85%|████████▌ | 240/282 [00:00<00:00, 790.60it/s]100%|██████████| 282/282 [00:00<00:00, 787.73it/s]
2025-05-16:03:00:13,926 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:02, 71.80it/s] 38%|███▊      | 90/234 [00:00<00:00, 294.76it/s] 69%|██████▉   | 162/234 [00:00<00:00, 435.77it/s]100%|█████████▉| 233/234 [00:00<00:00, 523.36it/s]100%|██████████| 234/234 [00:00<00:00, 411.70it/s]
2025-05-16:03:00:14,505 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 34%|███▍      | 76/223 [00:00<00:00, 757.59it/s] 68%|██████▊   | 152/223 [00:00<00:00, 756.20it/s]100%|██████████| 223/223 [00:00<00:00, 758.50it/s]
2025-05-16:03:00:14,809 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 73%|███████▎  | 80/110 [00:00<00:00, 796.58it/s]100%|██████████| 110/110 [00:00<00:00, 800.96it/s]
2025-05-16:03:00:14,952 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 43%|████▎     | 86/201 [00:00<00:00, 854.04it/s] 87%|████████▋ | 175/201 [00:00<00:00, 870.68it/s]100%|██████████| 201/201 [00:00<00:00, 867.99it/s]
2025-05-16:03:00:15,191 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 44%|████▍     | 88/198 [00:00<00:00, 876.56it/s] 89%|████████▉ | 176/198 [00:00<00:00, 869.58it/s]100%|██████████| 198/198 [00:00<00:00, 853.63it/s]
2025-05-16:03:00:15,430 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 31%|███       | 75/245 [00:00<00:00, 742.03it/s] 62%|██████▏   | 151/245 [00:00<00:00, 747.96it/s] 93%|█████████▎| 228/245 [00:00<00:00, 755.43it/s]100%|██████████| 245/245 [00:00<00:00, 754.64it/s]
2025-05-16:03:00:15,765 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 16%|█▌        | 85/545 [00:00<00:00, 843.40it/s] 31%|███       | 170/545 [00:00<00:00, 843.81it/s] 47%|████▋     | 255/545 [00:00<00:00, 795.78it/s] 61%|██████▏   | 335/545 [00:00<00:00, 775.80it/s] 76%|███████▌  | 413/545 [00:00<00:00, 768.24it/s] 90%|████████▉ | 490/545 [00:00<00:00, 761.22it/s]100%|██████████| 545/545 [00:00<00:00, 775.18it/s]
2025-05-16:03:00:16,488 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 740.06it/s]100%|██████████| 100/100 [00:00<00:00, 617.54it/s]
2025-05-16:03:00:16,655 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 11%|█         | 42/390 [00:00<00:00, 419.22it/s] 22%|██▏       | 86/390 [00:00<00:00, 414.03it/s] 44%|████▎     | 170/390 [00:00<00:00, 603.45it/s] 63%|██████▎   | 245/390 [00:00<00:00, 659.30it/s] 81%|████████  | 315/390 [00:00<00:00, 673.25it/s] 99%|█████████▊| 385/390 [00:00<00:00, 682.02it/s]100%|██████████| 390/390 [00:00<00:00, 633.01it/s]
2025-05-16:03:00:17,286 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 30%|██▉       | 71/238 [00:00<00:00, 707.33it/s] 60%|█████▉    | 142/238 [00:00<00:00, 707.50it/s] 89%|████████▉ | 213/238 [00:00<00:00, 707.26it/s]100%|██████████| 238/238 [00:00<00:00, 706.30it/s]
2025-05-16:03:00:17,633 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 64%|██████▍   | 73/114 [00:00<00:00, 719.73it/s]100%|██████████| 114/114 [00:00<00:00, 716.95it/s]
2025-05-16:03:00:17,798 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 12%|█▏        | 73/612 [00:00<00:00, 720.70it/s] 24%|██▍       | 146/612 [00:00<00:00, 718.51it/s] 36%|███▌      | 218/612 [00:00<00:00, 711.12it/s] 47%|████▋     | 290/612 [00:00<00:00, 696.26it/s] 60%|██████    | 370/612 [00:00<00:00, 729.66it/s] 74%|███████▍  | 452/612 [00:00<00:00, 757.86it/s] 88%|████████▊ | 538/612 [00:00<00:00, 790.39it/s]100%|██████████| 612/612 [00:00<00:00, 763.39it/s]
2025-05-16:03:00:18,624 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 53%|█████▎    | 70/131 [00:00<00:00, 695.31it/s]100%|██████████| 131/131 [00:00<00:00, 702.16it/s]
2025-05-16:03:00:18,816 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 37%|███▋      | 71/193 [00:00<00:00, 699.46it/s] 73%|███████▎  | 141/193 [00:00<00:00, 695.30it/s]100%|██████████| 193/193 [00:00<00:00, 693.04it/s]
2025-05-16:03:00:19,104 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  8%|▊         | 71/895 [00:00<00:01, 707.60it/s] 16%|█▌        | 144/895 [00:00<00:01, 716.00it/s] 24%|██▍       | 218/895 [00:00<00:00, 722.51it/s] 33%|███▎      | 292/895 [00:00<00:00, 726.19it/s] 41%|████      | 365/895 [00:00<00:00, 725.91it/s] 49%|████▉     | 438/895 [00:00<00:00, 723.68it/s] 57%|█████▋    | 512/895 [00:00<00:00, 726.29it/s] 65%|██████▌   | 585/895 [00:00<00:00, 726.19it/s] 74%|███████▎  | 660/895 [00:00<00:00, 728.95it/s] 82%|████████▏ | 733/895 [00:01<00:00, 728.58it/s] 90%|█████████ | 808/895 [00:01<00:00, 734.33it/s] 99%|█████████▊| 883/895 [00:01<00:00, 737.53it/s]100%|██████████| 895/895 [00:01<00:00, 728.99it/s]
2025-05-16:03:00:20,366 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 31%|███       | 74/237 [00:00<00:00, 737.50it/s] 63%|██████▎   | 149/237 [00:00<00:00, 741.31it/s] 95%|█████████▍| 224/237 [00:00<00:00, 744.85it/s]100%|██████████| 237/237 [00:00<00:00, 743.01it/s]
2025-05-16:03:00:20,696 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 47%|████▋     | 77/165 [00:00<00:00, 761.60it/s] 95%|█████████▌| 157/165 [00:00<00:00, 778.97it/s]100%|██████████| 165/165 [00:00<00:00, 777.53it/s]
2025-05-16:03:00:20,915 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 25%|██▌       | 78/311 [00:00<00:00, 774.80it/s] 50%|█████     | 157/311 [00:00<00:00, 781.78it/s] 76%|███████▌  | 236/311 [00:00<00:00, 782.78it/s]100%|██████████| 311/311 [00:00<00:00, 784.17it/s]
2025-05-16:03:00:21,323 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 21%|██        | 71/346 [00:00<00:00, 705.91it/s] 45%|████▍     | 154/346 [00:00<00:00, 778.16it/s] 71%|███████   | 245/346 [00:00<00:00, 835.13it/s] 97%|█████████▋| 335/346 [00:00<00:00, 860.42it/s]100%|██████████| 346/346 [00:00<00:00, 832.53it/s]
2025-05-16:03:00:21,753 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 44%|████▎     | 89/204 [00:00<00:00, 881.75it/s] 87%|████████▋ | 178/204 [00:00<00:00, 883.10it/s]100%|██████████| 204/204 [00:00<00:00, 882.49it/s]
2025-05-16:03:00:21,992 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 73%|███████▎  | 88/121 [00:00<00:00, 875.36it/s]100%|██████████| 121/121 [00:00<00:00, 873.79it/s]
2025-05-16:03:00:22,135 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  6%|▌         | 89/1534 [00:00<00:01, 883.48it/s] 12%|█▏        | 180/1534 [00:00<00:01, 893.55it/s] 18%|█▊        | 271/1534 [00:00<00:01, 897.12it/s] 24%|██▎       | 361/1534 [00:00<00:01, 886.78it/s] 29%|██▉       | 450/1534 [00:00<00:01, 885.61it/s] 35%|███▌      | 539/1534 [00:00<00:01, 866.49it/s] 41%|████      | 626/1534 [00:00<00:01, 850.55it/s] 46%|████▋     | 712/1534 [00:00<00:00, 838.94it/s] 52%|█████▏    | 802/1534 [00:00<00:00, 854.91it/s] 58%|█████▊    | 894/1534 [00:01<00:00, 871.78it/s] 64%|██████▍   | 985/1534 [00:01<00:00, 881.82it/s] 70%|███████   | 1075/1534 [00:01<00:00, 886.25it/s] 76%|███████▌  | 1164/1534 [00:01<00:00, 885.57it/s] 82%|████████▏ | 1253/1534 [00:01<00:00, 884.74it/s] 88%|████████▊ | 1343/1534 [00:01<00:00, 886.57it/s] 93%|█████████▎| 1433/1534 [00:01<00:00, 890.01it/s] 99%|█████████▉| 1523/1534 [00:01<00:00, 891.53it/s]100%|██████████| 1534/1534 [00:01<00:00, 879.21it/s]
2025-05-16:03:00:23,931 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 50%|████▉     | 85/171 [00:00<00:00, 840.57it/s] 99%|█████████▉| 170/171 [00:00<00:00, 806.94it/s]100%|██████████| 171/171 [00:00<00:00, 809.01it/s]
2025-05-16:03:00:24,150 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 74%|███████▍  | 80/108 [00:00<00:00, 791.54it/s]100%|██████████| 108/108 [00:00<00:00, 794.69it/s]
2025-05-16:03:00:24,292 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 69%|██████▉   | 87/126 [00:00<00:00, 864.47it/s]100%|██████████| 126/126 [00:00<00:00, 864.43it/s]
2025-05-16:03:00:24,444 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 26%|██▌       | 85/324 [00:00<00:00, 841.33it/s] 52%|█████▏    | 170/324 [00:00<00:00, 318.43it/s] 79%|███████▉  | 257/324 [00:00<00:00, 450.40it/s]100%|██████████| 324/324 [00:00<00:00, 490.87it/s]
2025-05-16:03:00:25,116 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 55%|█████▍    | 89/163 [00:00<00:00, 884.07it/s]100%|██████████| 163/163 [00:00<00:00, 884.77it/s]
2025-05-16:03:00:25,306 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:01<30:58:12,  1.99s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:02<33:50, 27.64it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:03<21:25, 43.61it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<17:02, 54.73it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<14:47, 62.99it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<13:26, 69.25it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:06<12:33, 74.03it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<11:56, 77.81it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<11:22, 81.59it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<10:53, 85.04it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:33, 87.67it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<10:17, 89.87it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:05, 91.47it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<09:49, 93.81it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:12<09:38, 95.55it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:12<09:27, 97.35it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:13<09:18, 98.82it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:14<09:08, 100.45it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:14<09:01, 101.66it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:15<08:54, 102.76it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:15<08:42, 105.14it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:16<08:31, 107.14it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:17<08:24, 108.55it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:17<08:16, 110.17it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:18<08:09, 111.51it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:18<08:04, 112.61it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:19<08:00, 113.38it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:19<07:54, 114.64it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:20<07:49, 115.80it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:20<07:45, 116.59it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:21<07:38, 118.24it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:22<07:33, 119.50it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:22<07:28, 120.64it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:23<07:23, 121.84it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:23<07:19, 122.94it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:24<07:12, 124.70it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:24<07:07, 125.91it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:25<07:03, 127.18it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:25<06:59, 128.14it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:26<06:56, 128.87it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:26<06:53, 129.50it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:27<06:49, 130.62it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:27<06:46, 131.57it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:27<06:43, 132.31it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:28<06:41, 132.79it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:28<06:39, 133.51it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:29<06:37, 133.91it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:29<06:35, 134.26it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:30<06:32, 135.40it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:30<06:29, 136.20it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:31<06:27, 136.86it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:31<06:24, 137.43it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:32<06:23, 137.85it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:32<06:21, 138.28it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:33<06:19, 138.81it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:33<06:18, 139.09it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:33<06:11, 141.54it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:34<06:06, 143.37it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:34<06:02, 144.74it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:35<05:59, 145.57it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:35<05:56, 146.71it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:36<05:55, 147.21it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:36<05:52, 148.07it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:36<05:48, 149.63it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:37<05:46, 150.42it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:37<05:43, 151.27it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:38<05:41, 152.03it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:38<05:40, 152.56it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:39<05:38, 153.08it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:39<05:37, 153.48it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:39<05:36, 153.82it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:40<05:34, 154.27it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:40<05:33, 154.63it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:41<05:30, 155.74it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:41<05:28, 156.75it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:41<05:26, 157.55it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:42<05:24, 158.31it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:42<05:21, 159.20it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:43<05:20, 159.62it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:43<05:19, 159.98it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:43<05:17, 160.64it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:44<05:16, 160.95it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:44<05:14, 162.05it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:45<05:11, 163.12it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:45<05:10, 163.72it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:45<05:07, 164.74it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:46<05:06, 165.33it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:46<05:03, 166.89it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:46<05:00, 168.08it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:47<04:58, 169.15it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:47<04:56, 169.96it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:48<04:54, 170.68it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:48<04:49, 173.87it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:48<04:45, 176.07it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:49<04:42, 177.50it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:49<04:40, 178.55it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:49<04:38, 179.57it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:50<04:36, 180.52it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:50<04:35, 180.98it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:50<04:34, 181.59it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:51<04:33, 181.90it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:51<04:32, 182.20it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:51<04:31, 182.75it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:52<04:30, 183.03it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:52<04:29, 183.66it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:53<04:26, 185.51it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:53<04:25, 185.71it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:53<04:25, 186.03it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:54<04:24, 186.41it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:54<04:22, 187.31it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:54<04:21, 187.63it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:55<04:19, 188.87it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:55<04:18, 189.59it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:55<04:16, 190.41it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:56<04:16, 190.64it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:56<04:15, 191.25it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:56<04:14, 191.30it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:57<04:13, 191.81it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:57<04:11, 193.43it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:57<04:09, 194.70it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [00:58<04:07, 195.64it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [00:58<04:06, 196.49it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [00:58<04:05, 197.12it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [00:58<03:58, 202.23it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [00:59<03:53, 206.33it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [00:59<03:50, 209.10it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [00:59<03:47, 211.62it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:00<03:44, 213.69it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:00<03:43, 215.02it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:00<03:41, 216.31it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:01<03:40, 217.24it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:01<03:38, 218.60it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:01<03:37, 219.77it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:01<03:36, 220.47it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:02<03:35, 221.05it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:02<03:34, 221.73it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:02<03:31, 224.15it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:03<03:29, 225.94it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:03<03:28, 226.97it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:03<03:27, 227.99it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:03<03:26, 228.65it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:04<03:25, 229.79it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:04<03:24, 230.50it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:04<03:22, 232.03it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:04<03:21, 233.06it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:05<03:20, 233.92it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:05<03:19, 234.94it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:05<03:18, 235.77it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:06<03:17, 236.16it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:06<03:17, 236.61it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:06<03:15, 238.78it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:06<03:13, 240.62it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:07<03:12, 241.83it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:07<03:11, 242.64it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:07<03:10, 243.68it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:07<03:09, 243.97it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:08<03:09, 244.29it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:08<03:08, 245.13it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:08<03:07, 245.79it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:08<03:06, 246.95it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:09<03:04, 248.48it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:09<03:03, 249.73it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:09<03:02, 250.52it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:09<03:01, 251.70it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:10<03:00, 252.68it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:10<02:59, 254.59it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:10<02:57, 256.70it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:10<02:55, 258.90it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:11<02:54, 260.30it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:11<02:53, 261.22it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:11<02:52, 262.35it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:11<02:52, 262.78it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:12<02:51, 263.15it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:12<02:50, 263.88it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:12<02:47, 268.92it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:12<02:45, 272.07it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:13<02:43, 274.48it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:13<02:42, 276.00it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:13<02:41, 277.92it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:13<02:40, 279.35it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:13<02:39, 279.92it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:14<02:38, 280.60it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:14<02:37, 282.06it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:14<02:36, 283.43it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:14<02:34, 286.52it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:15<02:33, 288.64it/s]Running loglikelihood requests:  21%|██        | 11905/56168 [01:15<02:32, 290.54it/s]Running loglikelihood requests:  21%|██▏       | 11969/56168 [01:15<02:31, 291.33it/s]Running loglikelihood requests:  21%|██▏       | 12033/56168 [01:15<02:30, 292.88it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [01:15<02:29, 293.95it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [01:16<02:29, 295.10it/s]Running loglikelihood requests:  22%|██▏       | 12225/56168 [01:16<02:28, 295.04it/s]Running loglikelihood requests:  22%|██▏       | 12289/56168 [01:16<02:28, 295.68it/s]Running loglikelihood requests:  22%|██▏       | 12353/56168 [01:16<02:28, 295.75it/s]Running loglikelihood requests:  22%|██▏       | 12417/56168 [01:16<02:27, 296.24it/s]Running loglikelihood requests:  22%|██▏       | 12481/56168 [01:17<02:26, 297.27it/s]Running loglikelihood requests:  22%|██▏       | 12545/56168 [01:17<02:26, 297.07it/s]Running loglikelihood requests:  22%|██▏       | 12609/56168 [01:17<02:26, 297.39it/s]Running loglikelihood requests:  23%|██▎       | 12673/56168 [01:17<02:25, 298.20it/s]Running loglikelihood requests:  23%|██▎       | 12737/56168 [01:18<02:25, 298.77it/s]Running loglikelihood requests:  23%|██▎       | 12801/56168 [01:18<02:24, 299.95it/s]Running loglikelihood requests:  23%|██▎       | 12865/56168 [01:18<02:24, 300.54it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [01:18<02:23, 301.28it/s]Running loglikelihood requests:  23%|██▎       | 12993/56168 [01:18<02:23, 301.53it/s]Running loglikelihood requests:  23%|██▎       | 13057/56168 [01:19<02:22, 302.57it/s]Running loglikelihood requests:  23%|██▎       | 13121/56168 [01:19<02:22, 302.65it/s]Running loglikelihood requests:  23%|██▎       | 13185/56168 [01:19<02:21, 303.22it/s]Running loglikelihood requests:  24%|██▎       | 13249/56168 [01:19<02:21, 304.18it/s]Running loglikelihood requests:  24%|██▎       | 13313/56168 [01:19<02:21, 303.76it/s]Running loglikelihood requests:  24%|██▍       | 13377/56168 [01:20<02:20, 304.54it/s]Running loglikelihood requests:  24%|██▍       | 13441/56168 [01:20<02:20, 304.98it/s]Running loglikelihood requests:  24%|██▍       | 13505/56168 [01:20<02:19, 305.25it/s]Running loglikelihood requests:  24%|██▍       | 13569/56168 [01:20<02:19, 305.52it/s]Running loglikelihood requests:  24%|██▍       | 13633/56168 [01:21<02:19, 306.00it/s]Running loglikelihood requests:  24%|██▍       | 13697/56168 [01:21<02:18, 306.48it/s]Running loglikelihood requests:  24%|██▍       | 13761/56168 [01:21<02:18, 307.22it/s]Running loglikelihood requests:  25%|██▍       | 13825/56168 [01:21<02:17, 307.40it/s]Running loglikelihood requests:  25%|██▍       | 13889/56168 [01:21<02:17, 307.53it/s]Running loglikelihood requests:  25%|██▍       | 13953/56168 [01:22<02:17, 307.87it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [01:22<02:16, 308.15it/s]Running loglikelihood requests:  25%|██▌       | 14081/56168 [01:22<02:16, 307.79it/s]Running loglikelihood requests:  25%|██▌       | 14145/56168 [01:22<02:16, 307.77it/s]Running loglikelihood requests:  25%|██▌       | 14209/56168 [01:22<02:16, 308.20it/s]Running loglikelihood requests:  25%|██▌       | 14273/56168 [01:23<02:15, 308.47it/s]Running loglikelihood requests:  26%|██▌       | 14337/56168 [01:23<02:14, 310.88it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [01:23<02:13, 312.64it/s]Running loglikelihood requests:  26%|██▌       | 14465/56168 [01:23<02:13, 312.97it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [01:23<02:12, 314.00it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [01:24<02:11, 315.56it/s]Running loglikelihood requests:  26%|██▌       | 14657/56168 [01:24<02:11, 316.49it/s]Running loglikelihood requests:  26%|██▌       | 14721/56168 [01:24<02:10, 317.02it/s]Running loglikelihood requests:  26%|██▋       | 14785/56168 [01:24<02:10, 317.19it/s]Running loglikelihood requests:  26%|██▋       | 14849/56168 [01:24<02:09, 318.01it/s]Running loglikelihood requests:  27%|██▋       | 14913/56168 [01:25<02:09, 318.92it/s]Running loglikelihood requests:  27%|██▋       | 14977/56168 [01:25<02:08, 320.34it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [01:25<02:07, 321.42it/s]Running loglikelihood requests:  27%|██▋       | 15105/56168 [01:25<02:08, 320.42it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [01:25<02:08, 320.22it/s]Running loglikelihood requests:  27%|██▋       | 15233/56168 [01:26<02:07, 319.90it/s]Running loglikelihood requests:  27%|██▋       | 15297/56168 [01:26<02:07, 320.22it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [01:26<02:07, 320.49it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [01:26<02:07, 320.67it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [01:26<02:06, 320.45it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [01:27<02:06, 320.53it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [01:27<02:06, 320.70it/s]Running loglikelihood requests:  28%|██▊       | 15681/56168 [01:27<02:06, 321.21it/s]Running loglikelihood requests:  28%|██▊       | 15745/56168 [01:27<02:05, 320.85it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [01:27<02:05, 320.58it/s]Running loglikelihood requests:  28%|██▊       | 15873/56168 [01:28<02:05, 320.92it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [01:28<02:05, 321.62it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [01:28<02:04, 321.62it/s]Running loglikelihood requests:  29%|██▊       | 16065/56168 [01:28<02:05, 320.72it/s]Running loglikelihood requests:  29%|██▊       | 16129/56168 [01:28<02:05, 320.02it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [01:29<02:04, 319.95it/s]Running loglikelihood requests:  29%|██▉       | 16257/56168 [01:29<02:04, 320.78it/s]Running loglikelihood requests:  29%|██▉       | 16321/56168 [01:29<02:04, 320.86it/s]Running loglikelihood requests:  29%|██▉       | 16385/56168 [01:29<02:03, 321.47it/s]Running loglikelihood requests:  29%|██▉       | 16453/56168 [01:29<02:01, 327.25it/s]Running loglikelihood requests:  29%|██▉       | 16517/56168 [01:30<02:01, 325.70it/s]Running loglikelihood requests:  30%|██▉       | 16581/56168 [01:30<02:01, 324.53it/s]Running loglikelihood requests:  30%|██▉       | 16645/56168 [01:30<02:01, 324.36it/s]Running loglikelihood requests:  30%|██▉       | 16709/56168 [01:30<02:01, 323.99it/s]Running loglikelihood requests:  30%|██▉       | 16773/56168 [01:30<02:01, 324.04it/s]Running loglikelihood requests:  30%|██▉       | 16837/56168 [01:31<02:01, 323.83it/s]Running loglikelihood requests:  30%|███       | 16901/56168 [01:31<02:01, 323.65it/s]Running loglikelihood requests:  30%|███       | 16965/56168 [01:31<02:01, 323.58it/s]Running loglikelihood requests:  30%|███       | 17029/56168 [01:31<02:01, 322.91it/s]Running loglikelihood requests:  30%|███       | 17093/56168 [01:31<02:01, 322.81it/s]Running loglikelihood requests:  31%|███       | 17157/56168 [01:32<01:59, 326.45it/s]Running loglikelihood requests:  31%|███       | 17221/56168 [01:32<01:57, 331.04it/s]Running loglikelihood requests:  31%|███       | 17285/56168 [01:32<01:56, 332.58it/s]Running loglikelihood requests:  31%|███       | 17349/56168 [01:32<01:56, 333.42it/s]Running loglikelihood requests:  31%|███       | 17413/56168 [01:32<01:55, 334.39it/s]Running loglikelihood requests:  31%|███       | 17477/56168 [01:33<01:55, 334.00it/s]Running loglikelihood requests:  31%|███       | 17541/56168 [01:33<01:55, 335.80it/s]Running loglikelihood requests:  31%|███▏      | 17605/56168 [01:33<01:54, 337.42it/s]Running loglikelihood requests:  31%|███▏      | 17669/56168 [01:33<01:54, 337.07it/s]Running loglikelihood requests:  32%|███▏      | 17733/56168 [01:33<01:53, 337.51it/s]Running loglikelihood requests:  32%|███▏      | 17797/56168 [01:33<01:53, 337.53it/s]Running loglikelihood requests:  32%|███▏      | 17861/56168 [01:34<01:53, 337.37it/s]Running loglikelihood requests:  32%|███▏      | 17925/56168 [01:34<01:53, 337.87it/s]Running loglikelihood requests:  32%|███▏      | 17989/56168 [01:34<01:52, 339.60it/s]Running loglikelihood requests:  32%|███▏      | 18053/56168 [01:34<01:52, 339.40it/s]Running loglikelihood requests:  32%|███▏      | 18117/56168 [01:34<01:51, 340.06it/s]Running loglikelihood requests:  32%|███▏      | 18181/56168 [01:35<01:51, 340.44it/s]Running loglikelihood requests:  32%|███▏      | 18245/56168 [01:35<01:51, 340.87it/s]Running loglikelihood requests:  33%|███▎      | 18309/56168 [01:35<01:51, 340.91it/s]Running loglikelihood requests:  33%|███▎      | 18373/56168 [01:35<01:50, 341.06it/s]Running loglikelihood requests:  33%|███▎      | 18437/56168 [01:35<01:50, 341.51it/s]Running loglikelihood requests:  33%|███▎      | 18501/56168 [01:36<01:50, 342.22it/s]Running loglikelihood requests:  33%|███▎      | 18565/56168 [01:36<01:50, 341.65it/s]Running loglikelihood requests:  33%|███▎      | 18629/56168 [01:36<01:49, 341.89it/s]Running loglikelihood requests:  33%|███▎      | 18693/56168 [01:36<01:49, 341.97it/s]Running loglikelihood requests:  33%|███▎      | 18757/56168 [01:36<01:49, 342.92it/s]Running loglikelihood requests:  34%|███▎      | 18821/56168 [01:36<01:48, 343.37it/s]Running loglikelihood requests:  34%|███▎      | 18885/56168 [01:37<01:48, 343.58it/s]Running loglikelihood requests:  34%|███▎      | 18949/56168 [01:37<01:48, 343.24it/s]Running loglikelihood requests:  34%|███▍      | 19013/56168 [01:37<01:47, 344.33it/s]Running loglikelihood requests:  34%|███▍      | 19077/56168 [01:37<01:47, 344.83it/s]Running loglikelihood requests:  34%|███▍      | 19141/56168 [01:37<01:47, 344.80it/s]Running loglikelihood requests:  34%|███▍      | 19205/56168 [01:38<01:47, 344.91it/s]Running loglikelihood requests:  34%|███▍      | 19269/56168 [01:38<01:46, 345.10it/s]Running loglikelihood requests:  34%|███▍      | 19333/56168 [01:38<01:46, 345.54it/s]Running loglikelihood requests:  35%|███▍      | 19397/56168 [01:38<01:46, 346.17it/s]Running loglikelihood requests:  35%|███▍      | 19461/56168 [01:38<01:45, 349.42it/s]Running loglikelihood requests:  35%|███▍      | 19525/56168 [01:38<01:44, 350.44it/s]Running loglikelihood requests:  35%|███▍      | 19589/56168 [01:39<01:43, 352.62it/s]Running loglikelihood requests:  35%|███▍      | 19653/56168 [01:39<01:43, 352.44it/s]Running loglikelihood requests:  35%|███▌      | 19717/56168 [01:39<01:43, 352.87it/s]Running loglikelihood requests:  35%|███▌      | 19781/56168 [01:39<01:43, 353.25it/s]Running loglikelihood requests:  35%|███▌      | 19845/56168 [01:39<01:42, 353.60it/s]Running loglikelihood requests:  35%|███▌      | 19909/56168 [01:40<01:42, 354.29it/s]Running loglikelihood requests:  36%|███▌      | 19973/56168 [01:40<01:42, 354.72it/s]Running loglikelihood requests:  36%|███▌      | 20041/56168 [01:40<01:39, 361.46it/s]Running loglikelihood requests:  36%|███▌      | 20105/56168 [01:40<01:39, 360.90it/s]Running loglikelihood requests:  36%|███▌      | 20169/56168 [01:40<01:39, 360.60it/s]Running loglikelihood requests:  36%|███▌      | 20233/56168 [01:40<01:39, 359.48it/s]Running loglikelihood requests:  36%|███▌      | 20297/56168 [01:41<01:39, 359.15it/s]Running loglikelihood requests:  36%|███▋      | 20361/56168 [01:41<01:39, 359.35it/s]Running loglikelihood requests:  36%|███▋      | 20425/56168 [01:41<01:39, 358.40it/s]Running loglikelihood requests:  36%|███▋      | 20489/56168 [01:41<01:39, 358.31it/s]Running loglikelihood requests:  37%|███▋      | 20553/56168 [01:41<01:39, 359.15it/s]Running loglikelihood requests:  37%|███▋      | 20617/56168 [01:42<01:38, 360.70it/s]Running loglikelihood requests:  37%|███▋      | 20681/56168 [01:42<01:38, 360.46it/s]Running loglikelihood requests:  37%|███▋      | 20745/56168 [01:42<01:38, 360.80it/s]Running loglikelihood requests:  37%|███▋      | 20809/56168 [01:42<01:37, 361.10it/s]Running loglikelihood requests:  37%|███▋      | 20873/56168 [01:42<01:37, 361.40it/s]Running loglikelihood requests:  37%|███▋      | 20937/56168 [01:42<01:37, 360.37it/s]Running loglikelihood requests:  37%|███▋      | 21001/56168 [01:43<01:37, 359.75it/s]Running loglikelihood requests:  38%|███▊      | 21065/56168 [01:43<01:37, 360.60it/s]Running loglikelihood requests:  38%|███▊      | 21129/56168 [01:43<01:36, 361.61it/s]Running loglikelihood requests:  38%|███▊      | 21193/56168 [01:43<01:36, 362.08it/s]Running loglikelihood requests:  38%|███▊      | 21257/56168 [01:43<01:36, 361.33it/s]Running loglikelihood requests:  38%|███▊      | 21321/56168 [01:43<01:36, 361.44it/s]Running loglikelihood requests:  38%|███▊      | 21385/56168 [01:44<01:35, 363.38it/s]Running loglikelihood requests:  38%|███▊      | 21449/56168 [01:44<01:35, 363.65it/s]Running loglikelihood requests:  38%|███▊      | 21513/56168 [01:44<01:35, 364.07it/s]Running loglikelihood requests:  38%|███▊      | 21577/56168 [01:44<01:34, 365.58it/s]Running loglikelihood requests:  39%|███▊      | 21641/56168 [01:44<01:34, 365.84it/s]Running loglikelihood requests:  39%|███▊      | 21705/56168 [01:45<01:34, 365.92it/s]Running loglikelihood requests:  39%|███▉      | 21769/56168 [01:45<01:34, 365.77it/s]Running loglikelihood requests:  39%|███▉      | 21833/56168 [01:45<01:33, 366.37it/s]Running loglikelihood requests:  39%|███▉      | 21897/56168 [01:45<01:33, 366.57it/s]Running loglikelihood requests:  39%|███▉      | 21961/56168 [01:45<01:32, 367.86it/s]Running loglikelihood requests:  39%|███▉      | 22025/56168 [01:45<01:33, 366.65it/s]Running loglikelihood requests:  39%|███▉      | 22089/56168 [01:46<01:33, 366.22it/s]Running loglikelihood requests:  39%|███▉      | 22153/56168 [01:46<01:32, 367.67it/s]Running loglikelihood requests:  40%|███▉      | 22217/56168 [01:46<01:32, 368.43it/s]Running loglikelihood requests:  40%|███▉      | 22281/56168 [01:46<01:31, 369.88it/s]Running loglikelihood requests:  40%|███▉      | 22345/56168 [01:46<01:31, 368.96it/s]Running loglikelihood requests:  40%|███▉      | 22409/56168 [01:46<01:31, 369.75it/s]Running loglikelihood requests:  40%|████      | 22473/56168 [01:47<01:30, 370.69it/s]Running loglikelihood requests:  40%|████      | 22537/56168 [01:47<01:30, 371.40it/s]Running loglikelihood requests:  40%|████      | 22601/56168 [01:47<01:30, 371.93it/s]Running loglikelihood requests:  40%|████      | 22665/56168 [01:47<01:29, 372.63it/s]Running loglikelihood requests:  40%|████      | 22729/56168 [01:47<01:29, 371.90it/s]Running loglikelihood requests:  41%|████      | 22793/56168 [01:47<01:29, 372.41it/s]Running loglikelihood requests:  41%|████      | 22857/56168 [01:48<01:29, 372.96it/s]Running loglikelihood requests:  41%|████      | 22921/56168 [01:48<01:29, 373.10it/s]Running loglikelihood requests:  41%|████      | 22985/56168 [01:48<01:28, 372.86it/s]Running loglikelihood requests:  41%|████      | 23049/56168 [01:48<01:28, 373.31it/s]Running loglikelihood requests:  41%|████      | 23113/56168 [01:48<01:28, 372.79it/s]Running loglikelihood requests:  41%|████▏     | 23177/56168 [01:48<01:28, 373.47it/s]Running loglikelihood requests:  41%|████▏     | 23241/56168 [01:49<01:28, 373.39it/s]Running loglikelihood requests:  41%|████▏     | 23305/56168 [01:49<01:27, 374.25it/s]Running loglikelihood requests:  42%|████▏     | 23369/56168 [01:49<01:27, 373.69it/s]Running loglikelihood requests:  42%|████▏     | 23433/56168 [01:49<01:27, 374.76it/s]Running loglikelihood requests:  42%|████▏     | 23497/56168 [01:49<01:27, 375.05it/s]Running loglikelihood requests:  42%|████▏     | 23561/56168 [01:50<01:26, 375.44it/s]Running loglikelihood requests:  42%|████▏     | 23625/56168 [01:50<01:26, 375.96it/s]Running loglikelihood requests:  42%|████▏     | 23689/56168 [01:50<01:26, 374.88it/s]Running loglikelihood requests:  42%|████▏     | 23753/56168 [01:50<01:23, 387.99it/s]Running loglikelihood requests:  42%|████▏     | 23817/56168 [01:50<01:21, 397.75it/s]Running loglikelihood requests:  43%|████▎     | 23881/56168 [01:50<01:19, 405.22it/s]Running loglikelihood requests:  43%|████▎     | 23945/56168 [01:50<01:18, 410.16it/s]Running loglikelihood requests:  43%|████▎     | 24009/56168 [01:51<01:17, 413.37it/s]Running loglikelihood requests:  43%|████▎     | 24073/56168 [01:51<01:17, 415.81it/s]Running loglikelihood requests:  43%|████▎     | 24137/56168 [01:51<01:16, 418.20it/s]Running loglikelihood requests:  43%|████▎     | 24201/56168 [01:51<01:16, 419.00it/s]Running loglikelihood requests:  43%|████▎     | 24265/56168 [01:51<01:15, 420.35it/s]Running loglikelihood requests:  43%|████▎     | 24329/56168 [01:51<01:15, 420.74it/s]Running loglikelihood requests:  43%|████▎     | 24393/56168 [01:52<01:15, 420.93it/s]Running loglikelihood requests:  44%|████▎     | 24457/56168 [01:52<01:15, 421.86it/s]Running loglikelihood requests:  44%|████▎     | 24521/56168 [01:52<01:14, 422.73it/s]Running loglikelihood requests:  44%|████▍     | 24585/56168 [01:52<01:14, 422.98it/s]Running loglikelihood requests:  44%|████▍     | 24649/56168 [01:52<01:14, 423.58it/s]Running loglikelihood requests:  44%|████▍     | 24713/56168 [01:52<01:14, 423.86it/s]Running loglikelihood requests:  44%|████▍     | 24777/56168 [01:52<01:14, 423.86it/s]Running loglikelihood requests:  44%|████▍     | 24841/56168 [01:53<01:14, 422.76it/s]Running loglikelihood requests:  44%|████▍     | 24905/56168 [01:53<01:13, 423.95it/s]Running loglikelihood requests:  44%|████▍     | 24969/56168 [01:53<01:13, 423.10it/s]Running loglikelihood requests:  45%|████▍     | 25033/56168 [01:53<01:13, 423.86it/s]Running loglikelihood requests:  45%|████▍     | 25097/56168 [01:53<01:13, 424.29it/s]Running loglikelihood requests:  45%|████▍     | 25161/56168 [01:53<01:12, 425.03it/s]Running loglikelihood requests:  45%|████▍     | 25225/56168 [01:53<01:12, 426.12it/s]Running loglikelihood requests:  45%|████▌     | 25289/56168 [01:54<01:12, 426.65it/s]Running loglikelihood requests:  45%|████▌     | 25353/56168 [01:54<01:12, 427.52it/s]Running loglikelihood requests:  45%|████▌     | 25417/56168 [01:54<01:12, 426.63it/s]Running loglikelihood requests:  45%|████▌     | 25481/56168 [01:54<01:11, 427.09it/s]Running loglikelihood requests:  45%|████▌     | 25545/56168 [01:54<01:11, 426.23it/s]Running loglikelihood requests:  46%|████▌     | 25609/56168 [01:54<01:11, 427.06it/s]Running loglikelihood requests:  46%|████▌     | 25673/56168 [01:55<01:11, 427.49it/s]Running loglikelihood requests:  46%|████▌     | 25737/56168 [01:55<01:11, 427.97it/s]Running loglikelihood requests:  46%|████▌     | 25801/56168 [01:55<01:10, 429.08it/s]Running loglikelihood requests:  46%|████▌     | 25865/56168 [01:55<01:10, 428.55it/s]Running loglikelihood requests:  46%|████▌     | 25929/56168 [01:55<01:10, 429.02it/s]Running loglikelihood requests:  46%|████▋     | 25993/56168 [01:55<01:10, 428.67it/s]Running loglikelihood requests:  46%|████▋     | 26057/56168 [01:55<01:10, 429.11it/s]Running loglikelihood requests:  47%|████▋     | 26121/56168 [01:56<01:09, 429.69it/s]Running loglikelihood requests:  47%|████▋     | 26185/56168 [01:56<01:09, 430.28it/s]Running loglikelihood requests:  47%|████▋     | 26249/56168 [01:56<01:09, 429.80it/s]Running loglikelihood requests:  47%|████▋     | 26313/56168 [01:56<01:09, 430.84it/s]Running loglikelihood requests:  47%|████▋     | 26377/56168 [01:56<01:08, 431.88it/s]Running loglikelihood requests:  47%|████▋     | 26441/56168 [01:56<01:09, 430.04it/s]Running loglikelihood requests:  47%|████▋     | 26505/56168 [01:56<01:08, 430.54it/s]Running loglikelihood requests:  47%|████▋     | 26569/56168 [01:57<01:08, 432.41it/s]Running loglikelihood requests:  47%|████▋     | 26633/56168 [01:57<01:08, 429.86it/s]Running loglikelihood requests:  48%|████▊     | 26697/56168 [01:57<01:08, 429.29it/s]Running loglikelihood requests:  48%|████▊     | 26761/56168 [01:57<01:08, 430.15it/s]Running loglikelihood requests:  48%|████▊     | 26825/56168 [01:57<01:08, 430.47it/s]Running loglikelihood requests:  48%|████▊     | 26889/56168 [01:57<01:07, 434.25it/s]Running loglikelihood requests:  48%|████▊     | 26953/56168 [01:57<01:07, 435.79it/s]Running loglikelihood requests:  48%|████▊     | 27017/56168 [01:58<01:06, 436.37it/s]Running loglikelihood requests:  48%|████▊     | 27081/56168 [01:58<01:06, 436.47it/s]Running loglikelihood requests:  48%|████▊     | 27145/56168 [01:58<01:06, 436.52it/s]Running loglikelihood requests:  48%|████▊     | 27209/56168 [01:58<01:06, 437.59it/s]Running loglikelihood requests:  49%|████▊     | 27273/56168 [01:58<01:05, 438.17it/s]Running loglikelihood requests:  49%|████▊     | 27337/56168 [01:58<01:05, 437.90it/s]Running loglikelihood requests:  49%|████▉     | 27401/56168 [01:59<01:05, 438.55it/s]Running loglikelihood requests:  49%|████▉     | 27465/56168 [01:59<01:05, 439.50it/s]Running loglikelihood requests:  49%|████▉     | 27529/56168 [01:59<01:05, 439.77it/s]Running loglikelihood requests:  49%|████▉     | 27593/56168 [01:59<01:05, 439.54it/s]Running loglikelihood requests:  49%|████▉     | 27657/56168 [01:59<01:04, 439.98it/s]Running loglikelihood requests:  49%|████▉     | 27721/56168 [01:59<01:04, 439.70it/s]Running loglikelihood requests:  49%|████▉     | 27785/56168 [01:59<01:04, 441.02it/s]Running loglikelihood requests:  50%|████▉     | 27849/56168 [02:00<01:04, 442.21it/s]Running loglikelihood requests:  50%|████▉     | 27913/56168 [02:00<01:03, 441.86it/s]Running loglikelihood requests:  50%|████▉     | 27977/56168 [02:00<01:03, 442.19it/s]Running loglikelihood requests:  50%|████▉     | 28041/56168 [02:00<01:03, 443.53it/s]Running loglikelihood requests:  50%|█████     | 28105/56168 [02:00<01:03, 443.41it/s]Running loglikelihood requests:  50%|█████     | 28169/56168 [02:00<01:03, 442.09it/s]Running loglikelihood requests:  50%|█████     | 28233/56168 [02:00<01:02, 443.99it/s]Running loglikelihood requests:  50%|█████     | 28297/56168 [02:01<01:02, 446.02it/s]Running loglikelihood requests:  50%|█████     | 28361/56168 [02:01<01:02, 446.67it/s]Running loglikelihood requests:  51%|█████     | 28425/56168 [02:01<01:02, 446.91it/s]Running loglikelihood requests:  51%|█████     | 28489/56168 [02:01<01:01, 449.26it/s]Running loglikelihood requests:  51%|█████     | 28553/56168 [02:01<01:01, 450.81it/s]Running loglikelihood requests:  51%|█████     | 28617/56168 [02:01<01:01, 450.49it/s]Running loglikelihood requests:  51%|█████     | 28681/56168 [02:01<01:00, 451.01it/s]Running loglikelihood requests:  51%|█████     | 28745/56168 [02:02<01:00, 451.64it/s]Running loglikelihood requests:  51%|█████▏    | 28809/56168 [02:02<01:00, 451.46it/s]Running loglikelihood requests:  51%|█████▏    | 28873/56168 [02:02<01:00, 450.96it/s]Running loglikelihood requests:  52%|█████▏    | 28937/56168 [02:02<01:00, 450.70it/s]Running loglikelihood requests:  52%|█████▏    | 29001/56168 [02:02<01:00, 450.32it/s]Running loglikelihood requests:  52%|█████▏    | 29065/56168 [02:02<01:00, 450.79it/s]Running loglikelihood requests:  52%|█████▏    | 29129/56168 [02:02<00:59, 451.70it/s]Running loglikelihood requests:  52%|█████▏    | 29193/56168 [02:03<00:59, 451.23it/s]Running loglikelihood requests:  52%|█████▏    | 29257/56168 [02:03<00:59, 451.35it/s]Running loglikelihood requests:  52%|█████▏    | 29321/56168 [02:03<00:59, 451.25it/s]Running loglikelihood requests:  52%|█████▏    | 29385/56168 [02:03<00:59, 451.52it/s]Running loglikelihood requests:  52%|█████▏    | 29449/56168 [02:03<00:59, 450.98it/s]Running loglikelihood requests:  53%|█████▎    | 29513/56168 [02:03<00:59, 451.04it/s]Running loglikelihood requests:  53%|█████▎    | 29577/56168 [02:03<00:58, 451.77it/s]Running loglikelihood requests:  53%|█████▎    | 29641/56168 [02:04<00:58, 451.43it/s]Running loglikelihood requests:  53%|█████▎    | 29705/56168 [02:04<00:58, 451.52it/s]Running loglikelihood requests:  53%|█████▎    | 29769/56168 [02:04<00:58, 452.03it/s]Running loglikelihood requests:  53%|█████▎    | 29833/56168 [02:04<00:58, 452.92it/s]Running loglikelihood requests:  53%|█████▎    | 29901/56168 [02:04<00:56, 461.84it/s]Running loglikelihood requests:  53%|█████▎    | 29965/56168 [02:04<00:57, 459.54it/s]Running loglikelihood requests:  53%|█████▎    | 30029/56168 [02:04<00:57, 458.20it/s]Running loglikelihood requests:  54%|█████▎    | 30093/56168 [02:04<00:57, 456.52it/s]Running loglikelihood requests:  54%|█████▎    | 30157/56168 [02:05<00:57, 455.52it/s]Running loglikelihood requests:  54%|█████▍    | 30221/56168 [02:05<00:57, 455.17it/s]Running loglikelihood requests:  54%|█████▍    | 30285/56168 [02:05<00:56, 454.20it/s]Running loglikelihood requests:  54%|█████▍    | 30349/56168 [02:05<00:56, 454.47it/s]Running loglikelihood requests:  54%|█████▍    | 30413/56168 [02:05<00:56, 454.28it/s]Running loglikelihood requests:  54%|█████▍    | 30477/56168 [02:05<00:56, 454.64it/s]Running loglikelihood requests:  54%|█████▍    | 30545/56168 [02:05<00:55, 463.21it/s]Running loglikelihood requests:  54%|█████▍    | 30609/56168 [02:06<00:55, 459.88it/s]Running loglikelihood requests:  55%|█████▍    | 30673/56168 [02:06<00:55, 457.79it/s]Running loglikelihood requests:  55%|█████▍    | 30737/56168 [02:06<00:54, 464.82it/s]Running loglikelihood requests:  55%|█████▍    | 30801/56168 [02:06<00:54, 467.36it/s]Running loglikelihood requests:  55%|█████▍    | 30865/56168 [02:06<00:53, 470.12it/s]Running loglikelihood requests:  55%|█████▌    | 30929/56168 [02:06<00:53, 470.54it/s]Running loglikelihood requests:  55%|█████▌    | 30993/56168 [02:06<00:53, 471.50it/s]Running loglikelihood requests:  55%|█████▌    | 31057/56168 [02:07<00:53, 472.66it/s]Running loglikelihood requests:  55%|█████▌    | 31121/56168 [02:07<00:52, 473.07it/s]Running loglikelihood requests:  56%|█████▌    | 31185/56168 [02:07<00:52, 473.40it/s]Running loglikelihood requests:  56%|█████▌    | 31249/56168 [02:07<00:52, 475.49it/s]Running loglikelihood requests:  56%|█████▌    | 31313/56168 [02:07<00:52, 476.10it/s]Running loglikelihood requests:  56%|█████▌    | 31377/56168 [02:07<00:51, 477.07it/s]Running loglikelihood requests:  56%|█████▌    | 31441/56168 [02:07<00:51, 477.78it/s]Running loglikelihood requests:  56%|█████▌    | 31505/56168 [02:08<00:51, 477.88it/s]Running loglikelihood requests:  56%|█████▌    | 31569/56168 [02:08<00:51, 478.24it/s]Running loglikelihood requests:  56%|█████▋    | 31633/56168 [02:08<00:51, 477.99it/s]Running loglikelihood requests:  56%|█████▋    | 31697/56168 [02:08<00:51, 478.60it/s]Running loglikelihood requests:  57%|█████▋    | 31761/56168 [02:08<00:51, 477.80it/s]Running loglikelihood requests:  57%|█████▋    | 31825/56168 [02:08<00:51, 477.18it/s]Running loglikelihood requests:  57%|█████▋    | 31889/56168 [02:08<00:50, 479.10it/s]Running loglikelihood requests:  57%|█████▋    | 31953/56168 [02:08<00:50, 478.84it/s]Running loglikelihood requests:  57%|█████▋    | 32017/56168 [02:09<00:50, 480.02it/s]Running loglikelihood requests:  57%|█████▋    | 32081/56168 [02:09<00:50, 480.11it/s]Running loglikelihood requests:  57%|█████▋    | 32145/56168 [02:09<00:50, 479.55it/s]Running loglikelihood requests:  57%|█████▋    | 32209/56168 [02:09<00:49, 480.03it/s]Running loglikelihood requests:  57%|█████▋    | 32273/56168 [02:09<00:49, 480.39it/s]Running loglikelihood requests:  58%|█████▊    | 32337/56168 [02:09<00:49, 480.19it/s]Running loglikelihood requests:  58%|█████▊    | 32401/56168 [02:09<00:49, 479.47it/s]Running loglikelihood requests:  58%|█████▊    | 32465/56168 [02:10<00:49, 479.95it/s]Running loglikelihood requests:  58%|█████▊    | 32529/56168 [02:10<00:49, 480.75it/s]Running loglikelihood requests:  58%|█████▊    | 32593/56168 [02:10<00:49, 479.24it/s]Running loglikelihood requests:  58%|█████▊    | 32657/56168 [02:10<00:48, 481.18it/s]Running loglikelihood requests:  58%|█████▊    | 32721/56168 [02:10<00:48, 481.41it/s]Running loglikelihood requests:  58%|█████▊    | 32785/56168 [02:10<00:48, 481.60it/s]Running loglikelihood requests:  58%|█████▊    | 32849/56168 [02:10<00:48, 482.88it/s]Running loglikelihood requests:  59%|█████▊    | 32913/56168 [02:10<00:48, 481.58it/s]Running loglikelihood requests:  59%|█████▊    | 32977/56168 [02:11<00:48, 482.19it/s]Running loglikelihood requests:  59%|█████▉    | 33041/56168 [02:11<00:48, 480.90it/s]Running loglikelihood requests:  59%|█████▉    | 33105/56168 [02:11<00:47, 481.56it/s]Running loglikelihood requests:  59%|█████▉    | 33169/56168 [02:11<00:47, 480.46it/s]Running loglikelihood requests:  59%|█████▉    | 33233/56168 [02:11<00:47, 481.67it/s]Running loglikelihood requests:  59%|█████▉    | 33297/56168 [02:11<00:47, 482.59it/s]Running loglikelihood requests:  59%|█████▉    | 33361/56168 [02:11<00:47, 481.66it/s]Running loglikelihood requests:  60%|█████▉    | 33425/56168 [02:12<00:47, 482.06it/s]Running loglikelihood requests:  60%|█████▉    | 33489/56168 [02:12<00:47, 481.28it/s]Running loglikelihood requests:  60%|█████▉    | 33553/56168 [02:12<00:46, 481.25it/s]Running loglikelihood requests:  60%|█████▉    | 33617/56168 [02:12<00:46, 481.68it/s]Running loglikelihood requests:  60%|█████▉    | 33681/56168 [02:12<00:46, 483.52it/s]Running loglikelihood requests:  60%|██████    | 33745/56168 [02:12<00:46, 483.30it/s]Running loglikelihood requests:  60%|██████    | 33809/56168 [02:12<00:46, 483.88it/s]Running loglikelihood requests:  60%|██████    | 33873/56168 [02:12<00:46, 483.69it/s]Running loglikelihood requests:  60%|██████    | 33937/56168 [02:13<00:45, 484.07it/s]Running loglikelihood requests:  61%|██████    | 34001/56168 [02:13<00:45, 483.23it/s]Running loglikelihood requests:  61%|██████    | 34065/56168 [02:13<00:45, 483.00it/s]Running loglikelihood requests:  61%|██████    | 34129/56168 [02:13<00:45, 484.05it/s]Running loglikelihood requests:  61%|██████    | 34193/56168 [02:13<00:45, 484.02it/s]Running loglikelihood requests:  61%|██████    | 34257/56168 [02:13<00:45, 484.93it/s]Running loglikelihood requests:  61%|██████    | 34321/56168 [02:13<00:44, 485.62it/s]Running loglikelihood requests:  61%|██████    | 34385/56168 [02:13<00:44, 486.26it/s]Running loglikelihood requests:  61%|██████▏   | 34449/56168 [02:14<00:44, 486.40it/s]Running loglikelihood requests:  61%|██████▏   | 34513/56168 [02:14<00:44, 485.72it/s]Running loglikelihood requests:  62%|██████▏   | 34577/56168 [02:14<00:44, 485.37it/s]Running loglikelihood requests:  62%|██████▏   | 34641/56168 [02:14<00:44, 487.03it/s]Running loglikelihood requests:  62%|██████▏   | 34705/56168 [02:14<00:44, 486.47it/s]Running loglikelihood requests:  62%|██████▏   | 34769/56168 [02:14<00:43, 487.23it/s]Running loglikelihood requests:  62%|██████▏   | 34833/56168 [02:14<00:43, 486.95it/s]Running loglikelihood requests:  62%|██████▏   | 34897/56168 [02:15<00:43, 488.34it/s]Running loglikelihood requests:  62%|██████▏   | 34961/56168 [02:15<00:43, 487.85it/s]Running loglikelihood requests:  62%|██████▏   | 35025/56168 [02:15<00:43, 487.71it/s]Running loglikelihood requests:  62%|██████▏   | 35089/56168 [02:15<00:43, 487.84it/s]Running loglikelihood requests:  63%|██████▎   | 35153/56168 [02:15<00:43, 488.25it/s]Running loglikelihood requests:  63%|██████▎   | 35217/56168 [02:15<00:42, 488.43it/s]Running loglikelihood requests:  63%|██████▎   | 35281/56168 [02:15<00:42, 488.08it/s]Running loglikelihood requests:  63%|██████▎   | 35345/56168 [02:15<00:42, 488.31it/s]Running loglikelihood requests:  63%|██████▎   | 35409/56168 [02:16<00:42, 488.28it/s]Running loglikelihood requests:  63%|██████▎   | 35473/56168 [02:16<00:42, 487.82it/s]Running loglikelihood requests:  63%|██████▎   | 35537/56168 [02:16<00:41, 495.13it/s]Running loglikelihood requests:  63%|██████▎   | 35601/56168 [02:16<00:41, 499.30it/s]Running loglikelihood requests:  63%|██████▎   | 35665/56168 [02:16<00:40, 502.22it/s]Running loglikelihood requests:  64%|██████▎   | 35729/56168 [02:16<00:40, 504.65it/s]Running loglikelihood requests:  64%|██████▎   | 35793/56168 [02:16<00:40, 506.28it/s]Running loglikelihood requests:  64%|██████▍   | 35857/56168 [02:16<00:39, 507.83it/s]Running loglikelihood requests:  64%|██████▍   | 35921/56168 [02:17<00:39, 509.19it/s]Running loglikelihood requests:  64%|██████▍   | 35985/56168 [02:17<00:39, 510.37it/s]Running loglikelihood requests:  64%|██████▍   | 36049/56168 [02:17<00:39, 510.19it/s]Running loglikelihood requests:  64%|██████▍   | 36113/56168 [02:17<00:39, 511.41it/s]Running loglikelihood requests:  64%|██████▍   | 36177/56168 [02:17<00:39, 511.19it/s]Running loglikelihood requests:  65%|██████▍   | 36241/56168 [02:17<00:39, 509.26it/s]Running loglikelihood requests:  65%|██████▍   | 36305/56168 [02:17<00:39, 508.70it/s]Running loglikelihood requests:  65%|██████▍   | 36369/56168 [02:17<00:38, 509.45it/s]Running loglikelihood requests:  65%|██████▍   | 36433/56168 [02:18<00:38, 511.39it/s]Running loglikelihood requests:  65%|██████▍   | 36497/56168 [02:18<00:38, 511.02it/s]Running loglikelihood requests:  65%|██████▌   | 36561/56168 [02:18<00:38, 510.64it/s]Running loglikelihood requests:  65%|██████▌   | 36625/56168 [02:18<00:38, 509.91it/s]Running loglikelihood requests:  65%|██████▌   | 36689/56168 [02:18<00:38, 510.90it/s]Running loglikelihood requests:  65%|██████▌   | 36753/56168 [02:18<00:38, 510.11it/s]Running loglikelihood requests:  66%|██████▌   | 36817/56168 [02:18<00:38, 509.10it/s]Running loglikelihood requests:  66%|██████▌   | 36881/56168 [02:18<00:37, 508.77it/s]Running loglikelihood requests:  66%|██████▌   | 36945/56168 [02:19<00:37, 509.76it/s]Running loglikelihood requests:  66%|██████▌   | 37009/56168 [02:19<00:37, 511.33it/s]Running loglikelihood requests:  66%|██████▌   | 37073/56168 [02:19<00:37, 512.75it/s]Running loglikelihood requests:  66%|██████▌   | 37137/56168 [02:19<00:37, 513.08it/s]Running loglikelihood requests:  66%|██████▌   | 37201/56168 [02:19<00:37, 512.16it/s]Running loglikelihood requests:  66%|██████▋   | 37265/56168 [02:19<00:36, 511.40it/s]Running loglikelihood requests:  66%|██████▋   | 37333/56168 [02:19<00:36, 519.98it/s]Running loglikelihood requests:  67%|██████▋   | 37397/56168 [02:19<00:36, 517.86it/s]Running loglikelihood requests:  67%|██████▋   | 37461/56168 [02:20<00:36, 515.52it/s]Running loglikelihood requests:  67%|██████▋   | 37525/56168 [02:20<00:36, 513.29it/s]Running loglikelihood requests:  67%|██████▋   | 37589/56168 [02:20<00:36, 513.21it/s]Running loglikelihood requests:  67%|██████▋   | 37653/56168 [02:20<00:36, 513.71it/s]Running loglikelihood requests:  67%|██████▋   | 37717/56168 [02:20<00:35, 516.08it/s]Running loglikelihood requests:  67%|██████▋   | 37781/56168 [02:20<00:35, 516.94it/s]Running loglikelihood requests:  67%|██████▋   | 37845/56168 [02:20<00:35, 515.65it/s]Running loglikelihood requests:  67%|██████▋   | 37909/56168 [02:20<00:35, 516.18it/s]Running loglikelihood requests:  68%|██████▊   | 37973/56168 [02:21<00:35, 514.60it/s]Running loglikelihood requests:  68%|██████▊   | 38037/56168 [02:21<00:35, 512.99it/s]Running loglikelihood requests:  68%|██████▊   | 38101/56168 [02:21<00:35, 513.52it/s]Running loglikelihood requests:  68%|██████▊   | 38165/56168 [02:21<00:35, 513.59it/s]Running loglikelihood requests:  68%|██████▊   | 38229/56168 [02:21<00:35, 512.42it/s]Running loglikelihood requests:  68%|██████▊   | 38293/56168 [02:21<00:35, 510.54it/s]Running loglikelihood requests:  68%|██████▊   | 38357/56168 [02:21<00:34, 511.33it/s]Running loglikelihood requests:  68%|██████▊   | 38421/56168 [02:21<00:34, 512.21it/s]Running loglikelihood requests:  69%|██████▊   | 38485/56168 [02:22<00:34, 512.59it/s]Running loglikelihood requests:  69%|██████▊   | 38549/56168 [02:22<00:34, 512.25it/s]Running loglikelihood requests:  69%|██████▊   | 38613/56168 [02:22<00:34, 513.14it/s]Running loglikelihood requests:  69%|██████▉   | 38677/56168 [02:22<00:34, 514.43it/s]Running loglikelihood requests:  69%|██████▉   | 38741/56168 [02:22<00:33, 514.96it/s]Running loglikelihood requests:  69%|██████▉   | 38805/56168 [02:22<00:33, 515.89it/s]Running loglikelihood requests:  69%|██████▉   | 38869/56168 [02:22<00:33, 516.45it/s]Running loglikelihood requests:  69%|██████▉   | 38933/56168 [02:22<00:33, 517.23it/s]Running loglikelihood requests:  69%|██████▉   | 38997/56168 [02:23<00:33, 517.80it/s]Running loglikelihood requests:  70%|██████▉   | 39061/56168 [02:23<00:33, 517.54it/s]Running loglikelihood requests:  70%|██████▉   | 39125/56168 [02:23<00:32, 517.01it/s]Running loglikelihood requests:  70%|██████▉   | 39189/56168 [02:23<00:32, 516.57it/s]Running loglikelihood requests:  70%|██████▉   | 39253/56168 [02:23<00:32, 517.23it/s]Running loglikelihood requests:  70%|██████▉   | 39317/56168 [02:23<00:32, 517.41it/s]Running loglikelihood requests:  70%|███████   | 39381/56168 [02:23<00:32, 516.92it/s]Running loglikelihood requests:  70%|███████   | 39445/56168 [02:23<00:32, 517.22it/s]Running loglikelihood requests:  70%|███████   | 39509/56168 [02:24<00:32, 518.90it/s]Running loglikelihood requests:  70%|███████   | 39573/56168 [02:24<00:31, 520.27it/s]Running loglikelihood requests:  71%|███████   | 39637/56168 [02:24<00:31, 519.95it/s]Running loglikelihood requests:  71%|███████   | 39701/56168 [02:24<00:31, 520.00it/s]Running loglikelihood requests:  71%|███████   | 39765/56168 [02:24<00:31, 518.88it/s]Running loglikelihood requests:  71%|███████   | 39829/56168 [02:24<00:31, 518.03it/s]Running loglikelihood requests:  71%|███████   | 39893/56168 [02:24<00:31, 518.65it/s]Running loglikelihood requests:  71%|███████   | 39957/56168 [02:24<00:31, 519.43it/s]Running loglikelihood requests:  71%|███████▏  | 40021/56168 [02:25<00:30, 521.33it/s]Running loglikelihood requests:  71%|███████▏  | 40085/56168 [02:25<00:30, 521.95it/s]Running loglikelihood requests:  71%|███████▏  | 40149/56168 [02:25<00:30, 522.65it/s]Running loglikelihood requests:  72%|███████▏  | 40213/56168 [02:25<00:30, 522.90it/s]Running loglikelihood requests:  72%|███████▏  | 40277/56168 [02:25<00:30, 525.39it/s]Running loglikelihood requests:  72%|███████▏  | 40341/56168 [02:25<00:30, 525.56it/s]Running loglikelihood requests:  72%|███████▏  | 40405/56168 [02:25<00:29, 525.68it/s]Running loglikelihood requests:  72%|███████▏  | 40469/56168 [02:25<00:29, 524.96it/s]Running loglikelihood requests:  72%|███████▏  | 40533/56168 [02:26<00:29, 525.05it/s]Running loglikelihood requests:  72%|███████▏  | 40597/56168 [02:26<00:29, 526.37it/s]Running loglikelihood requests:  72%|███████▏  | 40661/56168 [02:26<00:29, 525.96it/s]Running loglikelihood requests:  73%|███████▎  | 40725/56168 [02:26<00:29, 526.69it/s]Running loglikelihood requests:  73%|███████▎  | 40789/56168 [02:26<00:29, 526.78it/s]Running loglikelihood requests:  73%|███████▎  | 40853/56168 [02:26<00:29, 527.48it/s]Running loglikelihood requests:  73%|███████▎  | 40921/56168 [02:26<00:28, 537.93it/s]Running loglikelihood requests:  73%|███████▎  | 40985/56168 [02:26<00:28, 534.39it/s]Running loglikelihood requests:  73%|███████▎  | 41049/56168 [02:27<00:28, 531.73it/s]Running loglikelihood requests:  73%|███████▎  | 41113/56168 [02:27<00:28, 530.36it/s]Running loglikelihood requests:  73%|███████▎  | 41177/56168 [02:27<00:28, 529.73it/s]Running loglikelihood requests:  73%|███████▎  | 41241/56168 [02:27<00:28, 529.48it/s]Running loglikelihood requests:  74%|███████▎  | 41305/56168 [02:27<00:28, 529.11it/s]Running loglikelihood requests:  74%|███████▎  | 41369/56168 [02:27<00:27, 539.43it/s]Running loglikelihood requests:  74%|███████▍  | 41433/56168 [02:27<00:26, 547.31it/s]Running loglikelihood requests:  74%|███████▍  | 41497/56168 [02:27<00:26, 551.16it/s]Running loglikelihood requests:  74%|███████▍  | 41561/56168 [02:27<00:26, 556.39it/s]Running loglikelihood requests:  74%|███████▍  | 41625/56168 [02:28<00:26, 558.64it/s]Running loglikelihood requests:  74%|███████▍  | 41689/56168 [02:28<00:25, 560.55it/s]Running loglikelihood requests:  74%|███████▍  | 41753/56168 [02:28<00:25, 561.34it/s]Running loglikelihood requests:  74%|███████▍  | 41817/56168 [02:28<00:25, 561.14it/s]Running loglikelihood requests:  75%|███████▍  | 41881/56168 [02:28<00:25, 561.83it/s]Running loglikelihood requests:  75%|███████▍  | 41945/56168 [02:28<00:25, 561.62it/s]Running loglikelihood requests:  75%|███████▍  | 42009/56168 [02:28<00:25, 562.18it/s]Running loglikelihood requests:  75%|███████▍  | 42073/56168 [02:28<00:24, 564.65it/s]Running loglikelihood requests:  75%|███████▌  | 42137/56168 [02:28<00:24, 564.64it/s]Running loglikelihood requests:  75%|███████▌  | 42201/56168 [02:29<00:24, 565.94it/s]Running loglikelihood requests:  75%|███████▌  | 42265/56168 [02:29<00:24, 566.03it/s]Running loglikelihood requests:  75%|███████▌  | 42329/56168 [02:29<00:24, 566.61it/s]Running loglikelihood requests:  75%|███████▌  | 42393/56168 [02:29<00:24, 566.54it/s]Running loglikelihood requests:  76%|███████▌  | 42457/56168 [02:29<00:24, 564.84it/s]Running loglikelihood requests:  76%|███████▌  | 42521/56168 [02:29<00:24, 566.14it/s]Running loglikelihood requests:  76%|███████▌  | 42585/56168 [02:29<00:24, 565.82it/s]Running loglikelihood requests:  76%|███████▌  | 42649/56168 [02:29<00:23, 565.61it/s]Running loglikelihood requests:  76%|███████▌  | 42713/56168 [02:29<00:23, 565.24it/s]Running loglikelihood requests:  76%|███████▌  | 42777/56168 [02:30<00:23, 563.45it/s]Running loglikelihood requests:  76%|███████▋  | 42841/56168 [02:30<00:23, 565.11it/s]Running loglikelihood requests:  76%|███████▋  | 42905/56168 [02:30<00:23, 565.39it/s]Running loglikelihood requests:  77%|███████▋  | 42969/56168 [02:30<00:23, 565.66it/s]Running loglikelihood requests:  77%|███████▋  | 43033/56168 [02:30<00:23, 566.26it/s]Running loglikelihood requests:  77%|███████▋  | 43097/56168 [02:30<00:23, 565.48it/s]Running loglikelihood requests:  77%|███████▋  | 43161/56168 [02:30<00:22, 567.38it/s]Running loglikelihood requests:  77%|███████▋  | 43225/56168 [02:30<00:22, 567.23it/s]Running loglikelihood requests:  77%|███████▋  | 43289/56168 [02:31<00:22, 568.47it/s]Running loglikelihood requests:  77%|███████▋  | 43353/56168 [02:31<00:22, 568.65it/s]Running loglikelihood requests:  77%|███████▋  | 43417/56168 [02:31<00:22, 567.70it/s]Running loglikelihood requests:  77%|███████▋  | 43481/56168 [02:31<00:22, 568.75it/s]Running loglikelihood requests:  78%|███████▊  | 43545/56168 [02:31<00:22, 568.28it/s]Running loglikelihood requests:  78%|███████▊  | 43609/56168 [02:31<00:22, 568.71it/s]Running loglikelihood requests:  78%|███████▊  | 43673/56168 [02:31<00:22, 567.83it/s]Running loglikelihood requests:  78%|███████▊  | 43741/56168 [02:31<00:21, 579.16it/s]Running loglikelihood requests:  78%|███████▊  | 43805/56168 [02:31<00:21, 576.70it/s]Running loglikelihood requests:  78%|███████▊  | 43869/56168 [02:32<00:21, 575.09it/s]Running loglikelihood requests:  78%|███████▊  | 43933/56168 [02:32<00:21, 572.52it/s]Running loglikelihood requests:  78%|███████▊  | 43997/56168 [02:32<00:21, 570.96it/s]Running loglikelihood requests:  78%|███████▊  | 44061/56168 [02:32<00:21, 571.33it/s]Running loglikelihood requests:  79%|███████▊  | 44125/56168 [02:32<00:21, 569.14it/s]Running loglikelihood requests:  79%|███████▊  | 44189/56168 [02:32<00:21, 569.38it/s]Running loglikelihood requests:  79%|███████▉  | 44253/56168 [02:32<00:20, 569.37it/s]Running loglikelihood requests:  79%|███████▉  | 44317/56168 [02:32<00:20, 570.10it/s]Running loglikelihood requests:  79%|███████▉  | 44381/56168 [02:32<00:20, 570.53it/s]Running loglikelihood requests:  79%|███████▉  | 44445/56168 [02:33<00:20, 572.03it/s]Running loglikelihood requests:  79%|███████▉  | 44509/56168 [02:33<00:20, 571.39it/s]Running loglikelihood requests:  79%|███████▉  | 44573/56168 [02:33<00:20, 570.75it/s]Running loglikelihood requests:  79%|███████▉  | 44637/56168 [02:33<00:20, 570.72it/s]Running loglikelihood requests:  80%|███████▉  | 44701/56168 [02:33<00:20, 569.16it/s]Running loglikelihood requests:  80%|███████▉  | 44765/56168 [02:33<00:19, 571.08it/s]Running loglikelihood requests:  80%|███████▉  | 44829/56168 [02:33<00:19, 571.05it/s]Running loglikelihood requests:  80%|███████▉  | 44893/56168 [02:33<00:19, 572.26it/s]Running loglikelihood requests:  80%|████████  | 44957/56168 [02:33<00:19, 571.93it/s]Running loglikelihood requests:  80%|████████  | 45021/56168 [02:34<00:19, 573.76it/s]Running loglikelihood requests:  80%|████████  | 45085/56168 [02:34<00:19, 572.91it/s]Running loglikelihood requests:  80%|████████  | 45149/56168 [02:34<00:19, 572.90it/s]Running loglikelihood requests:  80%|████████  | 45213/56168 [02:34<00:19, 571.86it/s]Running loglikelihood requests:  81%|████████  | 45277/56168 [02:34<00:18, 573.91it/s]Running loglikelihood requests:  81%|████████  | 45341/56168 [02:34<00:18, 573.83it/s]Running loglikelihood requests:  81%|████████  | 45405/56168 [02:34<00:18, 574.54it/s]Running loglikelihood requests:  81%|████████  | 45469/56168 [02:34<00:18, 574.12it/s]Running loglikelihood requests:  81%|████████  | 45533/56168 [02:34<00:18, 575.43it/s]Running loglikelihood requests:  81%|████████  | 45597/56168 [02:35<00:18, 575.04it/s]Running loglikelihood requests:  81%|████████▏ | 45661/56168 [02:35<00:18, 576.38it/s]Running loglikelihood requests:  81%|████████▏ | 45725/56168 [02:35<00:18, 576.21it/s]Running loglikelihood requests:  82%|████████▏ | 45789/56168 [02:35<00:17, 577.43it/s]Running loglikelihood requests:  82%|████████▏ | 45853/56168 [02:35<00:17, 576.34it/s]Running loglikelihood requests:  82%|████████▏ | 45917/56168 [02:35<00:17, 577.08it/s]Running loglikelihood requests:  82%|████████▏ | 45981/56168 [02:35<00:17, 575.81it/s]Running loglikelihood requests:  82%|████████▏ | 46045/56168 [02:35<00:17, 576.54it/s]Running loglikelihood requests:  82%|████████▏ | 46109/56168 [02:35<00:17, 576.05it/s]Running loglikelihood requests:  82%|████████▏ | 46173/56168 [02:36<00:17, 577.40it/s]Running loglikelihood requests:  82%|████████▏ | 46237/56168 [02:36<00:17, 576.54it/s]Running loglikelihood requests:  82%|████████▏ | 46301/56168 [02:36<00:17, 578.01it/s]Running loglikelihood requests:  83%|████████▎ | 46365/56168 [02:36<00:17, 576.37it/s]Running loglikelihood requests:  83%|████████▎ | 46429/56168 [02:36<00:16, 575.21it/s]Running loglikelihood requests:  83%|████████▎ | 46493/56168 [02:36<00:16, 574.28it/s]Running loglikelihood requests:  83%|████████▎ | 46557/56168 [02:36<00:16, 576.31it/s]Running loglikelihood requests:  83%|████████▎ | 46621/56168 [02:36<00:16, 576.66it/s]Running loglikelihood requests:  83%|████████▎ | 46685/56168 [02:36<00:16, 577.43it/s]Running loglikelihood requests:  83%|████████▎ | 46749/56168 [02:37<00:16, 577.46it/s]Running loglikelihood requests:  83%|████████▎ | 46813/56168 [02:37<00:16, 577.74it/s]Running loglikelihood requests:  83%|████████▎ | 46877/56168 [02:37<00:16, 578.44it/s]Running loglikelihood requests:  84%|████████▎ | 46941/56168 [02:37<00:15, 578.84it/s]Running loglikelihood requests:  84%|████████▎ | 47005/56168 [02:37<00:15, 580.02it/s]Running loglikelihood requests:  84%|████████▍ | 47069/56168 [02:37<00:15, 580.29it/s]Running loglikelihood requests:  84%|████████▍ | 47133/56168 [02:37<00:15, 580.80it/s]Running loglikelihood requests:  84%|████████▍ | 47197/56168 [02:37<00:15, 579.97it/s]Running loglikelihood requests:  84%|████████▍ | 47261/56168 [02:37<00:15, 581.00it/s]Running loglikelihood requests:  84%|████████▍ | 47325/56168 [02:38<00:15, 578.10it/s]Running loglikelihood requests:  84%|████████▍ | 47389/56168 [02:38<00:15, 580.19it/s]Running loglikelihood requests:  84%|████████▍ | 47453/56168 [02:38<00:15, 580.97it/s]Running loglikelihood requests:  85%|████████▍ | 47517/56168 [02:38<00:14, 581.51it/s]Running loglikelihood requests:  85%|████████▍ | 47581/56168 [02:38<00:14, 582.22it/s]Running loglikelihood requests:  85%|████████▍ | 47645/56168 [02:38<00:14, 581.29it/s]Running loglikelihood requests:  85%|████████▍ | 47709/56168 [02:38<00:14, 582.48it/s]Running loglikelihood requests:  85%|████████▌ | 47773/56168 [02:38<00:14, 581.65it/s]Running loglikelihood requests:  85%|████████▌ | 47837/56168 [02:38<00:14, 582.42it/s]Running loglikelihood requests:  85%|████████▌ | 47901/56168 [02:39<00:14, 582.03it/s]Running loglikelihood requests:  85%|████████▌ | 47965/56168 [02:39<00:14, 580.95it/s]Running loglikelihood requests:  86%|████████▌ | 48029/56168 [02:39<00:14, 579.49it/s]Running loglikelihood requests:  86%|████████▌ | 48093/56168 [02:39<00:13, 580.81it/s]Running loglikelihood requests:  86%|████████▌ | 48157/56168 [02:39<00:13, 580.46it/s]Running loglikelihood requests:  86%|████████▌ | 48221/56168 [02:39<00:13, 580.55it/s]Running loglikelihood requests:  86%|████████▌ | 48285/56168 [02:39<00:13, 580.61it/s]Running loglikelihood requests:  86%|████████▌ | 48349/56168 [02:39<00:13, 585.09it/s]Running loglikelihood requests:  86%|████████▌ | 48413/56168 [02:39<00:13, 590.54it/s]Running loglikelihood requests:  86%|████████▋ | 48477/56168 [02:39<00:12, 595.24it/s]Running loglikelihood requests:  86%|████████▋ | 48541/56168 [02:40<00:12, 596.85it/s]Running loglikelihood requests:  87%|████████▋ | 48605/56168 [02:40<00:12, 597.97it/s]Running loglikelihood requests:  87%|████████▋ | 48669/56168 [02:40<00:12, 600.84it/s]Running loglikelihood requests:  87%|████████▋ | 48733/56168 [02:40<00:12, 602.31it/s]Running loglikelihood requests:  87%|████████▋ | 48797/56168 [02:40<00:12, 602.95it/s]Running loglikelihood requests:  87%|████████▋ | 48861/56168 [02:40<00:12, 602.64it/s]Running loglikelihood requests:  87%|████████▋ | 48925/56168 [02:40<00:12, 602.86it/s]Running loglikelihood requests:  87%|████████▋ | 48989/56168 [02:40<00:11, 603.59it/s]Running loglikelihood requests:  87%|████████▋ | 49053/56168 [02:40<00:11, 604.66it/s]Running loglikelihood requests:  87%|████████▋ | 49117/56168 [02:41<00:11, 603.90it/s]Running loglikelihood requests:  88%|████████▊ | 49181/56168 [02:41<00:11, 605.09it/s]Running loglikelihood requests:  88%|████████▊ | 49245/56168 [02:41<00:11, 605.76it/s]Running loglikelihood requests:  88%|████████▊ | 49309/56168 [02:41<00:11, 606.13it/s]Running loglikelihood requests:  88%|████████▊ | 49373/56168 [02:41<00:11, 604.45it/s]Running loglikelihood requests:  88%|████████▊ | 49437/56168 [02:41<00:11, 604.76it/s]Running loglikelihood requests:  88%|████████▊ | 49501/56168 [02:41<00:11, 605.08it/s]Running loglikelihood requests:  88%|████████▊ | 49565/56168 [02:41<00:10, 605.31it/s]Running loglikelihood requests:  88%|████████▊ | 49629/56168 [02:41<00:10, 604.20it/s]Running loglikelihood requests:  88%|████████▊ | 49693/56168 [02:42<00:10, 603.87it/s]Running loglikelihood requests:  89%|████████▊ | 49757/56168 [02:42<00:10, 605.30it/s]Running loglikelihood requests:  89%|████████▊ | 49821/56168 [02:42<00:10, 606.08it/s]Running loglikelihood requests:  89%|████████▉ | 49885/56168 [02:42<00:10, 605.44it/s]Running loglikelihood requests:  89%|████████▉ | 49953/56168 [02:42<00:10, 616.55it/s]Running loglikelihood requests:  89%|████████▉ | 50017/56168 [02:42<00:10, 613.81it/s]Running loglikelihood requests:  89%|████████▉ | 50081/56168 [02:42<00:09, 613.67it/s]Running loglikelihood requests:  89%|████████▉ | 50145/56168 [02:42<00:09, 613.90it/s]Running loglikelihood requests:  89%|████████▉ | 50209/56168 [02:42<00:09, 613.19it/s]Running loglikelihood requests:  90%|████████▉ | 50273/56168 [02:42<00:09, 611.03it/s]Running loglikelihood requests:  90%|████████▉ | 50337/56168 [02:43<00:09, 611.17it/s]Running loglikelihood requests:  90%|████████▉ | 50401/56168 [02:43<00:09, 611.25it/s]Running loglikelihood requests:  90%|████████▉ | 50465/56168 [02:43<00:09, 610.80it/s]Running loglikelihood requests:  90%|████████▉ | 50529/56168 [02:43<00:09, 610.58it/s]Running loglikelihood requests:  90%|█████████ | 50593/56168 [02:43<00:09, 609.26it/s]Running loglikelihood requests:  90%|█████████ | 50657/56168 [02:43<00:09, 609.09it/s]Running loglikelihood requests:  90%|█████████ | 50721/56168 [02:43<00:08, 611.53it/s]Running loglikelihood requests:  90%|█████████ | 50789/56168 [02:43<00:08, 623.64it/s]Running loglikelihood requests:  91%|█████████ | 50853/56168 [02:43<00:08, 620.23it/s]Running loglikelihood requests:  91%|█████████ | 50917/56168 [02:44<00:08, 617.03it/s]Running loglikelihood requests:  91%|█████████ | 50981/56168 [02:44<00:08, 615.31it/s]Running loglikelihood requests:  91%|█████████ | 51045/56168 [02:44<00:08, 615.17it/s]Running loglikelihood requests:  91%|█████████ | 51109/56168 [02:44<00:08, 615.08it/s]Running loglikelihood requests:  91%|█████████ | 51173/56168 [02:44<00:08, 615.58it/s]Running loglikelihood requests:  91%|█████████ | 51237/56168 [02:44<00:08, 614.67it/s]Running loglikelihood requests:  91%|█████████▏| 51301/56168 [02:44<00:07, 612.34it/s]Running loglikelihood requests:  91%|█████████▏| 51365/56168 [02:44<00:07, 612.33it/s]Running loglikelihood requests:  92%|█████████▏| 51429/56168 [02:44<00:07, 612.79it/s]Running loglikelihood requests:  92%|█████████▏| 51493/56168 [02:44<00:07, 612.62it/s]Running loglikelihood requests:  92%|█████████▏| 51557/56168 [02:45<00:07, 613.70it/s]Running loglikelihood requests:  92%|█████████▏| 51621/56168 [02:45<00:07, 614.07it/s]Running loglikelihood requests:  92%|█████████▏| 51685/56168 [02:45<00:07, 613.40it/s]Running loglikelihood requests:  92%|█████████▏| 51749/56168 [02:45<00:07, 613.53it/s]Running loglikelihood requests:  92%|█████████▏| 51813/56168 [02:45<00:07, 614.51it/s]Running loglikelihood requests:  92%|█████████▏| 51877/56168 [02:45<00:06, 614.91it/s]Running loglikelihood requests:  92%|█████████▏| 51941/56168 [02:45<00:06, 615.37it/s]Running loglikelihood requests:  93%|█████████▎| 52005/56168 [02:45<00:06, 613.81it/s]Running loglikelihood requests:  93%|█████████▎| 52069/56168 [02:45<00:06, 612.76it/s]Running loglikelihood requests:  93%|█████████▎| 52133/56168 [02:45<00:06, 612.34it/s]Running loglikelihood requests:  93%|█████████▎| 52197/56168 [02:46<00:06, 612.66it/s]Running loglikelihood requests:  93%|█████████▎| 52261/56168 [02:46<00:06, 614.97it/s]Running loglikelihood requests:  93%|█████████▎| 52325/56168 [02:46<00:06, 616.08it/s]Running loglikelihood requests:  93%|█████████▎| 52389/56168 [02:46<00:06, 617.07it/s]Running loglikelihood requests:  93%|█████████▎| 52453/56168 [02:46<00:06, 617.29it/s]Running loglikelihood requests:  93%|█████████▎| 52517/56168 [02:46<00:05, 616.88it/s]Running loglikelihood requests:  94%|█████████▎| 52581/56168 [02:46<00:05, 617.39it/s]Running loglikelihood requests:  94%|█████████▎| 52645/56168 [02:46<00:05, 617.23it/s]Running loglikelihood requests:  94%|█████████▍| 52709/56168 [02:46<00:05, 617.61it/s]Running loglikelihood requests:  94%|█████████▍| 52773/56168 [02:47<00:05, 618.17it/s]Running loglikelihood requests:  94%|█████████▍| 52837/56168 [02:47<00:05, 617.88it/s]Running loglikelihood requests:  94%|█████████▍| 52901/56168 [02:47<00:05, 617.90it/s]Running loglikelihood requests:  94%|█████████▍| 52965/56168 [02:47<00:05, 615.37it/s]Running loglikelihood requests:  94%|█████████▍| 53029/56168 [02:47<00:05, 612.70it/s]Running loglikelihood requests:  95%|█████████▍| 53093/56168 [02:47<00:05, 614.28it/s]Running loglikelihood requests:  95%|█████████▍| 53157/56168 [02:47<00:04, 615.38it/s]Running loglikelihood requests:  95%|█████████▍| 53221/56168 [02:47<00:04, 615.70it/s]Running loglikelihood requests:  95%|█████████▍| 53285/56168 [02:47<00:04, 617.85it/s]Running loglikelihood requests:  95%|█████████▍| 53349/56168 [02:47<00:04, 617.69it/s]Running loglikelihood requests:  95%|█████████▌| 53413/56168 [02:48<00:04, 614.96it/s]Running loglikelihood requests:  95%|█████████▌| 53477/56168 [02:48<00:04, 614.72it/s]Running loglikelihood requests:  95%|█████████▌| 53541/56168 [02:48<00:04, 614.39it/s]Running loglikelihood requests:  95%|█████████▌| 53605/56168 [02:48<00:04, 612.85it/s]Running loglikelihood requests:  96%|█████████▌| 53669/56168 [02:48<00:04, 614.60it/s]Running loglikelihood requests:  96%|█████████▌| 53733/56168 [02:48<00:03, 614.20it/s]Running loglikelihood requests:  96%|█████████▌| 53797/56168 [02:48<00:03, 616.63it/s]Running loglikelihood requests:  96%|█████████▌| 53861/56168 [02:48<00:03, 617.30it/s]Running loglikelihood requests:  96%|█████████▌| 53925/56168 [02:48<00:03, 617.43it/s]Running loglikelihood requests:  96%|█████████▌| 53989/56168 [02:48<00:03, 619.40it/s]Running loglikelihood requests:  96%|█████████▌| 54053/56168 [02:49<00:03, 620.43it/s]Running loglikelihood requests:  96%|█████████▋| 54117/56168 [02:49<00:03, 618.95it/s]Running loglikelihood requests:  97%|█████████▋| 54204/56168 [02:49<00:02, 692.38it/s]Running loglikelihood requests:  97%|█████████▋| 54289/56168 [02:49<00:02, 738.62it/s]Running loglikelihood requests:  97%|█████████▋| 54373/56168 [02:49<00:02, 608.73it/s]Running loglikelihood requests:  97%|█████████▋| 54452/56168 [02:49<00:02, 654.05it/s]Running loglikelihood requests:  97%|█████████▋| 54535/56168 [02:49<00:02, 700.42it/s]Running loglikelihood requests:  97%|█████████▋| 54623/56168 [02:49<00:02, 749.39it/s]Running loglikelihood requests:  97%|█████████▋| 54701/56168 [02:50<00:02, 609.68it/s]Running loglikelihood requests:  98%|█████████▊| 54790/56168 [02:50<00:02, 678.04it/s]Running loglikelihood requests:  98%|█████████▊| 54885/56168 [02:50<00:02, 610.29it/s]Running loglikelihood requests:  98%|█████████▊| 54970/56168 [02:50<00:01, 665.77it/s]Running loglikelihood requests:  98%|█████████▊| 55062/56168 [02:50<00:01, 728.81it/s]Running loglikelihood requests:  98%|█████████▊| 55141/56168 [02:50<00:01, 607.62it/s]Running loglikelihood requests:  98%|█████████▊| 55217/56168 [02:50<00:01, 643.20it/s]Running loglikelihood requests:  98%|█████████▊| 55297/56168 [02:50<00:01, 682.28it/s]Running loglikelihood requests:  99%|█████████▊| 55376/56168 [02:51<00:01, 710.44it/s]Running loglikelihood requests:  99%|█████████▊| 55461/56168 [02:51<00:01, 606.46it/s]Running loglikelihood requests:  99%|█████████▉| 55562/56168 [02:51<00:00, 703.33it/s]Running loglikelihood requests:  99%|█████████▉| 55653/56168 [02:51<00:00, 624.97it/s]Running loglikelihood requests:  99%|█████████▉| 55761/56168 [02:51<00:00, 730.21it/s]Running loglikelihood requests:  99%|█████████▉| 55845/56168 [02:51<00:00, 630.66it/s]Running loglikelihood requests: 100%|█████████▉| 55949/56168 [02:51<00:00, 723.87it/s]Running loglikelihood requests: 100%|█████████▉| 56037/56168 [02:52<00:00, 633.48it/s]Running loglikelihood requests: 100%|█████████▉| 56148/56168 [02:52<00:00, 741.01it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:52<00:00, 326.11it/s]
2025-05-16:03:03:53,468 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=shengyuanhu/wmdp_unlearn_npo_ckpt_100_zephyr,tokenizer=HuggingFaceH4/zephyr-7b-beta), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.5975|±  |0.0040|
| - humanities                          |      2|none  |      |acc   |↑  |0.5581|±  |0.0069|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.4127|±  |0.0440|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.7212|±  |0.0350|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.7206|±  |0.0315|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.7932|±  |0.0264|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.7190|±  |0.0410|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.7037|±  |0.0441|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.7301|±  |0.0349|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6272|±  |0.0260|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.3587|±  |0.0160|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6399|±  |0.0273|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.6759|±  |0.0260|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4817|±  |0.0128|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.8363|±  |0.0284|
| - other                               |      2|none  |      |acc   |↑  |0.6575|±  |0.0083|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.6300|±  |0.0485|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.6566|±  |0.0292|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.6069|±  |0.0372|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.4100|±  |0.0494|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6233|±  |0.0325|
|  - management                         |      1|none  |     0|acc   |↑  |0.6602|±  |0.0469|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.7735|±  |0.0274|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.6200|±  |0.0488|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.7905|±  |0.0146|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.6176|±  |0.0278|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.4539|±  |0.0297|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.7059|±  |0.0277|
|  - virology                           |      1|none  |     0|acc   |↑  |0.4940|±  |0.0389|
| - social sciences                     |      2|none  |      |acc   |↑  |0.6779|±  |0.0083|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.5351|±  |0.0469|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.6919|±  |0.0329|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8135|±  |0.0281|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.5795|±  |0.0250|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.6176|±  |0.0316|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.7835|±  |0.0177|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7557|±  |0.0377|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.6111|±  |0.0197|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6364|±  |0.0461|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.6000|±  |0.0314|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8259|±  |0.0268|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.7500|±  |0.0435|
| - stem                                |      2|none  |      |acc   |↑  |0.5186|±  |0.0087|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.3400|±  |0.0476|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.5778|±  |0.0427|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.6316|±  |0.0393|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.6458|±  |0.0400|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4400|±  |0.0499|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.4700|±  |0.0502|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.2900|±  |0.0456|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5490|±  |0.0495|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.6300|±  |0.0485|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.5404|±  |0.0326|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.5241|±  |0.0416|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4709|±  |0.0257|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7032|±  |0.0260|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.4828|±  |0.0352|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.5600|±  |0.0499|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.4000|±  |0.0299|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.4106|±  |0.0402|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.5370|±  |0.0340|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.5000|±  |0.0475|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.5975|±  |0.0040|
| - humanities     |      2|none  |      |acc   |↑  |0.5581|±  |0.0069|
| - other          |      2|none  |      |acc   |↑  |0.6575|±  |0.0083|
| - social sciences|      2|none  |      |acc   |↑  |0.6779|±  |0.0083|
| - stem           |      2|none  |      |acc   |↑  |0.5186|±  |0.0087|

2025-05-16:03:03:58,627 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-16:03:03:58,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,753 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,808 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,820 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,822 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,829 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:58,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,440 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,443 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,452 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,461 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,471 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,474 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,478 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,482 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,485 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,489 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,507 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:03:59,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,198 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,202 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,204 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,206 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,211 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,215 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,219 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,224 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,561 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,582 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,610 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,623 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,635 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,641 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,650 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,657 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,660 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,663 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,666 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,669 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,673 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,676 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,689 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,692 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,711 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,718 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,721 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,727 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,807 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,814 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,830 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,837 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,845 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,856 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,860 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,874 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,880 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,892 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,894 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,896 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,902 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,906 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,913 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,915 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,917 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,922 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,924 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,931 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,933 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,956 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,960 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,975 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,977 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,979 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,982 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,984 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:00,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:01,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:01,857 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:01,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:01,861 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:01,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:01,864 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:01,866 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:01,868 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,684 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,686 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,689 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,692 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,694 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,707 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,711 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,714 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,716 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,718 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,727 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,729 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,733 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,735 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,740 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,744 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,751 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,753 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,759 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,787 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,807 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,812 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,814 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,822 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,826 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,829 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,831 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,833 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,846 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,853 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,856 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,861 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,862 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,864 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,866 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,870 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,872 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,881 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,885 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,887 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,891 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,894 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,896 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,897 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,899 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,902 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,903 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,906 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,907 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,909 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,913 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,915 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,919 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,922 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,923 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,925 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,931 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,936 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,941 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,948 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,950 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,953 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,956 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,959 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,960 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,961 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,963 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,965 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,968 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,975 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,977 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,979 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,980 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,982 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,984 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,987 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,989 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,994 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:02,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,001 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,003 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,005 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,010 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,012 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,013 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,016 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,019 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,034 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,038 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,041 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,043 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,046 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,053 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,056 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,058 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,064 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,069 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,072 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,074 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,075 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,076 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,078 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,079 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,082 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,084 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,086 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,088 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,095 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,096 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,098 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,099 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,103 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,110 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,111 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,113 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,114 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,115 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,118 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,182 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,184 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,189 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:03,192 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:05,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:05,467 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:04:05,470 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-16:03:04:05,473 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-16:03:04:05,474 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': 'shengyuanhu/benchmark_wmdp_npo_kl_ckpt_75', 'tokenizer': 'HuggingFaceH4/zephyr-7b-beta'}
2025-05-16:03:04:06,215 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-16:03:04:06,411 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:12<00:25, 12.98s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:25<00:12, 12.77s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:36<00:00, 12.11s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:36<00:00, 12.31s/it]
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:05:04,851 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-16:03:05:04,857 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 753.92it/s]100%|██████████| 100/100 [00:00<00:00, 751.07it/s]
2025-05-16:03:05:04,995 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 25%|██▍       | 76/310 [00:00<00:00, 754.56it/s] 49%|████▉     | 152/310 [00:00<00:00, 747.68it/s] 74%|███████▎  | 228/310 [00:00<00:00, 752.15it/s] 98%|█████████▊| 305/310 [00:00<00:00, 758.03it/s]100%|██████████| 310/310 [00:00<00:00, 755.24it/s]
2025-05-16:03:05:05,417 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 82%|████████▏ | 82/100 [00:00<00:00, 816.01it/s]100%|██████████| 100/100 [00:00<00:00, 825.67it/s]
2025-05-16:03:05:05,543 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 61%|██████    | 88/145 [00:00<00:00, 874.07it/s]100%|██████████| 145/145 [00:00<00:00, 872.90it/s]
2025-05-16:03:05:05,714 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 868.13it/s]100%|██████████| 100/100 [00:00<00:00, 867.60it/s]
2025-05-16:03:05:05,833 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 41%|████      | 83/203 [00:00<00:00, 829.95it/s] 82%|████████▏ | 167/203 [00:00<00:00, 833.69it/s]100%|██████████| 203/203 [00:00<00:00, 841.34it/s]
2025-05-16:03:05:06,081 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 59%|█████▉    | 90/152 [00:00<00:00, 895.44it/s]100%|██████████| 152/152 [00:00<00:00, 896.32it/s]
2025-05-16:03:05:06,256 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 86%|████████▋ | 88/102 [00:00<00:00, 877.51it/s]100%|██████████| 102/102 [00:00<00:00, 873.83it/s]
2025-05-16:03:05:06,376 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 860.99it/s]100%|██████████| 100/100 [00:00<00:00, 860.63it/s]
2025-05-16:03:05:06,498 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 62%|██████▏   | 89/144 [00:00<00:00, 886.75it/s]100%|██████████| 144/144 [00:00<00:00, 885.70it/s]
2025-05-16:03:05:06,666 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 38%|███▊      | 90/235 [00:00<00:00, 892.71it/s] 77%|███████▋  | 180/235 [00:00<00:00, 887.63it/s]100%|██████████| 235/235 [00:00<00:00, 890.13it/s]
2025-05-16:03:05:06,937 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 81%|████████▏ | 91/112 [00:00<00:00, 900.57it/s]100%|██████████| 112/112 [00:00<00:00, 898.12it/s]
2025-05-16:03:05:07,066 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 33%|███▎      | 90/270 [00:00<00:00, 898.82it/s] 67%|██████▋   | 180/270 [00:00<00:00, 899.13it/s]100%|██████████| 270/270 [00:00<00:00, 899.80it/s]
2025-05-16:03:05:07,374 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 881.13it/s]100%|██████████| 100/100 [00:00<00:00, 878.33it/s]
2025-05-16:03:05:07,492 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 86%|████████▌ | 86/100 [00:00<00:00, 859.50it/s]100%|██████████| 100/100 [00:00<00:00, 854.14it/s]
2025-05-16:03:05:07,614 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 66%|██████▌   | 89/135 [00:00<00:00, 883.82it/s]100%|██████████| 135/135 [00:00<00:00, 879.02it/s]
2025-05-16:03:05:07,773 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 24%|██▎       | 89/378 [00:00<00:00, 887.41it/s] 47%|████▋     | 178/378 [00:00<00:00, 885.30it/s] 71%|███████   | 267/378 [00:00<00:00, 885.30it/s] 94%|█████████▍| 356/378 [00:00<00:00, 874.14it/s]100%|██████████| 378/378 [00:00<00:00, 877.84it/s]
2025-05-16:03:05:08,215 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 59%|█████▉    | 89/151 [00:00<00:00, 881.84it/s]100%|██████████| 151/151 [00:00<00:00, 878.77it/s]
2025-05-16:03:05:08,393 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 41%|████      | 88/216 [00:00<00:00, 875.88it/s] 81%|████████▏ | 176/216 [00:00<00:00, 877.84it/s]100%|██████████| 216/216 [00:00<00:00, 875.59it/s]
2025-05-16:03:05:08,647 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 33%|███▎      | 87/265 [00:00<00:00, 866.31it/s] 66%|██████▌   | 174/265 [00:00<00:00, 867.13it/s] 98%|█████████▊| 261/265 [00:00<00:00, 858.94it/s]100%|██████████| 265/265 [00:00<00:00, 860.27it/s]
2025-05-16:03:05:08,964 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 872.44it/s]100%|██████████| 100/100 [00:00<00:00, 872.17it/s]
2025-05-16:03:05:09,083 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 85%|████████▌ | 88/103 [00:00<00:00, 872.82it/s]100%|██████████| 103/103 [00:00<00:00, 871.83it/s]
2025-05-16:03:05:09,205 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 29%|██▉       | 88/306 [00:00<00:00, 873.39it/s] 58%|█████▊    | 176/306 [00:00<00:00, 873.85it/s] 86%|████████▋ | 264/306 [00:00<00:00, 874.16it/s]100%|██████████| 306/306 [00:00<00:00, 873.52it/s]
2025-05-16:03:05:09,565 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 51%|█████     | 88/173 [00:00<00:00, 873.72it/s]100%|██████████| 173/173 [00:00<00:00, 872.03it/s]
2025-05-16:03:05:09,770 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 52%|█████▏    | 86/166 [00:00<00:00, 856.85it/s]100%|██████████| 166/166 [00:00<00:00, 863.47it/s]
2025-05-16:03:05:09,969 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 32%|███▏      | 88/272 [00:00<00:00, 875.96it/s] 65%|██████▍   | 176/272 [00:00<00:00, 875.84it/s] 97%|█████████▋| 264/272 [00:00<00:00, 876.00it/s]100%|██████████| 272/272 [00:00<00:00, 875.70it/s]
2025-05-16:03:05:10,289 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 11%|█▏        | 89/783 [00:00<00:00, 883.54it/s] 23%|██▎       | 178/783 [00:00<00:00, 883.70it/s] 34%|███▍      | 267/783 [00:00<00:00, 883.89it/s] 45%|████▌     | 356/783 [00:00<00:00, 883.05it/s] 57%|█████▋    | 445/783 [00:00<00:00, 874.27it/s] 68%|██████▊   | 533/783 [00:00<00:00, 876.18it/s] 79%|███████▉  | 622/783 [00:00<00:00, 878.47it/s] 91%|█████████ | 711/783 [00:00<00:00, 879.37it/s]100%|██████████| 783/783 [00:00<00:00, 879.76it/s]
2025-05-16:03:05:11,204 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 876.23it/s]100%|██████████| 100/100 [00:00<00:00, 869.55it/s]
2025-05-16:03:05:11,324 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 81%|████████  | 81/100 [00:00<00:00, 809.39it/s]100%|██████████| 100/100 [00:00<00:00, 799.87it/s]
2025-05-16:03:05:11,454 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 30%|██▉       | 84/282 [00:00<00:00, 836.91it/s] 62%|██████▏   | 174/282 [00:00<00:00, 868.55it/s] 94%|█████████▎| 264/282 [00:00<00:00, 881.62it/s]100%|██████████| 282/282 [00:00<00:00, 875.04it/s]
2025-05-16:03:05:11,786 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:02, 75.30it/s] 43%|████▎     | 101/234 [00:00<00:00, 343.70it/s] 78%|███████▊  | 183/234 [00:00<00:00, 504.78it/s]100%|██████████| 234/234 [00:00<00:00, 453.79it/s]
2025-05-16:03:05:12,310 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 37%|███▋      | 82/223 [00:00<00:00, 811.08it/s] 74%|███████▍  | 165/223 [00:00<00:00, 820.08it/s]100%|██████████| 223/223 [00:00<00:00, 727.61it/s]
2025-05-16:03:05:12,626 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 72%|███████▏  | 79/110 [00:00<00:00, 788.89it/s]100%|██████████| 110/110 [00:00<00:00, 789.57it/s]
2025-05-16:03:05:12,771 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 38%|███▊      | 77/201 [00:00<00:00, 761.31it/s] 79%|███████▉  | 159/201 [00:00<00:00, 792.98it/s]100%|██████████| 201/201 [00:00<00:00, 800.84it/s]
2025-05-16:03:05:13,029 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 40%|███▉      | 79/198 [00:00<00:00, 789.14it/s] 83%|████████▎ | 164/198 [00:00<00:00, 823.91it/s]100%|██████████| 198/198 [00:00<00:00, 828.83it/s]
2025-05-16:03:05:13,276 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 32%|███▏      | 79/245 [00:00<00:00, 781.26it/s] 65%|██████▍   | 159/245 [00:00<00:00, 789.49it/s] 97%|█████████▋| 238/245 [00:00<00:00, 760.63it/s]100%|██████████| 245/245 [00:00<00:00, 765.59it/s]
2025-05-16:03:05:13,616 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 14%|█▍        | 79/545 [00:00<00:00, 789.94it/s] 29%|██▉       | 160/545 [00:00<00:00, 797.16it/s] 44%|████▍     | 240/545 [00:00<00:00, 756.73it/s] 59%|█████▉    | 323/545 [00:00<00:00, 783.85it/s] 74%|███████▍  | 405/545 [00:00<00:00, 796.43it/s] 90%|████████▉ | 489/545 [00:00<00:00, 809.12it/s]100%|██████████| 545/545 [00:00<00:00, 786.07it/s]
2025-05-16:03:05:14,333 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 744.31it/s]100%|██████████| 100/100 [00:00<00:00, 753.77it/s]
2025-05-16:03:05:14,471 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 22%|██▏       | 87/390 [00:00<00:00, 864.84it/s] 45%|████▍     | 174/390 [00:00<00:00, 852.28it/s] 67%|██████▋   | 260/390 [00:00<00:00, 805.63it/s] 87%|████████▋ | 341/390 [00:00<00:00, 804.59it/s]100%|██████████| 390/390 [00:00<00:00, 822.68it/s]
2025-05-16:03:05:14,959 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 37%|███▋      | 88/238 [00:00<00:00, 872.30it/s] 74%|███████▍  | 176/238 [00:00<00:00, 874.09it/s]100%|██████████| 238/238 [00:00<00:00, 848.59it/s]
2025-05-16:03:05:15,248 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 63%|██████▎   | 72/114 [00:00<00:00, 715.43it/s]100%|██████████| 114/114 [00:00<00:00, 722.43it/s]
2025-05-16:03:05:15,411 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 12%|█▏        | 76/612 [00:00<00:00, 756.33it/s] 25%|██▍       | 152/612 [00:00<00:00, 756.20it/s] 38%|███▊      | 232/612 [00:00<00:00, 772.82it/s] 52%|█████▏    | 321/612 [00:00<00:00, 816.05it/s] 67%|██████▋   | 408/612 [00:00<00:00, 832.65it/s] 80%|████████  | 492/612 [00:00<00:00, 810.98it/s] 94%|█████████▍| 574/612 [00:00<00:00, 789.85it/s]100%|██████████| 612/612 [00:00<00:00, 792.10it/s]
2025-05-16:03:05:16,208 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 52%|█████▏    | 68/131 [00:00<00:00, 678.11it/s]100%|██████████| 131/131 [00:00<00:00, 710.98it/s]
2025-05-16:03:05:16,398 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 37%|███▋      | 71/193 [00:00<00:00, 662.48it/s] 76%|███████▌  | 146/193 [00:00<00:00, 710.39it/s]100%|██████████| 193/193 [00:00<00:00, 713.26it/s]
2025-05-16:03:05:16,678 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  8%|▊         | 73/895 [00:00<00:01, 729.06it/s] 17%|█▋        | 154/895 [00:00<00:00, 774.95it/s] 27%|██▋       | 241/895 [00:00<00:00, 817.26it/s] 37%|███▋      | 330/895 [00:00<00:00, 845.26it/s] 46%|████▋     | 415/895 [00:00<00:00, 809.91it/s] 56%|█████▌    | 497/895 [00:00<00:00, 776.63it/s] 64%|██████▍   | 576/895 [00:00<00:00, 763.07it/s] 73%|███████▎  | 653/895 [00:00<00:00, 755.39it/s] 81%|████████▏ | 729/895 [00:00<00:00, 751.68it/s] 90%|████████▉ | 805/895 [00:01<00:00, 749.70it/s] 98%|█████████▊| 881/895 [00:01<00:00, 748.02it/s]100%|██████████| 895/895 [00:01<00:00, 767.94it/s]
2025-05-16:03:05:17,877 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 32%|███▏      | 75/237 [00:00<00:00, 744.56it/s] 63%|██████▎   | 150/237 [00:00<00:00, 743.85it/s] 95%|█████████▍| 225/237 [00:00<00:00, 569.76it/s]100%|██████████| 237/237 [00:00<00:00, 587.45it/s]
2025-05-16:03:05:18,306 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 38%|███▊      | 63/165 [00:00<00:00, 621.92it/s] 76%|███████▋  | 126/165 [00:00<00:00, 561.90it/s]100%|██████████| 165/165 [00:00<00:00, 604.30it/s]
2025-05-16:03:05:18,588 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 18%|█▊        | 57/311 [00:00<00:00, 566.36it/s] 37%|███▋      | 114/311 [00:00<00:00, 561.38it/s] 60%|██████    | 187/311 [00:00<00:00, 635.46it/s] 81%|████████  | 251/311 [00:00<00:00, 526.15it/s]100%|██████████| 311/311 [00:00<00:00, 592.97it/s]
2025-05-16:03:05:19,123 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 26%|██▌       | 90/346 [00:00<00:00, 897.75it/s] 52%|█████▏    | 180/346 [00:00<00:00, 877.29it/s] 78%|███████▊  | 271/346 [00:00<00:00, 886.57it/s]100%|██████████| 346/346 [00:00<00:00, 891.89it/s]
2025-05-16:03:05:19,521 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 45%|████▌     | 92/204 [00:00<00:00, 910.77it/s] 90%|█████████ | 184/204 [00:00<00:00, 913.12it/s]100%|██████████| 204/204 [00:00<00:00, 912.53it/s]
2025-05-16:03:05:19,752 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 75%|███████▌  | 91/121 [00:00<00:00, 907.86it/s]100%|██████████| 121/121 [00:00<00:00, 906.41it/s]
2025-05-16:03:05:19,890 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  6%|▌         | 91/1534 [00:00<00:01, 904.90it/s] 12%|█▏        | 183/1534 [00:00<00:01, 913.11it/s] 18%|█▊        | 275/1534 [00:00<00:01, 911.00it/s] 24%|██▍       | 367/1534 [00:00<00:01, 910.63it/s] 30%|██▉       | 459/1534 [00:00<00:01, 908.99it/s] 36%|███▌      | 550/1534 [00:00<00:01, 902.84it/s] 42%|████▏     | 641/1534 [00:00<00:00, 903.63it/s] 48%|████▊     | 732/1534 [00:00<00:00, 899.68it/s] 54%|█████▎    | 823/1534 [00:00<00:00, 901.45it/s] 60%|█████▉    | 914/1534 [00:01<00:00, 902.01it/s] 66%|██████▌   | 1005/1534 [00:01<00:00, 902.63it/s] 71%|███████▏  | 1096/1534 [00:01<00:00, 902.81it/s] 77%|███████▋  | 1187/1534 [00:01<00:00, 902.27it/s] 83%|████████▎ | 1278/1534 [00:01<00:00, 900.80it/s] 89%|████████▉ | 1369/1534 [00:01<00:00, 900.88it/s] 95%|█████████▌| 1460/1534 [00:01<00:00, 900.96it/s]100%|██████████| 1534/1534 [00:01<00:00, 901.94it/s]
2025-05-16:03:05:21,639 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 53%|█████▎    | 91/171 [00:00<00:00, 905.30it/s]100%|██████████| 171/171 [00:00<00:00, 902.77it/s]
2025-05-16:03:05:21,834 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 83%|████████▎ | 90/108 [00:00<00:00, 895.56it/s]100%|██████████| 108/108 [00:00<00:00, 895.22it/s]
2025-05-16:03:05:21,959 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 71%|███████▏  | 90/126 [00:00<00:00, 898.06it/s]100%|██████████| 126/126 [00:00<00:00, 898.28it/s]
2025-05-16:03:05:22,103 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 27%|██▋       | 88/324 [00:00<00:01, 235.59it/s] 52%|█████▏    | 168/324 [00:00<00:00, 390.70it/s] 79%|███████▉  | 256/324 [00:00<00:00, 527.79it/s]100%|██████████| 324/324 [00:00<00:00, 498.13it/s]
2025-05-16:03:05:22,764 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 56%|█████▌    | 91/163 [00:00<00:00, 904.75it/s]100%|██████████| 163/163 [00:00<00:00, 902.16it/s]
2025-05-16:03:05:22,950 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<31:36:02,  2.03s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:02<34:16, 27.28it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:03<21:35, 43.24it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<17:08, 54.42it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<14:50, 62.75it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<13:29, 69.03it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:06<12:35, 73.85it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<11:57, 77.69it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<11:23, 81.42it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<10:55, 84.82it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:35, 87.34it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<10:16, 89.94it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:03, 91.78it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<09:49, 93.94it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:12<09:37, 95.73it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:13<09:26, 97.46it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:13<09:17, 98.95it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:14<09:08, 100.49it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:14<09:00, 101.86it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:15<08:54, 102.81it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:16<08:41, 105.31it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:16<08:31, 107.21it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:17<08:23, 108.70it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:17<08:15, 110.40it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:18<08:09, 111.68it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:18<08:04, 112.58it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:19<08:00, 113.36it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:19<07:54, 114.67it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:20<07:49, 115.77it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:21<07:45, 116.59it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:21<07:43, 116.99it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:22<07:37, 118.50it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:22<07:31, 119.86it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:23<07:24, 121.50it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:23<07:19, 122.83it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:24<07:12, 124.66it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:24<07:06, 126.21it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:25<07:02, 127.32it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:25<06:59, 128.15it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:26<06:56, 128.96it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:26<06:53, 129.59it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:27<06:49, 130.66it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:27<06:46, 131.52it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:28<06:44, 132.13it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:28<06:41, 132.76it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:28<06:39, 133.31it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:29<06:37, 133.79it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:29<06:35, 134.24it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:30<06:32, 135.28it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:30<06:30, 135.96it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:31<06:28, 136.35it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:31<06:26, 136.94it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:32<06:24, 137.47it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:32<06:22, 137.86it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:33<06:21, 138.14it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:33<06:19, 138.57it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:34<06:13, 140.95it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:34<06:07, 142.72it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:34<06:03, 144.32it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:35<06:00, 145.35it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:35<05:57, 146.31it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:36<05:55, 147.06it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:36<05:53, 147.73it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:37<05:48, 149.46it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:37<05:46, 150.34it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:37<05:44, 151.02it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:38<05:42, 151.80it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:38<05:40, 152.32it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:39<05:39, 152.74it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:39<05:37, 153.47it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:39<05:36, 153.63it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:40<05:35, 154.06it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:40<05:33, 154.39it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:41<05:30, 155.73it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:41<05:28, 156.61it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:42<05:26, 157.28it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:42<05:24, 158.05it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:42<05:22, 158.75it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:43<05:21, 159.37it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:43<05:19, 160.00it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:43<05:18, 160.30it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:44<05:16, 160.84it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:44<05:13, 162.21it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:45<05:11, 163.30it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:45<05:09, 164.22it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:45<05:07, 165.00it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:46<05:05, 165.57it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:46<05:02, 167.01it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:47<05:00, 168.14it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:47<04:58, 169.18it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:47<04:56, 169.86it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:48<04:55, 170.50it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:48<04:50, 173.16it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:48<04:46, 175.40it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:49<04:43, 176.93it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:49<04:41, 178.16it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:49<04:39, 179.13it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:50<04:37, 180.10it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:50<04:36, 180.43it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:51<04:35, 181.01it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:51<04:34, 181.52it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:51<04:33, 181.52it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:52<04:31, 182.52it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:52<04:31, 182.69it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:52<04:30, 182.83it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:53<04:28, 183.97it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:53<04:26, 185.13it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:53<04:24, 186.61it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:54<04:23, 186.66it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:54<04:23, 186.67it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:54<04:22, 187.07it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:55<04:20, 188.09it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:55<04:19, 188.75it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:55<04:18, 189.27it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:56<04:17, 189.76it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:56<04:16, 190.43it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:56<04:15, 190.86it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:57<04:14, 191.29it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:57<04:11, 193.02it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:57<04:09, 194.31it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [00:58<04:08, 195.38it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [00:58<04:06, 196.60it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [00:58<04:05, 197.20it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [00:59<03:57, 202.92it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [00:59<03:52, 207.07it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [00:59<03:49, 209.86it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [00:59<03:46, 212.79it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:00<03:44, 214.22it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:00<03:42, 215.85it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:00<03:40, 216.79it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:01<03:39, 218.15it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:01<03:37, 219.41it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:01<03:36, 220.39it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:01<03:35, 221.18it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:02<03:34, 221.44it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:02<03:33, 222.19it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:02<03:31, 224.42it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:03<03:29, 225.75it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:03<03:28, 226.72it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:03<03:27, 227.68it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:03<03:26, 229.07it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:04<03:25, 229.83it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:04<03:24, 230.13it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:04<03:22, 231.85it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:05<03:21, 233.07it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:05<03:20, 234.09it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:05<03:19, 234.53it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:05<03:18, 235.54it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:06<03:17, 236.36it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:06<03:17, 236.68it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:06<03:15, 238.02it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:06<03:14, 239.40it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:07<03:13, 240.60it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:07<03:11, 241.81it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:07<03:10, 242.50it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:07<03:10, 242.92it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:08<03:09, 243.56it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:08<03:07, 245.44it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:08<03:06, 246.44it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:08<03:06, 247.23it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:09<03:04, 248.69it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:09<03:03, 250.56it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:09<03:02, 251.50it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:09<03:01, 252.41it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:10<03:00, 252.65it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:10<02:58, 255.39it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:10<02:57, 257.14it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:10<02:55, 259.12it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:11<02:54, 260.22it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:11<02:53, 261.10it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:11<02:52, 261.91it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:11<02:51, 262.93it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:12<02:51, 264.07it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:12<02:50, 264.30it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:12<02:47, 269.29it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:12<02:44, 272.54it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:13<02:43, 274.89it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:13<02:41, 277.17it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:13<02:40, 278.99it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:13<02:39, 280.54it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:14<02:38, 281.05it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:14<02:38, 281.98it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:14<02:37, 282.96it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:14<02:36, 283.81it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:14<02:34, 288.03it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:15<02:32, 290.04it/s]Running loglikelihood requests:  21%|██        | 11905/56168 [01:15<02:31, 291.43it/s]Running loglikelihood requests:  21%|██▏       | 11969/56168 [01:15<02:31, 292.62it/s]Running loglikelihood requests:  21%|██▏       | 12033/56168 [01:15<02:30, 293.79it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [01:15<02:29, 293.98it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [01:16<02:29, 294.88it/s]Running loglikelihood requests:  22%|██▏       | 12225/56168 [01:16<02:28, 296.45it/s]Running loglikelihood requests:  22%|██▏       | 12289/56168 [01:16<02:28, 295.92it/s]Running loglikelihood requests:  22%|██▏       | 12353/56168 [01:16<02:27, 296.33it/s]Running loglikelihood requests:  22%|██▏       | 12417/56168 [01:17<02:27, 296.93it/s]Running loglikelihood requests:  22%|██▏       | 12481/56168 [01:17<02:27, 296.77it/s]Running loglikelihood requests:  22%|██▏       | 12545/56168 [01:17<02:26, 297.67it/s]Running loglikelihood requests:  22%|██▏       | 12609/56168 [01:17<02:26, 297.98it/s]Running loglikelihood requests:  23%|██▎       | 12673/56168 [01:17<02:26, 297.54it/s]Running loglikelihood requests:  23%|██▎       | 12737/56168 [01:18<02:25, 299.35it/s]Running loglikelihood requests:  23%|██▎       | 12801/56168 [01:18<02:24, 300.29it/s]Running loglikelihood requests:  23%|██▎       | 12865/56168 [01:18<02:23, 300.81it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [01:18<02:23, 301.41it/s]Running loglikelihood requests:  23%|██▎       | 12993/56168 [01:18<02:22, 302.17it/s]Running loglikelihood requests:  23%|██▎       | 13057/56168 [01:19<02:22, 302.97it/s]Running loglikelihood requests:  23%|██▎       | 13121/56168 [01:19<02:22, 303.02it/s]Running loglikelihood requests:  23%|██▎       | 13185/56168 [01:19<02:21, 303.41it/s]Running loglikelihood requests:  24%|██▎       | 13249/56168 [01:19<02:20, 304.44it/s]Running loglikelihood requests:  24%|██▎       | 13313/56168 [01:20<02:20, 305.25it/s]Running loglikelihood requests:  24%|██▍       | 13377/56168 [01:20<02:20, 304.90it/s]Running loglikelihood requests:  24%|██▍       | 13441/56168 [01:20<02:20, 304.68it/s]Running loglikelihood requests:  24%|██▍       | 13505/56168 [01:20<02:19, 305.87it/s]Running loglikelihood requests:  24%|██▍       | 13569/56168 [01:20<02:19, 305.57it/s]Running loglikelihood requests:  24%|██▍       | 13633/56168 [01:21<02:19, 305.79it/s]Running loglikelihood requests:  24%|██▍       | 13697/56168 [01:21<02:18, 306.00it/s]Running loglikelihood requests:  24%|██▍       | 13761/56168 [01:21<02:18, 306.21it/s]Running loglikelihood requests:  25%|██▍       | 13825/56168 [01:21<02:18, 306.19it/s]Running loglikelihood requests:  25%|██▍       | 13889/56168 [01:21<02:17, 306.70it/s]Running loglikelihood requests:  25%|██▍       | 13953/56168 [01:22<02:17, 306.55it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [01:22<02:17, 307.31it/s]Running loglikelihood requests:  25%|██▌       | 14081/56168 [01:22<02:16, 307.97it/s]Running loglikelihood requests:  25%|██▌       | 14145/56168 [01:22<02:16, 307.44it/s]Running loglikelihood requests:  25%|██▌       | 14209/56168 [01:22<02:16, 307.58it/s]Running loglikelihood requests:  25%|██▌       | 14273/56168 [01:23<02:16, 307.81it/s]Running loglikelihood requests:  26%|██▌       | 14337/56168 [01:23<02:14, 310.50it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [01:23<02:13, 312.75it/s]Running loglikelihood requests:  26%|██▌       | 14465/56168 [01:23<02:12, 314.21it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [01:23<02:11, 315.71it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [01:24<02:11, 316.53it/s]Running loglikelihood requests:  26%|██▌       | 14657/56168 [01:24<02:10, 317.30it/s]Running loglikelihood requests:  26%|██▌       | 14721/56168 [01:24<02:10, 318.29it/s]Running loglikelihood requests:  26%|██▋       | 14785/56168 [01:24<02:09, 318.45it/s]Running loglikelihood requests:  26%|██▋       | 14849/56168 [01:24<02:09, 318.81it/s]Running loglikelihood requests:  27%|██▋       | 14913/56168 [01:25<02:09, 318.40it/s]Running loglikelihood requests:  27%|██▋       | 14977/56168 [01:25<02:09, 318.06it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [01:25<02:09, 317.61it/s]Running loglikelihood requests:  27%|██▋       | 15105/56168 [01:25<02:09, 317.83it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [01:25<02:08, 318.46it/s]Running loglikelihood requests:  27%|██▋       | 15233/56168 [01:26<02:08, 318.20it/s]Running loglikelihood requests:  27%|██▋       | 15297/56168 [01:26<02:08, 318.19it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [01:26<02:07, 319.02it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [01:26<02:07, 320.25it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [01:26<02:06, 320.95it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [01:27<02:06, 320.47it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [01:27<02:06, 320.42it/s]Running loglikelihood requests:  28%|██▊       | 15681/56168 [01:27<02:06, 320.76it/s]Running loglikelihood requests:  28%|██▊       | 15745/56168 [01:27<02:05, 321.05it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [01:27<02:05, 321.08it/s]Running loglikelihood requests:  28%|██▊       | 15873/56168 [01:28<02:05, 321.10it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [01:28<02:05, 320.92it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [01:28<02:04, 322.06it/s]Running loglikelihood requests:  29%|██▊       | 16065/56168 [01:28<02:04, 322.04it/s]Running loglikelihood requests:  29%|██▊       | 16129/56168 [01:28<02:04, 322.05it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [01:29<02:04, 322.00it/s]Running loglikelihood requests:  29%|██▉       | 16257/56168 [01:29<02:04, 321.47it/s]Running loglikelihood requests:  29%|██▉       | 16321/56168 [01:29<02:03, 322.28it/s]Running loglikelihood requests:  29%|██▉       | 16385/56168 [01:29<02:03, 323.30it/s]Running loglikelihood requests:  29%|██▉       | 16453/56168 [01:29<02:00, 328.44it/s]Running loglikelihood requests:  29%|██▉       | 16517/56168 [01:30<02:01, 326.38it/s]Running loglikelihood requests:  30%|██▉       | 16581/56168 [01:30<02:01, 324.83it/s]Running loglikelihood requests:  30%|██▉       | 16645/56168 [01:30<02:01, 324.19it/s]Running loglikelihood requests:  30%|██▉       | 16709/56168 [01:30<02:01, 324.00it/s]Running loglikelihood requests:  30%|██▉       | 16773/56168 [01:30<02:01, 324.57it/s]Running loglikelihood requests:  30%|██▉       | 16837/56168 [01:31<02:01, 323.98it/s]Running loglikelihood requests:  30%|███       | 16901/56168 [01:31<02:01, 323.34it/s]Running loglikelihood requests:  30%|███       | 16965/56168 [01:31<02:01, 323.23it/s]Running loglikelihood requests:  30%|███       | 17029/56168 [01:31<02:00, 323.51it/s]Running loglikelihood requests:  30%|███       | 17093/56168 [01:31<02:00, 323.58it/s]Running loglikelihood requests:  31%|███       | 17157/56168 [01:32<01:58, 327.91it/s]Running loglikelihood requests:  31%|███       | 17221/56168 [01:32<01:57, 330.75it/s]Running loglikelihood requests:  31%|███       | 17285/56168 [01:32<01:56, 332.90it/s]Running loglikelihood requests:  31%|███       | 17349/56168 [01:32<01:56, 334.34it/s]Running loglikelihood requests:  31%|███       | 17413/56168 [01:32<01:55, 336.95it/s]Running loglikelihood requests:  31%|███       | 17477/56168 [01:33<01:57, 329.85it/s]Running loglikelihood requests:  31%|███       | 17541/56168 [01:33<01:55, 333.38it/s]Running loglikelihood requests:  31%|███▏      | 17605/56168 [01:33<01:54, 335.70it/s]Running loglikelihood requests:  31%|███▏      | 17669/56168 [01:33<01:54, 337.29it/s]Running loglikelihood requests:  32%|███▏      | 17733/56168 [01:33<01:53, 338.49it/s]Running loglikelihood requests:  32%|███▏      | 17797/56168 [01:34<01:53, 338.70it/s]Running loglikelihood requests:  32%|███▏      | 17861/56168 [01:34<01:52, 339.40it/s]Running loglikelihood requests:  32%|███▏      | 17925/56168 [01:34<01:52, 340.50it/s]Running loglikelihood requests:  32%|███▏      | 17989/56168 [01:34<01:51, 341.35it/s]Running loglikelihood requests:  32%|███▏      | 18053/56168 [01:34<01:51, 340.43it/s]Running loglikelihood requests:  32%|███▏      | 18117/56168 [01:34<01:51, 341.29it/s]Running loglikelihood requests:  32%|███▏      | 18181/56168 [01:35<01:51, 341.99it/s]Running loglikelihood requests:  32%|███▏      | 18245/56168 [01:35<01:50, 341.84it/s]Running loglikelihood requests:  33%|███▎      | 18309/56168 [01:35<01:50, 341.68it/s]Running loglikelihood requests:  33%|███▎      | 18373/56168 [01:35<01:50, 342.10it/s]Running loglikelihood requests:  33%|███▎      | 18437/56168 [01:35<01:50, 342.26it/s]Running loglikelihood requests:  33%|███▎      | 18501/56168 [01:36<01:49, 342.80it/s]Running loglikelihood requests:  33%|███▎      | 18565/56168 [01:36<01:49, 342.14it/s]Running loglikelihood requests:  33%|███▎      | 18629/56168 [01:36<01:49, 342.72it/s]Running loglikelihood requests:  33%|███▎      | 18693/56168 [01:36<01:49, 343.18it/s]Running loglikelihood requests:  33%|███▎      | 18757/56168 [01:36<01:48, 343.60it/s]Running loglikelihood requests:  34%|███▎      | 18821/56168 [01:37<01:48, 343.64it/s]Running loglikelihood requests:  34%|███▎      | 18885/56168 [01:37<01:48, 343.30it/s]Running loglikelihood requests:  34%|███▎      | 18949/56168 [01:37<01:48, 343.10it/s]Running loglikelihood requests:  34%|███▍      | 19013/56168 [01:37<01:47, 344.29it/s]Running loglikelihood requests:  34%|███▍      | 19077/56168 [01:37<01:47, 344.43it/s]Running loglikelihood requests:  34%|███▍      | 19141/56168 [01:37<01:47, 344.42it/s]Running loglikelihood requests:  34%|███▍      | 19205/56168 [01:38<01:47, 345.08it/s]Running loglikelihood requests:  34%|███▍      | 19269/56168 [01:38<01:46, 345.26it/s]Running loglikelihood requests:  34%|███▍      | 19333/56168 [01:38<01:46, 345.75it/s]Running loglikelihood requests:  35%|███▍      | 19397/56168 [01:38<01:46, 346.14it/s]Running loglikelihood requests:  35%|███▍      | 19461/56168 [01:38<01:45, 349.39it/s]Running loglikelihood requests:  35%|███▍      | 19525/56168 [01:39<01:44, 351.95it/s]Running loglikelihood requests:  35%|███▍      | 19589/56168 [01:39<01:43, 353.94it/s]Running loglikelihood requests:  35%|███▍      | 19653/56168 [01:39<01:43, 353.73it/s]Running loglikelihood requests:  35%|███▌      | 19717/56168 [01:39<01:42, 354.58it/s]Running loglikelihood requests:  35%|███▌      | 19781/56168 [01:39<01:42, 354.61it/s]Running loglikelihood requests:  35%|███▌      | 19845/56168 [01:39<01:42, 355.37it/s]Running loglikelihood requests:  35%|███▌      | 19909/56168 [01:40<01:41, 356.14it/s]Running loglikelihood requests:  36%|███▌      | 19973/56168 [01:40<01:41, 356.30it/s]Running loglikelihood requests:  36%|███▌      | 20041/56168 [01:40<01:39, 363.72it/s]Running loglikelihood requests:  36%|███▌      | 20105/56168 [01:40<01:39, 362.58it/s]Running loglikelihood requests:  36%|███▌      | 20169/56168 [01:40<01:39, 361.52it/s]Running loglikelihood requests:  36%|███▌      | 20233/56168 [01:41<01:39, 360.45it/s]Running loglikelihood requests:  36%|███▌      | 20297/56168 [01:41<01:40, 358.25it/s]Running loglikelihood requests:  36%|███▋      | 20361/56168 [01:41<01:39, 358.64it/s]Running loglikelihood requests:  36%|███▋      | 20425/56168 [01:41<01:39, 360.14it/s]Running loglikelihood requests:  36%|███▋      | 20489/56168 [01:41<01:38, 360.74it/s]Running loglikelihood requests:  37%|███▋      | 20553/56168 [01:41<01:38, 360.82it/s]Running loglikelihood requests:  37%|███▋      | 20617/56168 [01:42<01:38, 361.13it/s]Running loglikelihood requests:  37%|███▋      | 20681/56168 [01:42<01:38, 361.75it/s]Running loglikelihood requests:  37%|███▋      | 20745/56168 [01:42<01:37, 362.15it/s]Running loglikelihood requests:  37%|███▋      | 20809/56168 [01:42<01:37, 363.08it/s]Running loglikelihood requests:  37%|███▋      | 20873/56168 [01:42<01:37, 362.49it/s]Running loglikelihood requests:  37%|███▋      | 20937/56168 [01:42<01:36, 363.36it/s]Running loglikelihood requests:  37%|███▋      | 21001/56168 [01:43<01:36, 362.66it/s]Running loglikelihood requests:  38%|███▊      | 21065/56168 [01:43<01:37, 361.59it/s]Running loglikelihood requests:  38%|███▊      | 21129/56168 [01:43<01:36, 362.20it/s]Running loglikelihood requests:  38%|███▊      | 21193/56168 [01:43<01:36, 364.03it/s]Running loglikelihood requests:  38%|███▊      | 21257/56168 [01:43<01:35, 364.20it/s]Running loglikelihood requests:  38%|███▊      | 21321/56168 [01:44<01:35, 364.14it/s]Running loglikelihood requests:  38%|███▊      | 21385/56168 [01:44<01:34, 366.26it/s]Running loglikelihood requests:  38%|███▊      | 21449/56168 [01:44<01:34, 366.15it/s]Running loglikelihood requests:  38%|███▊      | 21513/56168 [01:44<01:34, 367.36it/s]Running loglikelihood requests:  38%|███▊      | 21577/56168 [01:44<01:34, 367.80it/s]Running loglikelihood requests:  39%|███▊      | 21641/56168 [01:44<01:33, 368.59it/s]Running loglikelihood requests:  39%|███▊      | 21705/56168 [01:45<01:33, 369.16it/s]Running loglikelihood requests:  39%|███▉      | 21769/56168 [01:45<01:33, 369.37it/s]Running loglikelihood requests:  39%|███▉      | 21833/56168 [01:45<01:32, 369.50it/s]Running loglikelihood requests:  39%|███▉      | 21897/56168 [01:45<01:32, 369.26it/s]Running loglikelihood requests:  39%|███▉      | 21961/56168 [01:45<01:32, 370.13it/s]Running loglikelihood requests:  39%|███▉      | 22025/56168 [01:45<01:32, 370.76it/s]Running loglikelihood requests:  39%|███▉      | 22089/56168 [01:46<01:31, 371.07it/s]Running loglikelihood requests:  39%|███▉      | 22153/56168 [01:46<01:31, 371.66it/s]Running loglikelihood requests:  40%|███▉      | 22217/56168 [01:46<01:31, 371.67it/s]Running loglikelihood requests:  40%|███▉      | 22281/56168 [01:46<01:31, 372.32it/s]Running loglikelihood requests:  40%|███▉      | 22345/56168 [01:46<01:30, 372.72it/s]Running loglikelihood requests:  40%|███▉      | 22409/56168 [01:46<01:30, 373.61it/s]Running loglikelihood requests:  40%|████      | 22473/56168 [01:47<01:30, 373.29it/s]Running loglikelihood requests:  40%|████      | 22537/56168 [01:47<01:30, 373.15it/s]Running loglikelihood requests:  40%|████      | 22601/56168 [01:47<01:30, 372.93it/s]Running loglikelihood requests:  40%|████      | 22665/56168 [01:47<01:29, 372.94it/s]Running loglikelihood requests:  40%|████      | 22729/56168 [01:47<01:29, 373.29it/s]Running loglikelihood requests:  41%|████      | 22793/56168 [01:47<01:29, 373.64it/s]Running loglikelihood requests:  41%|████      | 22857/56168 [01:48<01:28, 374.54it/s]Running loglikelihood requests:  41%|████      | 22921/56168 [01:48<01:28, 374.01it/s]Running loglikelihood requests:  41%|████      | 22985/56168 [01:48<01:28, 375.16it/s]Running loglikelihood requests:  41%|████      | 23049/56168 [01:48<01:28, 374.58it/s]Running loglikelihood requests:  41%|████      | 23113/56168 [01:48<01:28, 374.73it/s]Running loglikelihood requests:  41%|████▏     | 23177/56168 [01:48<01:27, 375.11it/s]Running loglikelihood requests:  41%|████▏     | 23241/56168 [01:49<01:27, 376.04it/s]Running loglikelihood requests:  41%|████▏     | 23305/56168 [01:49<01:27, 376.32it/s]Running loglikelihood requests:  42%|████▏     | 23369/56168 [01:49<01:27, 375.48it/s]Running loglikelihood requests:  42%|████▏     | 23433/56168 [01:49<01:27, 376.12it/s]Running loglikelihood requests:  42%|████▏     | 23497/56168 [01:49<01:26, 375.91it/s]Running loglikelihood requests:  42%|████▏     | 23561/56168 [01:50<01:26, 376.96it/s]Running loglikelihood requests:  42%|████▏     | 23625/56168 [01:50<01:26, 376.66it/s]Running loglikelihood requests:  42%|████▏     | 23689/56168 [01:50<01:26, 376.49it/s]Running loglikelihood requests:  42%|████▏     | 23753/56168 [01:50<01:23, 390.02it/s]Running loglikelihood requests:  42%|████▏     | 23817/56168 [01:50<01:21, 398.32it/s]Running loglikelihood requests:  43%|████▎     | 23881/56168 [01:50<01:19, 404.35it/s]Running loglikelihood requests:  43%|████▎     | 23945/56168 [01:50<01:18, 408.09it/s]Running loglikelihood requests:  43%|████▎     | 24009/56168 [01:51<01:17, 412.91it/s]Running loglikelihood requests:  43%|████▎     | 24073/56168 [01:51<01:17, 416.20it/s]Running loglikelihood requests:  43%|████▎     | 24137/56168 [01:51<01:16, 417.72it/s]Running loglikelihood requests:  43%|████▎     | 24201/56168 [01:51<01:16, 418.14it/s]Running loglikelihood requests:  43%|████▎     | 24265/56168 [01:51<01:16, 419.53it/s]Running loglikelihood requests:  43%|████▎     | 24329/56168 [01:51<01:15, 420.96it/s]Running loglikelihood requests:  43%|████▎     | 24393/56168 [01:52<01:15, 421.30it/s]Running loglikelihood requests:  44%|████▎     | 24457/56168 [01:52<01:15, 421.09it/s]Running loglikelihood requests:  44%|████▎     | 24521/56168 [01:52<01:15, 421.61it/s]Running loglikelihood requests:  44%|████▍     | 24585/56168 [01:52<01:14, 421.61it/s]Running loglikelihood requests:  44%|████▍     | 24649/56168 [01:52<01:14, 420.84it/s]Running loglikelihood requests:  44%|████▍     | 24713/56168 [01:52<01:14, 422.05it/s]Running loglikelihood requests:  44%|████▍     | 24777/56168 [01:52<01:14, 421.99it/s]Running loglikelihood requests:  44%|████▍     | 24841/56168 [01:53<01:14, 421.26it/s]Running loglikelihood requests:  44%|████▍     | 24905/56168 [01:53<01:14, 422.07it/s]Running loglikelihood requests:  44%|████▍     | 24969/56168 [01:53<01:13, 422.51it/s]Running loglikelihood requests:  45%|████▍     | 25033/56168 [01:53<01:13, 423.40it/s]Running loglikelihood requests:  45%|████▍     | 25097/56168 [01:53<01:13, 423.66it/s]Running loglikelihood requests:  45%|████▍     | 25161/56168 [01:53<01:13, 424.63it/s]Running loglikelihood requests:  45%|████▍     | 25225/56168 [01:53<01:12, 425.92it/s]Running loglikelihood requests:  45%|████▌     | 25289/56168 [01:54<01:12, 426.02it/s]Running loglikelihood requests:  45%|████▌     | 25353/56168 [01:54<01:12, 425.50it/s]Running loglikelihood requests:  45%|████▌     | 25417/56168 [01:54<01:12, 424.94it/s]Running loglikelihood requests:  45%|████▌     | 25481/56168 [01:54<01:12, 425.88it/s]Running loglikelihood requests:  45%|████▌     | 25545/56168 [01:54<01:11, 425.72it/s]Running loglikelihood requests:  46%|████▌     | 25609/56168 [01:54<01:11, 426.38it/s]Running loglikelihood requests:  46%|████▌     | 25673/56168 [01:55<01:11, 425.36it/s]Running loglikelihood requests:  46%|████▌     | 25737/56168 [01:55<01:11, 427.20it/s]Running loglikelihood requests:  46%|████▌     | 25801/56168 [01:55<01:11, 425.84it/s]Running loglikelihood requests:  46%|████▌     | 25865/56168 [01:55<01:11, 425.17it/s]Running loglikelihood requests:  46%|████▌     | 25929/56168 [01:55<01:11, 425.32it/s]Running loglikelihood requests:  46%|████▋     | 25993/56168 [01:55<01:10, 426.35it/s]Running loglikelihood requests:  46%|████▋     | 26057/56168 [01:55<01:10, 426.68it/s]Running loglikelihood requests:  47%|████▋     | 26121/56168 [01:56<01:10, 426.91it/s]Running loglikelihood requests:  47%|████▋     | 26185/56168 [01:56<01:10, 427.79it/s]Running loglikelihood requests:  47%|████▋     | 26249/56168 [01:56<01:10, 427.18it/s]Running loglikelihood requests:  47%|████▋     | 26313/56168 [01:56<01:09, 427.72it/s]Running loglikelihood requests:  47%|████▋     | 26377/56168 [01:56<01:09, 428.56it/s]Running loglikelihood requests:  47%|████▋     | 26441/56168 [01:56<01:09, 429.03it/s]Running loglikelihood requests:  47%|████▋     | 26505/56168 [01:56<01:09, 429.52it/s]Running loglikelihood requests:  47%|████▋     | 26569/56168 [01:57<01:08, 429.98it/s]Running loglikelihood requests:  47%|████▋     | 26633/56168 [01:57<01:08, 428.87it/s]Running loglikelihood requests:  48%|████▊     | 26697/56168 [01:57<01:08, 428.73it/s]Running loglikelihood requests:  48%|████▊     | 26761/56168 [01:57<01:08, 428.54it/s]Running loglikelihood requests:  48%|████▊     | 26825/56168 [01:57<01:08, 428.53it/s]Running loglikelihood requests:  48%|████▊     | 26889/56168 [01:57<01:07, 431.08it/s]Running loglikelihood requests:  48%|████▊     | 26953/56168 [01:58<01:07, 433.84it/s]Running loglikelihood requests:  48%|████▊     | 27017/56168 [01:58<01:06, 435.17it/s]Running loglikelihood requests:  48%|████▊     | 27081/56168 [01:58<01:06, 435.39it/s]Running loglikelihood requests:  48%|████▊     | 27145/56168 [01:58<01:06, 437.24it/s]Running loglikelihood requests:  48%|████▊     | 27209/56168 [01:58<01:06, 438.07it/s]Running loglikelihood requests:  49%|████▊     | 27273/56168 [01:58<01:05, 438.41it/s]Running loglikelihood requests:  49%|████▊     | 27337/56168 [01:58<01:05, 438.10it/s]Running loglikelihood requests:  49%|████▉     | 27401/56168 [01:59<01:05, 438.33it/s]Running loglikelihood requests:  49%|████▉     | 27465/56168 [01:59<01:05, 438.80it/s]Running loglikelihood requests:  49%|████▉     | 27529/56168 [01:59<01:05, 439.39it/s]Running loglikelihood requests:  49%|████▉     | 27593/56168 [01:59<01:05, 437.72it/s]Running loglikelihood requests:  49%|████▉     | 27657/56168 [01:59<01:04, 438.83it/s]Running loglikelihood requests:  49%|████▉     | 27721/56168 [01:59<01:04, 440.57it/s]Running loglikelihood requests:  49%|████▉     | 27785/56168 [01:59<01:04, 441.55it/s]Running loglikelihood requests:  50%|████▉     | 27849/56168 [02:00<01:04, 441.23it/s]Running loglikelihood requests:  50%|████▉     | 27913/56168 [02:00<01:04, 440.89it/s]Running loglikelihood requests:  50%|████▉     | 27977/56168 [02:00<01:03, 440.63it/s]Running loglikelihood requests:  50%|████▉     | 28041/56168 [02:00<01:03, 439.89it/s]Running loglikelihood requests:  50%|█████     | 28105/56168 [02:00<01:03, 440.15it/s]Running loglikelihood requests:  50%|█████     | 28169/56168 [02:00<01:03, 440.75it/s]Running loglikelihood requests:  50%|█████     | 28233/56168 [02:00<01:03, 442.70it/s]Running loglikelihood requests:  50%|█████     | 28297/56168 [02:01<01:02, 442.47it/s]Running loglikelihood requests:  50%|█████     | 28361/56168 [02:01<01:02, 441.82it/s]Running loglikelihood requests:  51%|█████     | 28425/56168 [02:01<01:02, 443.38it/s]Running loglikelihood requests:  51%|█████     | 28489/56168 [02:01<01:02, 442.81it/s]Running loglikelihood requests:  51%|█████     | 28553/56168 [02:01<01:02, 443.01it/s]Running loglikelihood requests:  51%|█████     | 28617/56168 [02:01<01:02, 443.22it/s]Running loglikelihood requests:  51%|█████     | 28681/56168 [02:01<01:01, 443.56it/s]Running loglikelihood requests:  51%|█████     | 28745/56168 [02:02<01:01, 444.30it/s]Running loglikelihood requests:  51%|█████▏    | 28809/56168 [02:02<01:01, 444.26it/s]Running loglikelihood requests:  51%|█████▏    | 28873/56168 [02:02<01:01, 443.09it/s]Running loglikelihood requests:  52%|█████▏    | 28937/56168 [02:02<01:01, 442.49it/s]Running loglikelihood requests:  52%|█████▏    | 29001/56168 [02:02<01:01, 443.30it/s]Running loglikelihood requests:  52%|█████▏    | 29065/56168 [02:02<01:01, 443.58it/s]Running loglikelihood requests:  52%|█████▏    | 29129/56168 [02:02<01:00, 445.36it/s]Running loglikelihood requests:  52%|█████▏    | 29193/56168 [02:03<01:00, 447.66it/s]Running loglikelihood requests:  52%|█████▏    | 29257/56168 [02:03<01:00, 447.47it/s]Running loglikelihood requests:  52%|█████▏    | 29321/56168 [02:03<01:00, 446.45it/s]Running loglikelihood requests:  52%|█████▏    | 29385/56168 [02:03<01:00, 446.20it/s]Running loglikelihood requests:  52%|█████▏    | 29449/56168 [02:03<00:59, 446.98it/s]Running loglikelihood requests:  53%|█████▎    | 29513/56168 [02:03<00:59, 447.80it/s]Running loglikelihood requests:  53%|█████▎    | 29577/56168 [02:03<00:59, 447.87it/s]Running loglikelihood requests:  53%|█████▎    | 29641/56168 [02:04<00:59, 447.27it/s]Running loglikelihood requests:  53%|█████▎    | 29705/56168 [02:04<00:59, 447.21it/s]Running loglikelihood requests:  53%|█████▎    | 29769/56168 [02:04<00:58, 448.78it/s]Running loglikelihood requests:  53%|█████▎    | 29833/56168 [02:04<00:58, 449.73it/s]Running loglikelihood requests:  53%|█████▎    | 29901/56168 [02:04<00:57, 457.98it/s]Running loglikelihood requests:  53%|█████▎    | 29965/56168 [02:04<00:57, 456.58it/s]Running loglikelihood requests:  53%|█████▎    | 30029/56168 [02:04<00:57, 453.96it/s]Running loglikelihood requests:  54%|█████▎    | 30093/56168 [02:05<00:57, 452.11it/s]Running loglikelihood requests:  54%|█████▎    | 30157/56168 [02:05<00:57, 452.32it/s]Running loglikelihood requests:  54%|█████▍    | 30221/56168 [02:05<00:57, 452.30it/s]Running loglikelihood requests:  54%|█████▍    | 30285/56168 [02:05<00:57, 452.75it/s]Running loglikelihood requests:  54%|█████▍    | 30349/56168 [02:05<00:57, 451.88it/s]Running loglikelihood requests:  54%|█████▍    | 30413/56168 [02:05<00:56, 451.95it/s]Running loglikelihood requests:  54%|█████▍    | 30477/56168 [02:05<00:56, 451.35it/s]Running loglikelihood requests:  54%|█████▍    | 30545/56168 [02:06<00:55, 460.18it/s]Running loglikelihood requests:  54%|█████▍    | 30609/56168 [02:06<00:55, 458.16it/s]Running loglikelihood requests:  55%|█████▍    | 30673/56168 [02:06<00:55, 455.85it/s]Running loglikelihood requests:  55%|█████▍    | 30737/56168 [02:06<00:55, 462.15it/s]Running loglikelihood requests:  55%|█████▍    | 30801/56168 [02:06<00:54, 465.27it/s]Running loglikelihood requests:  55%|█████▍    | 30865/56168 [02:06<00:54, 468.09it/s]Running loglikelihood requests:  55%|█████▌    | 30929/56168 [02:06<00:53, 469.78it/s]Running loglikelihood requests:  55%|█████▌    | 30993/56168 [02:07<00:53, 471.36it/s]Running loglikelihood requests:  55%|█████▌    | 31057/56168 [02:07<00:53, 472.55it/s]Running loglikelihood requests:  55%|█████▌    | 31121/56168 [02:07<00:52, 474.17it/s]Running loglikelihood requests:  56%|█████▌    | 31185/56168 [02:07<00:52, 474.11it/s]Running loglikelihood requests:  56%|█████▌    | 31249/56168 [02:07<00:52, 475.72it/s]Running loglikelihood requests:  56%|█████▌    | 31313/56168 [02:07<00:52, 475.90it/s]Running loglikelihood requests:  56%|█████▌    | 31377/56168 [02:07<00:52, 476.55it/s]Running loglikelihood requests:  56%|█████▌    | 31441/56168 [02:07<00:51, 476.71it/s]Running loglikelihood requests:  56%|█████▌    | 31505/56168 [02:08<00:51, 477.62it/s]Running loglikelihood requests:  56%|█████▌    | 31569/56168 [02:08<00:51, 478.63it/s]Running loglikelihood requests:  56%|█████▋    | 31633/56168 [02:08<00:51, 476.98it/s]Running loglikelihood requests:  56%|█████▋    | 31697/56168 [02:08<00:51, 477.02it/s]Running loglikelihood requests:  57%|█████▋    | 31761/56168 [02:08<00:51, 478.55it/s]Running loglikelihood requests:  57%|█████▋    | 31825/56168 [02:08<00:50, 477.57it/s]Running loglikelihood requests:  57%|█████▋    | 31889/56168 [02:08<00:50, 478.99it/s]Running loglikelihood requests:  57%|█████▋    | 31953/56168 [02:09<00:50, 479.98it/s]Running loglikelihood requests:  57%|█████▋    | 32017/56168 [02:09<00:50, 479.48it/s]Running loglikelihood requests:  57%|█████▋    | 32081/56168 [02:09<00:50, 480.60it/s]Running loglikelihood requests:  57%|█████▋    | 32145/56168 [02:09<00:49, 481.24it/s]Running loglikelihood requests:  57%|█████▋    | 32209/56168 [02:09<00:49, 482.10it/s]Running loglikelihood requests:  57%|█████▋    | 32273/56168 [02:09<00:49, 481.76it/s]Running loglikelihood requests:  58%|█████▊    | 32337/56168 [02:09<00:49, 481.05it/s]Running loglikelihood requests:  58%|█████▊    | 32401/56168 [02:09<00:49, 481.04it/s]Running loglikelihood requests:  58%|█████▊    | 32465/56168 [02:10<00:49, 480.51it/s]Running loglikelihood requests:  58%|█████▊    | 32529/56168 [02:10<00:49, 481.41it/s]Running loglikelihood requests:  58%|█████▊    | 32593/56168 [02:10<00:49, 479.49it/s]Running loglikelihood requests:  58%|█████▊    | 32657/56168 [02:10<00:48, 481.52it/s]Running loglikelihood requests:  58%|█████▊    | 32721/56168 [02:10<00:48, 480.89it/s]Running loglikelihood requests:  58%|█████▊    | 32785/56168 [02:10<00:48, 482.34it/s]Running loglikelihood requests:  58%|█████▊    | 32849/56168 [02:10<00:48, 481.88it/s]Running loglikelihood requests:  59%|█████▊    | 32913/56168 [02:11<00:48, 482.53it/s]Running loglikelihood requests:  59%|█████▊    | 32977/56168 [02:11<00:48, 482.89it/s]Running loglikelihood requests:  59%|█████▉    | 33041/56168 [02:11<00:47, 482.15it/s]Running loglikelihood requests:  59%|█████▉    | 33105/56168 [02:11<00:47, 482.41it/s]Running loglikelihood requests:  59%|█████▉    | 33169/56168 [02:11<00:47, 482.90it/s]Running loglikelihood requests:  59%|█████▉    | 33233/56168 [02:11<00:47, 483.32it/s]Running loglikelihood requests:  59%|█████▉    | 33297/56168 [02:11<00:47, 483.64it/s]Running loglikelihood requests:  59%|█████▉    | 33361/56168 [02:11<00:46, 485.84it/s]Running loglikelihood requests:  60%|█████▉    | 33425/56168 [02:12<00:46, 484.32it/s]Running loglikelihood requests:  60%|█████▉    | 33489/56168 [02:12<00:46, 484.38it/s]Running loglikelihood requests:  60%|█████▉    | 33553/56168 [02:12<00:46, 483.67it/s]Running loglikelihood requests:  60%|█████▉    | 33617/56168 [02:12<00:46, 485.26it/s]Running loglikelihood requests:  60%|█████▉    | 33681/56168 [02:12<00:46, 485.49it/s]Running loglikelihood requests:  60%|██████    | 33745/56168 [02:12<00:46, 486.35it/s]Running loglikelihood requests:  60%|██████    | 33809/56168 [02:12<00:45, 486.14it/s]Running loglikelihood requests:  60%|██████    | 33873/56168 [02:13<00:45, 487.67it/s]Running loglikelihood requests:  60%|██████    | 33937/56168 [02:13<00:45, 487.38it/s]Running loglikelihood requests:  61%|██████    | 34001/56168 [02:13<00:45, 486.50it/s]Running loglikelihood requests:  61%|██████    | 34065/56168 [02:13<00:45, 486.56it/s]Running loglikelihood requests:  61%|██████    | 34129/56168 [02:13<00:45, 485.56it/s]Running loglikelihood requests:  61%|██████    | 34193/56168 [02:13<00:45, 485.46it/s]Running loglikelihood requests:  61%|██████    | 34257/56168 [02:13<00:45, 486.75it/s]Running loglikelihood requests:  61%|██████    | 34321/56168 [02:13<00:44, 486.66it/s]Running loglikelihood requests:  61%|██████    | 34385/56168 [02:14<00:44, 487.15it/s]Running loglikelihood requests:  61%|██████▏   | 34449/56168 [02:14<00:44, 486.34it/s]Running loglikelihood requests:  61%|██████▏   | 34513/56168 [02:14<00:44, 487.38it/s]Running loglikelihood requests:  62%|██████▏   | 34577/56168 [02:14<00:44, 486.54it/s]Running loglikelihood requests:  62%|██████▏   | 34641/56168 [02:14<00:44, 487.31it/s]Running loglikelihood requests:  62%|██████▏   | 34705/56168 [02:14<00:43, 487.82it/s]Running loglikelihood requests:  62%|██████▏   | 34769/56168 [02:14<00:43, 487.70it/s]Running loglikelihood requests:  62%|██████▏   | 34833/56168 [02:14<00:43, 487.35it/s]Running loglikelihood requests:  62%|██████▏   | 34897/56168 [02:15<00:43, 489.56it/s]Running loglikelihood requests:  62%|██████▏   | 34961/56168 [02:15<00:43, 490.00it/s]Running loglikelihood requests:  62%|██████▏   | 35025/56168 [02:15<00:43, 489.72it/s]Running loglikelihood requests:  62%|██████▏   | 35089/56168 [02:15<00:42, 490.47it/s]Running loglikelihood requests:  63%|██████▎   | 35153/56168 [02:15<00:42, 490.14it/s]Running loglikelihood requests:  63%|██████▎   | 35217/56168 [02:15<00:42, 490.74it/s]Running loglikelihood requests:  63%|██████▎   | 35281/56168 [02:15<00:42, 490.24it/s]Running loglikelihood requests:  63%|██████▎   | 35345/56168 [02:16<00:42, 490.94it/s]Running loglikelihood requests:  63%|██████▎   | 35409/56168 [02:16<00:42, 490.39it/s]Running loglikelihood requests:  63%|██████▎   | 35473/56168 [02:16<00:42, 491.72it/s]Running loglikelihood requests:  63%|██████▎   | 35537/56168 [02:16<00:41, 497.12it/s]Running loglikelihood requests:  63%|██████▎   | 35601/56168 [02:16<00:40, 501.64it/s]Running loglikelihood requests:  63%|██████▎   | 35665/56168 [02:16<00:40, 504.47it/s]Running loglikelihood requests:  64%|██████▎   | 35729/56168 [02:16<00:40, 507.85it/s]Running loglikelihood requests:  64%|██████▎   | 35793/56168 [02:16<00:39, 509.72it/s]Running loglikelihood requests:  64%|██████▍   | 35857/56168 [02:17<00:39, 510.42it/s]Running loglikelihood requests:  64%|██████▍   | 35921/56168 [02:17<00:39, 509.20it/s]Running loglikelihood requests:  64%|██████▍   | 35985/56168 [02:17<00:39, 509.18it/s]Running loglikelihood requests:  64%|██████▍   | 36049/56168 [02:17<00:39, 509.93it/s]Running loglikelihood requests:  64%|██████▍   | 36113/56168 [02:17<00:39, 511.36it/s]Running loglikelihood requests:  64%|██████▍   | 36177/56168 [02:17<00:39, 511.64it/s]Running loglikelihood requests:  65%|██████▍   | 36241/56168 [02:17<00:39, 510.58it/s]Running loglikelihood requests:  65%|██████▍   | 36305/56168 [02:17<00:38, 511.80it/s]Running loglikelihood requests:  65%|██████▍   | 36369/56168 [02:18<00:38, 513.63it/s]Running loglikelihood requests:  65%|██████▍   | 36433/56168 [02:18<00:38, 513.77it/s]Running loglikelihood requests:  65%|██████▍   | 36497/56168 [02:18<00:38, 513.68it/s]Running loglikelihood requests:  65%|██████▌   | 36561/56168 [02:18<00:38, 513.72it/s]Running loglikelihood requests:  65%|██████▌   | 36625/56168 [02:18<00:38, 513.63it/s]Running loglikelihood requests:  65%|██████▌   | 36689/56168 [02:18<00:37, 514.33it/s]Running loglikelihood requests:  65%|██████▌   | 36753/56168 [02:18<00:37, 514.91it/s]Running loglikelihood requests:  66%|██████▌   | 36817/56168 [02:18<00:37, 515.51it/s]Running loglikelihood requests:  66%|██████▌   | 36881/56168 [02:19<00:37, 516.07it/s]Running loglikelihood requests:  66%|██████▌   | 36945/56168 [02:19<00:37, 516.10it/s]Running loglikelihood requests:  66%|██████▌   | 37009/56168 [02:19<00:37, 513.74it/s]Running loglikelihood requests:  66%|██████▌   | 37073/56168 [02:19<00:37, 513.66it/s]Running loglikelihood requests:  66%|██████▌   | 37137/56168 [02:19<00:37, 514.19it/s]Running loglikelihood requests:  66%|██████▌   | 37201/56168 [02:19<00:36, 515.45it/s]Running loglikelihood requests:  66%|██████▋   | 37265/56168 [02:19<00:36, 516.74it/s]Running loglikelihood requests:  66%|██████▋   | 37333/56168 [02:19<00:35, 526.20it/s]Running loglikelihood requests:  67%|██████▋   | 37397/56168 [02:20<00:35, 523.99it/s]Running loglikelihood requests:  67%|██████▋   | 37461/56168 [02:20<00:35, 521.66it/s]Running loglikelihood requests:  67%|██████▋   | 37525/56168 [02:20<00:35, 518.49it/s]Running loglikelihood requests:  67%|██████▋   | 37589/56168 [02:20<00:35, 517.28it/s]Running loglikelihood requests:  67%|██████▋   | 37653/56168 [02:20<00:35, 516.66it/s]Running loglikelihood requests:  67%|██████▋   | 37717/56168 [02:20<00:35, 517.73it/s]Running loglikelihood requests:  67%|██████▋   | 37781/56168 [02:20<00:35, 518.36it/s]Running loglikelihood requests:  67%|██████▋   | 37845/56168 [02:20<00:35, 517.36it/s]Running loglikelihood requests:  67%|██████▋   | 37909/56168 [02:21<00:35, 514.99it/s]Running loglikelihood requests:  68%|██████▊   | 37973/56168 [02:21<00:35, 515.20it/s]Running loglikelihood requests:  68%|██████▊   | 38037/56168 [02:21<00:35, 515.18it/s]Running loglikelihood requests:  68%|██████▊   | 38101/56168 [02:21<00:34, 517.29it/s]Running loglikelihood requests:  68%|██████▊   | 38165/56168 [02:21<00:34, 517.25it/s]Running loglikelihood requests:  68%|██████▊   | 38229/56168 [02:21<00:34, 515.58it/s]Running loglikelihood requests:  68%|██████▊   | 38293/56168 [02:21<00:34, 514.61it/s]Running loglikelihood requests:  68%|██████▊   | 38357/56168 [02:21<00:34, 514.54it/s]Running loglikelihood requests:  68%|██████▊   | 38421/56168 [02:22<00:34, 513.79it/s]Running loglikelihood requests:  69%|██████▊   | 38485/56168 [02:22<00:34, 515.31it/s]Running loglikelihood requests:  69%|██████▊   | 38549/56168 [02:22<00:34, 513.78it/s]Running loglikelihood requests:  69%|██████▊   | 38613/56168 [02:22<00:33, 516.63it/s]Running loglikelihood requests:  69%|██████▉   | 38677/56168 [02:22<00:33, 518.35it/s]Running loglikelihood requests:  69%|██████▉   | 38741/56168 [02:22<00:33, 518.72it/s]Running loglikelihood requests:  69%|██████▉   | 38805/56168 [02:22<00:33, 517.25it/s]Running loglikelihood requests:  69%|██████▉   | 38869/56168 [02:22<00:33, 517.33it/s]Running loglikelihood requests:  69%|██████▉   | 38933/56168 [02:23<00:33, 516.99it/s]Running loglikelihood requests:  69%|██████▉   | 38997/56168 [02:23<00:33, 517.65it/s]Running loglikelihood requests:  70%|██████▉   | 39061/56168 [02:23<00:32, 518.79it/s]Running loglikelihood requests:  70%|██████▉   | 39125/56168 [02:23<00:32, 518.41it/s]Running loglikelihood requests:  70%|██████▉   | 39189/56168 [02:23<00:32, 520.35it/s]Running loglikelihood requests:  70%|██████▉   | 39253/56168 [02:23<00:32, 519.77it/s]Running loglikelihood requests:  70%|██████▉   | 39317/56168 [02:23<00:32, 522.66it/s]Running loglikelihood requests:  70%|███████   | 39381/56168 [02:23<00:32, 523.44it/s]Running loglikelihood requests:  70%|███████   | 39445/56168 [02:23<00:31, 525.44it/s]Running loglikelihood requests:  70%|███████   | 39509/56168 [02:24<00:31, 524.70it/s]Running loglikelihood requests:  70%|███████   | 39573/56168 [02:24<00:31, 520.38it/s]Running loglikelihood requests:  71%|███████   | 39637/56168 [02:24<00:31, 518.82it/s]Running loglikelihood requests:  71%|███████   | 39701/56168 [02:24<00:31, 518.70it/s]Running loglikelihood requests:  71%|███████   | 39765/56168 [02:24<00:31, 521.52it/s]Running loglikelihood requests:  71%|███████   | 39829/56168 [02:24<00:31, 522.61it/s]Running loglikelihood requests:  71%|███████   | 39893/56168 [02:24<00:31, 522.47it/s]Running loglikelihood requests:  71%|███████   | 39957/56168 [02:24<00:31, 522.03it/s]Running loglikelihood requests:  71%|███████▏  | 40021/56168 [02:25<00:30, 522.78it/s]Running loglikelihood requests:  71%|███████▏  | 40085/56168 [02:25<00:30, 524.26it/s]Running loglikelihood requests:  71%|███████▏  | 40149/56168 [02:25<00:30, 524.26it/s]Running loglikelihood requests:  72%|███████▏  | 40213/56168 [02:25<00:30, 525.41it/s]Running loglikelihood requests:  72%|███████▏  | 40277/56168 [02:25<00:30, 526.22it/s]Running loglikelihood requests:  72%|███████▏  | 40341/56168 [02:25<00:30, 527.03it/s]Running loglikelihood requests:  72%|███████▏  | 40405/56168 [02:25<00:29, 525.92it/s]Running loglikelihood requests:  72%|███████▏  | 40469/56168 [02:25<00:29, 525.63it/s]Running loglikelihood requests:  72%|███████▏  | 40533/56168 [02:26<00:29, 524.46it/s]Running loglikelihood requests:  72%|███████▏  | 40597/56168 [02:26<00:29, 523.52it/s]Running loglikelihood requests:  72%|███████▏  | 40661/56168 [02:26<00:29, 521.77it/s]Running loglikelihood requests:  73%|███████▎  | 40725/56168 [02:26<00:29, 519.61it/s]Running loglikelihood requests:  73%|███████▎  | 40789/56168 [02:26<00:29, 520.24it/s]Running loglikelihood requests:  73%|███████▎  | 40853/56168 [02:26<00:29, 520.11it/s]Running loglikelihood requests:  73%|███████▎  | 40921/56168 [02:26<00:28, 528.85it/s]Running loglikelihood requests:  73%|███████▎  | 40985/56168 [02:26<00:28, 527.37it/s]Running loglikelihood requests:  73%|███████▎  | 41049/56168 [02:27<00:28, 527.72it/s]Running loglikelihood requests:  73%|███████▎  | 41113/56168 [02:27<00:28, 527.12it/s]Running loglikelihood requests:  73%|███████▎  | 41177/56168 [02:27<00:28, 525.24it/s]Running loglikelihood requests:  73%|███████▎  | 41241/56168 [02:27<00:28, 524.71it/s]Running loglikelihood requests:  74%|███████▎  | 41305/56168 [02:27<00:28, 524.57it/s]Running loglikelihood requests:  74%|███████▎  | 41369/56168 [02:27<00:27, 535.19it/s]Running loglikelihood requests:  74%|███████▍  | 41433/56168 [02:27<00:27, 542.12it/s]Running loglikelihood requests:  74%|███████▍  | 41497/56168 [02:27<00:26, 545.78it/s]Running loglikelihood requests:  74%|███████▍  | 41561/56168 [02:27<00:26, 549.86it/s]Running loglikelihood requests:  74%|███████▍  | 41625/56168 [02:28<00:26, 551.89it/s]Running loglikelihood requests:  74%|███████▍  | 41689/56168 [02:28<00:26, 553.40it/s]Running loglikelihood requests:  74%|███████▍  | 41753/56168 [02:28<00:25, 556.68it/s]Running loglikelihood requests:  74%|███████▍  | 41817/56168 [02:28<00:25, 557.92it/s]Running loglikelihood requests:  75%|███████▍  | 41881/56168 [02:28<00:25, 558.05it/s]Running loglikelihood requests:  75%|███████▍  | 41945/56168 [02:28<00:25, 560.11it/s]Running loglikelihood requests:  75%|███████▍  | 42009/56168 [02:28<00:25, 560.65it/s]Running loglikelihood requests:  75%|███████▍  | 42073/56168 [02:28<00:25, 559.27it/s]Running loglikelihood requests:  75%|███████▌  | 42137/56168 [02:29<00:25, 560.17it/s]Running loglikelihood requests:  75%|███████▌  | 42201/56168 [02:29<00:25, 558.68it/s]Running loglikelihood requests:  75%|███████▌  | 42265/56168 [02:29<00:24, 559.12it/s]Running loglikelihood requests:  75%|███████▌  | 42329/56168 [02:29<00:24, 561.42it/s]Running loglikelihood requests:  75%|███████▌  | 42393/56168 [02:29<00:24, 562.30it/s]Running loglikelihood requests:  76%|███████▌  | 42457/56168 [02:29<00:24, 564.87it/s]Running loglikelihood requests:  76%|███████▌  | 42521/56168 [02:29<00:24, 565.07it/s]Running loglikelihood requests:  76%|███████▌  | 42585/56168 [02:29<00:24, 562.55it/s]Running loglikelihood requests:  76%|███████▌  | 42649/56168 [02:29<00:23, 564.25it/s]Running loglikelihood requests:  76%|███████▌  | 42713/56168 [02:30<00:23, 564.08it/s]Running loglikelihood requests:  76%|███████▌  | 42777/56168 [02:30<00:23, 563.02it/s]Running loglikelihood requests:  76%|███████▋  | 42841/56168 [02:30<00:23, 562.20it/s]Running loglikelihood requests:  76%|███████▋  | 42905/56168 [02:30<00:23, 560.62it/s]Running loglikelihood requests:  77%|███████▋  | 42969/56168 [02:30<00:23, 560.92it/s]Running loglikelihood requests:  77%|███████▋  | 43033/56168 [02:30<00:23, 561.23it/s]Running loglikelihood requests:  77%|███████▋  | 43097/56168 [02:30<00:23, 561.08it/s]Running loglikelihood requests:  77%|███████▋  | 43161/56168 [02:30<00:23, 562.89it/s]Running loglikelihood requests:  77%|███████▋  | 43225/56168 [02:30<00:22, 562.98it/s]Running loglikelihood requests:  77%|███████▋  | 43289/56168 [02:31<00:22, 562.79it/s]Running loglikelihood requests:  77%|███████▋  | 43353/56168 [02:31<00:22, 563.99it/s]Running loglikelihood requests:  77%|███████▋  | 43417/56168 [02:31<00:22, 562.53it/s]Running loglikelihood requests:  77%|███████▋  | 43481/56168 [02:31<00:22, 563.00it/s]Running loglikelihood requests:  78%|███████▊  | 43545/56168 [02:31<00:22, 564.24it/s]Running loglikelihood requests:  78%|███████▊  | 43609/56168 [02:31<00:22, 562.15it/s]Running loglikelihood requests:  78%|███████▊  | 43673/56168 [02:31<00:22, 563.65it/s]Running loglikelihood requests:  78%|███████▊  | 43741/56168 [02:31<00:21, 572.95it/s]Running loglikelihood requests:  78%|███████▊  | 43805/56168 [02:31<00:21, 569.89it/s]Running loglikelihood requests:  78%|███████▊  | 43869/56168 [02:32<00:21, 568.69it/s]Running loglikelihood requests:  78%|███████▊  | 43933/56168 [02:32<00:21, 566.88it/s]Running loglikelihood requests:  78%|███████▊  | 43997/56168 [02:32<00:21, 565.90it/s]Running loglikelihood requests:  78%|███████▊  | 44061/56168 [02:32<00:21, 566.39it/s]Running loglikelihood requests:  79%|███████▊  | 44125/56168 [02:32<00:21, 565.62it/s]Running loglikelihood requests:  79%|███████▊  | 44189/56168 [02:32<00:21, 567.30it/s]Running loglikelihood requests:  79%|███████▉  | 44253/56168 [02:32<00:20, 568.54it/s]Running loglikelihood requests:  79%|███████▉  | 44317/56168 [02:32<00:20, 570.85it/s]Running loglikelihood requests:  79%|███████▉  | 44381/56168 [02:32<00:20, 570.26it/s]Running loglikelihood requests:  79%|███████▉  | 44445/56168 [02:33<00:20, 569.97it/s]Running loglikelihood requests:  79%|███████▉  | 44509/56168 [02:33<00:20, 569.56it/s]Running loglikelihood requests:  79%|███████▉  | 44573/56168 [02:33<00:20, 569.24it/s]Running loglikelihood requests:  79%|███████▉  | 44637/56168 [02:33<00:20, 569.22it/s]Running loglikelihood requests:  80%|███████▉  | 44701/56168 [02:33<00:20, 567.07it/s]Running loglikelihood requests:  80%|███████▉  | 44765/56168 [02:33<00:20, 566.64it/s]Running loglikelihood requests:  80%|███████▉  | 44829/56168 [02:33<00:20, 566.76it/s]Running loglikelihood requests:  80%|███████▉  | 44893/56168 [02:33<00:19, 567.05it/s]Running loglikelihood requests:  80%|████████  | 44957/56168 [02:34<00:19, 566.86it/s]Running loglikelihood requests:  80%|████████  | 45021/56168 [02:34<00:19, 566.53it/s]Running loglikelihood requests:  80%|████████  | 45085/56168 [02:34<00:19, 568.86it/s]Running loglikelihood requests:  80%|████████  | 45149/56168 [02:34<00:19, 567.95it/s]Running loglikelihood requests:  80%|████████  | 45213/56168 [02:34<00:19, 567.63it/s]Running loglikelihood requests:  81%|████████  | 45277/56168 [02:34<00:19, 566.88it/s]Running loglikelihood requests:  81%|████████  | 45341/56168 [02:34<00:19, 567.26it/s]Running loglikelihood requests:  81%|████████  | 45405/56168 [02:34<00:18, 568.10it/s]Running loglikelihood requests:  81%|████████  | 45469/56168 [02:34<00:18, 568.58it/s]Running loglikelihood requests:  81%|████████  | 45533/56168 [02:35<00:18, 569.76it/s]Running loglikelihood requests:  81%|████████  | 45597/56168 [02:35<00:18, 568.94it/s]Running loglikelihood requests:  81%|████████▏ | 45661/56168 [02:35<00:18, 569.04it/s]Running loglikelihood requests:  81%|████████▏ | 45725/56168 [02:35<00:18, 568.79it/s]Running loglikelihood requests:  82%|████████▏ | 45789/56168 [02:35<00:18, 568.93it/s]Running loglikelihood requests:  82%|████████▏ | 45853/56168 [02:35<00:18, 571.40it/s]Running loglikelihood requests:  82%|████████▏ | 45917/56168 [02:35<00:17, 572.61it/s]Running loglikelihood requests:  82%|████████▏ | 45981/56168 [02:35<00:17, 573.28it/s]Running loglikelihood requests:  82%|████████▏ | 46045/56168 [02:35<00:17, 573.34it/s]Running loglikelihood requests:  82%|████████▏ | 46109/56168 [02:36<00:17, 574.83it/s]Running loglikelihood requests:  82%|████████▏ | 46173/56168 [02:36<00:17, 575.15it/s]Running loglikelihood requests:  82%|████████▏ | 46237/56168 [02:36<00:17, 574.61it/s]Running loglikelihood requests:  82%|████████▏ | 46301/56168 [02:36<00:17, 573.78it/s]Running loglikelihood requests:  83%|████████▎ | 46365/56168 [02:36<00:17, 573.79it/s]Running loglikelihood requests:  83%|████████▎ | 46429/56168 [02:36<00:17, 572.63it/s]Running loglikelihood requests:  83%|████████▎ | 46493/56168 [02:36<00:16, 573.70it/s]Running loglikelihood requests:  83%|████████▎ | 46557/56168 [02:36<00:16, 573.82it/s]Running loglikelihood requests:  83%|████████▎ | 46621/56168 [02:36<00:16, 575.36it/s]Running loglikelihood requests:  83%|████████▎ | 46685/56168 [02:37<00:16, 575.71it/s]Running loglikelihood requests:  83%|████████▎ | 46749/56168 [02:37<00:16, 577.01it/s]Running loglikelihood requests:  83%|████████▎ | 46813/56168 [02:37<00:16, 577.02it/s]Running loglikelihood requests:  83%|████████▎ | 46877/56168 [02:37<00:16, 577.71it/s]Running loglikelihood requests:  84%|████████▎ | 46941/56168 [02:37<00:15, 579.98it/s]Running loglikelihood requests:  84%|████████▎ | 47005/56168 [02:37<00:15, 580.09it/s]Running loglikelihood requests:  84%|████████▍ | 47069/56168 [02:37<00:15, 581.53it/s]Running loglikelihood requests:  84%|████████▍ | 47133/56168 [02:37<00:15, 577.44it/s]Running loglikelihood requests:  84%|████████▍ | 47197/56168 [02:37<00:15, 577.19it/s]Running loglikelihood requests:  84%|████████▍ | 47261/56168 [02:38<00:15, 575.23it/s]Running loglikelihood requests:  84%|████████▍ | 47325/56168 [02:38<00:15, 575.66it/s]Running loglikelihood requests:  84%|████████▍ | 47389/56168 [02:38<00:15, 577.40it/s]Running loglikelihood requests:  84%|████████▍ | 47453/56168 [02:38<00:15, 579.37it/s]Running loglikelihood requests:  85%|████████▍ | 47517/56168 [02:38<00:14, 579.37it/s]Running loglikelihood requests:  85%|████████▍ | 47581/56168 [02:38<00:14, 580.67it/s]Running loglikelihood requests:  85%|████████▍ | 47645/56168 [02:38<00:14, 579.72it/s]Running loglikelihood requests:  85%|████████▍ | 47709/56168 [02:38<00:14, 579.44it/s]Running loglikelihood requests:  85%|████████▌ | 47773/56168 [02:38<00:14, 579.71it/s]Running loglikelihood requests:  85%|████████▌ | 47837/56168 [02:39<00:14, 580.01it/s]Running loglikelihood requests:  85%|████████▌ | 47901/56168 [02:39<00:14, 579.54it/s]Running loglikelihood requests:  85%|████████▌ | 47965/56168 [02:39<00:14, 580.20it/s]Running loglikelihood requests:  86%|████████▌ | 48029/56168 [02:39<00:14, 580.69it/s]Running loglikelihood requests:  86%|████████▌ | 48093/56168 [02:39<00:13, 580.10it/s]Running loglikelihood requests:  86%|████████▌ | 48157/56168 [02:39<00:13, 581.29it/s]Running loglikelihood requests:  86%|████████▌ | 48221/56168 [02:39<00:13, 578.15it/s]Running loglikelihood requests:  86%|████████▌ | 48285/56168 [02:39<00:13, 577.91it/s]Running loglikelihood requests:  86%|████████▌ | 48349/56168 [02:39<00:13, 582.16it/s]Running loglikelihood requests:  86%|████████▌ | 48413/56168 [02:40<00:13, 586.82it/s]Running loglikelihood requests:  86%|████████▋ | 48477/56168 [02:40<00:13, 590.47it/s]Running loglikelihood requests:  86%|████████▋ | 48541/56168 [02:40<00:12, 592.89it/s]Running loglikelihood requests:  87%|████████▋ | 48605/56168 [02:40<00:12, 594.22it/s]Running loglikelihood requests:  87%|████████▋ | 48669/56168 [02:40<00:12, 595.59it/s]Running loglikelihood requests:  87%|████████▋ | 48733/56168 [02:40<00:12, 595.97it/s]Running loglikelihood requests:  87%|████████▋ | 48797/56168 [02:40<00:12, 595.58it/s]Running loglikelihood requests:  87%|████████▋ | 48861/56168 [02:40<00:12, 596.04it/s]Running loglikelihood requests:  87%|████████▋ | 48925/56168 [02:40<00:12, 596.35it/s]Running loglikelihood requests:  87%|████████▋ | 48989/56168 [02:40<00:12, 596.29it/s]Running loglikelihood requests:  87%|████████▋ | 49053/56168 [02:41<00:11, 597.72it/s]Running loglikelihood requests:  87%|████████▋ | 49117/56168 [02:41<00:11, 596.73it/s]Running loglikelihood requests:  88%|████████▊ | 49181/56168 [02:41<00:11, 597.18it/s]Running loglikelihood requests:  88%|████████▊ | 49245/56168 [02:41<00:11, 598.41it/s]Running loglikelihood requests:  88%|████████▊ | 49309/56168 [02:41<00:11, 599.31it/s]Running loglikelihood requests:  88%|████████▊ | 49373/56168 [02:41<00:11, 598.35it/s]Running loglikelihood requests:  88%|████████▊ | 49437/56168 [02:41<00:11, 598.49it/s]Running loglikelihood requests:  88%|████████▊ | 49501/56168 [02:41<00:11, 598.67it/s]Running loglikelihood requests:  88%|████████▊ | 49565/56168 [02:41<00:11, 599.44it/s]Running loglikelihood requests:  88%|████████▊ | 49629/56168 [02:42<00:10, 599.00it/s]Running loglikelihood requests:  88%|████████▊ | 49693/56168 [02:42<00:10, 598.27it/s]Running loglikelihood requests:  89%|████████▊ | 49757/56168 [02:42<00:10, 599.31it/s]Running loglikelihood requests:  89%|████████▊ | 49821/56168 [02:42<00:10, 601.39it/s]Running loglikelihood requests:  89%|████████▉ | 49885/56168 [02:42<00:10, 602.11it/s]Running loglikelihood requests:  89%|████████▉ | 49953/56168 [02:42<00:10, 614.78it/s]Running loglikelihood requests:  89%|████████▉ | 50017/56168 [02:42<00:10, 610.54it/s]Running loglikelihood requests:  89%|████████▉ | 50081/56168 [02:42<00:09, 608.87it/s]Running loglikelihood requests:  89%|████████▉ | 50145/56168 [02:42<00:09, 606.93it/s]Running loglikelihood requests:  89%|████████▉ | 50209/56168 [02:42<00:09, 606.06it/s]Running loglikelihood requests:  90%|████████▉ | 50273/56168 [02:43<00:09, 606.13it/s]Running loglikelihood requests:  90%|████████▉ | 50337/56168 [02:43<00:09, 606.52it/s]Running loglikelihood requests:  90%|████████▉ | 50401/56168 [02:43<00:09, 605.83it/s]Running loglikelihood requests:  90%|████████▉ | 50465/56168 [02:43<00:09, 605.24it/s]Running loglikelihood requests:  90%|████████▉ | 50529/56168 [02:43<00:09, 604.25it/s]Running loglikelihood requests:  90%|█████████ | 50593/56168 [02:43<00:09, 604.64it/s]Running loglikelihood requests:  90%|█████████ | 50657/56168 [02:43<00:09, 604.05it/s]Running loglikelihood requests:  90%|█████████ | 50721/56168 [02:43<00:09, 603.81it/s]Running loglikelihood requests:  90%|█████████ | 50789/56168 [02:43<00:08, 615.38it/s]Running loglikelihood requests:  91%|█████████ | 50853/56168 [02:44<00:08, 613.95it/s]Running loglikelihood requests:  91%|█████████ | 50917/56168 [02:44<00:08, 612.30it/s]Running loglikelihood requests:  91%|█████████ | 50981/56168 [02:44<00:08, 610.43it/s]Running loglikelihood requests:  91%|█████████ | 51045/56168 [02:44<00:08, 609.19it/s]Running loglikelihood requests:  91%|█████████ | 51109/56168 [02:44<00:08, 608.92it/s]Running loglikelihood requests:  91%|█████████ | 51173/56168 [02:44<00:08, 609.17it/s]Running loglikelihood requests:  91%|█████████ | 51237/56168 [02:44<00:08, 608.81it/s]Running loglikelihood requests:  91%|█████████▏| 51301/56168 [02:44<00:08, 606.66it/s]Running loglikelihood requests:  91%|█████████▏| 51365/56168 [02:44<00:07, 607.84it/s]Running loglikelihood requests:  92%|█████████▏| 51429/56168 [02:45<00:07, 608.21it/s]Running loglikelihood requests:  92%|█████████▏| 51493/56168 [02:45<00:07, 609.16it/s]Running loglikelihood requests:  92%|█████████▏| 51557/56168 [02:45<00:07, 609.09it/s]Running loglikelihood requests:  92%|█████████▏| 51621/56168 [02:45<00:07, 608.45it/s]Running loglikelihood requests:  92%|█████████▏| 51685/56168 [02:45<00:07, 609.73it/s]Running loglikelihood requests:  92%|█████████▏| 51749/56168 [02:45<00:07, 610.81it/s]Running loglikelihood requests:  92%|█████████▏| 51813/56168 [02:45<00:07, 612.14it/s]Running loglikelihood requests:  92%|█████████▏| 51877/56168 [02:45<00:06, 613.09it/s]Running loglikelihood requests:  92%|█████████▏| 51941/56168 [02:45<00:06, 612.35it/s]Running loglikelihood requests:  93%|█████████▎| 52005/56168 [02:45<00:06, 610.67it/s]Running loglikelihood requests:  93%|█████████▎| 52069/56168 [02:46<00:06, 611.34it/s]Running loglikelihood requests:  93%|█████████▎| 52133/56168 [02:46<00:06, 611.81it/s]Running loglikelihood requests:  93%|█████████▎| 52197/56168 [02:46<00:06, 612.67it/s]Running loglikelihood requests:  93%|█████████▎| 52261/56168 [02:46<00:06, 612.59it/s]Running loglikelihood requests:  93%|█████████▎| 52325/56168 [02:46<00:06, 610.54it/s]Running loglikelihood requests:  93%|█████████▎| 52389/56168 [02:46<00:06, 610.77it/s]Running loglikelihood requests:  93%|█████████▎| 52453/56168 [02:46<00:06, 611.20it/s]Running loglikelihood requests:  93%|█████████▎| 52517/56168 [02:46<00:05, 612.27it/s]Running loglikelihood requests:  94%|█████████▎| 52581/56168 [02:46<00:05, 613.30it/s]Running loglikelihood requests:  94%|█████████▎| 52645/56168 [02:46<00:05, 613.78it/s]Running loglikelihood requests:  94%|█████████▍| 52709/56168 [02:47<00:05, 612.70it/s]Running loglikelihood requests:  94%|█████████▍| 52773/56168 [02:47<00:05, 612.41it/s]Running loglikelihood requests:  94%|█████████▍| 52837/56168 [02:47<00:05, 614.61it/s]Running loglikelihood requests:  94%|█████████▍| 52901/56168 [02:47<00:05, 616.94it/s]Running loglikelihood requests:  94%|█████████▍| 52965/56168 [02:47<00:05, 615.74it/s]Running loglikelihood requests:  94%|█████████▍| 53029/56168 [02:47<00:05, 616.31it/s]Running loglikelihood requests:  95%|█████████▍| 53093/56168 [02:47<00:04, 616.09it/s]Running loglikelihood requests:  95%|█████████▍| 53157/56168 [02:47<00:04, 614.64it/s]Running loglikelihood requests:  95%|█████████▍| 53221/56168 [02:47<00:04, 614.25it/s]Running loglikelihood requests:  95%|█████████▍| 53285/56168 [02:48<00:04, 614.89it/s]Running loglikelihood requests:  95%|█████████▍| 53349/56168 [02:48<00:04, 615.67it/s]Running loglikelihood requests:  95%|█████████▌| 53413/56168 [02:48<00:04, 615.94it/s]Running loglikelihood requests:  95%|█████████▌| 53477/56168 [02:48<00:04, 616.76it/s]Running loglikelihood requests:  95%|█████████▌| 53541/56168 [02:48<00:04, 616.44it/s]Running loglikelihood requests:  95%|█████████▌| 53605/56168 [02:48<00:04, 614.77it/s]Running loglikelihood requests:  96%|█████████▌| 53669/56168 [02:48<00:04, 616.33it/s]Running loglikelihood requests:  96%|█████████▌| 53733/56168 [02:48<00:03, 616.90it/s]Running loglikelihood requests:  96%|█████████▌| 53797/56168 [02:48<00:03, 618.62it/s]Running loglikelihood requests:  96%|█████████▌| 53861/56168 [02:48<00:03, 619.98it/s]Running loglikelihood requests:  96%|█████████▌| 53925/56168 [02:49<00:03, 620.13it/s]Running loglikelihood requests:  96%|█████████▌| 53989/56168 [02:49<00:03, 620.91it/s]Running loglikelihood requests:  96%|█████████▌| 54053/56168 [02:49<00:03, 621.81it/s]Running loglikelihood requests:  96%|█████████▋| 54117/56168 [02:49<00:03, 620.74it/s]Running loglikelihood requests:  96%|█████████▋| 54202/56168 [02:49<00:02, 688.03it/s]Running loglikelihood requests:  97%|█████████▋| 54287/56168 [02:49<00:02, 735.70it/s]Running loglikelihood requests:  97%|█████████▋| 54373/56168 [02:49<00:02, 614.02it/s]Running loglikelihood requests:  97%|█████████▋| 54451/56168 [02:49<00:02, 655.66it/s]Running loglikelihood requests:  97%|█████████▋| 54529/56168 [02:49<00:02, 688.56it/s]Running loglikelihood requests:  97%|█████████▋| 54618/56168 [02:50<00:02, 743.68it/s]Running loglikelihood requests:  97%|█████████▋| 54695/56168 [02:50<00:02, 605.35it/s]Running loglikelihood requests:  98%|█████████▊| 54776/56168 [02:50<00:02, 655.36it/s]Running loglikelihood requests:  98%|█████████▊| 54859/56168 [02:50<00:01, 700.51it/s]Running loglikelihood requests:  98%|█████████▊| 54947/56168 [02:50<00:01, 748.92it/s]Running loglikelihood requests:  98%|█████████▊| 55026/56168 [02:50<00:01, 614.29it/s]Running loglikelihood requests:  98%|█████████▊| 55113/56168 [02:50<00:01, 676.39it/s]Running loglikelihood requests:  98%|█████████▊| 55203/56168 [02:50<00:01, 733.99it/s]Running loglikelihood requests:  98%|█████████▊| 55282/56168 [02:51<00:01, 608.82it/s]Running loglikelihood requests:  99%|█████████▊| 55364/56168 [02:51<00:01, 659.03it/s]Running loglikelihood requests:  99%|█████████▊| 55455/56168 [02:51<00:00, 722.72it/s]Running loglikelihood requests:  99%|█████████▉| 55533/56168 [02:51<00:01, 604.00it/s]Running loglikelihood requests:  99%|█████████▉| 55627/56168 [02:51<00:00, 683.65it/s]Running loglikelihood requests:  99%|█████████▉| 55717/56168 [02:51<00:00, 611.24it/s]Running loglikelihood requests:  99%|█████████▉| 55826/56168 [02:51<00:00, 721.43it/s]Running loglikelihood requests: 100%|█████████▉| 55909/56168 [02:52<00:00, 625.52it/s]Running loglikelihood requests: 100%|█████████▉| 56027/56168 [02:52<00:00, 751.84it/s]Running loglikelihood requests: 100%|█████████▉| 56112/56168 [02:52<00:00, 646.88it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:52<00:00, 325.80it/s]
2025-05-16:03:08:50,834 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=shengyuanhu/benchmark_wmdp_npo_kl_ckpt_75,tokenizer=HuggingFaceH4/zephyr-7b-beta), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.5998|±  |0.0040|
| - humanities                          |      2|none  |      |acc   |↑  |0.5641|±  |0.0070|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.4365|±  |0.0444|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.7152|±  |0.0352|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.7304|±  |0.0311|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.7975|±  |0.0262|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.6942|±  |0.0421|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.6944|±  |0.0445|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.7055|±  |0.0358|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6416|±  |0.0258|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.3832|±  |0.0163|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6399|±  |0.0273|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.6759|±  |0.0260|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4850|±  |0.0128|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.8304|±  |0.0288|
| - other                               |      2|none  |      |acc   |↑  |0.6569|±  |0.0083|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.6300|±  |0.0485|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.6604|±  |0.0291|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.6358|±  |0.0367|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.4100|±  |0.0494|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6323|±  |0.0324|
|  - management                         |      1|none  |     0|acc   |↑  |0.6214|±  |0.0480|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.7564|±  |0.0281|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.6200|±  |0.0488|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.7893|±  |0.0146|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.6209|±  |0.0278|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.4433|±  |0.0296|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.7022|±  |0.0278|
|  - virology                           |      1|none  |     0|acc   |↑  |0.5060|±  |0.0389|
| - social sciences                     |      2|none  |      |acc   |↑  |0.6786|±  |0.0083|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.5263|±  |0.0470|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7020|±  |0.0326|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8031|±  |0.0287|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.5795|±  |0.0250|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.6134|±  |0.0316|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.7817|±  |0.0177|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7557|±  |0.0377|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.6160|±  |0.0197|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6364|±  |0.0461|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.6122|±  |0.0312|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8209|±  |0.0271|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.7500|±  |0.0435|
| - stem                                |      2|none  |      |acc   |↑  |0.5201|±  |0.0087|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.3200|±  |0.0469|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.5778|±  |0.0427|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.6250|±  |0.0394|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.6250|±  |0.0405|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4700|±  |0.0502|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.4800|±  |0.0502|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.2900|±  |0.0456|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5784|±  |0.0491|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.6600|±  |0.0476|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.5234|±  |0.0327|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.5310|±  |0.0416|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4735|±  |0.0257|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7097|±  |0.0258|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.4975|±  |0.0352|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.5700|±  |0.0498|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.4074|±  |0.0300|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.3974|±  |0.0400|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.5324|±  |0.0340|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.4821|±  |0.0474|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.5998|±  |0.0040|
| - humanities     |      2|none  |      |acc   |↑  |0.5641|±  |0.0070|
| - other          |      2|none  |      |acc   |↑  |0.6569|±  |0.0083|
| - social sciences|      2|none  |      |acc   |↑  |0.6786|±  |0.0083|
| - stem           |      2|none  |      |acc   |↑  |0.5201|±  |0.0087|

