2025-05-15:03:14:58,043 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-15:03:14:58,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,312 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,353 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,362 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,365 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,371 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,376 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,379 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,388 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,402 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,410 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,423 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:58,432 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,566 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,569 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,648 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,686 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,753 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:14:59,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,034 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,043 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,056 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,059 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,394 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,430 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,459 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,469 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,489 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,507 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,522 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,547 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,569 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,591 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,639 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,643 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,653 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,653 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,727 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,735 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,740 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,751 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,753 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,797 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,799 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,814 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,826 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,831 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,833 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,845 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,857 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,860 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,862 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,870 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,880 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,883 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,891 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,896 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,901 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,906 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,911 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,913 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,921 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,923 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,930 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,933 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:01,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:03,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:03,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:03,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:03,096 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:03,098 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:03,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:03,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:03,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:03,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:03,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,001 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,016 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,020 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,053 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,059 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,063 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,069 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,070 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,086 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,088 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,148 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,161 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,176 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,178 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,189 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,192 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,194 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,198 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,207 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,211 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,216 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,218 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,224 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,228 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,230 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,232 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,259 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,263 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,267 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,268 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,274 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,276 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,282 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,284 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,290 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,292 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,294 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,298 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,300 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,302 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,304 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,308 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,312 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,314 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,319 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,323 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,327 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,331 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,333 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,337 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,343 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,345 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,347 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,354 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,362 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,364 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,366 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,370 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,372 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,373 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,375 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,377 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,379 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,381 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,386 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,388 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,390 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,392 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,394 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,398 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,400 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,402 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,406 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,409 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,411 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,417 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,419 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,423 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,428 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,430 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,432 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,435 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,440 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,443 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,445 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,448 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,452 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,467 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,469 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,476 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,478 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,482 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,522 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,538 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,547 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,553 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,561 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,566 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,569 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,571 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,574 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,581 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,591 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,594 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,599 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,610 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,621 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,643 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:04,799 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:07,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:07,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:15:07,990 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-15:03:15:07,993 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-15:03:15:07,993 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent/checkpoint-485', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-15:03:15:09,212 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-15:03:15:10,239 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:03<00:09,  3.15s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:06<00:06,  3.18s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:08<00:02,  2.93s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:09<00:00,  2.14s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:09<00:00,  2.48s/it]
2025-05-15:03:15:41,183 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,183 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,184 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,184 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,184 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,184 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,184 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,185 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,185 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,185 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,185 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,185 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,185 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,186 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,186 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,186 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,186 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,186 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,187 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,187 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,187 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,187 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,187 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,187 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,188 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,188 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,188 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,188 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,188 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,188 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,189 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,189 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,189 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,189 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,189 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,190 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,190 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,190 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,190 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,190 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,190 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,191 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,191 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,191 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,191 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,191 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,191 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,192 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,192 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,192 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,192 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,192 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,193 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,193 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,193 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,193 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,193 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:15:41,193 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-15:03:15:41,199 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 83%|████████▎ | 83/100 [00:00<00:00, 827.82it/s]100%|██████████| 100/100 [00:00<00:00, 822.92it/s]
2025-05-15:03:15:41,324 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 26%|██▌       | 81/310 [00:00<00:00, 806.82it/s] 54%|█████▎    | 166/310 [00:00<00:00, 828.47it/s] 80%|████████  | 249/310 [00:00<00:00, 825.16it/s]100%|██████████| 310/310 [00:00<00:00, 825.16it/s]
2025-05-15:03:15:41,711 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 84%|████████▍ | 84/100 [00:00<00:00, 839.93it/s]100%|██████████| 100/100 [00:00<00:00, 841.35it/s]
2025-05-15:03:15:41,835 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 59%|█████▉    | 86/145 [00:00<00:00, 851.90it/s]100%|██████████| 145/145 [00:00<00:00, 850.63it/s]
2025-05-15:03:15:42,011 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 84%|████████▍ | 84/100 [00:00<00:00, 835.30it/s]100%|██████████| 100/100 [00:00<00:00, 835.53it/s]
2025-05-15:03:15:42,135 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 42%|████▏     | 85/203 [00:00<00:00, 847.05it/s] 84%|████████▎ | 170/203 [00:00<00:00, 845.97it/s]100%|██████████| 203/203 [00:00<00:00, 845.18it/s]
2025-05-15:03:15:42,383 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 55%|█████▌    | 84/152 [00:00<00:00, 832.20it/s]100%|██████████| 152/152 [00:00<00:00, 828.20it/s]
2025-05-15:03:15:42,572 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 53%|█████▎    | 54/102 [00:00<00:00, 531.26it/s]100%|██████████| 102/102 [00:00<00:00, 455.20it/s]
2025-05-15:03:15:42,801 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 38%|███▊      | 38/100 [00:00<00:00, 362.02it/s] 75%|███████▌  | 75/100 [00:00<00:00, 314.96it/s]100%|██████████| 100/100 [00:00<00:00, 327.91it/s]
2025-05-15:03:15:43,110 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 55%|█████▍    | 79/144 [00:00<00:00, 783.20it/s]100%|██████████| 144/144 [00:00<00:00, 798.68it/s]
2025-05-15:03:15:43,297 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 36%|███▌      | 84/235 [00:00<00:00, 838.82it/s] 72%|███████▏  | 169/235 [00:00<00:00, 841.38it/s]100%|██████████| 235/235 [00:00<00:00, 727.66it/s]
2025-05-15:03:15:43,629 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 76%|███████▌  | 85/112 [00:00<00:00, 848.80it/s]100%|██████████| 112/112 [00:00<00:00, 847.30it/s]
2025-05-15:03:15:43,779 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 31%|███       | 84/270 [00:00<00:00, 832.10it/s] 63%|██████▎   | 169/270 [00:00<00:00, 840.15it/s] 94%|█████████▍| 254/270 [00:00<00:00, 841.87it/s]100%|██████████| 270/270 [00:00<00:00, 840.28it/s]
2025-05-15:03:15:44,110 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 80%|████████  | 80/100 [00:00<00:00, 793.26it/s]100%|██████████| 100/100 [00:00<00:00, 799.44it/s]
2025-05-15:03:15:44,239 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 86%|████████▌ | 86/100 [00:00<00:00, 851.87it/s]100%|██████████| 100/100 [00:00<00:00, 848.46it/s]
2025-05-15:03:15:44,362 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 64%|██████▎   | 86/135 [00:00<00:00, 853.04it/s]100%|██████████| 135/135 [00:00<00:00, 844.14it/s]
2025-05-15:03:15:44,527 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 22%|██▏       | 85/378 [00:00<00:00, 844.48it/s] 45%|████▌     | 171/378 [00:00<00:00, 848.81it/s] 68%|██████▊   | 256/378 [00:00<00:00, 848.46it/s] 90%|█████████ | 342/378 [00:00<00:00, 849.13it/s]100%|██████████| 378/378 [00:00<00:00, 847.27it/s]
2025-05-15:03:15:44,986 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 56%|█████▋    | 85/151 [00:00<00:00, 847.93it/s]100%|██████████| 151/151 [00:00<00:00, 839.23it/s]
2025-05-15:03:15:45,172 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 39%|███▉      | 84/216 [00:00<00:00, 837.18it/s] 78%|███████▊  | 168/216 [00:00<00:00, 835.11it/s]100%|██████████| 216/216 [00:00<00:00, 833.07it/s]
2025-05-15:03:15:45,441 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 32%|███▏      | 85/265 [00:00<00:00, 841.61it/s] 65%|██████▍   | 171/265 [00:00<00:00, 847.85it/s] 97%|█████████▋| 257/265 [00:00<00:00, 850.04it/s]100%|██████████| 265/265 [00:00<00:00, 848.26it/s]
2025-05-15:03:15:45,762 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 86%|████████▌ | 86/100 [00:00<00:00, 851.36it/s]100%|██████████| 100/100 [00:00<00:00, 838.67it/s]
2025-05-15:03:15:45,886 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 83%|████████▎ | 85/103 [00:00<00:00, 842.58it/s]100%|██████████| 103/103 [00:00<00:00, 842.62it/s]
2025-05-15:03:15:46,013 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 28%|██▊       | 85/306 [00:00<00:00, 848.07it/s] 56%|█████▌    | 170/306 [00:00<00:00, 839.06it/s] 83%|████████▎ | 254/306 [00:00<00:00, 793.69it/s]100%|██████████| 306/306 [00:00<00:00, 812.78it/s]
2025-05-15:03:15:46,400 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 37%|███▋      | 64/173 [00:00<00:00, 638.23it/s] 74%|███████▍  | 128/173 [00:00<00:00, 532.40it/s]100%|██████████| 173/173 [00:00<00:00, 493.88it/s]
2025-05-15:03:15:46,757 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 11%|█         | 18/166 [00:00<00:00, 177.74it/s] 26%|██▌       | 43/166 [00:00<00:00, 208.23it/s] 43%|████▎     | 72/166 [00:00<00:00, 238.05it/s] 58%|█████▊    | 96/166 [00:00<00:00, 235.67it/s] 85%|████████▍ | 141/166 [00:00<00:00, 306.81it/s]100%|██████████| 166/166 [00:00<00:00, 293.22it/s]
2025-05-15:03:15:47,330 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 17%|█▋        | 46/272 [00:00<00:00, 428.76it/s] 33%|███▎      | 89/272 [00:00<00:00, 358.14it/s] 46%|████▋     | 126/272 [00:00<00:00, 347.57it/s] 60%|█████▉    | 162/272 [00:00<00:00, 337.44it/s] 72%|███████▏  | 196/272 [00:00<00:00, 327.79it/s] 84%|████████▍ | 229/272 [00:00<00:00, 316.14it/s] 98%|█████████▊| 266/272 [00:00<00:00, 316.93it/s]100%|██████████| 272/272 [00:00<00:00, 334.79it/s]
2025-05-15:03:15:48,166 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s]  4%|▍         | 35/783 [00:00<00:02, 322.08it/s]  9%|▉         | 69/783 [00:00<00:02, 307.87it/s] 13%|█▎        | 102/783 [00:00<00:02, 316.86it/s] 17%|█▋        | 135/783 [00:00<00:02, 320.71it/s] 21%|██▏       | 168/783 [00:00<00:01, 319.35it/s] 29%|██▉       | 228/783 [00:00<00:01, 411.00it/s] 35%|███▌      | 275/783 [00:00<00:01, 429.24it/s] 42%|████▏     | 326/783 [00:00<00:01, 453.71it/s] 49%|████▉     | 383/783 [00:00<00:00, 489.20it/s] 56%|█████▌    | 439/783 [00:01<00:00, 506.37it/s] 64%|██████▎   | 499/783 [00:01<00:00, 526.12it/s] 72%|███████▏  | 560/783 [00:01<00:00, 543.43it/s] 80%|███████▉  | 623/783 [00:01<00:00, 568.17it/s] 88%|████████▊ | 690/783 [00:01<00:00, 597.78it/s] 96%|█████████▌| 750/783 [00:01<00:00, 477.39it/s]100%|██████████| 783/783 [00:01<00:00, 448.49it/s]
2025-05-15:03:15:49,968 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 66%|██████▌   | 66/100 [00:00<00:00, 652.63it/s]100%|██████████| 100/100 [00:00<00:00, 468.43it/s]
2025-05-15:03:15:50,194 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 33%|███▎      | 33/100 [00:00<00:00, 297.00it/s] 68%|██████▊   | 68/100 [00:00<00:00, 307.11it/s] 99%|█████████▉| 99/100 [00:00<00:00, 240.59it/s]100%|██████████| 100/100 [00:00<00:00, 248.59it/s]
2025-05-15:03:15:50,607 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s]  8%|▊         | 22/282 [00:00<00:01, 184.26it/s] 22%|██▏       | 63/282 [00:00<00:00, 305.51it/s] 45%|████▌     | 127/282 [00:00<00:00, 449.92it/s] 62%|██████▏   | 174/282 [00:00<00:00, 343.81it/s] 80%|████████  | 227/282 [00:00<00:00, 382.93it/s] 95%|█████████▌| 269/282 [00:00<00:00, 368.99it/s]100%|██████████| 282/282 [00:00<00:00, 357.76it/s]
2025-05-15:03:15:51,442 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:03, 55.24it/s] 32%|███▏      | 76/234 [00:00<00:00, 206.28it/s] 48%|████▊     | 112/234 [00:00<00:00, 230.34it/s] 62%|██████▏   | 144/234 [00:00<00:00, 249.73it/s] 75%|███████▌  | 176/234 [00:00<00:00, 258.59it/s] 88%|████████▊ | 206/234 [00:00<00:00, 267.14it/s]100%|██████████| 234/234 [00:00<00:00, 238.94it/s]
2025-05-15:03:15:52,456 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 11%|█         | 25/223 [00:00<00:00, 239.98it/s] 22%|██▏       | 49/223 [00:00<00:00, 239.09it/s] 35%|███▍      | 78/223 [00:00<00:00, 261.74it/s] 51%|█████     | 114/223 [00:00<00:00, 300.10it/s] 77%|███████▋  | 171/223 [00:00<00:00, 396.89it/s]100%|██████████| 223/223 [00:00<00:00, 379.86it/s]
2025-05-15:03:15:53,066 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 61%|██████    | 67/110 [00:00<00:00, 669.44it/s]100%|██████████| 110/110 [00:00<00:00, 642.37it/s]
2025-05-15:03:15:53,248 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 22%|██▏       | 45/201 [00:00<00:00, 409.51it/s] 43%|████▎     | 86/201 [00:00<00:00, 360.31it/s] 61%|██████    | 123/201 [00:00<00:00, 318.09it/s] 92%|█████████▏| 184/201 [00:00<00:00, 416.15it/s]100%|██████████| 201/201 [00:00<00:00, 404.14it/s]
2025-05-15:03:15:53,759 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 31%|███       | 61/198 [00:00<00:00, 605.51it/s] 62%|██████▏   | 122/198 [00:00<00:00, 456.12it/s] 86%|████████▌ | 170/198 [00:00<00:00, 374.07it/s]100%|██████████| 198/198 [00:00<00:00, 388.08it/s]
2025-05-15:03:15:54,284 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 13%|█▎        | 31/245 [00:00<00:00, 306.84it/s] 26%|██▌       | 64/245 [00:00<00:00, 303.35it/s] 39%|███▉      | 95/245 [00:00<00:00, 251.55it/s] 50%|████▉     | 122/245 [00:00<00:00, 250.14it/s] 79%|███████▉  | 194/245 [00:00<00:00, 399.81it/s]100%|██████████| 245/245 [00:00<00:00, 366.27it/s]
2025-05-15:03:15:54,977 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s]  7%|▋         | 37/545 [00:00<00:01, 369.53it/s] 14%|█▎        | 74/545 [00:00<00:01, 358.16it/s] 21%|██        | 115/545 [00:00<00:01, 369.09it/s] 28%|██▊       | 152/545 [00:00<00:01, 337.37it/s] 34%|███▍      | 187/545 [00:00<00:01, 310.96it/s] 40%|████      | 219/545 [00:00<00:01, 295.41it/s] 46%|████▌     | 249/545 [00:00<00:01, 293.71it/s] 51%|█████     | 279/545 [00:00<00:00, 284.13it/s] 57%|█████▋    | 308/545 [00:01<00:00, 274.26it/s] 62%|██████▏   | 336/545 [00:01<00:00, 269.27it/s] 67%|██████▋   | 367/545 [00:01<00:00, 271.06it/s] 74%|███████▍  | 406/545 [00:01<00:00, 303.24it/s] 82%|████████▏ | 445/545 [00:01<00:00, 326.94it/s] 88%|████████▊ | 479/545 [00:01<00:00, 305.86it/s] 94%|█████████▍| 511/545 [00:01<00:00, 279.89it/s]100%|██████████| 545/545 [00:01<00:00, 302.47it/s]
2025-05-15:03:15:56,812 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 38%|███▊      | 38/100 [00:00<00:00, 364.19it/s] 78%|███████▊  | 78/100 [00:00<00:00, 384.58it/s]100%|██████████| 100/100 [00:00<00:00, 344.08it/s]
2025-05-15:03:15:57,118 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s]  7%|▋         | 28/390 [00:00<00:01, 271.75it/s] 14%|█▍        | 56/390 [00:00<00:01, 276.38it/s] 22%|██▏       | 84/390 [00:00<00:01, 277.15it/s] 29%|██▊       | 112/390 [00:00<00:01, 277.25it/s] 36%|███▌      | 140/390 [00:00<00:00, 274.65it/s] 47%|████▋     | 183/390 [00:00<00:00, 326.55it/s] 57%|█████▋    | 223/390 [00:00<00:00, 348.85it/s] 67%|██████▋   | 261/390 [00:00<00:00, 358.15it/s] 78%|███████▊  | 303/390 [00:00<00:00, 366.55it/s] 87%|████████▋ | 340/390 [00:01<00:00, 348.81it/s] 96%|█████████▋| 376/390 [00:01<00:00, 316.43it/s]100%|██████████| 390/390 [00:01<00:00, 315.42it/s]
2025-05-15:03:15:58,396 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 18%|█▊        | 44/238 [00:00<00:00, 419.66it/s] 50%|█████     | 119/238 [00:00<00:00, 606.71it/s] 81%|████████  | 193/238 [00:00<00:00, 664.55it/s]100%|██████████| 238/238 [00:00<00:00, 583.51it/s]
2025-05-15:03:15:58,830 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 28%|██▊       | 32/114 [00:00<00:00, 291.96it/s] 54%|█████▍    | 62/114 [00:00<00:00, 231.59it/s] 82%|████████▏ | 94/114 [00:00<00:00, 264.84it/s]100%|██████████| 114/114 [00:00<00:00, 281.28it/s]
2025-05-15:03:15:59,251 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s]  8%|▊         | 52/612 [00:00<00:01, 515.55it/s] 17%|█▋        | 104/612 [00:00<00:01, 503.41it/s] 25%|██▌       | 155/612 [00:00<00:00, 497.61it/s] 34%|███▍      | 211/612 [00:00<00:00, 510.40it/s] 43%|████▎     | 264/612 [00:00<00:00, 515.85it/s] 52%|█████▏    | 316/612 [00:00<00:00, 496.49it/s] 60%|█████▉    | 366/612 [00:00<00:00, 452.07it/s] 67%|██████▋   | 412/612 [00:00<00:00, 441.39it/s] 75%|███████▌  | 459/612 [00:00<00:00, 440.11it/s] 82%|████████▏ | 504/612 [00:01<00:00, 433.07it/s] 90%|████████▉ | 548/612 [00:01<00:00, 433.28it/s] 98%|█████████▊| 597/612 [00:01<00:00, 449.01it/s]100%|██████████| 612/612 [00:01<00:00, 459.04it/s]
2025-05-15:03:16:00,618 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 37%|███▋      | 48/131 [00:00<00:00, 455.64it/s] 74%|███████▍  | 97/131 [00:00<00:00, 473.35it/s]100%|██████████| 131/131 [00:00<00:00, 462.65it/s]
2025-05-15:03:16:00,913 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 23%|██▎       | 44/193 [00:00<00:00, 431.93it/s] 50%|█████     | 97/193 [00:00<00:00, 472.25it/s] 75%|███████▌  | 145/193 [00:00<00:00, 439.05it/s] 98%|█████████▊| 190/193 [00:00<00:00, 438.96it/s]100%|██████████| 193/193 [00:00<00:00, 439.47it/s]
2025-05-15:03:16:01,366 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  4%|▍         | 38/895 [00:00<00:02, 376.78it/s]  9%|▉         | 81/895 [00:00<00:02, 402.01it/s] 14%|█▎        | 123/895 [00:00<00:01, 400.94it/s] 18%|█▊        | 165/895 [00:00<00:01, 407.29it/s] 24%|██▍       | 215/895 [00:00<00:01, 439.94it/s] 29%|██▉       | 260/895 [00:00<00:01, 425.72it/s] 38%|███▊      | 338/895 [00:00<00:01, 535.76it/s] 47%|████▋     | 424/895 [00:00<00:00, 634.10it/s] 56%|█████▌    | 502/895 [00:00<00:00, 677.10it/s] 64%|██████▍   | 571/895 [00:01<00:00, 674.95it/s] 73%|███████▎  | 652/895 [00:01<00:00, 713.97it/s] 82%|████████▏ | 738/895 [00:01<00:00, 756.56it/s] 91%|█████████▏| 817/895 [00:01<00:00, 764.27it/s]100%|█████████▉| 894/895 [00:01<00:00, 762.04it/s]100%|██████████| 895/895 [00:01<00:00, 624.47it/s]
2025-05-15:03:16:02,846 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 29%|██▊       | 68/237 [00:00<00:00, 678.73it/s] 64%|██████▍   | 152/237 [00:00<00:00, 769.15it/s] 99%|█████████▊| 234/237 [00:00<00:00, 789.44it/s]100%|██████████| 237/237 [00:00<00:00, 774.02it/s]
2025-05-15:03:16:03,162 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 35%|███▌      | 58/165 [00:00<00:00, 577.81it/s] 70%|███████   | 116/165 [00:00<00:00, 524.71it/s]100%|██████████| 165/165 [00:00<00:00, 550.58it/s]
2025-05-15:03:16:03,470 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 25%|██▌       | 79/311 [00:00<00:00, 788.56it/s] 53%|█████▎    | 164/311 [00:00<00:00, 819.29it/s] 79%|███████▉  | 247/311 [00:00<00:00, 821.84it/s]100%|██████████| 311/311 [00:00<00:00, 731.70it/s]
2025-05-15:03:16:03,938 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s]  8%|▊         | 29/346 [00:00<00:01, 287.97it/s] 18%|█▊        | 62/346 [00:00<00:01, 276.82it/s] 32%|███▏      | 110/346 [00:00<00:00, 352.90it/s] 42%|████▏     | 146/346 [00:00<00:00, 350.90it/s] 57%|█████▋    | 198/346 [00:00<00:00, 408.67it/s] 69%|██████▉   | 240/346 [00:00<00:00, 408.84it/s] 82%|████████▏ | 284/346 [00:00<00:00, 412.30it/s] 95%|█████████▌| 330/346 [00:00<00:00, 425.58it/s]100%|██████████| 346/346 [00:00<00:00, 396.81it/s]
2025-05-15:03:16:04,829 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 23%|██▎       | 46/204 [00:00<00:00, 456.59it/s] 46%|████▌     | 94/204 [00:00<00:00, 467.58it/s] 69%|██████▉   | 141/204 [00:00<00:00, 457.86it/s] 95%|█████████▍| 193/204 [00:00<00:00, 480.66it/s]100%|██████████| 204/204 [00:00<00:00, 476.12it/s]
2025-05-15:03:16:05,273 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 41%|████▏     | 50/121 [00:00<00:00, 496.48it/s] 83%|████████▎ | 100/121 [00:00<00:00, 472.98it/s]100%|██████████| 121/121 [00:00<00:00, 489.03it/s]
2025-05-15:03:16:05,526 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  3%|▎         | 44/1534 [00:00<00:03, 436.29it/s]  6%|▌         | 88/1534 [00:00<00:03, 419.81it/s]  9%|▉         | 137/1534 [00:00<00:03, 448.95it/s] 12%|█▏        | 182/1534 [00:00<00:03, 445.28it/s] 15%|█▍        | 227/1534 [00:00<00:02, 442.79it/s] 18%|█▊        | 272/1534 [00:00<00:02, 440.67it/s] 21%|██        | 319/1534 [00:00<00:02, 444.79it/s] 24%|██▎       | 364/1534 [00:00<00:02, 445.90it/s] 27%|██▋       | 410/1534 [00:00<00:02, 440.28it/s] 30%|██▉       | 455/1534 [00:01<00:02, 434.14it/s] 33%|███▎      | 499/1534 [00:01<00:02, 424.44it/s] 35%|███▌      | 542/1534 [00:01<00:02, 413.26it/s] 38%|███▊      | 586/1534 [00:01<00:02, 419.92it/s] 43%|████▎     | 663/1534 [00:01<00:01, 520.63it/s] 48%|████▊     | 739/1534 [00:01<00:01, 589.87it/s] 53%|█████▎    | 819/1534 [00:01<00:01, 649.88it/s] 58%|█████▊    | 897/1534 [00:01<00:00, 686.94it/s] 64%|██████▎   | 977/1534 [00:01<00:00, 720.22it/s] 69%|██████▉   | 1060/1534 [00:01<00:00, 752.37it/s] 74%|███████▍  | 1141/1534 [00:02<00:00, 769.15it/s] 79%|███████▉  | 1219/1534 [00:02<00:00, 720.95it/s] 84%|████████▍ | 1292/1534 [00:02<00:00, 679.14it/s] 89%|████████▊ | 1361/1534 [00:02<00:00, 678.05it/s] 94%|█████████▍| 1445/1534 [00:02<00:00, 722.82it/s] 99%|█████████▉| 1518/1534 [00:02<00:00, 717.12it/s]100%|██████████| 1534/1534 [00:02<00:00, 578.71it/s]
2025-05-15:03:16:08,258 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 26%|██▌       | 44/171 [00:00<00:00, 436.60it/s] 53%|█████▎    | 91/171 [00:00<00:00, 441.95it/s] 80%|███████▉  | 136/171 [00:00<00:00, 441.70it/s]100%|██████████| 171/171 [00:00<00:00, 442.77it/s]
2025-05-15:03:16:08,657 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 46%|████▋     | 50/108 [00:00<00:00, 488.43it/s]100%|██████████| 108/108 [00:00<00:00, 607.35it/s]
2025-05-15:03:16:08,839 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 67%|██████▋   | 85/126 [00:00<00:00, 841.00it/s]100%|██████████| 126/126 [00:00<00:00, 818.64it/s]
2025-05-15:03:16:08,999 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 24%|██▍       | 77/324 [00:00<00:00, 768.54it/s] 48%|████▊     | 154/324 [00:00<00:00, 203.74it/s] 61%|██████▏   | 199/324 [00:00<00:00, 248.15it/s] 75%|███████▌  | 243/324 [00:00<00:00, 287.22it/s] 88%|████████▊ | 286/324 [00:00<00:00, 311.66it/s]100%|██████████| 324/324 [00:01<00:00, 300.88it/s]
2025-05-15:03:16:10,087 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 25%|██▌       | 41/163 [00:00<00:00, 396.56it/s] 50%|█████     | 82/163 [00:00<00:00, 403.33it/s] 77%|███████▋  | 125/163 [00:00<00:00, 413.26it/s]100%|██████████| 163/163 [00:00<00:00, 420.58it/s]
2025-05-15:03:16:10,489 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<31:45:27,  2.04s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:02<33:20, 28.05it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:03<20:40, 45.18it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<16:21, 57.06it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<14:07, 66.00it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:05<12:46, 72.82it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:06<11:54, 78.09it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<11:11, 82.93it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:07<10:39, 87.00it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:08<10:16, 90.10it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<09:57, 92.96it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:09<09:43, 95.06it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:10<09:25, 98.02it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<09:09, 100.62it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:11<08:57, 102.82it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:12<08:45, 105.15it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:12<08:34, 107.27it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:13<08:27, 108.49it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:13<08:17, 110.61it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:14<08:09, 112.30it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:15<08:02, 113.81it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:15<07:56, 114.96it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:16<07:46, 117.48it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:16<07:38, 119.31it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:17<07:31, 120.87it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:17<07:24, 122.67it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:18<07:19, 124.11it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:18<07:15, 125.15it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:19<07:11, 126.13it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:19<07:08, 126.71it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:20<07:03, 128.18it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:20<06:59, 129.20it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:21<06:57, 129.58it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:21<06:54, 130.39it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:22<06:51, 131.06it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:22<06:50, 131.37it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:23<06:47, 132.08it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:23<06:40, 134.20it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:23<06:34, 136.16it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:24<06:33, 136.47it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:24<06:29, 137.47it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:25<06:25, 138.99it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:25<06:22, 139.72it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:26<06:23, 139.33it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:26<06:18, 141.00it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:27<06:13, 142.67it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:27<06:10, 143.82it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:28<06:07, 144.50it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:28<06:08, 144.07it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:28<06:04, 145.64it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:29<06:01, 146.47it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:29<05:57, 148.02it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:30<05:53, 149.61it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:30<05:52, 149.80it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:31<05:50, 150.27it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:31<05:48, 151.28it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:31<05:45, 152.09it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:32<05:45, 152.22it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:32<05:41, 153.61it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:33<05:37, 155.01it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:33<05:37, 155.14it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:33<05:34, 156.33it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:34<05:32, 157.11it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:34<05:27, 158.96it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:35<05:26, 159.50it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:35<05:23, 160.86it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:35<05:23, 160.66it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:36<05:21, 161.57it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:36<05:18, 162.52it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:37<05:13, 165.11it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:37<05:14, 164.31it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:37<05:09, 166.88it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:38<05:07, 167.86it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:38<05:04, 169.11it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:38<05:01, 170.47it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:39<05:01, 170.17it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:39<04:58, 171.79it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:40<04:56, 172.94it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:40<04:52, 174.67it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:40<04:50, 176.20it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:41<04:49, 176.61it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:41<04:46, 177.71it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:41<04:47, 176.99it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:42<04:46, 177.22it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:42<04:46, 177.39it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:42<04:42, 179.48it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:43<04:41, 179.97it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:43<04:39, 180.97it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:43<04:37, 181.84it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:44<04:34, 183.86it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:44<04:32, 185.26it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:44<04:30, 186.26it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:45<04:28, 186.97it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:45<04:27, 187.91it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:45<04:25, 188.66it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:46<04:25, 188.37it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:46<04:21, 191.61it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:46<04:16, 194.76it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:47<04:14, 196.12it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:47<04:10, 199.22it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:47<04:06, 201.71it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:48<04:03, 203.85it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:48<04:01, 205.29it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:48<03:59, 206.93it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:49<03:58, 207.99it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:49<03:56, 208.88it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:49<03:55, 209.99it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:49<03:54, 210.64it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:50<03:53, 211.04it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:50<03:52, 211.56it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:50<03:49, 213.63it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:51<03:48, 214.97it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:51<03:46, 216.21it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:51<03:45, 217.35it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:52<03:43, 218.39it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:52<03:42, 219.16it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:52<03:41, 220.27it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:52<03:40, 220.65it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:53<03:41, 219.93it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:53<03:40, 220.48it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [00:53<03:39, 221.06it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [00:54<03:39, 220.64it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [00:54<03:36, 223.71it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [00:54<03:33, 226.16it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [00:54<03:34, 224.82it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [00:55<03:37, 221.47it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [00:55<03:35, 223.51it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [00:55<03:32, 225.78it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [00:56<03:31, 227.20it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [00:56<03:28, 230.09it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [00:56<03:25, 232.58it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [00:56<03:24, 234.10it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [00:57<03:22, 236.09it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [00:57<03:20, 238.02it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [00:57<03:18, 239.43it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [00:57<03:16, 241.73it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [00:58<03:15, 242.53it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [00:58<03:16, 241.81it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [00:58<03:14, 243.64it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [00:58<03:12, 245.96it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [00:59<03:11, 246.00it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [00:59<03:12, 244.69it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [00:59<03:11, 245.42it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [00:59<03:09, 247.76it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:00<03:05, 253.61it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:00<03:03, 255.75it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:00<03:06, 251.72it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:00<03:03, 255.22it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:01<03:01, 257.86it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:01<03:00, 258.76it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:01<03:00, 257.67it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:01<03:01, 256.29it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:02<02:56, 263.04it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:02<03:00, 256.80it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:02<02:57, 261.42it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:02<02:55, 264.04it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:03<02:51, 268.76it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:03<02:48, 272.98it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:03<02:46, 276.77it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:03<02:44, 280.04it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:04<02:43, 280.64it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:04<02:42, 282.23it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:04<02:42, 281.10it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:04<02:41, 283.55it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:04<02:41, 283.52it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:05<02:42, 281.22it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:05<02:44, 276.99it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:05<02:41, 281.49it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:05<02:40, 282.11it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:06<02:39, 283.62it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:06<02:38, 286.51it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:06<02:36, 289.14it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:06<02:34, 291.94it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:06<02:34, 292.68it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:07<02:32, 295.73it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:07<02:31, 295.87it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:07<02:30, 297.44it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:07<02:30, 298.32it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:08<02:28, 301.59it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:08<02:31, 294.24it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:08<02:31, 294.96it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:08<02:35, 285.91it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:08<02:31, 293.36it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:09<02:30, 295.88it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:09<02:30, 295.15it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:09<02:26, 303.16it/s]Running loglikelihood requests:  21%|██        | 11905/56168 [01:09<02:23, 309.14it/s]Running loglikelihood requests:  21%|██▏       | 11969/56168 [01:09<02:20, 314.05it/s]Running loglikelihood requests:  21%|██▏       | 12033/56168 [01:10<02:21, 311.73it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [01:10<02:19, 315.82it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [01:10<02:19, 315.55it/s]Running loglikelihood requests:  22%|██▏       | 12225/56168 [01:10<02:17, 319.03it/s]Running loglikelihood requests:  22%|██▏       | 12289/56168 [01:10<02:20, 312.90it/s]Running loglikelihood requests:  22%|██▏       | 12353/56168 [01:11<02:19, 314.06it/s]Running loglikelihood requests:  22%|██▏       | 12417/56168 [01:11<02:18, 314.95it/s]Running loglikelihood requests:  22%|██▏       | 12481/56168 [01:11<02:17, 317.72it/s]Running loglikelihood requests:  22%|██▏       | 12545/56168 [01:11<02:16, 320.19it/s]Running loglikelihood requests:  22%|██▏       | 12609/56168 [01:11<02:16, 319.06it/s]Running loglikelihood requests:  23%|██▎       | 12673/56168 [01:12<02:17, 316.35it/s]Running loglikelihood requests:  23%|██▎       | 12737/56168 [01:12<02:15, 319.64it/s]Running loglikelihood requests:  23%|██▎       | 12801/56168 [01:12<02:16, 318.66it/s]Running loglikelihood requests:  23%|██▎       | 12865/56168 [01:12<02:15, 318.98it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [01:12<02:14, 321.32it/s]Running loglikelihood requests:  23%|██▎       | 12993/56168 [01:13<02:14, 321.49it/s]Running loglikelihood requests:  23%|██▎       | 13057/56168 [01:13<02:16, 316.31it/s]Running loglikelihood requests:  23%|██▎       | 13121/56168 [01:13<02:19, 307.96it/s]Running loglikelihood requests:  23%|██▎       | 13185/56168 [01:13<02:16, 315.09it/s]Running loglikelihood requests:  24%|██▎       | 13249/56168 [01:13<02:14, 320.15it/s]Running loglikelihood requests:  24%|██▎       | 13313/56168 [01:14<02:13, 319.86it/s]Running loglikelihood requests:  24%|██▍       | 13377/56168 [01:14<02:12, 323.24it/s]Running loglikelihood requests:  24%|██▍       | 13441/56168 [01:14<02:10, 326.31it/s]Running loglikelihood requests:  24%|██▍       | 13505/56168 [01:14<02:09, 329.24it/s]Running loglikelihood requests:  24%|██▍       | 13569/56168 [01:14<02:09, 329.74it/s]Running loglikelihood requests:  24%|██▍       | 13633/56168 [01:15<02:07, 333.40it/s]Running loglikelihood requests:  24%|██▍       | 13697/56168 [01:15<02:06, 335.47it/s]Running loglikelihood requests:  24%|██▍       | 13761/56168 [01:15<02:05, 337.36it/s]Running loglikelihood requests:  25%|██▍       | 13825/56168 [01:15<02:06, 335.95it/s]Running loglikelihood requests:  25%|██▍       | 13889/56168 [01:15<02:06, 333.19it/s]Running loglikelihood requests:  25%|██▍       | 13953/56168 [01:16<02:05, 336.20it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [01:16<02:04, 338.02it/s]Running loglikelihood requests:  25%|██▌       | 14081/56168 [01:16<02:04, 339.29it/s]Running loglikelihood requests:  25%|██▌       | 14145/56168 [01:16<02:03, 340.17it/s]Running loglikelihood requests:  25%|██▌       | 14209/56168 [01:16<02:04, 338.15it/s]Running loglikelihood requests:  25%|██▌       | 14273/56168 [01:17<02:03, 338.12it/s]Running loglikelihood requests:  26%|██▌       | 14337/56168 [01:17<02:03, 338.98it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [01:17<02:03, 338.54it/s]Running loglikelihood requests:  26%|██▌       | 14465/56168 [01:17<02:02, 339.53it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [01:17<02:08, 324.45it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [01:17<02:08, 324.01it/s]Running loglikelihood requests:  26%|██▌       | 14657/56168 [01:18<02:10, 319.17it/s]Running loglikelihood requests:  26%|██▌       | 14721/56168 [01:18<02:07, 325.43it/s]Running loglikelihood requests:  26%|██▋       | 14785/56168 [01:18<02:05, 330.29it/s]Running loglikelihood requests:  26%|██▋       | 14849/56168 [01:18<02:03, 334.36it/s]Running loglikelihood requests:  27%|██▋       | 14913/56168 [01:18<02:02, 337.15it/s]Running loglikelihood requests:  27%|██▋       | 14977/56168 [01:19<02:01, 338.70it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [01:19<02:04, 330.89it/s]Running loglikelihood requests:  27%|██▋       | 15105/56168 [01:19<02:04, 330.16it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [01:19<02:04, 328.32it/s]Running loglikelihood requests:  27%|██▋       | 15233/56168 [01:19<02:03, 330.76it/s]Running loglikelihood requests:  27%|██▋       | 15297/56168 [01:20<02:02, 334.96it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [01:20<02:02, 334.40it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [01:20<02:01, 336.57it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [01:20<02:00, 336.84it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [01:20<02:03, 328.66it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [01:21<02:03, 327.35it/s]Running loglikelihood requests:  28%|██▊       | 15681/56168 [01:21<02:06, 321.29it/s]Running loglikelihood requests:  28%|██▊       | 15745/56168 [01:21<02:03, 328.34it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [01:21<02:01, 333.22it/s]Running loglikelihood requests:  28%|██▊       | 15873/56168 [01:21<01:59, 337.70it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [01:22<02:00, 334.09it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [01:22<01:58, 340.00it/s]Running loglikelihood requests:  29%|██▊       | 16065/56168 [01:22<01:56, 344.09it/s]Running loglikelihood requests:  29%|██▊       | 16129/56168 [01:22<01:55, 346.63it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [01:22<01:54, 347.93it/s]Running loglikelihood requests:  29%|██▉       | 16257/56168 [01:22<01:54, 348.49it/s]Running loglikelihood requests:  29%|██▉       | 16321/56168 [01:23<01:53, 350.07it/s]Running loglikelihood requests:  29%|██▉       | 16385/56168 [01:23<01:54, 347.98it/s]Running loglikelihood requests:  29%|██▉       | 16449/56168 [01:23<01:54, 346.71it/s]Running loglikelihood requests:  29%|██▉       | 16513/56168 [01:23<01:54, 345.88it/s]Running loglikelihood requests:  30%|██▉       | 16577/56168 [01:23<01:53, 348.59it/s]Running loglikelihood requests:  30%|██▉       | 16641/56168 [01:24<01:52, 350.19it/s]Running loglikelihood requests:  30%|██▉       | 16705/56168 [01:24<01:52, 351.20it/s]Running loglikelihood requests:  30%|██▉       | 16769/56168 [01:24<01:52, 350.87it/s]Running loglikelihood requests:  30%|██▉       | 16833/56168 [01:24<01:51, 351.42it/s]Running loglikelihood requests:  30%|███       | 16897/56168 [01:24<01:51, 351.61it/s]Running loglikelihood requests:  30%|███       | 16961/56168 [01:24<01:51, 351.85it/s]Running loglikelihood requests:  30%|███       | 17025/56168 [01:25<01:51, 350.83it/s]Running loglikelihood requests:  30%|███       | 17089/56168 [01:25<01:51, 351.12it/s]Running loglikelihood requests:  31%|███       | 17153/56168 [01:25<01:52, 347.37it/s]Running loglikelihood requests:  31%|███       | 17217/56168 [01:25<01:51, 348.10it/s]Running loglikelihood requests:  31%|███       | 17281/56168 [01:25<01:51, 350.09it/s]Running loglikelihood requests:  31%|███       | 17345/56168 [01:26<01:50, 350.98it/s]Running loglikelihood requests:  31%|███       | 17409/56168 [01:26<01:51, 349.01it/s]Running loglikelihood requests:  31%|███       | 17473/56168 [01:26<01:51, 347.46it/s]Running loglikelihood requests:  31%|███       | 17537/56168 [01:26<01:50, 349.88it/s]Running loglikelihood requests:  31%|███▏      | 17601/56168 [01:26<01:53, 341.08it/s]Running loglikelihood requests:  31%|███▏      | 17665/56168 [01:26<01:52, 342.14it/s]Running loglikelihood requests:  32%|███▏      | 17729/56168 [01:27<01:52, 342.73it/s]Running loglikelihood requests:  32%|███▏      | 17793/56168 [01:27<01:52, 342.32it/s]Running loglikelihood requests:  32%|███▏      | 17857/56168 [01:27<01:52, 339.43it/s]Running loglikelihood requests:  32%|███▏      | 17921/56168 [01:27<01:51, 344.08it/s]Running loglikelihood requests:  32%|███▏      | 17985/56168 [01:27<01:56, 328.97it/s]Running loglikelihood requests:  32%|███▏      | 18049/56168 [01:28<01:59, 318.19it/s]Running loglikelihood requests:  32%|███▏      | 18113/56168 [01:28<01:56, 327.46it/s]Running loglikelihood requests:  32%|███▏      | 18177/56168 [01:28<01:58, 321.63it/s]Running loglikelihood requests:  32%|███▏      | 18241/56168 [01:28<01:54, 331.21it/s]Running loglikelihood requests:  33%|███▎      | 18305/56168 [01:28<01:52, 336.28it/s]Running loglikelihood requests:  33%|███▎      | 18369/56168 [01:29<01:51, 337.93it/s]Running loglikelihood requests:  33%|███▎      | 18433/56168 [01:29<01:51, 339.81it/s]Running loglikelihood requests:  33%|███▎      | 18497/56168 [01:29<01:49, 344.22it/s]Running loglikelihood requests:  33%|███▎      | 18561/56168 [01:29<01:47, 348.80it/s]Running loglikelihood requests:  33%|███▎      | 18625/56168 [01:29<01:45, 356.04it/s]Running loglikelihood requests:  33%|███▎      | 18689/56168 [01:29<01:41, 369.26it/s]Running loglikelihood requests:  33%|███▎      | 18753/56168 [01:30<01:38, 378.46it/s]Running loglikelihood requests:  34%|███▎      | 18817/56168 [01:30<01:36, 385.55it/s]Running loglikelihood requests:  34%|███▎      | 18881/56168 [01:30<01:35, 392.07it/s]Running loglikelihood requests:  34%|███▎      | 18945/56168 [01:30<01:34, 395.66it/s]Running loglikelihood requests:  34%|███▍      | 19009/56168 [01:30<01:33, 396.64it/s]Running loglikelihood requests:  34%|███▍      | 19073/56168 [01:30<01:32, 399.32it/s]Running loglikelihood requests:  34%|███▍      | 19137/56168 [01:31<01:32, 400.34it/s]Running loglikelihood requests:  34%|███▍      | 19201/56168 [01:31<01:31, 402.47it/s]Running loglikelihood requests:  34%|███▍      | 19265/56168 [01:31<01:31, 404.78it/s]Running loglikelihood requests:  34%|███▍      | 19329/56168 [01:31<01:31, 404.10it/s]Running loglikelihood requests:  35%|███▍      | 19393/56168 [01:31<01:31, 401.65it/s]Running loglikelihood requests:  35%|███▍      | 19457/56168 [01:31<01:32, 398.51it/s]Running loglikelihood requests:  35%|███▍      | 19521/56168 [01:32<01:32, 396.21it/s]Running loglikelihood requests:  35%|███▍      | 19585/56168 [01:32<01:32, 397.61it/s]Running loglikelihood requests:  35%|███▍      | 19649/56168 [01:32<01:31, 398.83it/s]Running loglikelihood requests:  35%|███▌      | 19713/56168 [01:32<01:31, 400.44it/s]Running loglikelihood requests:  35%|███▌      | 19777/56168 [01:32<01:31, 399.86it/s]Running loglikelihood requests:  35%|███▌      | 19841/56168 [01:32<01:31, 395.66it/s]Running loglikelihood requests:  35%|███▌      | 19905/56168 [01:33<01:31, 397.91it/s]Running loglikelihood requests:  36%|███▌      | 19969/56168 [01:33<01:32, 389.96it/s]Running loglikelihood requests:  36%|███▌      | 20033/56168 [01:33<01:31, 395.15it/s]Running loglikelihood requests:  36%|███▌      | 20097/56168 [01:33<01:31, 393.86it/s]Running loglikelihood requests:  36%|███▌      | 20161/56168 [01:33<01:30, 397.71it/s]Running loglikelihood requests:  36%|███▌      | 20225/56168 [01:33<01:31, 391.03it/s]Running loglikelihood requests:  36%|███▌      | 20289/56168 [01:33<01:30, 396.29it/s]Running loglikelihood requests:  36%|███▌      | 20353/56168 [01:34<01:30, 396.09it/s]Running loglikelihood requests:  36%|███▋      | 20417/56168 [01:34<01:31, 391.69it/s]Running loglikelihood requests:  36%|███▋      | 20481/56168 [01:34<01:30, 393.67it/s]Running loglikelihood requests:  37%|███▋      | 20545/56168 [01:34<01:30, 394.82it/s]Running loglikelihood requests:  37%|███▋      | 20609/56168 [01:34<01:30, 394.62it/s]Running loglikelihood requests:  37%|███▋      | 20673/56168 [01:34<01:30, 394.06it/s]Running loglikelihood requests:  37%|███▋      | 20737/56168 [01:35<01:28, 398.76it/s]Running loglikelihood requests:  37%|███▋      | 20801/56168 [01:35<01:28, 401.11it/s]Running loglikelihood requests:  37%|███▋      | 20865/56168 [01:35<01:28, 399.50it/s]Running loglikelihood requests:  37%|███▋      | 20929/56168 [01:35<01:27, 404.10it/s]Running loglikelihood requests:  37%|███▋      | 20993/56168 [01:35<01:26, 408.27it/s]Running loglikelihood requests:  37%|███▋      | 21057/56168 [01:35<01:26, 407.12it/s]Running loglikelihood requests:  38%|███▊      | 21121/56168 [01:36<01:25, 409.85it/s]Running loglikelihood requests:  38%|███▊      | 21185/56168 [01:36<01:25, 408.91it/s]Running loglikelihood requests:  38%|███▊      | 21249/56168 [01:36<01:24, 413.55it/s]Running loglikelihood requests:  38%|███▊      | 21313/56168 [01:36<01:24, 411.03it/s]Running loglikelihood requests:  38%|███▊      | 21377/56168 [01:36<01:24, 409.41it/s]Running loglikelihood requests:  38%|███▊      | 21441/56168 [01:36<01:24, 413.04it/s]Running loglikelihood requests:  38%|███▊      | 21505/56168 [01:36<01:24, 409.78it/s]Running loglikelihood requests:  38%|███▊      | 21569/56168 [01:37<01:24, 408.94it/s]Running loglikelihood requests:  39%|███▊      | 21633/56168 [01:37<01:22, 416.81it/s]Running loglikelihood requests:  39%|███▊      | 21697/56168 [01:37<01:22, 418.15it/s]Running loglikelihood requests:  39%|███▊      | 21761/56168 [01:37<01:21, 420.25it/s]Running loglikelihood requests:  39%|███▉      | 21825/56168 [01:37<01:22, 417.34it/s]Running loglikelihood requests:  39%|███▉      | 21889/56168 [01:37<01:21, 418.86it/s]Running loglikelihood requests:  39%|███▉      | 21953/56168 [01:38<01:24, 403.83it/s]Running loglikelihood requests:  39%|███▉      | 22017/56168 [01:38<01:25, 401.09it/s]Running loglikelihood requests:  39%|███▉      | 22081/56168 [01:38<01:24, 401.95it/s]Running loglikelihood requests:  39%|███▉      | 22145/56168 [01:38<01:23, 407.29it/s]Running loglikelihood requests:  40%|███▉      | 22209/56168 [01:38<01:22, 412.98it/s]Running loglikelihood requests:  40%|███▉      | 22273/56168 [01:38<01:20, 418.67it/s]Running loglikelihood requests:  40%|███▉      | 22337/56168 [01:39<01:20, 422.03it/s]Running loglikelihood requests:  40%|███▉      | 22401/56168 [01:39<01:19, 424.10it/s]Running loglikelihood requests:  40%|███▉      | 22465/56168 [01:39<01:19, 426.39it/s]Running loglikelihood requests:  40%|████      | 22529/56168 [01:39<01:18, 427.89it/s]Running loglikelihood requests:  40%|████      | 22593/56168 [01:39<01:18, 428.73it/s]Running loglikelihood requests:  40%|████      | 22657/56168 [01:39<01:17, 430.27it/s]Running loglikelihood requests:  40%|████      | 22721/56168 [01:39<01:17, 430.40it/s]Running loglikelihood requests:  41%|████      | 22785/56168 [01:40<01:19, 422.08it/s]Running loglikelihood requests:  41%|████      | 22849/56168 [01:40<01:18, 423.24it/s]Running loglikelihood requests:  41%|████      | 22913/56168 [01:40<01:18, 421.69it/s]Running loglikelihood requests:  41%|████      | 22977/56168 [01:40<01:18, 423.67it/s]Running loglikelihood requests:  41%|████      | 23041/56168 [01:40<01:17, 426.25it/s]Running loglikelihood requests:  41%|████      | 23105/56168 [01:40<01:17, 427.68it/s]Running loglikelihood requests:  41%|████      | 23169/56168 [01:40<01:16, 428.66it/s]Running loglikelihood requests:  41%|████▏     | 23233/56168 [01:41<01:15, 435.27it/s]Running loglikelihood requests:  41%|████▏     | 23297/56168 [01:41<01:15, 435.31it/s]Running loglikelihood requests:  42%|████▏     | 23361/56168 [01:41<01:15, 433.59it/s]Running loglikelihood requests:  42%|████▏     | 23425/56168 [01:41<01:15, 430.93it/s]Running loglikelihood requests:  42%|████▏     | 23489/56168 [01:41<01:15, 435.37it/s]Running loglikelihood requests:  42%|████▏     | 23553/56168 [01:41<01:14, 435.22it/s]Running loglikelihood requests:  42%|████▏     | 23617/56168 [01:42<01:23, 388.28it/s]Running loglikelihood requests:  42%|████▏     | 23681/56168 [01:42<01:21, 400.99it/s]Running loglikelihood requests:  42%|████▏     | 23745/56168 [01:42<01:21, 396.27it/s]Running loglikelihood requests:  42%|████▏     | 23809/56168 [01:42<01:20, 404.44it/s]Running loglikelihood requests:  43%|████▎     | 23873/56168 [01:42<01:18, 413.49it/s]Running loglikelihood requests:  43%|████▎     | 23937/56168 [01:42<01:16, 418.67it/s]Running loglikelihood requests:  43%|████▎     | 24001/56168 [01:42<01:16, 419.84it/s]Running loglikelihood requests:  43%|████▎     | 24065/56168 [01:43<01:14, 430.29it/s]Running loglikelihood requests:  43%|████▎     | 24129/56168 [01:43<01:13, 437.09it/s]Running loglikelihood requests:  43%|████▎     | 24193/56168 [01:43<01:15, 424.81it/s]Running loglikelihood requests:  43%|████▎     | 24257/56168 [01:43<01:18, 407.19it/s]Running loglikelihood requests:  43%|████▎     | 24321/56168 [01:43<01:15, 421.36it/s]Running loglikelihood requests:  43%|████▎     | 24385/56168 [01:43<01:15, 422.88it/s]Running loglikelihood requests:  44%|████▎     | 24449/56168 [01:44<01:18, 401.70it/s]Running loglikelihood requests:  44%|████▎     | 24513/56168 [01:44<01:18, 405.17it/s]Running loglikelihood requests:  44%|████▍     | 24577/56168 [01:44<01:16, 414.89it/s]Running loglikelihood requests:  44%|████▍     | 24641/56168 [01:44<01:13, 427.32it/s]Running loglikelihood requests:  44%|████▍     | 24705/56168 [01:44<01:12, 436.57it/s]Running loglikelihood requests:  44%|████▍     | 24769/56168 [01:44<01:11, 441.35it/s]Running loglikelihood requests:  44%|████▍     | 24833/56168 [01:44<01:10, 447.31it/s]Running loglikelihood requests:  44%|████▍     | 24897/56168 [01:45<01:09, 450.29it/s]Running loglikelihood requests:  44%|████▍     | 24961/56168 [01:45<01:09, 452.16it/s]Running loglikelihood requests:  45%|████▍     | 25025/56168 [01:45<01:08, 453.12it/s]Running loglikelihood requests:  45%|████▍     | 25089/56168 [01:45<01:09, 449.31it/s]Running loglikelihood requests:  45%|████▍     | 25153/56168 [01:45<01:12, 429.51it/s]Running loglikelihood requests:  45%|████▍     | 25217/56168 [01:45<01:10, 440.47it/s]Running loglikelihood requests:  45%|████▌     | 25281/56168 [01:45<01:15, 410.59it/s]Running loglikelihood requests:  45%|████▌     | 25345/56168 [01:46<01:14, 414.54it/s]Running loglikelihood requests:  45%|████▌     | 25409/56168 [01:46<01:18, 393.28it/s]Running loglikelihood requests:  45%|████▌     | 25473/56168 [01:46<01:15, 408.42it/s]Running loglikelihood requests:  45%|████▌     | 25537/56168 [01:46<01:12, 423.69it/s]Running loglikelihood requests:  46%|████▌     | 25601/56168 [01:46<01:10, 435.23it/s]Running loglikelihood requests:  46%|████▌     | 25665/56168 [01:46<01:08, 442.42it/s]Running loglikelihood requests:  46%|████▌     | 25729/56168 [01:46<01:09, 438.04it/s]Running loglikelihood requests:  46%|████▌     | 25793/56168 [01:47<01:08, 444.06it/s]Running loglikelihood requests:  46%|████▌     | 25857/56168 [01:47<01:08, 444.23it/s]Running loglikelihood requests:  46%|████▌     | 25921/56168 [01:47<01:07, 451.36it/s]Running loglikelihood requests:  46%|████▋     | 25985/56168 [01:47<01:07, 448.63it/s]Running loglikelihood requests:  46%|████▋     | 26049/56168 [01:47<01:06, 453.53it/s]Running loglikelihood requests:  46%|████▋     | 26113/56168 [01:47<01:05, 456.60it/s]Running loglikelihood requests:  47%|████▋     | 26177/56168 [01:47<01:05, 459.66it/s]Running loglikelihood requests:  47%|████▋     | 26241/56168 [01:48<01:04, 461.62it/s]Running loglikelihood requests:  47%|████▋     | 26305/56168 [01:48<01:04, 464.71it/s]Running loglikelihood requests:  47%|████▋     | 26369/56168 [01:48<01:04, 464.92it/s]Running loglikelihood requests:  47%|████▋     | 26433/56168 [01:48<01:04, 459.58it/s]Running loglikelihood requests:  47%|████▋     | 26497/56168 [01:48<01:06, 445.98it/s]Running loglikelihood requests:  47%|████▋     | 26561/56168 [01:48<01:06, 445.89it/s]Running loglikelihood requests:  47%|████▋     | 26625/56168 [01:48<01:05, 448.10it/s]Running loglikelihood requests:  48%|████▊     | 26689/56168 [01:49<01:04, 454.19it/s]Running loglikelihood requests:  48%|████▊     | 26753/56168 [01:49<01:04, 455.88it/s]Running loglikelihood requests:  48%|████▊     | 26817/56168 [01:49<01:04, 457.27it/s]Running loglikelihood requests:  48%|████▊     | 26881/56168 [01:49<01:02, 466.30it/s]Running loglikelihood requests:  48%|████▊     | 26945/56168 [01:49<01:06, 441.97it/s]Running loglikelihood requests:  48%|████▊     | 27009/56168 [01:49<01:05, 446.73it/s]Running loglikelihood requests:  48%|████▊     | 27073/56168 [01:49<01:03, 456.43it/s]Running loglikelihood requests:  48%|████▊     | 27137/56168 [01:50<01:03, 460.14it/s]Running loglikelihood requests:  48%|████▊     | 27201/56168 [01:50<01:01, 467.92it/s]Running loglikelihood requests:  49%|████▊     | 27265/56168 [01:50<01:00, 474.30it/s]Running loglikelihood requests:  49%|████▊     | 27329/56168 [01:50<01:00, 478.73it/s]Running loglikelihood requests:  49%|████▉     | 27393/56168 [01:50<00:59, 483.35it/s]Running loglikelihood requests:  49%|████▉     | 27457/56168 [01:50<01:00, 475.68it/s]Running loglikelihood requests:  49%|████▉     | 27521/56168 [01:50<01:01, 467.21it/s]Running loglikelihood requests:  49%|████▉     | 27585/56168 [01:51<01:01, 463.50it/s]Running loglikelihood requests:  49%|████▉     | 27649/56168 [01:51<01:04, 438.86it/s]Running loglikelihood requests:  49%|████▉     | 27713/56168 [01:51<01:05, 437.21it/s]Running loglikelihood requests:  49%|████▉     | 27777/56168 [01:51<01:05, 434.93it/s]Running loglikelihood requests:  50%|████▉     | 27841/56168 [01:51<01:06, 425.56it/s]Running loglikelihood requests:  50%|████▉     | 27905/56168 [01:51<01:07, 418.83it/s]Running loglikelihood requests:  50%|████▉     | 27969/56168 [01:51<01:08, 410.70it/s]Running loglikelihood requests:  50%|████▉     | 28033/56168 [01:52<01:07, 417.96it/s]Running loglikelihood requests:  50%|█████     | 28097/56168 [01:52<01:07, 417.41it/s]Running loglikelihood requests:  50%|█████     | 28161/56168 [01:52<01:04, 431.07it/s]Running loglikelihood requests:  50%|█████     | 28225/56168 [01:52<01:06, 421.48it/s]Running loglikelihood requests:  50%|█████     | 28289/56168 [01:52<01:07, 414.89it/s]Running loglikelihood requests:  50%|█████     | 28353/56168 [01:52<01:05, 422.92it/s]Running loglikelihood requests:  51%|█████     | 28417/56168 [01:52<01:02, 442.75it/s]Running loglikelihood requests:  51%|█████     | 28481/56168 [01:53<01:00, 454.06it/s]Running loglikelihood requests:  51%|█████     | 28545/56168 [01:53<00:59, 467.22it/s]Running loglikelihood requests:  51%|█████     | 28609/56168 [01:53<00:58, 473.64it/s]Running loglikelihood requests:  51%|█████     | 28673/56168 [01:53<00:57, 480.86it/s]Running loglikelihood requests:  51%|█████     | 28737/56168 [01:53<00:56, 485.43it/s]Running loglikelihood requests:  51%|█████▏    | 28801/56168 [01:53<00:56, 488.69it/s]Running loglikelihood requests:  51%|█████▏    | 28865/56168 [01:53<00:55, 491.66it/s]Running loglikelihood requests:  52%|█████▏    | 28929/56168 [01:54<00:55, 486.58it/s]Running loglikelihood requests:  52%|█████▏    | 28993/56168 [01:54<00:55, 490.83it/s]Running loglikelihood requests:  52%|█████▏    | 29057/56168 [01:54<00:55, 491.79it/s]Running loglikelihood requests:  52%|█████▏    | 29121/56168 [01:54<00:54, 494.08it/s]Running loglikelihood requests:  52%|█████▏    | 29185/56168 [01:54<00:54, 495.24it/s]Running loglikelihood requests:  52%|█████▏    | 29249/56168 [01:54<00:54, 496.11it/s]Running loglikelihood requests:  52%|█████▏    | 29313/56168 [01:54<00:54, 495.76it/s]Running loglikelihood requests:  52%|█████▏    | 29377/56168 [01:54<00:53, 497.44it/s]Running loglikelihood requests:  52%|█████▏    | 29441/56168 [01:55<00:53, 496.80it/s]Running loglikelihood requests:  53%|█████▎    | 29505/56168 [01:55<00:53, 497.88it/s]Running loglikelihood requests:  53%|█████▎    | 29569/56168 [01:55<00:53, 497.97it/s]Running loglikelihood requests:  53%|█████▎    | 29633/56168 [01:55<00:53, 498.38it/s]Running loglikelihood requests:  53%|█████▎    | 29697/56168 [01:55<00:53, 498.37it/s]Running loglikelihood requests:  53%|█████▎    | 29761/56168 [01:55<00:52, 499.30it/s]Running loglikelihood requests:  53%|█████▎    | 29825/56168 [01:55<00:52, 498.70it/s]Running loglikelihood requests:  53%|█████▎    | 29889/56168 [01:55<00:52, 498.71it/s]Running loglikelihood requests:  53%|█████▎    | 29953/56168 [01:56<00:52, 499.70it/s]Running loglikelihood requests:  53%|█████▎    | 30017/56168 [01:56<00:52, 499.99it/s]Running loglikelihood requests:  54%|█████▎    | 30081/56168 [01:56<00:52, 500.88it/s]Running loglikelihood requests:  54%|█████▎    | 30145/56168 [01:56<00:52, 491.26it/s]Running loglikelihood requests:  54%|█████▍    | 30209/56168 [01:56<00:52, 493.78it/s]Running loglikelihood requests:  54%|█████▍    | 30273/56168 [01:56<00:52, 495.72it/s]Running loglikelihood requests:  54%|█████▍    | 30337/56168 [01:56<00:52, 496.00it/s]Running loglikelihood requests:  54%|█████▍    | 30401/56168 [01:56<00:51, 497.96it/s]Running loglikelihood requests:  54%|█████▍    | 30465/56168 [01:57<00:51, 498.95it/s]Running loglikelihood requests:  54%|█████▍    | 30529/56168 [01:57<00:51, 500.74it/s]Running loglikelihood requests:  54%|█████▍    | 30593/56168 [01:57<00:50, 502.94it/s]Running loglikelihood requests:  55%|█████▍    | 30657/56168 [01:57<00:50, 504.80it/s]Running loglikelihood requests:  55%|█████▍    | 30721/56168 [01:57<00:50, 503.58it/s]Running loglikelihood requests:  55%|█████▍    | 30785/56168 [01:57<00:51, 494.84it/s]Running loglikelihood requests:  55%|█████▍    | 30849/56168 [01:57<00:50, 497.86it/s]Running loglikelihood requests:  55%|█████▌    | 30913/56168 [01:57<00:50, 498.78it/s]Running loglikelihood requests:  55%|█████▌    | 30977/56168 [01:58<00:50, 500.90it/s]Running loglikelihood requests:  55%|█████▌    | 31041/56168 [01:58<00:50, 500.87it/s]Running loglikelihood requests:  55%|█████▌    | 31105/56168 [01:58<00:50, 500.96it/s]Running loglikelihood requests:  55%|█████▌    | 31169/56168 [01:58<00:50, 496.07it/s]Running loglikelihood requests:  56%|█████▌    | 31233/56168 [01:58<00:49, 499.36it/s]Running loglikelihood requests:  56%|█████▌    | 31297/56168 [01:58<00:50, 495.76it/s]Running loglikelihood requests:  56%|█████▌    | 31361/56168 [01:58<00:49, 499.28it/s]Running loglikelihood requests:  56%|█████▌    | 31425/56168 [01:59<00:49, 500.39it/s]Running loglikelihood requests:  56%|█████▌    | 31489/56168 [01:59<00:49, 502.57it/s]Running loglikelihood requests:  56%|█████▌    | 31553/56168 [01:59<00:48, 504.17it/s]Running loglikelihood requests:  56%|█████▋    | 31617/56168 [01:59<00:48, 504.48it/s]Running loglikelihood requests:  56%|█████▋    | 31681/56168 [01:59<00:48, 503.27it/s]Running loglikelihood requests:  57%|█████▋    | 31745/56168 [01:59<00:48, 504.00it/s]Running loglikelihood requests:  57%|█████▋    | 31809/56168 [01:59<00:47, 515.78it/s]Running loglikelihood requests:  57%|█████▋    | 31873/56168 [01:59<00:46, 523.77it/s]Running loglikelihood requests:  57%|█████▋    | 31937/56168 [02:00<00:45, 528.33it/s]Running loglikelihood requests:  57%|█████▋    | 32001/56168 [02:00<00:45, 531.55it/s]Running loglikelihood requests:  57%|█████▋    | 32065/56168 [02:00<00:45, 532.67it/s]Running loglikelihood requests:  57%|█████▋    | 32129/56168 [02:00<00:45, 534.12it/s]Running loglikelihood requests:  57%|█████▋    | 32193/56168 [02:00<00:44, 536.41it/s]Running loglikelihood requests:  57%|█████▋    | 32257/56168 [02:00<00:44, 539.07it/s]Running loglikelihood requests:  58%|█████▊    | 32321/56168 [02:00<00:44, 540.57it/s]Running loglikelihood requests:  58%|█████▊    | 32385/56168 [02:00<00:43, 541.41it/s]Running loglikelihood requests:  58%|█████▊    | 32449/56168 [02:00<00:43, 540.08it/s]Running loglikelihood requests:  58%|█████▊    | 32513/56168 [02:01<00:43, 539.67it/s]Running loglikelihood requests:  58%|█████▊    | 32577/56168 [02:01<00:43, 540.05it/s]Running loglikelihood requests:  58%|█████▊    | 32641/56168 [02:01<00:43, 542.32it/s]Running loglikelihood requests:  58%|█████▊    | 32705/56168 [02:01<00:43, 544.09it/s]Running loglikelihood requests:  58%|█████▊    | 32769/56168 [02:01<00:42, 544.38it/s]Running loglikelihood requests:  58%|█████▊    | 32833/56168 [02:01<00:42, 543.62it/s]Running loglikelihood requests:  59%|█████▊    | 32897/56168 [02:01<00:42, 541.96it/s]Running loglikelihood requests:  59%|█████▊    | 32961/56168 [02:01<00:42, 541.42it/s]Running loglikelihood requests:  59%|█████▉    | 33025/56168 [02:02<00:42, 542.53it/s]Running loglikelihood requests:  59%|█████▉    | 33089/56168 [02:02<00:42, 544.18it/s]Running loglikelihood requests:  59%|█████▉    | 33153/56168 [02:02<00:42, 544.96it/s]Running loglikelihood requests:  59%|█████▉    | 33217/56168 [02:02<00:42, 544.56it/s]Running loglikelihood requests:  59%|█████▉    | 33281/56168 [02:02<00:42, 543.61it/s]Running loglikelihood requests:  59%|█████▉    | 33345/56168 [02:02<00:41, 544.50it/s]Running loglikelihood requests:  59%|█████▉    | 33409/56168 [02:02<00:41, 547.53it/s]Running loglikelihood requests:  60%|█████▉    | 33473/56168 [02:02<00:41, 548.79it/s]Running loglikelihood requests:  60%|█████▉    | 33537/56168 [02:02<00:41, 546.98it/s]Running loglikelihood requests:  60%|█████▉    | 33601/56168 [02:03<00:41, 546.31it/s]Running loglikelihood requests:  60%|█████▉    | 33665/56168 [02:03<00:41, 548.03it/s]Running loglikelihood requests:  60%|██████    | 33729/56168 [02:03<00:40, 548.56it/s]Running loglikelihood requests:  60%|██████    | 33793/56168 [02:03<00:40, 546.89it/s]Running loglikelihood requests:  60%|██████    | 33857/56168 [02:03<00:40, 545.33it/s]Running loglikelihood requests:  60%|██████    | 33921/56168 [02:03<00:40, 546.62it/s]Running loglikelihood requests:  61%|██████    | 33985/56168 [02:03<00:40, 547.30it/s]Running loglikelihood requests:  61%|██████    | 34049/56168 [02:03<00:40, 547.60it/s]Running loglikelihood requests:  61%|██████    | 34113/56168 [02:04<00:40, 547.41it/s]Running loglikelihood requests:  61%|██████    | 34177/56168 [02:04<00:40, 547.04it/s]Running loglikelihood requests:  61%|██████    | 34241/56168 [02:04<00:40, 547.99it/s]Running loglikelihood requests:  61%|██████    | 34305/56168 [02:04<00:39, 549.76it/s]Running loglikelihood requests:  61%|██████    | 34369/56168 [02:04<00:39, 550.57it/s]Running loglikelihood requests:  61%|██████▏   | 34433/56168 [02:04<00:39, 548.89it/s]Running loglikelihood requests:  61%|██████▏   | 34497/56168 [02:04<00:39, 549.01it/s]Running loglikelihood requests:  62%|██████▏   | 34561/56168 [02:04<00:39, 551.19it/s]Running loglikelihood requests:  62%|██████▏   | 34625/56168 [02:04<00:39, 552.13it/s]Running loglikelihood requests:  62%|██████▏   | 34689/56168 [02:05<00:39, 547.95it/s]Running loglikelihood requests:  62%|██████▏   | 34753/56168 [02:05<00:39, 548.27it/s]Running loglikelihood requests:  62%|██████▏   | 34817/56168 [02:05<00:38, 549.55it/s]Running loglikelihood requests:  62%|██████▏   | 34881/56168 [02:05<00:38, 550.64it/s]Running loglikelihood requests:  62%|██████▏   | 34945/56168 [02:05<00:38, 549.95it/s]Running loglikelihood requests:  62%|██████▏   | 35009/56168 [02:05<00:38, 549.95it/s]Running loglikelihood requests:  62%|██████▏   | 35073/56168 [02:05<00:38, 550.33it/s]Running loglikelihood requests:  63%|██████▎   | 35137/56168 [02:05<00:38, 550.92it/s]Running loglikelihood requests:  63%|██████▎   | 35201/56168 [02:05<00:38, 550.45it/s]Running loglikelihood requests:  63%|██████▎   | 35265/56168 [02:06<00:38, 549.34it/s]Running loglikelihood requests:  63%|██████▎   | 35329/56168 [02:06<00:37, 549.75it/s]Running loglikelihood requests:  63%|██████▎   | 35393/56168 [02:06<00:37, 551.18it/s]Running loglikelihood requests:  63%|██████▎   | 35457/56168 [02:06<00:37, 550.05it/s]Running loglikelihood requests:  63%|██████▎   | 35521/56168 [02:06<00:37, 548.54it/s]Running loglikelihood requests:  63%|██████▎   | 35585/56168 [02:06<00:37, 547.25it/s]Running loglikelihood requests:  63%|██████▎   | 35649/56168 [02:06<00:37, 547.57it/s]Running loglikelihood requests:  64%|██████▎   | 35713/56168 [02:06<00:37, 540.33it/s]Running loglikelihood requests:  64%|██████▎   | 35777/56168 [02:07<00:38, 532.75it/s]Running loglikelihood requests:  64%|██████▍   | 35841/56168 [02:07<00:37, 539.25it/s]Running loglikelihood requests:  64%|██████▍   | 35905/56168 [02:07<00:37, 533.92it/s]Running loglikelihood requests:  64%|██████▍   | 35969/56168 [02:07<00:37, 539.11it/s]Running loglikelihood requests:  64%|██████▍   | 36033/56168 [02:07<00:38, 529.11it/s]Running loglikelihood requests:  64%|██████▍   | 36097/56168 [02:07<00:37, 536.44it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [02:07<00:37, 540.21it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [02:07<00:36, 545.04it/s]Running loglikelihood requests:  65%|██████▍   | 36289/56168 [02:07<00:36, 548.06it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [02:08<00:36, 540.58it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [02:08<00:36, 536.69it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [02:08<00:36, 541.75it/s]Running loglikelihood requests:  65%|██████▌   | 36545/56168 [02:08<00:36, 544.36it/s]Running loglikelihood requests:  65%|██████▌   | 36609/56168 [02:08<00:35, 547.61it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [02:08<00:35, 549.60it/s]Running loglikelihood requests:  65%|██████▌   | 36737/56168 [02:08<00:35, 549.50it/s]Running loglikelihood requests:  66%|██████▌   | 36801/56168 [02:08<00:35, 549.54it/s]Running loglikelihood requests:  66%|██████▌   | 36865/56168 [02:09<00:34, 551.79it/s]Running loglikelihood requests:  66%|██████▌   | 36929/56168 [02:09<00:35, 542.82it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [02:09<00:36, 531.76it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [02:09<00:37, 505.99it/s]Running loglikelihood requests:  66%|██████▌   | 37121/56168 [02:09<00:38, 497.53it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [02:09<00:36, 515.34it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [02:09<00:39, 481.24it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [02:09<00:38, 489.88it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [02:10<00:38, 488.51it/s]Running loglikelihood requests:  67%|██████▋   | 37441/56168 [02:10<00:37, 501.27it/s]Running loglikelihood requests:  67%|██████▋   | 37505/56168 [02:10<00:36, 513.47it/s]Running loglikelihood requests:  67%|██████▋   | 37569/56168 [02:10<00:35, 523.33it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [02:10<00:34, 532.71it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [02:10<00:34, 536.64it/s]Running loglikelihood requests:  67%|██████▋   | 37761/56168 [02:10<00:34, 541.03it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [02:10<00:33, 546.09it/s]Running loglikelihood requests:  67%|██████▋   | 37889/56168 [02:11<00:33, 542.86it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [02:11<00:33, 538.91it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [02:11<00:33, 537.69it/s]Running loglikelihood requests:  68%|██████▊   | 38081/56168 [02:11<00:33, 542.79it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [02:11<00:32, 553.55it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [02:11<00:31, 562.92it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [02:11<00:31, 567.00it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [02:11<00:31, 568.32it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [02:11<00:31, 571.01it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [02:12<00:30, 573.70it/s]Running loglikelihood requests:  69%|██████▊   | 38529/56168 [02:12<00:30, 575.93it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [02:12<00:30, 577.50it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [02:12<00:30, 579.25it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [02:12<00:30, 579.78it/s]Running loglikelihood requests:  69%|██████▉   | 38785/56168 [02:12<00:30, 565.95it/s]Running loglikelihood requests:  69%|██████▉   | 38849/56168 [02:12<00:30, 558.77it/s]Running loglikelihood requests:  69%|██████▉   | 38913/56168 [02:12<00:30, 557.77it/s]Running loglikelihood requests:  69%|██████▉   | 38977/56168 [02:12<00:30, 562.25it/s]Running loglikelihood requests:  70%|██████▉   | 39041/56168 [02:13<00:30, 558.45it/s]Running loglikelihood requests:  70%|██████▉   | 39105/56168 [02:13<00:31, 541.84it/s]Running loglikelihood requests:  70%|██████▉   | 39169/56168 [02:13<00:31, 547.97it/s]Running loglikelihood requests:  70%|██████▉   | 39233/56168 [02:13<00:30, 551.49it/s]Running loglikelihood requests:  70%|██████▉   | 39297/56168 [02:13<00:30, 561.27it/s]Running loglikelihood requests:  70%|███████   | 39361/56168 [02:13<00:29, 569.43it/s]Running loglikelihood requests:  70%|███████   | 39425/56168 [02:13<00:29, 574.69it/s]Running loglikelihood requests:  70%|███████   | 39489/56168 [02:13<00:30, 547.48it/s]Running loglikelihood requests:  70%|███████   | 39553/56168 [02:13<00:29, 557.23it/s]Running loglikelihood requests:  71%|███████   | 39617/56168 [02:14<00:29, 561.83it/s]Running loglikelihood requests:  71%|███████   | 39681/56168 [02:14<00:29, 567.79it/s]Running loglikelihood requests:  71%|███████   | 39745/56168 [02:14<00:28, 571.16it/s]Running loglikelihood requests:  71%|███████   | 39809/56168 [02:14<00:28, 575.49it/s]Running loglikelihood requests:  71%|███████   | 39873/56168 [02:14<00:28, 578.78it/s]Running loglikelihood requests:  71%|███████   | 39937/56168 [02:14<00:27, 581.41it/s]Running loglikelihood requests:  71%|███████   | 40001/56168 [02:14<00:27, 583.67it/s]Running loglikelihood requests:  71%|███████▏  | 40065/56168 [02:14<00:27, 582.75it/s]Running loglikelihood requests:  71%|███████▏  | 40129/56168 [02:14<00:27, 582.87it/s]Running loglikelihood requests:  72%|███████▏  | 40193/56168 [02:15<00:27, 583.13it/s]Running loglikelihood requests:  72%|███████▏  | 40257/56168 [02:15<00:27, 585.84it/s]Running loglikelihood requests:  72%|███████▏  | 40321/56168 [02:15<00:27, 585.29it/s]Running loglikelihood requests:  72%|███████▏  | 40385/56168 [02:15<00:27, 564.52it/s]Running loglikelihood requests:  72%|███████▏  | 40449/56168 [02:15<00:27, 571.32it/s]Running loglikelihood requests:  72%|███████▏  | 40513/56168 [02:15<00:27, 577.42it/s]Running loglikelihood requests:  72%|███████▏  | 40577/56168 [02:15<00:27, 572.17it/s]Running loglikelihood requests:  72%|███████▏  | 40641/56168 [02:15<00:26, 578.84it/s]Running loglikelihood requests:  72%|███████▏  | 40705/56168 [02:15<00:27, 568.77it/s]Running loglikelihood requests:  73%|███████▎  | 40769/56168 [02:16<00:26, 572.36it/s]Running loglikelihood requests:  73%|███████▎  | 40833/56168 [02:16<00:26, 569.30it/s]Running loglikelihood requests:  73%|███████▎  | 40897/56168 [02:16<00:26, 568.02it/s]Running loglikelihood requests:  73%|███████▎  | 40961/56168 [02:16<00:26, 573.10it/s]Running loglikelihood requests:  73%|███████▎  | 41025/56168 [02:16<00:27, 557.77it/s]Running loglikelihood requests:  73%|███████▎  | 41089/56168 [02:16<00:27, 552.54it/s]Running loglikelihood requests:  73%|███████▎  | 41153/56168 [02:16<00:26, 564.63it/s]Running loglikelihood requests:  73%|███████▎  | 41217/56168 [02:16<00:26, 563.29it/s]Running loglikelihood requests:  73%|███████▎  | 41281/56168 [02:17<00:26, 560.72it/s]Running loglikelihood requests:  74%|███████▎  | 41345/56168 [02:17<00:26, 568.39it/s]Running loglikelihood requests:  74%|███████▎  | 41409/56168 [02:17<00:28, 522.19it/s]Running loglikelihood requests:  74%|███████▍  | 41473/56168 [02:17<00:27, 529.73it/s]Running loglikelihood requests:  74%|███████▍  | 41537/56168 [02:17<00:26, 545.92it/s]Running loglikelihood requests:  74%|███████▍  | 41601/56168 [02:17<00:26, 550.83it/s]Running loglikelihood requests:  74%|███████▍  | 41665/56168 [02:17<00:25, 561.48it/s]Running loglikelihood requests:  74%|███████▍  | 41729/56168 [02:17<00:26, 555.06it/s]Running loglikelihood requests:  74%|███████▍  | 41793/56168 [02:17<00:25, 556.14it/s]Running loglikelihood requests:  75%|███████▍  | 41857/56168 [02:18<00:25, 566.83it/s]Running loglikelihood requests:  75%|███████▍  | 41921/56168 [02:18<00:24, 573.39it/s]Running loglikelihood requests:  75%|███████▍  | 41985/56168 [02:18<00:24, 580.56it/s]Running loglikelihood requests:  75%|███████▍  | 42049/56168 [02:18<00:24, 582.76it/s]Running loglikelihood requests:  75%|███████▍  | 42113/56168 [02:18<00:24, 585.39it/s]Running loglikelihood requests:  75%|███████▌  | 42177/56168 [02:18<00:23, 589.63it/s]Running loglikelihood requests:  75%|███████▌  | 42241/56168 [02:18<00:23, 589.91it/s]Running loglikelihood requests:  75%|███████▌  | 42305/56168 [02:18<00:23, 591.37it/s]Running loglikelihood requests:  75%|███████▌  | 42369/56168 [02:18<00:23, 594.19it/s]Running loglikelihood requests:  76%|███████▌  | 42433/56168 [02:19<00:23, 595.16it/s]Running loglikelihood requests:  76%|███████▌  | 42497/56168 [02:19<00:23, 591.83it/s]Running loglikelihood requests:  76%|███████▌  | 42561/56168 [02:19<00:22, 593.12it/s]Running loglikelihood requests:  76%|███████▌  | 42625/56168 [02:19<00:22, 590.90it/s]Running loglikelihood requests:  76%|███████▌  | 42689/56168 [02:19<00:22, 591.44it/s]Running loglikelihood requests:  76%|███████▌  | 42753/56168 [02:19<00:22, 590.84it/s]Running loglikelihood requests:  76%|███████▌  | 42817/56168 [02:19<00:22, 590.16it/s]Running loglikelihood requests:  76%|███████▋  | 42881/56168 [02:19<00:22, 592.34it/s]Running loglikelihood requests:  76%|███████▋  | 42945/56168 [02:19<00:22, 594.76it/s]Running loglikelihood requests:  77%|███████▋  | 43009/56168 [02:19<00:22, 594.81it/s]Running loglikelihood requests:  77%|███████▋  | 43073/56168 [02:20<00:22, 583.93it/s]Running loglikelihood requests:  77%|███████▋  | 43137/56168 [02:20<00:22, 575.33it/s]Running loglikelihood requests:  77%|███████▋  | 43201/56168 [02:20<00:22, 581.86it/s]Running loglikelihood requests:  77%|███████▋  | 43265/56168 [02:20<00:22, 586.15it/s]Running loglikelihood requests:  77%|███████▋  | 43329/56168 [02:20<00:22, 578.38it/s]Running loglikelihood requests:  77%|███████▋  | 43393/56168 [02:20<00:23, 550.06it/s]Running loglikelihood requests:  77%|███████▋  | 43457/56168 [02:20<00:24, 523.95it/s]Running loglikelihood requests:  77%|███████▋  | 43521/56168 [02:20<00:23, 535.16it/s]Running loglikelihood requests:  78%|███████▊  | 43585/56168 [02:21<00:24, 508.08it/s]Running loglikelihood requests:  78%|███████▊  | 43649/56168 [02:21<00:24, 505.71it/s]Running loglikelihood requests:  78%|███████▊  | 43713/56168 [02:21<00:23, 520.24it/s]Running loglikelihood requests:  78%|███████▊  | 43777/56168 [02:21<00:23, 533.13it/s]Running loglikelihood requests:  78%|███████▊  | 43841/56168 [02:21<00:22, 548.99it/s]Running loglikelihood requests:  78%|███████▊  | 43905/56168 [02:21<00:22, 541.93it/s]Running loglikelihood requests:  78%|███████▊  | 43969/56168 [02:21<00:22, 545.58it/s]Running loglikelihood requests:  78%|███████▊  | 44033/56168 [02:21<00:21, 552.19it/s]Running loglikelihood requests:  79%|███████▊  | 44097/56168 [02:21<00:21, 561.75it/s]Running loglikelihood requests:  79%|███████▊  | 44161/56168 [02:22<00:21, 563.47it/s]Running loglikelihood requests:  79%|███████▊  | 44225/56168 [02:22<00:20, 571.90it/s]Running loglikelihood requests:  79%|███████▉  | 44289/56168 [02:22<00:20, 570.70it/s]Running loglikelihood requests:  79%|███████▉  | 44353/56168 [02:22<00:20, 579.80it/s]Running loglikelihood requests:  79%|███████▉  | 44417/56168 [02:22<00:20, 567.08it/s]Running loglikelihood requests:  79%|███████▉  | 44481/56168 [02:22<00:20, 559.13it/s]Running loglikelihood requests:  79%|███████▉  | 44545/56168 [02:22<00:20, 571.42it/s]Running loglikelihood requests:  79%|███████▉  | 44609/56168 [02:22<00:20, 577.03it/s]Running loglikelihood requests:  80%|███████▉  | 44673/56168 [02:22<00:19, 583.03it/s]Running loglikelihood requests:  80%|███████▉  | 44737/56168 [02:23<00:19, 587.97it/s]Running loglikelihood requests:  80%|███████▉  | 44801/56168 [02:23<00:19, 591.12it/s]Running loglikelihood requests:  80%|███████▉  | 44865/56168 [02:23<00:19, 593.78it/s]Running loglikelihood requests:  80%|███████▉  | 44929/56168 [02:23<00:18, 596.49it/s]Running loglikelihood requests:  80%|████████  | 44993/56168 [02:23<00:18, 597.12it/s]Running loglikelihood requests:  80%|████████  | 45057/56168 [02:23<00:18, 596.62it/s]Running loglikelihood requests:  80%|████████  | 45121/56168 [02:23<00:18, 597.29it/s]Running loglikelihood requests:  80%|████████  | 45185/56168 [02:23<00:18, 599.17it/s]Running loglikelihood requests:  81%|████████  | 45249/56168 [02:23<00:18, 599.03it/s]Running loglikelihood requests:  81%|████████  | 45313/56168 [02:24<00:18, 594.16it/s]Running loglikelihood requests:  81%|████████  | 45377/56168 [02:24<00:18, 580.22it/s]Running loglikelihood requests:  81%|████████  | 45441/56168 [02:24<00:18, 586.88it/s]Running loglikelihood requests:  81%|████████  | 45505/56168 [02:24<00:18, 592.26it/s]Running loglikelihood requests:  81%|████████  | 45569/56168 [02:24<00:17, 594.80it/s]Running loglikelihood requests:  81%|████████  | 45633/56168 [02:24<00:17, 595.74it/s]Running loglikelihood requests:  81%|████████▏ | 45697/56168 [02:24<00:17, 588.69it/s]Running loglikelihood requests:  81%|████████▏ | 45761/56168 [02:24<00:17, 585.10it/s]Running loglikelihood requests:  82%|████████▏ | 45825/56168 [02:24<00:17, 590.74it/s]Running loglikelihood requests:  82%|████████▏ | 45889/56168 [02:25<00:17, 595.20it/s]Running loglikelihood requests:  82%|████████▏ | 45953/56168 [02:25<00:17, 596.52it/s]Running loglikelihood requests:  82%|████████▏ | 46017/56168 [02:25<00:16, 597.13it/s]Running loglikelihood requests:  82%|████████▏ | 46081/56168 [02:25<00:16, 600.28it/s]Running loglikelihood requests:  82%|████████▏ | 46145/56168 [02:25<00:16, 602.54it/s]Running loglikelihood requests:  82%|████████▏ | 46209/56168 [02:25<00:16, 602.31it/s]Running loglikelihood requests:  82%|████████▏ | 46276/56168 [02:25<00:15, 621.60it/s]Running loglikelihood requests:  83%|████████▎ | 46339/56168 [02:25<00:15, 621.49it/s]Running loglikelihood requests:  83%|████████▎ | 46402/56168 [02:25<00:15, 622.17it/s]Running loglikelihood requests:  83%|████████▎ | 46465/56168 [02:25<00:15, 622.26it/s]Running loglikelihood requests:  83%|████████▎ | 46529/56168 [02:26<00:15, 625.03it/s]Running loglikelihood requests:  83%|████████▎ | 46593/56168 [02:26<00:15, 626.95it/s]Running loglikelihood requests:  83%|████████▎ | 46657/56168 [02:26<00:15, 629.60it/s]Running loglikelihood requests:  83%|████████▎ | 46721/56168 [02:26<00:14, 629.91it/s]Running loglikelihood requests:  83%|████████▎ | 46785/56168 [02:26<00:14, 631.52it/s]Running loglikelihood requests:  83%|████████▎ | 46849/56168 [02:26<00:14, 631.64it/s]Running loglikelihood requests:  84%|████████▎ | 46913/56168 [02:26<00:14, 632.04it/s]Running loglikelihood requests:  84%|████████▎ | 46977/56168 [02:26<00:14, 633.31it/s]Running loglikelihood requests:  84%|████████▍ | 47041/56168 [02:26<00:14, 633.19it/s]Running loglikelihood requests:  84%|████████▍ | 47105/56168 [02:26<00:14, 623.39it/s]Running loglikelihood requests:  84%|████████▍ | 47171/56168 [02:27<00:14, 634.15it/s]Running loglikelihood requests:  84%|████████▍ | 47235/56168 [02:27<00:14, 635.09it/s]Running loglikelihood requests:  84%|████████▍ | 47299/56168 [02:27<00:13, 635.58it/s]Running loglikelihood requests:  84%|████████▍ | 47364/56168 [02:27<00:13, 639.74it/s]Running loglikelihood requests:  84%|████████▍ | 47428/56168 [02:27<00:13, 639.32it/s]Running loglikelihood requests:  85%|████████▍ | 47492/56168 [02:27<00:13, 639.26it/s]Running loglikelihood requests:  85%|████████▍ | 47560/56168 [02:27<00:13, 651.41it/s]Running loglikelihood requests:  85%|████████▍ | 47626/56168 [02:27<00:13, 653.42it/s]Running loglikelihood requests:  85%|████████▍ | 47692/56168 [02:27<00:12, 654.59it/s]Running loglikelihood requests:  85%|████████▌ | 47758/56168 [02:27<00:12, 655.67it/s]Running loglikelihood requests:  85%|████████▌ | 47824/56168 [02:28<00:12, 655.84it/s]Running loglikelihood requests:  85%|████████▌ | 47890/56168 [02:28<00:12, 656.11it/s]Running loglikelihood requests:  85%|████████▌ | 47956/56168 [02:28<00:12, 655.69it/s]Running loglikelihood requests:  85%|████████▌ | 48022/56168 [02:28<00:12, 655.40it/s]Running loglikelihood requests:  86%|████████▌ | 48088/56168 [02:28<00:12, 656.50it/s]Running loglikelihood requests:  86%|████████▌ | 48154/56168 [02:28<00:12, 656.99it/s]Running loglikelihood requests:  86%|████████▌ | 48220/56168 [02:28<00:12, 657.45it/s]Running loglikelihood requests:  86%|████████▌ | 48288/56168 [02:28<00:11, 664.00it/s]Running loglikelihood requests:  86%|████████▌ | 48360/56168 [02:28<00:11, 680.62it/s]Running loglikelihood requests:  86%|████████▌ | 48430/56168 [02:28<00:11, 686.37it/s]Running loglikelihood requests:  86%|████████▋ | 48505/56168 [02:29<00:10, 705.29it/s]Running loglikelihood requests:  86%|████████▋ | 48576/56168 [02:29<00:10, 705.69it/s]Running loglikelihood requests:  87%|████████▋ | 48647/56168 [02:29<00:13, 556.06it/s]Running loglikelihood requests:  87%|████████▋ | 48708/56168 [02:29<00:13, 569.41it/s]Running loglikelihood requests:  87%|████████▋ | 48770/56168 [02:29<00:12, 582.71it/s]Running loglikelihood requests:  87%|████████▋ | 48836/56168 [02:29<00:12, 603.85it/s]Running loglikelihood requests:  87%|████████▋ | 48901/56168 [02:29<00:11, 616.58it/s]Running loglikelihood requests:  87%|████████▋ | 48971/56168 [02:29<00:11, 640.45it/s]Running loglikelihood requests:  87%|████████▋ | 49041/56168 [02:29<00:10, 657.68it/s]Running loglikelihood requests:  87%|████████▋ | 49114/56168 [02:30<00:10, 678.73it/s]Running loglikelihood requests:  88%|████████▊ | 49193/56168 [02:30<00:09, 711.45it/s]Running loglikelihood requests:  88%|████████▊ | 49265/56168 [02:30<00:09, 713.81it/s]Running loglikelihood requests:  88%|████████▊ | 49345/56168 [02:30<00:11, 582.75it/s]Running loglikelihood requests:  88%|████████▊ | 49419/56168 [02:30<00:10, 622.04it/s]Running loglikelihood requests:  88%|████████▊ | 49491/56168 [02:30<00:10, 647.70it/s]Running loglikelihood requests:  88%|████████▊ | 49559/56168 [02:30<00:10, 656.35it/s]Running loglikelihood requests:  88%|████████▊ | 49634/56168 [02:30<00:09, 682.62it/s]Running loglikelihood requests:  89%|████████▊ | 49717/56168 [02:30<00:08, 724.48it/s]Running loglikelihood requests:  89%|████████▊ | 49793/56168 [02:31<00:10, 584.22it/s]Running loglikelihood requests:  89%|████████▉ | 49871/56168 [02:31<00:09, 632.66it/s]Running loglikelihood requests:  89%|████████▉ | 49943/56168 [02:31<00:09, 655.32it/s]Running loglikelihood requests:  89%|████████▉ | 50013/56168 [02:31<00:09, 666.06it/s]Running loglikelihood requests:  89%|████████▉ | 50083/56168 [02:31<00:09, 675.14it/s]Running loglikelihood requests:  89%|████████▉ | 50153/56168 [02:31<00:08, 679.56it/s]Running loglikelihood requests:  89%|████████▉ | 50223/56168 [02:31<00:08, 684.94it/s]Running loglikelihood requests:  90%|████████▉ | 50293/56168 [02:31<00:08, 688.46it/s]Running loglikelihood requests:  90%|████████▉ | 50363/56168 [02:31<00:08, 680.53it/s]Running loglikelihood requests:  90%|████████▉ | 50433/56168 [02:32<00:10, 549.19it/s]Running loglikelihood requests:  90%|████████▉ | 50516/56168 [02:32<00:09, 619.40it/s]Running loglikelihood requests:  90%|█████████ | 50600/56168 [02:32<00:08, 677.44it/s]Running loglikelihood requests:  90%|█████████ | 50677/56168 [02:32<00:07, 702.37it/s]Running loglikelihood requests:  90%|█████████ | 50753/56168 [02:32<00:09, 577.03it/s]Running loglikelihood requests:  91%|█████████ | 50840/56168 [02:32<00:08, 648.36it/s]Running loglikelihood requests:  91%|█████████ | 50921/56168 [02:32<00:07, 690.09it/s]Running loglikelihood requests:  91%|█████████ | 51005/56168 [02:32<00:07, 730.32it/s]Running loglikelihood requests:  91%|█████████ | 51082/56168 [02:33<00:08, 594.86it/s]Running loglikelihood requests:  91%|█████████ | 51166/56168 [02:33<00:07, 653.99it/s]Running loglikelihood requests:  91%|█████████▏| 51259/56168 [02:33<00:06, 724.74it/s]Running loglikelihood requests:  91%|█████████▏| 51337/56168 [02:33<00:08, 600.06it/s]Running loglikelihood requests:  92%|█████████▏| 51426/56168 [02:33<00:07, 668.80it/s]Running loglikelihood requests:  92%|█████████▏| 51521/56168 [02:33<00:07, 606.61it/s]Running loglikelihood requests:  92%|█████████▏| 51611/56168 [02:33<00:06, 673.64it/s]Running loglikelihood requests:  92%|█████████▏| 51702/56168 [02:34<00:06, 731.74it/s]Running loglikelihood requests:  92%|█████████▏| 51781/56168 [02:34<00:07, 612.42it/s]Running loglikelihood requests:  92%|█████████▏| 51865/56168 [02:34<00:06, 665.40it/s]Running loglikelihood requests:  92%|█████████▏| 51949/56168 [02:34<00:05, 708.83it/s]Running loglikelihood requests:  93%|█████████▎| 52033/56168 [02:34<00:06, 605.76it/s]Running loglikelihood requests:  93%|█████████▎| 52117/56168 [02:34<00:06, 660.40it/s]Running loglikelihood requests:  93%|█████████▎| 52198/56168 [02:34<00:05, 697.93it/s]Running loglikelihood requests:  93%|█████████▎| 52279/56168 [02:34<00:05, 727.34it/s]Running loglikelihood requests:  93%|█████████▎| 52356/56168 [02:35<00:06, 598.93it/s]Running loglikelihood requests:  93%|█████████▎| 52452/56168 [02:35<00:05, 685.73it/s]Running loglikelihood requests:  94%|█████████▎| 52536/56168 [02:35<00:05, 724.99it/s]Running loglikelihood requests:  94%|█████████▎| 52614/56168 [02:35<00:05, 593.02it/s]Running loglikelihood requests:  94%|█████████▍| 52704/56168 [02:35<00:05, 664.93it/s]Running loglikelihood requests:  94%|█████████▍| 52797/56168 [02:35<00:04, 731.13it/s]Running loglikelihood requests:  94%|█████████▍| 52877/56168 [02:35<00:05, 611.29it/s]Running loglikelihood requests:  94%|█████████▍| 52972/56168 [02:35<00:04, 690.75it/s]Running loglikelihood requests:  94%|█████████▍| 53057/56168 [02:36<00:05, 600.83it/s]Running loglikelihood requests:  95%|█████████▍| 53125/56168 [02:36<00:04, 618.64it/s]Running loglikelihood requests:  95%|█████████▍| 53197/56168 [02:36<00:04, 626.19it/s]Running loglikelihood requests:  95%|█████████▍| 53264/56168 [02:36<00:05, 572.34it/s]Running loglikelihood requests:  95%|█████████▍| 53325/56168 [02:36<00:05, 550.12it/s]Running loglikelihood requests:  95%|█████████▌| 53399/56168 [02:36<00:04, 593.15it/s]Running loglikelihood requests:  95%|█████████▌| 53461/56168 [02:36<00:04, 597.58it/s]Running loglikelihood requests:  95%|█████████▌| 53547/56168 [02:36<00:03, 668.55it/s]Running loglikelihood requests:  95%|█████████▌| 53616/56168 [02:37<00:03, 672.70it/s]Running loglikelihood requests:  96%|█████████▌| 53697/56168 [02:37<00:04, 571.64it/s]Running loglikelihood requests:  96%|█████████▌| 53786/56168 [02:37<00:03, 649.95it/s]Running loglikelihood requests:  96%|█████████▌| 53889/56168 [02:37<00:03, 630.83it/s]Running loglikelihood requests:  96%|█████████▌| 54017/56168 [02:37<00:03, 672.97it/s]Running loglikelihood requests:  96%|█████████▋| 54092/56168 [02:37<00:03, 683.04it/s]Running loglikelihood requests:  97%|█████████▋| 54209/56168 [02:37<00:02, 687.89it/s]Running loglikelihood requests:  97%|█████████▋| 54337/56168 [02:38<00:02, 710.80it/s]Running loglikelihood requests:  97%|█████████▋| 54465/56168 [02:38<00:02, 722.34it/s]Running loglikelihood requests:  97%|█████████▋| 54593/56168 [02:38<00:02, 733.79it/s]Running loglikelihood requests:  97%|█████████▋| 54721/56168 [02:38<00:01, 740.50it/s]Running loglikelihood requests:  98%|█████████▊| 54849/56168 [02:38<00:01, 744.07it/s]Running loglikelihood requests:  98%|█████████▊| 54977/56168 [02:38<00:01, 748.48it/s]Running loglikelihood requests:  98%|█████████▊| 55105/56168 [02:39<00:01, 750.67it/s]Running loglikelihood requests:  98%|█████████▊| 55233/56168 [02:39<00:01, 754.84it/s]Running loglikelihood requests:  99%|█████████▊| 55361/56168 [02:39<00:01, 750.36it/s]Running loglikelihood requests:  99%|█████████▉| 55476/56168 [02:39<00:00, 831.16it/s]Running loglikelihood requests:  99%|█████████▉| 55564/56168 [02:39<00:00, 726.07it/s]Running loglikelihood requests:  99%|█████████▉| 55681/56168 [02:39<00:00, 705.11it/s]Running loglikelihood requests:  99%|█████████▉| 55755/56168 [02:40<00:00, 683.64it/s]Running loglikelihood requests:  99%|█████████▉| 55873/56168 [02:40<00:00, 677.40it/s]Running loglikelihood requests: 100%|█████████▉| 56001/56168 [02:40<00:00, 700.61it/s]Running loglikelihood requests: 100%|█████████▉| 56129/56168 [02:40<00:00, 726.03it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:40<00:00, 349.89it/s]
2025-05-15:03:19:25,482 WARNING  [huggingface.py:1353] Failed to get model SHA for /work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent/checkpoint-485 at revision main. Error: Repo id must be in the form 'repo_name' or 'namespace/repo_name': '/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent/checkpoint-485'. Use `repo_type` argument if needed.
2025-05-15:03:19:31,856 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent/checkpoint-485,tokenizer=meta-llama/Meta-Llama-3-8b-Instruct), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.6985|±  |0.0038|
| - humanities                          |      2|none  |      |acc   |↑  |0.6731|±  |0.0066|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.5635|±  |0.0444|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.7697|±  |0.0329|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.8676|±  |0.0238|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.8903|±  |0.0203|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.8182|±  |0.0352|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.8056|±  |0.0383|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.8160|±  |0.0304|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.7110|±  |0.0244|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.5363|±  |0.0167|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.7331|±  |0.0251|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.7623|±  |0.0237|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.5984|±  |0.0125|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.8363|±  |0.0284|
| - other                               |      2|none  |      |acc   |↑  |0.7615|±  |0.0075|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.8000|±  |0.0402|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.7623|±  |0.0262|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.7688|±  |0.0321|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.5300|±  |0.0502|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.7803|±  |0.0278|
|  - management                         |      1|none  |     0|acc   |↑  |0.7767|±  |0.0412|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8632|±  |0.0225|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.7800|±  |0.0416|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.8110|±  |0.0140|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.7320|±  |0.0254|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.6667|±  |0.0281|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.8272|±  |0.0230|
|  - virology                           |      1|none  |     0|acc   |↑  |0.5542|±  |0.0387|
| - social sciences                     |      2|none  |      |acc   |↑  |0.7439|±  |0.0078|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.6140|±  |0.0458|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7020|±  |0.0326|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8135|±  |0.0281|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.6872|±  |0.0235|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.7605|±  |0.0277|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.8422|±  |0.0156|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7176|±  |0.0395|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.7288|±  |0.0180|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6818|±  |0.0446|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.6408|±  |0.0307|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8060|±  |0.0280|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8100|±  |0.0394|
| - stem                                |      2|none  |      |acc   |↑  |0.6299|±  |0.0085|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.5400|±  |0.0501|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.6963|±  |0.0397|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.7500|±  |0.0352|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.7778|±  |0.0348|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4700|±  |0.0502|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.6300|±  |0.0485|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.4900|±  |0.0502|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5490|±  |0.0495|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.8100|±  |0.0394|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.6340|±  |0.0315|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.6759|±  |0.0390|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.6270|±  |0.0249|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7452|±  |0.0248|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.5813|±  |0.0347|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.7000|±  |0.0461|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.5259|±  |0.0304|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.4768|±  |0.0408|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.6250|±  |0.0330|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.5714|±  |0.0470|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.6985|±  |0.0038|
| - humanities     |      2|none  |      |acc   |↑  |0.6731|±  |0.0066|
| - other          |      2|none  |      |acc   |↑  |0.7615|±  |0.0075|
| - social sciences|      2|none  |      |acc   |↑  |0.7439|±  |0.0078|
| - stem           |      2|none  |      |acc   |↑  |0.6299|±  |0.0085|

2025-05-15:03:19:40,225 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-15:03:19:40,481 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,485 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,489 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,492 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,507 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,547 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,550 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,553 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,571 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,574 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,610 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,627 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:40,630 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,550 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,625 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,643 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:41,660 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,554 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,915 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,922 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,924 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:42,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,005 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,013 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,070 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,074 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,078 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,082 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,096 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,113 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,117 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,130 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,135 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,163 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,167 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,172 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,176 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,183 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,192 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,218 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,227 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,232 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,327 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,330 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,333 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,337 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,340 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,347 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,354 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,357 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,364 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,371 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,377 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,381 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,390 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,403 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,406 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,409 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,424 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,427 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,440 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,445 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,448 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,454 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,469 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,474 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,489 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,561 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,581 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:43,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:44,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:44,736 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:44,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:44,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:44,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:44,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:44,747 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:44,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,736 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,747 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,751 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,797 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,799 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,807 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,808 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,812 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,814 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,830 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,845 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,856 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,860 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,862 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,874 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,880 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,885 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,887 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,889 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,891 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,897 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,899 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,902 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,906 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,913 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,915 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,917 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,919 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,921 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,923 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,924 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,930 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,937 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,941 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,948 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,950 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,956 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,959 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,961 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,963 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,965 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,968 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,980 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,985 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,987 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,989 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,995 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:45,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,001 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,003 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,008 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,010 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,012 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,023 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,032 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,053 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,056 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,059 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,064 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,070 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,073 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,074 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,076 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,077 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,079 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,082 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,085 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,088 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,093 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,096 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,099 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,103 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,107 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,110 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,111 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,113 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,114 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,117 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,123 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,140 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,142 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,146 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,148 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,153 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,154 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,156 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,162 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,163 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,165 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,166 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,168 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,170 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,171 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,173 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,176 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,180 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,182 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,183 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,186 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,188 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,189 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,192 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,194 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,197 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,202 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,206 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,208 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,211 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,212 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,215 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,218 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,298 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,300 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:46,311 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:48,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:48,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:19:48,948 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-15:03:19:48,951 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-15:03:19:48,951 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent_kl/checkpoint-490', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-15:03:19:49,592 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-15:03:19:50,173 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:05,  1.94s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:03<00:03,  1.60s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:06<00:02,  2.17s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:06<00:00,  1.60s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:06<00:00,  1.72s/it]
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,848 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,849 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:20:19,850 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-15:03:20:19,857 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 52%|█████▏    | 52/100 [00:00<00:00, 514.90it/s]100%|██████████| 100/100 [00:00<00:00, 560.49it/s]
2025-05-15:03:20:20,041 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 24%|██▎       | 73/310 [00:00<00:00, 726.30it/s] 47%|████▋     | 146/310 [00:00<00:00, 728.38it/s] 72%|███████▏  | 223/310 [00:00<00:00, 746.51it/s] 98%|█████████▊| 305/310 [00:00<00:00, 773.41it/s]100%|██████████| 310/310 [00:00<00:00, 759.46it/s]
2025-05-15:03:20:20,472 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 83%|████████▎ | 83/100 [00:00<00:00, 822.73it/s]100%|██████████| 100/100 [00:00<00:00, 796.89it/s]
2025-05-15:03:20:20,605 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 57%|█████▋    | 83/145 [00:00<00:00, 828.56it/s]100%|██████████| 145/145 [00:00<00:00, 830.07it/s]
2025-05-15:03:20:20,786 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 82%|████████▏ | 82/100 [00:00<00:00, 812.22it/s]100%|██████████| 100/100 [00:00<00:00, 784.82it/s]
2025-05-15:03:20:20,919 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 40%|████      | 82/203 [00:00<00:00, 818.40it/s] 81%|████████  | 164/203 [00:00<00:00, 816.90it/s]100%|██████████| 203/203 [00:00<00:00, 814.80it/s]
2025-05-15:03:20:21,177 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 54%|█████▍    | 82/152 [00:00<00:00, 816.63it/s]100%|██████████| 152/152 [00:00<00:00, 819.70it/s]
2025-05-15:03:20:21,369 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 79%|███████▉  | 81/102 [00:00<00:00, 809.24it/s]100%|██████████| 102/102 [00:00<00:00, 814.90it/s]
2025-05-15:03:20:21,498 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 83%|████████▎ | 83/100 [00:00<00:00, 821.96it/s]100%|██████████| 100/100 [00:00<00:00, 824.11it/s]
2025-05-15:03:20:21,623 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 56%|█████▋    | 81/144 [00:00<00:00, 800.40it/s]100%|██████████| 144/144 [00:00<00:00, 801.32it/s]
2025-05-15:03:20:21,809 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 35%|███▍      | 82/235 [00:00<00:00, 812.01it/s] 70%|██████▉   | 164/235 [00:00<00:00, 808.18it/s]100%|██████████| 235/235 [00:00<00:00, 805.08it/s]
2025-05-15:03:20:22,110 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 74%|███████▍  | 83/112 [00:00<00:00, 820.10it/s]100%|██████████| 112/112 [00:00<00:00, 811.93it/s]
2025-05-15:03:20:22,252 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 30%|███       | 82/270 [00:00<00:00, 811.97it/s] 61%|██████▏   | 166/270 [00:00<00:00, 827.42it/s] 92%|█████████▏| 249/270 [00:00<00:00, 820.03it/s]100%|██████████| 270/270 [00:00<00:00, 821.20it/s]
2025-05-15:03:20:22,590 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 83%|████████▎ | 83/100 [00:00<00:00, 821.69it/s]100%|██████████| 100/100 [00:00<00:00, 822.71it/s]
2025-05-15:03:20:22,717 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 79%|███████▉  | 79/100 [00:00<00:00, 785.96it/s]100%|██████████| 100/100 [00:00<00:00, 755.91it/s]
2025-05-15:03:20:22,854 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 61%|██████▏   | 83/135 [00:00<00:00, 822.07it/s]100%|██████████| 135/135 [00:00<00:00, 797.82it/s]
2025-05-15:03:20:23,029 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 21%|██        | 79/378 [00:00<00:00, 782.13it/s] 43%|████▎     | 161/378 [00:00<00:00, 801.56it/s] 65%|██████▍   | 244/378 [00:00<00:00, 812.19it/s] 87%|████████▋ | 327/378 [00:00<00:00, 816.17it/s]100%|██████████| 378/378 [00:00<00:00, 811.35it/s]
2025-05-15:03:20:23,508 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 54%|█████▎    | 81/151 [00:00<00:00, 800.90it/s]100%|██████████| 151/151 [00:00<00:00, 808.19it/s]
2025-05-15:03:20:23,701 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 38%|███▊      | 82/216 [00:00<00:00, 810.49it/s] 76%|███████▌  | 164/216 [00:00<00:00, 813.94it/s]100%|██████████| 216/216 [00:00<00:00, 816.16it/s]
2025-05-15:03:20:23,974 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 31%|███▏      | 83/265 [00:00<00:00, 823.17it/s] 63%|██████▎   | 167/265 [00:00<00:00, 829.11it/s] 94%|█████████▍| 250/265 [00:00<00:00, 821.10it/s]100%|██████████| 265/265 [00:00<00:00, 821.90it/s]
2025-05-15:03:20:24,306 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 82%|████████▏ | 82/100 [00:00<00:00, 811.73it/s]100%|██████████| 100/100 [00:00<00:00, 804.29it/s]
2025-05-15:03:20:24,434 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 80%|███████▉  | 82/103 [00:00<00:00, 812.13it/s]100%|██████████| 103/103 [00:00<00:00, 811.05it/s]
2025-05-15:03:20:24,566 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 27%|██▋       | 83/306 [00:00<00:00, 826.91it/s] 54%|█████▍    | 166/306 [00:00<00:00, 822.68it/s] 81%|████████▏ | 249/306 [00:00<00:00, 811.65it/s]100%|██████████| 306/306 [00:00<00:00, 813.66it/s]
2025-05-15:03:20:24,952 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 42%|████▏     | 73/173 [00:00<00:00, 713.41it/s] 84%|████████▍ | 145/173 [00:00<00:00, 674.58it/s]100%|██████████| 173/173 [00:00<00:00, 679.64it/s]
2025-05-15:03:20:25,231 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 49%|████▉     | 82/166 [00:00<00:00, 811.66it/s] 99%|█████████▉| 164/166 [00:00<00:00, 808.98it/s]100%|██████████| 166/166 [00:00<00:00, 807.88it/s]
2025-05-15:03:20:25,444 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 30%|██▉       | 81/272 [00:00<00:00, 803.64it/s] 60%|█████▉    | 163/272 [00:00<00:00, 808.66it/s] 90%|████████▉ | 244/272 [00:00<00:00, 795.55it/s]100%|██████████| 272/272 [00:00<00:00, 795.98it/s]
2025-05-15:03:20:25,797 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 10%|█         | 81/783 [00:00<00:00, 801.25it/s] 21%|██        | 162/783 [00:00<00:00, 787.11it/s] 31%|███       | 242/783 [00:00<00:00, 791.43it/s] 41%|████      | 322/783 [00:00<00:00, 785.93it/s] 51%|█████     | 401/783 [00:00<00:00, 779.61it/s] 62%|██████▏   | 482/783 [00:00<00:00, 787.48it/s] 72%|███████▏  | 561/783 [00:00<00:00, 786.75it/s] 82%|████████▏ | 640/783 [00:00<00:00, 782.49it/s] 92%|█████████▏| 720/783 [00:00<00:00, 786.69it/s]100%|██████████| 783/783 [00:00<00:00, 788.20it/s]
2025-05-15:03:20:26,817 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 80%|████████  | 80/100 [00:00<00:00, 795.12it/s]100%|██████████| 100/100 [00:00<00:00, 797.08it/s]
2025-05-15:03:20:26,947 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 78%|███████▊  | 78/100 [00:00<00:00, 775.08it/s]100%|██████████| 100/100 [00:00<00:00, 782.65it/s]
2025-05-15:03:20:27,079 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 28%|██▊       | 80/282 [00:00<00:00, 797.42it/s] 57%|█████▋    | 160/282 [00:00<00:00, 797.64it/s] 85%|████████▌ | 240/282 [00:00<00:00, 793.36it/s]100%|██████████| 282/282 [00:00<00:00, 792.45it/s]
2025-05-15:03:20:27,446 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:05, 39.87it/s] 42%|████▏     | 98/234 [00:00<00:00, 212.31it/s] 76%|███████▌  | 178/234 [00:00<00:00, 356.58it/s]100%|██████████| 234/234 [00:00<00:00, 312.72it/s]
2025-05-15:03:20:28,203 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 36%|███▌      | 80/223 [00:00<00:00, 767.97it/s] 72%|███████▏  | 160/223 [00:00<00:00, 782.74it/s]100%|██████████| 223/223 [00:00<00:00, 785.46it/s]
2025-05-15:03:20:28,496 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 74%|███████▎  | 81/110 [00:00<00:00, 807.64it/s]100%|██████████| 110/110 [00:00<00:00, 801.76it/s]
2025-05-15:03:20:28,639 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 41%|████      | 82/201 [00:00<00:00, 817.69it/s] 82%|████████▏ | 164/201 [00:00<00:00, 812.55it/s]100%|██████████| 201/201 [00:00<00:00, 815.39it/s]
2025-05-15:03:20:28,893 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 42%|████▏     | 83/198 [00:00<00:00, 820.54it/s] 84%|████████▍ | 166/198 [00:00<00:00, 790.58it/s]100%|██████████| 198/198 [00:00<00:00, 793.97it/s]
2025-05-15:03:20:29,151 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 32%|███▏      | 79/245 [00:00<00:00, 783.74it/s] 65%|██████▌   | 160/245 [00:00<00:00, 795.76it/s] 98%|█████████▊| 241/245 [00:00<00:00, 799.44it/s]100%|██████████| 245/245 [00:00<00:00, 796.17it/s]
2025-05-15:03:20:29,469 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 14%|█▍        | 79/545 [00:00<00:00, 780.21it/s] 29%|██▉       | 160/545 [00:00<00:00, 792.30it/s] 44%|████▍     | 241/545 [00:00<00:00, 798.50it/s] 59%|█████▉    | 323/545 [00:00<00:00, 803.88it/s] 74%|███████▍  | 405/545 [00:00<00:00, 807.58it/s] 89%|████████▉ | 487/545 [00:00<00:00, 808.86it/s]100%|██████████| 545/545 [00:00<00:00, 805.64it/s]
2025-05-15:03:20:30,164 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 81%|████████  | 81/100 [00:00<00:00, 797.10it/s]100%|██████████| 100/100 [00:00<00:00, 789.03it/s]
2025-05-15:03:20:30,296 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 21%|██        | 81/390 [00:00<00:00, 806.82it/s] 42%|████▏     | 162/390 [00:00<00:00, 805.29it/s] 62%|██████▏   | 243/390 [00:00<00:00, 806.51it/s] 83%|████████▎ | 325/390 [00:00<00:00, 808.31it/s]100%|██████████| 390/390 [00:00<00:00, 808.65it/s]
2025-05-15:03:20:30,793 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 34%|███▎      | 80/238 [00:00<00:00, 798.41it/s] 67%|██████▋   | 160/238 [00:00<00:00, 791.57it/s]100%|██████████| 238/238 [00:00<00:00, 797.49it/s]
2025-05-15:03:20:31,101 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 72%|███████▏  | 82/114 [00:00<00:00, 819.64it/s]100%|██████████| 114/114 [00:00<00:00, 814.32it/s]
2025-05-15:03:20:31,246 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 13%|█▎        | 82/612 [00:00<00:00, 810.94it/s] 27%|██▋       | 164/612 [00:00<00:00, 811.39it/s] 40%|████      | 246/612 [00:00<00:00, 757.20it/s] 54%|█████▎    | 328/612 [00:00<00:00, 779.25it/s] 67%|██████▋   | 407/612 [00:00<00:00, 760.40it/s] 79%|███████▉  | 484/612 [00:00<00:00, 762.94it/s] 92%|█████████▏| 561/612 [00:00<00:00, 635.89it/s]100%|██████████| 612/612 [00:00<00:00, 707.84it/s]
2025-05-15:03:20:32,132 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 30%|██▉       | 39/131 [00:00<00:00, 383.10it/s] 78%|███████▊  | 102/131 [00:00<00:00, 477.84it/s]100%|██████████| 131/131 [00:00<00:00, 465.48it/s]
2025-05-15:03:20:32,419 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 25%|██▌       | 49/193 [00:00<00:00, 486.15it/s] 60%|█████▉    | 115/193 [00:00<00:00, 584.66it/s] 90%|█████████ | 174/193 [00:00<00:00, 464.21it/s]100%|██████████| 193/193 [00:00<00:00, 496.32it/s]
2025-05-15:03:20:32,816 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  9%|▉         | 82/895 [00:00<00:00, 816.76it/s] 18%|█▊        | 164/895 [00:00<00:00, 813.63it/s] 27%|██▋       | 246/895 [00:00<00:00, 816.43it/s] 37%|███▋      | 329/895 [00:00<00:00, 818.74it/s] 46%|████▌     | 412/895 [00:00<00:00, 822.01it/s] 55%|█████▌    | 495/895 [00:00<00:00, 823.83it/s] 65%|██████▍   | 578/895 [00:00<00:00, 820.64it/s] 74%|███████▍  | 661/895 [00:00<00:00, 819.63it/s] 83%|████████▎ | 744/895 [00:00<00:00, 821.96it/s] 93%|█████████▎| 832/895 [00:01<00:00, 838.07it/s]100%|██████████| 895/895 [00:01<00:00, 827.01it/s]
2025-05-15:03:20:33,927 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 35%|███▌      | 84/237 [00:00<00:00, 834.37it/s] 72%|███████▏  | 170/237 [00:00<00:00, 846.15it/s]100%|██████████| 237/237 [00:00<00:00, 845.61it/s]
2025-05-15:03:20:34,217 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 50%|█████     | 83/165 [00:00<00:00, 829.79it/s]100%|██████████| 165/165 [00:00<00:00, 829.08it/s]
2025-05-15:03:20:34,423 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 27%|██▋       | 84/311 [00:00<00:00, 834.59it/s] 54%|█████▍    | 169/311 [00:00<00:00, 841.75it/s] 82%|████████▏ | 256/311 [00:00<00:00, 850.80it/s]100%|██████████| 311/311 [00:00<00:00, 846.34it/s]
2025-05-15:03:20:34,801 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 23%|██▎       | 81/346 [00:00<00:00, 808.60it/s] 47%|████▋     | 164/346 [00:00<00:00, 819.16it/s] 72%|███████▏  | 249/346 [00:00<00:00, 829.47it/s] 97%|█████████▋| 335/346 [00:00<00:00, 837.71it/s]100%|██████████| 346/346 [00:00<00:00, 830.59it/s]
2025-05-15:03:20:35,230 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 39%|███▉      | 80/204 [00:00<00:00, 793.55it/s] 78%|███████▊  | 160/204 [00:00<00:00, 621.44it/s]100%|██████████| 204/204 [00:00<00:00, 593.02it/s]
2025-05-15:03:20:35,583 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 64%|██████▎   | 77/121 [00:00<00:00, 767.35it/s]100%|██████████| 121/121 [00:00<00:00, 759.50it/s]
2025-05-15:03:20:35,748 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  3%|▎         | 49/1534 [00:00<00:03, 487.07it/s]  7%|▋         | 109/1534 [00:00<00:02, 538.34it/s] 11%|█         | 168/1534 [00:00<00:02, 561.04it/s] 15%|█▍        | 228/1534 [00:00<00:02, 574.31it/s] 20%|█▉        | 302/1534 [00:00<00:01, 630.74it/s] 24%|██▍       | 366/1534 [00:00<00:02, 581.03it/s] 28%|██▊       | 425/1534 [00:00<00:01, 569.14it/s] 33%|███▎      | 500/1534 [00:00<00:01, 612.75it/s] 37%|███▋      | 562/1534 [00:00<00:01, 547.82it/s] 42%|████▏     | 642/1534 [00:01<00:01, 494.13it/s] 45%|████▌     | 694/1534 [00:01<00:01, 499.63it/s] 50%|█████     | 774/1534 [00:01<00:01, 574.80it/s] 54%|█████▍    | 835/1534 [00:01<00:01, 467.44it/s] 58%|█████▊    | 887/1534 [00:01<00:01, 439.56it/s] 61%|██████    | 935/1534 [00:01<00:01, 369.34it/s] 64%|██████▎   | 976/1534 [00:02<00:01, 365.43it/s] 66%|██████▌   | 1015/1534 [00:02<00:01, 368.68it/s] 69%|██████▉   | 1058/1534 [00:02<00:01, 382.90it/s] 72%|███████▏  | 1098/1534 [00:02<00:01, 307.19it/s] 74%|███████▍  | 1132/1534 [00:02<00:01, 309.66it/s] 76%|███████▋  | 1172/1534 [00:02<00:01, 331.45it/s] 79%|███████▉  | 1213/1534 [00:02<00:00, 350.63it/s] 81%|████████▏ | 1250/1534 [00:02<00:00, 318.14it/s] 84%|████████▎ | 1284/1534 [00:02<00:00, 312.82it/s] 88%|████████▊ | 1357/1534 [00:03<00:00, 420.47it/s] 94%|█████████▍| 1439/1534 [00:03<00:00, 527.53it/s] 98%|█████████▊| 1503/1534 [00:03<00:00, 558.15it/s]100%|██████████| 1534/1534 [00:03<00:00, 460.20it/s]
2025-05-15:03:20:39,152 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 49%|████▊     | 83/171 [00:00<00:00, 827.47it/s] 97%|█████████▋| 166/171 [00:00<00:00, 732.19it/s]100%|██████████| 171/171 [00:00<00:00, 745.99it/s]
2025-05-15:03:20:39,389 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 76%|███████▌  | 82/108 [00:00<00:00, 817.19it/s]100%|██████████| 108/108 [00:00<00:00, 810.99it/s]
2025-05-15:03:20:39,527 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 57%|█████▋    | 72/126 [00:00<00:00, 718.21it/s]100%|██████████| 126/126 [00:00<00:00, 709.53it/s]
2025-05-15:03:20:39,710 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 25%|██▌       | 81/324 [00:00<00:00, 802.05it/s] 50%|█████     | 162/324 [00:00<00:00, 269.65it/s] 75%|███████▍  | 242/324 [00:00<00:00, 383.74it/s] 99%|█████████▉| 320/324 [00:00<00:00, 477.61it/s]100%|██████████| 324/324 [00:00<00:00, 432.72it/s]
2025-05-15:03:20:40,470 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 44%|████▍     | 72/163 [00:00<00:00, 718.26it/s] 89%|████████▉ | 145/163 [00:00<00:00, 724.44it/s]100%|██████████| 163/163 [00:00<00:00, 731.61it/s]
2025-05-15:03:20:40,700 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<36:07:33,  2.32s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:03<36:10, 25.85it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:04<21:51, 42.71it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<17:01, 54.79it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<14:33, 64.00it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<13:04, 71.16it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:06<12:05, 76.89it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<11:20, 81.86it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<10:46, 86.08it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:08<10:22, 89.36it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:01, 92.37it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<09:45, 94.70it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:10<09:26, 97.71it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<09:08, 100.96it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:11<08:54, 103.41it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:12<08:43, 105.51it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:13<08:33, 107.38it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:13<08:34, 107.15it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:14<08:21, 109.61it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:14<08:11, 111.84it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:15<08:02, 113.86it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:15<07:57, 114.87it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:16<07:45, 117.53it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:16<07:38, 119.16it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:17<07:32, 120.78it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:17<07:26, 122.29it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:18<07:22, 123.08it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:18<07:18, 124.11it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:19<07:16, 124.46it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:20<07:13, 125.38it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:20<07:08, 126.48it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:20<07:04, 127.63it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:21<06:59, 129.00it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:21<06:55, 130.22it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:22<06:52, 130.89it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:22<06:49, 131.63it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:23<06:47, 132.32it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:23<06:39, 134.81it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:24<06:33, 136.64it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:24<06:28, 138.18it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:25<06:24, 139.49it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:25<06:21, 140.41it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:26<06:19, 141.05it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:26<06:17, 141.66it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:26<06:14, 142.53it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:27<06:12, 142.94it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:27<06:10, 143.76it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:28<06:07, 144.60it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:28<06:04, 145.58it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:29<06:02, 146.28it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:29<06:00, 146.94it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:30<05:56, 148.41it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:30<05:53, 149.58it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:30<05:50, 150.47it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:31<05:48, 151.45it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:31<05:46, 152.01it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:32<05:44, 152.56it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:32<05:43, 152.98it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:32<05:40, 153.91it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:33<05:37, 155.05it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:33<05:35, 155.97it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:34<05:33, 156.88it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:34<05:31, 157.50it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:34<05:27, 159.03it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:35<05:24, 160.41it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:35<05:22, 161.48it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:36<05:20, 162.20it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:36<05:18, 162.86it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:36<05:12, 165.68it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:37<05:08, 167.86it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:37<05:05, 169.23it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:38<05:03, 170.09it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:38<05:03, 170.13it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:38<05:00, 171.39it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:39<04:58, 172.29it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:39<04:56, 173.18it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:39<04:55, 173.51it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:40<04:53, 174.34it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:40<04:51, 175.37it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:40<04:48, 176.92it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:41<04:46, 178.21it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:41<04:44, 179.22it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:41<04:43, 179.30it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:42<04:42, 180.15it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:42<04:40, 180.88it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:43<04:39, 181.42it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:43<04:39, 181.27it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:43<04:38, 181.94it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:44<04:37, 182.28it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:44<04:34, 183.92it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:44<04:32, 185.15it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:45<04:30, 186.01it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:45<04:28, 186.92it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:45<04:27, 187.83it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:46<04:26, 188.49it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:46<04:25, 188.97it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:46<04:18, 193.60it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:47<04:13, 197.06it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:47<04:09, 199.61it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:47<04:07, 201.58it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:48<04:05, 202.98it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:48<04:04, 203.13it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:48<04:03, 204.21it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:48<04:00, 205.75it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:49<04:00, 206.13it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:49<03:58, 207.31it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:49<03:56, 208.41it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:50<03:55, 209.38it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:50<03:54, 209.84it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:50<03:53, 210.60it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:51<03:52, 211.13it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:51<03:52, 211.44it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:51<03:50, 212.52it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:51<03:48, 214.31it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:52<03:46, 215.65it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:52<03:44, 217.20it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:52<03:42, 219.55it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:53<03:40, 221.19it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:53<03:38, 222.06it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:53<03:37, 223.08it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [00:53<03:36, 224.13it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [00:54<03:35, 224.40it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [00:54<03:33, 226.10it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [00:54<03:32, 227.77it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [00:55<03:30, 229.46it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [00:55<03:29, 229.46it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [00:55<03:28, 230.43it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [00:55<03:28, 230.92it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [00:56<03:27, 231.58it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [00:56<03:26, 232.41it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [00:56<03:24, 234.17it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [00:56<03:22, 235.64it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [00:57<03:21, 236.64it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [00:57<03:21, 237.07it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [00:57<03:19, 238.24it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [00:58<03:16, 241.27it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [00:58<03:15, 242.64it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [00:58<03:13, 244.49it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [00:58<03:12, 245.63it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [00:59<03:11, 246.72it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [00:59<03:10, 247.56it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [00:59<03:09, 248.16it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [00:59<03:09, 248.93it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:00<03:08, 249.58it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:00<03:04, 254.02it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:00<03:01, 257.70it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:00<02:59, 260.43it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:01<02:58, 261.76it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:01<02:57, 263.73it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:01<02:55, 265.72it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:01<02:54, 267.10it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:02<02:53, 268.23it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:02<02:51, 270.85it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:02<02:49, 273.47it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:02<02:48, 274.76it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:02<02:47, 276.09it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:03<02:46, 277.28it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:03<02:45, 278.51it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:03<02:44, 279.69it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:03<02:44, 280.38it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:04<02:43, 281.29it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:04<02:41, 283.17it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:04<02:41, 284.45it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:04<02:39, 286.56it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:04<02:38, 288.05it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:05<02:37, 289.17it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:05<02:37, 290.06it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:05<02:36, 290.64it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:05<02:36, 290.86it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:06<02:36, 289.56it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:06<02:35, 290.53it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:06<02:33, 294.84it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:06<02:31, 298.05it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:06<02:30, 299.85it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:07<02:30, 299.64it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:07<02:29, 300.03it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:07<02:29, 300.72it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:07<02:28, 302.30it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:07<02:27, 303.13it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:08<02:27, 304.00it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:08<02:27, 301.79it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:08<02:28, 300.51it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:08<02:28, 300.30it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:09<02:26, 302.90it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:09<02:24, 307.76it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:09<02:22, 311.75it/s]Running loglikelihood requests:  21%|██        | 11905/56168 [01:09<02:20, 314.40it/s]Running loglikelihood requests:  21%|██▏       | 11969/56168 [01:09<02:19, 316.96it/s]Running loglikelihood requests:  21%|██▏       | 12033/56168 [01:10<02:18, 318.92it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [01:10<02:17, 320.56it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [01:10<02:16, 321.98it/s]Running loglikelihood requests:  22%|██▏       | 12225/56168 [01:10<02:15, 323.44it/s]Running loglikelihood requests:  22%|██▏       | 12289/56168 [01:10<02:15, 323.43it/s]Running loglikelihood requests:  22%|██▏       | 12353/56168 [01:10<02:14, 325.11it/s]Running loglikelihood requests:  22%|██▏       | 12417/56168 [01:11<02:14, 326.36it/s]Running loglikelihood requests:  22%|██▏       | 12481/56168 [01:11<02:13, 326.30it/s]Running loglikelihood requests:  22%|██▏       | 12545/56168 [01:11<02:13, 326.43it/s]Running loglikelihood requests:  22%|██▏       | 12609/56168 [01:11<02:13, 326.36it/s]Running loglikelihood requests:  23%|██▎       | 12673/56168 [01:11<02:13, 325.38it/s]Running loglikelihood requests:  23%|██▎       | 12737/56168 [01:12<02:13, 325.27it/s]Running loglikelihood requests:  23%|██▎       | 12801/56168 [01:12<02:13, 325.70it/s]Running loglikelihood requests:  23%|██▎       | 12865/56168 [01:12<02:12, 326.20it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [01:12<02:12, 326.68it/s]Running loglikelihood requests:  23%|██▎       | 12993/56168 [01:12<02:11, 327.67it/s]Running loglikelihood requests:  23%|██▎       | 13057/56168 [01:13<02:11, 328.26it/s]Running loglikelihood requests:  23%|██▎       | 13121/56168 [01:13<02:11, 327.70it/s]Running loglikelihood requests:  23%|██▎       | 13185/56168 [01:13<02:10, 330.50it/s]Running loglikelihood requests:  24%|██▎       | 13249/56168 [01:13<02:09, 330.95it/s]Running loglikelihood requests:  24%|██▎       | 13313/56168 [01:13<02:08, 333.17it/s]Running loglikelihood requests:  24%|██▍       | 13377/56168 [01:14<02:08, 333.35it/s]Running loglikelihood requests:  24%|██▍       | 13441/56168 [01:14<02:07, 334.54it/s]Running loglikelihood requests:  24%|██▍       | 13505/56168 [01:14<02:07, 335.13it/s]Running loglikelihood requests:  24%|██▍       | 13569/56168 [01:14<02:09, 328.72it/s]Running loglikelihood requests:  24%|██▍       | 13633/56168 [01:14<02:07, 332.37it/s]Running loglikelihood requests:  24%|██▍       | 13697/56168 [01:15<02:09, 328.20it/s]Running loglikelihood requests:  24%|██▍       | 13761/56168 [01:15<02:07, 331.86it/s]Running loglikelihood requests:  25%|██▍       | 13825/56168 [01:15<02:06, 334.07it/s]Running loglikelihood requests:  25%|██▍       | 13889/56168 [01:15<02:05, 335.90it/s]Running loglikelihood requests:  25%|██▍       | 13953/56168 [01:15<02:05, 337.23it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [01:16<02:04, 338.96it/s]Running loglikelihood requests:  25%|██▌       | 14081/56168 [01:16<02:04, 339.31it/s]Running loglikelihood requests:  25%|██▌       | 14145/56168 [01:16<02:05, 333.78it/s]Running loglikelihood requests:  25%|██▌       | 14209/56168 [01:16<02:05, 335.64it/s]Running loglikelihood requests:  25%|██▌       | 14273/56168 [01:16<02:03, 338.10it/s]Running loglikelihood requests:  26%|██▌       | 14337/56168 [01:16<02:03, 339.90it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [01:17<02:02, 339.71it/s]Running loglikelihood requests:  26%|██▌       | 14465/56168 [01:17<02:02, 340.11it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [01:17<02:02, 340.96it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [01:17<02:01, 341.18it/s]Running loglikelihood requests:  26%|██▌       | 14657/56168 [01:17<02:01, 341.11it/s]Running loglikelihood requests:  26%|██▌       | 14721/56168 [01:18<02:01, 341.73it/s]Running loglikelihood requests:  26%|██▋       | 14785/56168 [01:18<02:02, 338.77it/s]Running loglikelihood requests:  26%|██▋       | 14849/56168 [01:18<02:02, 337.04it/s]Running loglikelihood requests:  27%|██▋       | 14913/56168 [01:18<02:02, 335.73it/s]Running loglikelihood requests:  27%|██▋       | 14977/56168 [01:18<02:02, 337.46it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [01:19<02:01, 338.55it/s]Running loglikelihood requests:  27%|██▋       | 15105/56168 [01:19<02:01, 339.13it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [01:19<02:00, 340.18it/s]Running loglikelihood requests:  27%|██▋       | 15233/56168 [01:19<01:59, 341.17it/s]Running loglikelihood requests:  27%|██▋       | 15297/56168 [01:19<02:00, 338.54it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [01:19<01:59, 340.30it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [01:20<01:59, 340.74it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [01:20<01:59, 340.68it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [01:20<01:59, 340.29it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [01:20<01:58, 341.29it/s]Running loglikelihood requests:  28%|██▊       | 15681/56168 [01:20<01:58, 340.71it/s]Running loglikelihood requests:  28%|██▊       | 15745/56168 [01:21<01:58, 341.29it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [01:21<01:58, 341.19it/s]Running loglikelihood requests:  28%|██▊       | 15873/56168 [01:21<01:57, 343.15it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [01:21<01:57, 341.41it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [01:21<01:58, 339.39it/s]Running loglikelihood requests:  29%|██▊       | 16065/56168 [01:22<01:57, 342.58it/s]Running loglikelihood requests:  29%|██▊       | 16129/56168 [01:22<01:55, 345.35it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [01:22<01:55, 347.12it/s]Running loglikelihood requests:  29%|██▉       | 16257/56168 [01:22<01:54, 347.64it/s]Running loglikelihood requests:  29%|██▉       | 16321/56168 [01:22<01:54, 348.81it/s]Running loglikelihood requests:  29%|██▉       | 16385/56168 [01:22<01:54, 347.86it/s]Running loglikelihood requests:  29%|██▉       | 16449/56168 [01:23<01:53, 349.32it/s]Running loglikelihood requests:  29%|██▉       | 16513/56168 [01:23<01:53, 349.29it/s]Running loglikelihood requests:  30%|██▉       | 16577/56168 [01:23<01:52, 350.66it/s]Running loglikelihood requests:  30%|██▉       | 16641/56168 [01:23<01:52, 351.39it/s]Running loglikelihood requests:  30%|██▉       | 16705/56168 [01:23<01:51, 353.08it/s]Running loglikelihood requests:  30%|██▉       | 16769/56168 [01:24<01:51, 352.86it/s]Running loglikelihood requests:  30%|██▉       | 16833/56168 [01:24<01:51, 352.61it/s]Running loglikelihood requests:  30%|███       | 16897/56168 [01:24<01:51, 351.95it/s]Running loglikelihood requests:  30%|███       | 16961/56168 [01:24<01:51, 352.63it/s]Running loglikelihood requests:  30%|███       | 17025/56168 [01:24<01:51, 352.18it/s]Running loglikelihood requests:  30%|███       | 17089/56168 [01:24<01:50, 352.42it/s]Running loglikelihood requests:  31%|███       | 17153/56168 [01:25<01:50, 352.94it/s]Running loglikelihood requests:  31%|███       | 17217/56168 [01:25<01:50, 351.94it/s]Running loglikelihood requests:  31%|███       | 17281/56168 [01:25<01:50, 352.87it/s]Running loglikelihood requests:  31%|███       | 17345/56168 [01:25<01:49, 353.28it/s]Running loglikelihood requests:  31%|███       | 17409/56168 [01:25<01:49, 352.91it/s]Running loglikelihood requests:  31%|███       | 17473/56168 [01:26<01:49, 353.27it/s]Running loglikelihood requests:  31%|███       | 17537/56168 [01:26<01:49, 353.56it/s]Running loglikelihood requests:  31%|███▏      | 17601/56168 [01:26<01:48, 353.87it/s]Running loglikelihood requests:  31%|███▏      | 17665/56168 [01:26<01:48, 353.72it/s]Running loglikelihood requests:  32%|███▏      | 17729/56168 [01:26<01:48, 353.63it/s]Running loglikelihood requests:  32%|███▏      | 17793/56168 [01:26<01:48, 354.49it/s]Running loglikelihood requests:  32%|███▏      | 17857/56168 [01:27<01:48, 354.14it/s]Running loglikelihood requests:  32%|███▏      | 17921/56168 [01:27<01:48, 353.79it/s]Running loglikelihood requests:  32%|███▏      | 17985/56168 [01:27<01:48, 352.99it/s]Running loglikelihood requests:  32%|███▏      | 18049/56168 [01:27<01:48, 352.48it/s]Running loglikelihood requests:  32%|███▏      | 18113/56168 [01:27<01:48, 352.29it/s]Running loglikelihood requests:  32%|███▏      | 18177/56168 [01:28<01:47, 352.50it/s]Running loglikelihood requests:  32%|███▏      | 18241/56168 [01:28<01:47, 353.59it/s]Running loglikelihood requests:  33%|███▎      | 18305/56168 [01:28<01:46, 354.39it/s]Running loglikelihood requests:  33%|███▎      | 18369/56168 [01:28<01:46, 354.72it/s]Running loglikelihood requests:  33%|███▎      | 18433/56168 [01:28<01:46, 354.50it/s]Running loglikelihood requests:  33%|███▎      | 18497/56168 [01:28<01:45, 355.41it/s]Running loglikelihood requests:  33%|███▎      | 18561/56168 [01:29<01:45, 355.93it/s]Running loglikelihood requests:  33%|███▎      | 18625/56168 [01:29<01:42, 367.41it/s]Running loglikelihood requests:  33%|███▎      | 18689/56168 [01:29<01:39, 376.31it/s]Running loglikelihood requests:  33%|███▎      | 18753/56168 [01:29<01:37, 383.07it/s]Running loglikelihood requests:  34%|███▎      | 18817/56168 [01:29<01:36, 387.08it/s]Running loglikelihood requests:  34%|███▎      | 18881/56168 [01:29<01:35, 390.60it/s]Running loglikelihood requests:  34%|███▎      | 18945/56168 [01:30<01:34, 393.92it/s]Running loglikelihood requests:  34%|███▍      | 19009/56168 [01:30<01:33, 396.28it/s]Running loglikelihood requests:  34%|███▍      | 19073/56168 [01:30<01:33, 397.00it/s]Running loglikelihood requests:  34%|███▍      | 19137/56168 [01:30<01:33, 398.17it/s]Running loglikelihood requests:  34%|███▍      | 19201/56168 [01:30<01:32, 399.31it/s]Running loglikelihood requests:  34%|███▍      | 19265/56168 [01:30<01:31, 401.27it/s]Running loglikelihood requests:  34%|███▍      | 19329/56168 [01:31<01:31, 401.83it/s]Running loglikelihood requests:  35%|███▍      | 19393/56168 [01:31<01:31, 401.07it/s]Running loglikelihood requests:  35%|███▍      | 19457/56168 [01:31<01:31, 400.83it/s]Running loglikelihood requests:  35%|███▍      | 19521/56168 [01:31<01:31, 400.02it/s]Running loglikelihood requests:  35%|███▍      | 19585/56168 [01:31<01:31, 399.62it/s]Running loglikelihood requests:  35%|███▍      | 19649/56168 [01:31<01:31, 399.35it/s]Running loglikelihood requests:  35%|███▌      | 19713/56168 [01:31<01:32, 393.99it/s]Running loglikelihood requests:  35%|███▌      | 19777/56168 [01:32<01:32, 394.81it/s]Running loglikelihood requests:  35%|███▌      | 19841/56168 [01:32<01:32, 392.51it/s]Running loglikelihood requests:  35%|███▌      | 19905/56168 [01:32<01:32, 392.28it/s]Running loglikelihood requests:  36%|███▌      | 19969/56168 [01:32<01:31, 395.02it/s]Running loglikelihood requests:  36%|███▌      | 20033/56168 [01:32<01:31, 396.68it/s]Running loglikelihood requests:  36%|███▌      | 20097/56168 [01:32<01:30, 397.78it/s]Running loglikelihood requests:  36%|███▌      | 20161/56168 [01:33<01:30, 397.87it/s]Running loglikelihood requests:  36%|███▌      | 20225/56168 [01:33<01:30, 399.30it/s]Running loglikelihood requests:  36%|███▌      | 20289/56168 [01:33<01:29, 400.10it/s]Running loglikelihood requests:  36%|███▌      | 20353/56168 [01:33<01:29, 401.71it/s]Running loglikelihood requests:  36%|███▋      | 20417/56168 [01:33<01:28, 403.77it/s]Running loglikelihood requests:  36%|███▋      | 20481/56168 [01:33<01:28, 403.29it/s]Running loglikelihood requests:  37%|███▋      | 20545/56168 [01:34<01:28, 403.93it/s]Running loglikelihood requests:  37%|███▋      | 20609/56168 [01:34<01:29, 398.69it/s]Running loglikelihood requests:  37%|███▋      | 20673/56168 [01:34<01:28, 403.23it/s]Running loglikelihood requests:  37%|███▋      | 20737/56168 [01:34<01:28, 401.16it/s]Running loglikelihood requests:  37%|███▋      | 20801/56168 [01:34<01:29, 396.18it/s]Running loglikelihood requests:  37%|███▋      | 20865/56168 [01:34<01:28, 396.96it/s]Running loglikelihood requests:  37%|███▋      | 20929/56168 [01:35<01:27, 401.60it/s]Running loglikelihood requests:  37%|███▋      | 20993/56168 [01:35<01:26, 406.46it/s]Running loglikelihood requests:  37%|███▋      | 21057/56168 [01:35<01:27, 400.17it/s]Running loglikelihood requests:  38%|███▊      | 21121/56168 [01:35<01:27, 400.83it/s]Running loglikelihood requests:  38%|███▊      | 21185/56168 [01:35<01:26, 404.78it/s]Running loglikelihood requests:  38%|███▊      | 21249/56168 [01:35<01:27, 399.05it/s]Running loglikelihood requests:  38%|███▊      | 21313/56168 [01:35<01:27, 400.44it/s]Running loglikelihood requests:  38%|███▊      | 21377/56168 [01:36<01:25, 404.94it/s]Running loglikelihood requests:  38%|███▊      | 21441/56168 [01:36<01:24, 409.25it/s]Running loglikelihood requests:  38%|███▊      | 21505/56168 [01:36<01:25, 407.28it/s]Running loglikelihood requests:  38%|███▊      | 21569/56168 [01:36<01:25, 402.84it/s]Running loglikelihood requests:  39%|███▊      | 21633/56168 [01:36<01:24, 406.30it/s]Running loglikelihood requests:  39%|███▊      | 21697/56168 [01:36<01:24, 410.35it/s]Running loglikelihood requests:  39%|███▊      | 21761/56168 [01:37<01:25, 400.89it/s]Running loglikelihood requests:  39%|███▉      | 21825/56168 [01:37<01:25, 402.12it/s]Running loglikelihood requests:  39%|███▉      | 21889/56168 [01:37<01:23, 408.45it/s]Running loglikelihood requests:  39%|███▉      | 21953/56168 [01:37<01:23, 411.51it/s]Running loglikelihood requests:  39%|███▉      | 22017/56168 [01:37<01:23, 410.12it/s]Running loglikelihood requests:  39%|███▉      | 22081/56168 [01:37<01:22, 413.47it/s]Running loglikelihood requests:  39%|███▉      | 22145/56168 [01:38<01:21, 415.96it/s]Running loglikelihood requests:  40%|███▉      | 22209/56168 [01:38<01:23, 408.71it/s]Running loglikelihood requests:  40%|███▉      | 22273/56168 [01:38<01:22, 408.88it/s]Running loglikelihood requests:  40%|███▉      | 22337/56168 [01:38<01:21, 412.86it/s]Running loglikelihood requests:  40%|███▉      | 22401/56168 [01:38<01:20, 417.36it/s]Running loglikelihood requests:  40%|███▉      | 22465/56168 [01:38<01:20, 420.29it/s]Running loglikelihood requests:  40%|████      | 22529/56168 [01:38<01:20, 420.14it/s]Running loglikelihood requests:  40%|████      | 22593/56168 [01:39<01:20, 418.44it/s]Running loglikelihood requests:  40%|████      | 22657/56168 [01:39<01:19, 423.11it/s]Running loglikelihood requests:  40%|████      | 22721/56168 [01:39<01:18, 425.45it/s]Running loglikelihood requests:  41%|████      | 22785/56168 [01:39<01:18, 427.19it/s]Running loglikelihood requests:  41%|████      | 22849/56168 [01:39<01:17, 430.42it/s]Running loglikelihood requests:  41%|████      | 22913/56168 [01:39<01:17, 430.85it/s]Running loglikelihood requests:  41%|████      | 22977/56168 [01:39<01:17, 430.20it/s]Running loglikelihood requests:  41%|████      | 23041/56168 [01:40<01:16, 432.11it/s]Running loglikelihood requests:  41%|████      | 23105/56168 [01:40<01:16, 431.28it/s]Running loglikelihood requests:  41%|████      | 23169/56168 [01:40<01:16, 430.01it/s]Running loglikelihood requests:  41%|████▏     | 23233/56168 [01:40<01:15, 435.75it/s]Running loglikelihood requests:  41%|████▏     | 23297/56168 [01:40<01:14, 440.32it/s]Running loglikelihood requests:  42%|████▏     | 23361/56168 [01:40<01:14, 443.06it/s]Running loglikelihood requests:  42%|████▏     | 23425/56168 [01:41<01:13, 443.74it/s]Running loglikelihood requests:  42%|████▏     | 23489/56168 [01:41<01:15, 433.30it/s]Running loglikelihood requests:  42%|████▏     | 23553/56168 [01:41<01:15, 432.14it/s]Running loglikelihood requests:  42%|████▏     | 23617/56168 [01:41<01:14, 437.34it/s]Running loglikelihood requests:  42%|████▏     | 23681/56168 [01:41<01:15, 429.97it/s]Running loglikelihood requests:  42%|████▏     | 23745/56168 [01:41<01:19, 407.86it/s]Running loglikelihood requests:  42%|████▏     | 23809/56168 [01:41<01:17, 419.54it/s]Running loglikelihood requests:  43%|████▎     | 23873/56168 [01:42<01:15, 428.95it/s]Running loglikelihood requests:  43%|████▎     | 23937/56168 [01:42<01:19, 407.48it/s]Running loglikelihood requests:  43%|████▎     | 24001/56168 [01:42<01:16, 418.64it/s]Running loglikelihood requests:  43%|████▎     | 24065/56168 [01:42<01:15, 427.56it/s]Running loglikelihood requests:  43%|████▎     | 24129/56168 [01:42<01:13, 434.66it/s]Running loglikelihood requests:  43%|████▎     | 24193/56168 [01:42<01:12, 439.32it/s]Running loglikelihood requests:  43%|████▎     | 24257/56168 [01:42<01:12, 442.42it/s]Running loglikelihood requests:  43%|████▎     | 24321/56168 [01:43<01:12, 438.59it/s]Running loglikelihood requests:  43%|████▎     | 24385/56168 [01:43<01:11, 442.00it/s]Running loglikelihood requests:  44%|████▎     | 24449/56168 [01:43<01:12, 437.84it/s]Running loglikelihood requests:  44%|████▎     | 24513/56168 [01:43<01:12, 435.96it/s]Running loglikelihood requests:  44%|████▍     | 24577/56168 [01:43<01:13, 429.06it/s]Running loglikelihood requests:  44%|████▍     | 24641/56168 [01:43<01:14, 425.93it/s]Running loglikelihood requests:  44%|████▍     | 24705/56168 [01:44<01:16, 412.56it/s]Running loglikelihood requests:  44%|████▍     | 24769/56168 [01:44<01:14, 421.88it/s]Running loglikelihood requests:  44%|████▍     | 24833/56168 [01:44<01:12, 429.88it/s]Running loglikelihood requests:  44%|████▍     | 24897/56168 [01:44<01:13, 428.13it/s]Running loglikelihood requests:  44%|████▍     | 24961/56168 [01:44<01:11, 436.60it/s]Running loglikelihood requests:  45%|████▍     | 25025/56168 [01:44<01:10, 442.57it/s]Running loglikelihood requests:  45%|████▍     | 25089/56168 [01:44<01:10, 440.78it/s]Running loglikelihood requests:  45%|████▍     | 25153/56168 [01:45<01:09, 444.91it/s]Running loglikelihood requests:  45%|████▍     | 25217/56168 [01:45<01:09, 448.11it/s]Running loglikelihood requests:  45%|████▌     | 25281/56168 [01:45<01:09, 445.71it/s]Running loglikelihood requests:  45%|████▌     | 25345/56168 [01:45<01:08, 448.59it/s]Running loglikelihood requests:  45%|████▌     | 25409/56168 [01:45<01:08, 449.39it/s]Running loglikelihood requests:  45%|████▌     | 25473/56168 [01:45<01:08, 449.20it/s]Running loglikelihood requests:  45%|████▌     | 25537/56168 [01:45<01:07, 451.25it/s]Running loglikelihood requests:  46%|████▌     | 25601/56168 [01:46<01:07, 452.03it/s]Running loglikelihood requests:  46%|████▌     | 25665/56168 [01:46<01:07, 448.60it/s]Running loglikelihood requests:  46%|████▌     | 25729/56168 [01:46<01:07, 451.46it/s]Running loglikelihood requests:  46%|████▌     | 25793/56168 [01:46<01:07, 448.01it/s]Running loglikelihood requests:  46%|████▌     | 25857/56168 [01:46<01:08, 445.59it/s]Running loglikelihood requests:  46%|████▌     | 25921/56168 [01:46<01:07, 449.19it/s]Running loglikelihood requests:  46%|████▋     | 25985/56168 [01:46<01:06, 450.92it/s]Running loglikelihood requests:  46%|████▋     | 26049/56168 [01:47<01:07, 446.32it/s]Running loglikelihood requests:  46%|████▋     | 26113/56168 [01:47<01:06, 449.53it/s]Running loglikelihood requests:  47%|████▋     | 26177/56168 [01:47<01:06, 452.10it/s]Running loglikelihood requests:  47%|████▋     | 26241/56168 [01:47<01:06, 452.89it/s]Running loglikelihood requests:  47%|████▋     | 26305/56168 [01:47<01:05, 454.92it/s]Running loglikelihood requests:  47%|████▋     | 26369/56168 [01:47<01:05, 457.06it/s]Running loglikelihood requests:  47%|████▋     | 26433/56168 [01:47<01:04, 458.63it/s]Running loglikelihood requests:  47%|████▋     | 26497/56168 [01:47<01:04, 460.01it/s]Running loglikelihood requests:  47%|████▋     | 26561/56168 [01:48<01:04, 461.18it/s]Running loglikelihood requests:  47%|████▋     | 26625/56168 [01:48<01:03, 462.56it/s]Running loglikelihood requests:  48%|████▊     | 26689/56168 [01:48<01:03, 461.43it/s]Running loglikelihood requests:  48%|████▊     | 26753/56168 [01:48<01:02, 468.54it/s]Running loglikelihood requests:  48%|████▊     | 26817/56168 [01:48<01:01, 475.80it/s]Running loglikelihood requests:  48%|████▊     | 26881/56168 [01:48<01:01, 478.66it/s]Running loglikelihood requests:  48%|████▊     | 26945/56168 [01:48<01:00, 483.87it/s]Running loglikelihood requests:  48%|████▊     | 27009/56168 [01:49<01:00, 485.11it/s]Running loglikelihood requests:  48%|████▊     | 27073/56168 [01:49<00:59, 486.37it/s]Running loglikelihood requests:  48%|████▊     | 27137/56168 [01:49<00:59, 487.80it/s]Running loglikelihood requests:  48%|████▊     | 27201/56168 [01:49<00:59, 488.71it/s]Running loglikelihood requests:  49%|████▊     | 27265/56168 [01:49<00:58, 490.15it/s]Running loglikelihood requests:  49%|████▊     | 27329/56168 [01:49<00:59, 488.53it/s]Running loglikelihood requests:  49%|████▉     | 27393/56168 [01:49<00:58, 490.71it/s]Running loglikelihood requests:  49%|████▉     | 27457/56168 [01:49<00:58, 489.08it/s]Running loglikelihood requests:  49%|████▉     | 27521/56168 [01:50<00:58, 491.37it/s]Running loglikelihood requests:  49%|████▉     | 27585/56168 [01:50<00:58, 490.11it/s]Running loglikelihood requests:  49%|████▉     | 27649/56168 [01:50<00:58, 491.28it/s]Running loglikelihood requests:  49%|████▉     | 27713/56168 [01:50<00:57, 492.24it/s]Running loglikelihood requests:  49%|████▉     | 27777/56168 [01:50<00:57, 492.26it/s]Running loglikelihood requests:  50%|████▉     | 27841/56168 [01:50<00:57, 494.33it/s]Running loglikelihood requests:  50%|████▉     | 27905/56168 [01:50<00:57, 493.05it/s]Running loglikelihood requests:  50%|████▉     | 27969/56168 [01:51<00:58, 481.96it/s]Running loglikelihood requests:  50%|████▉     | 28033/56168 [01:51<00:57, 485.92it/s]Running loglikelihood requests:  50%|█████     | 28097/56168 [01:51<00:57, 488.64it/s]Running loglikelihood requests:  50%|█████     | 28161/56168 [01:51<00:57, 489.66it/s]Running loglikelihood requests:  50%|█████     | 28225/56168 [01:51<00:56, 491.61it/s]Running loglikelihood requests:  50%|█████     | 28289/56168 [01:51<00:56, 491.55it/s]Running loglikelihood requests:  50%|█████     | 28353/56168 [01:51<00:56, 494.04it/s]Running loglikelihood requests:  51%|█████     | 28417/56168 [01:51<00:56, 494.80it/s]Running loglikelihood requests:  51%|█████     | 28481/56168 [01:52<00:56, 493.79it/s]Running loglikelihood requests:  51%|█████     | 28545/56168 [01:52<00:55, 494.82it/s]Running loglikelihood requests:  51%|█████     | 28609/56168 [01:52<00:55, 493.22it/s]Running loglikelihood requests:  51%|█████     | 28673/56168 [01:52<00:55, 492.99it/s]Running loglikelihood requests:  51%|█████     | 28737/56168 [01:52<00:55, 493.85it/s]Running loglikelihood requests:  51%|█████▏    | 28801/56168 [01:52<00:55, 495.62it/s]Running loglikelihood requests:  51%|█████▏    | 28865/56168 [01:52<00:54, 498.00it/s]Running loglikelihood requests:  52%|█████▏    | 28929/56168 [01:52<00:54, 496.39it/s]Running loglikelihood requests:  52%|█████▏    | 28993/56168 [01:53<00:54, 496.50it/s]Running loglikelihood requests:  52%|█████▏    | 29057/56168 [01:53<00:54, 496.56it/s]Running loglikelihood requests:  52%|█████▏    | 29121/56168 [01:53<00:54, 493.53it/s]Running loglikelihood requests:  52%|█████▏    | 29185/56168 [01:53<00:54, 494.26it/s]Running loglikelihood requests:  52%|█████▏    | 29249/56168 [01:53<00:54, 495.18it/s]Running loglikelihood requests:  52%|█████▏    | 29313/56168 [01:53<00:54, 495.56it/s]Running loglikelihood requests:  52%|█████▏    | 29377/56168 [01:53<00:53, 496.65it/s]Running loglikelihood requests:  52%|█████▏    | 29441/56168 [01:53<00:53, 495.12it/s]Running loglikelihood requests:  53%|█████▎    | 29505/56168 [01:54<00:53, 495.87it/s]Running loglikelihood requests:  53%|█████▎    | 29569/56168 [01:54<00:53, 496.19it/s]Running loglikelihood requests:  53%|█████▎    | 29633/56168 [01:54<00:53, 496.24it/s]Running loglikelihood requests:  53%|█████▎    | 29697/56168 [01:54<00:53, 498.20it/s]Running loglikelihood requests:  53%|█████▎    | 29761/56168 [01:54<00:52, 498.78it/s]Running loglikelihood requests:  53%|█████▎    | 29825/56168 [01:54<00:52, 498.37it/s]Running loglikelihood requests:  53%|█████▎    | 29889/56168 [01:54<00:52, 497.65it/s]Running loglikelihood requests:  53%|█████▎    | 29953/56168 [01:55<00:52, 497.67it/s]Running loglikelihood requests:  53%|█████▎    | 30017/56168 [01:55<00:52, 497.35it/s]Running loglikelihood requests:  54%|█████▎    | 30081/56168 [01:55<00:52, 498.11it/s]Running loglikelihood requests:  54%|█████▎    | 30145/56168 [01:55<00:52, 496.68it/s]Running loglikelihood requests:  54%|█████▍    | 30209/56168 [01:55<00:52, 495.51it/s]Running loglikelihood requests:  54%|█████▍    | 30273/56168 [01:55<00:52, 496.15it/s]Running loglikelihood requests:  54%|█████▍    | 30337/56168 [01:55<00:52, 496.72it/s]Running loglikelihood requests:  54%|█████▍    | 30401/56168 [01:55<00:51, 498.62it/s]Running loglikelihood requests:  54%|█████▍    | 30465/56168 [01:56<00:51, 499.41it/s]Running loglikelihood requests:  54%|█████▍    | 30529/56168 [01:56<00:51, 499.32it/s]Running loglikelihood requests:  54%|█████▍    | 30593/56168 [01:56<00:51, 501.23it/s]Running loglikelihood requests:  55%|█████▍    | 30657/56168 [01:56<00:50, 503.57it/s]Running loglikelihood requests:  55%|█████▍    | 30721/56168 [01:56<00:50, 503.36it/s]Running loglikelihood requests:  55%|█████▍    | 30785/56168 [01:56<00:50, 503.28it/s]Running loglikelihood requests:  55%|█████▍    | 30849/56168 [01:56<00:50, 503.45it/s]Running loglikelihood requests:  55%|█████▌    | 30913/56168 [01:56<00:50, 500.15it/s]Running loglikelihood requests:  55%|█████▌    | 30977/56168 [01:57<00:50, 500.80it/s]Running loglikelihood requests:  55%|█████▌    | 31041/56168 [01:57<00:49, 502.65it/s]Running loglikelihood requests:  55%|█████▌    | 31105/56168 [01:57<00:49, 504.00it/s]Running loglikelihood requests:  55%|█████▌    | 31169/56168 [01:57<00:49, 502.74it/s]Running loglikelihood requests:  56%|█████▌    | 31233/56168 [01:57<00:49, 504.40it/s]Running loglikelihood requests:  56%|█████▌    | 31297/56168 [01:57<00:49, 504.13it/s]Running loglikelihood requests:  56%|█████▌    | 31361/56168 [01:57<00:49, 502.71it/s]Running loglikelihood requests:  56%|█████▌    | 31425/56168 [01:57<00:49, 502.87it/s]Running loglikelihood requests:  56%|█████▌    | 31489/56168 [01:58<00:49, 502.75it/s]Running loglikelihood requests:  56%|█████▌    | 31553/56168 [01:58<00:49, 501.31it/s]Running loglikelihood requests:  56%|█████▋    | 31617/56168 [01:58<00:48, 501.53it/s]Running loglikelihood requests:  56%|█████▋    | 31681/56168 [01:58<00:48, 503.32it/s]Running loglikelihood requests:  57%|█████▋    | 31745/56168 [01:58<00:48, 503.43it/s]Running loglikelihood requests:  57%|█████▋    | 31809/56168 [01:58<00:47, 512.30it/s]Running loglikelihood requests:  57%|█████▋    | 31873/56168 [01:58<00:46, 518.24it/s]Running loglikelihood requests:  57%|█████▋    | 31937/56168 [01:58<00:46, 523.54it/s]Running loglikelihood requests:  57%|█████▋    | 32001/56168 [01:59<00:45, 528.16it/s]Running loglikelihood requests:  57%|█████▋    | 32065/56168 [01:59<00:45, 533.20it/s]Running loglikelihood requests:  57%|█████▋    | 32129/56168 [01:59<00:44, 534.96it/s]Running loglikelihood requests:  57%|█████▋    | 32193/56168 [01:59<00:44, 536.07it/s]Running loglikelihood requests:  57%|█████▋    | 32257/56168 [01:59<00:44, 536.47it/s]Running loglikelihood requests:  58%|█████▊    | 32321/56168 [01:59<00:44, 536.42it/s]Running loglikelihood requests:  58%|█████▊    | 32385/56168 [01:59<00:44, 536.08it/s]Running loglikelihood requests:  58%|█████▊    | 32449/56168 [01:59<00:44, 535.44it/s]Running loglikelihood requests:  58%|█████▊    | 32513/56168 [02:00<00:44, 534.96it/s]Running loglikelihood requests:  58%|█████▊    | 32577/56168 [02:00<00:43, 536.28it/s]Running loglikelihood requests:  58%|█████▊    | 32641/56168 [02:00<00:43, 539.11it/s]Running loglikelihood requests:  58%|█████▊    | 32705/56168 [02:00<00:45, 521.08it/s]Running loglikelihood requests:  58%|█████▊    | 32769/56168 [02:00<00:45, 509.06it/s]Running loglikelihood requests:  58%|█████▊    | 32833/56168 [02:00<00:44, 519.52it/s]Running loglikelihood requests:  59%|█████▊    | 32897/56168 [02:00<00:44, 526.59it/s]Running loglikelihood requests:  59%|█████▊    | 32961/56168 [02:00<00:43, 530.36it/s]Running loglikelihood requests:  59%|█████▉    | 33025/56168 [02:00<00:43, 533.68it/s]Running loglikelihood requests:  59%|█████▉    | 33089/56168 [02:01<00:43, 535.59it/s]Running loglikelihood requests:  59%|█████▉    | 33153/56168 [02:01<00:42, 538.40it/s]Running loglikelihood requests:  59%|█████▉    | 33217/56168 [02:01<00:42, 539.96it/s]Running loglikelihood requests:  59%|█████▉    | 33281/56168 [02:01<00:42, 541.69it/s]Running loglikelihood requests:  59%|█████▉    | 33345/56168 [02:01<00:42, 542.08it/s]Running loglikelihood requests:  59%|█████▉    | 33409/56168 [02:01<00:41, 542.51it/s]Running loglikelihood requests:  60%|█████▉    | 33473/56168 [02:01<00:41, 542.12it/s]Running loglikelihood requests:  60%|█████▉    | 33537/56168 [02:01<00:41, 544.30it/s]Running loglikelihood requests:  60%|█████▉    | 33601/56168 [02:02<00:41, 545.78it/s]Running loglikelihood requests:  60%|█████▉    | 33665/56168 [02:02<00:41, 545.27it/s]Running loglikelihood requests:  60%|██████    | 33729/56168 [02:02<00:41, 544.03it/s]Running loglikelihood requests:  60%|██████    | 33793/56168 [02:02<00:41, 542.85it/s]Running loglikelihood requests:  60%|██████    | 33857/56168 [02:02<00:41, 542.61it/s]Running loglikelihood requests:  60%|██████    | 33921/56168 [02:02<00:40, 543.92it/s]Running loglikelihood requests:  61%|██████    | 33985/56168 [02:02<00:40, 545.18it/s]Running loglikelihood requests:  61%|██████    | 34049/56168 [02:02<00:40, 542.94it/s]Running loglikelihood requests:  61%|██████    | 34113/56168 [02:02<00:40, 542.12it/s]Running loglikelihood requests:  61%|██████    | 34177/56168 [02:03<00:40, 543.97it/s]Running loglikelihood requests:  61%|██████    | 34241/56168 [02:03<00:40, 545.13it/s]Running loglikelihood requests:  61%|██████    | 34305/56168 [02:03<00:40, 545.26it/s]Running loglikelihood requests:  61%|██████    | 34369/56168 [02:03<00:40, 544.84it/s]Running loglikelihood requests:  61%|██████▏   | 34433/56168 [02:03<00:40, 542.63it/s]Running loglikelihood requests:  61%|██████▏   | 34497/56168 [02:03<00:40, 541.09it/s]Running loglikelihood requests:  62%|██████▏   | 34561/56168 [02:03<00:39, 541.64it/s]Running loglikelihood requests:  62%|██████▏   | 34625/56168 [02:03<00:39, 543.92it/s]Running loglikelihood requests:  62%|██████▏   | 34689/56168 [02:04<00:39, 546.09it/s]Running loglikelihood requests:  62%|██████▏   | 34753/56168 [02:04<00:39, 546.33it/s]Running loglikelihood requests:  62%|██████▏   | 34817/56168 [02:04<00:39, 546.25it/s]Running loglikelihood requests:  62%|██████▏   | 34881/56168 [02:04<00:38, 546.49it/s]Running loglikelihood requests:  62%|██████▏   | 34945/56168 [02:04<00:38, 548.08it/s]Running loglikelihood requests:  62%|██████▏   | 35009/56168 [02:04<00:38, 549.04it/s]Running loglikelihood requests:  62%|██████▏   | 35073/56168 [02:04<00:38, 546.87it/s]Running loglikelihood requests:  63%|██████▎   | 35137/56168 [02:04<00:38, 546.87it/s]Running loglikelihood requests:  63%|██████▎   | 35201/56168 [02:04<00:38, 547.57it/s]Running loglikelihood requests:  63%|██████▎   | 35265/56168 [02:05<00:38, 548.77it/s]Running loglikelihood requests:  63%|██████▎   | 35329/56168 [02:05<00:38, 548.39it/s]Running loglikelihood requests:  63%|██████▎   | 35393/56168 [02:05<00:38, 546.02it/s]Running loglikelihood requests:  63%|██████▎   | 35457/56168 [02:05<00:38, 543.97it/s]Running loglikelihood requests:  63%|██████▎   | 35521/56168 [02:05<00:37, 545.00it/s]Running loglikelihood requests:  63%|██████▎   | 35585/56168 [02:05<00:37, 546.79it/s]Running loglikelihood requests:  63%|██████▎   | 35649/56168 [02:05<00:37, 548.20it/s]Running loglikelihood requests:  64%|██████▎   | 35713/56168 [02:05<00:37, 548.08it/s]Running loglikelihood requests:  64%|██████▎   | 35777/56168 [02:06<00:37, 548.32it/s]Running loglikelihood requests:  64%|██████▍   | 35841/56168 [02:06<00:36, 550.95it/s]Running loglikelihood requests:  64%|██████▍   | 35905/56168 [02:06<00:36, 550.86it/s]Running loglikelihood requests:  64%|██████▍   | 35969/56168 [02:06<00:36, 550.46it/s]Running loglikelihood requests:  64%|██████▍   | 36033/56168 [02:06<00:36, 549.65it/s]Running loglikelihood requests:  64%|██████▍   | 36097/56168 [02:06<00:36, 549.26it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [02:06<00:36, 549.24it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [02:06<00:36, 546.96it/s]Running loglikelihood requests:  65%|██████▍   | 36289/56168 [02:06<00:36, 546.64it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [02:07<00:36, 548.36it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [02:07<00:35, 549.88it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [02:07<00:35, 550.53it/s]Running loglikelihood requests:  65%|██████▌   | 36545/56168 [02:07<00:35, 550.12it/s]Running loglikelihood requests:  65%|██████▌   | 36609/56168 [02:07<00:35, 552.53it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [02:07<00:35, 554.47it/s]Running loglikelihood requests:  65%|██████▌   | 36737/56168 [02:07<00:35, 553.21it/s]Running loglikelihood requests:  66%|██████▌   | 36801/56168 [02:07<00:34, 554.01it/s]Running loglikelihood requests:  66%|██████▌   | 36865/56168 [02:08<00:34, 553.67it/s]Running loglikelihood requests:  66%|██████▌   | 36929/56168 [02:08<00:34, 553.32it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [02:08<00:34, 551.77it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [02:08<00:34, 553.68it/s]Running loglikelihood requests:  66%|██████▌   | 37121/56168 [02:08<00:34, 553.99it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [02:08<00:34, 554.99it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [02:08<00:34, 555.81it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [02:08<00:33, 557.21it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [02:08<00:33, 556.15it/s]Running loglikelihood requests:  67%|██████▋   | 37441/56168 [02:09<00:33, 555.19it/s]Running loglikelihood requests:  67%|██████▋   | 37505/56168 [02:09<00:33, 557.13it/s]Running loglikelihood requests:  67%|██████▋   | 37569/56168 [02:09<00:33, 556.76it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [02:09<00:33, 554.95it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [02:09<00:33, 555.87it/s]Running loglikelihood requests:  67%|██████▋   | 37761/56168 [02:09<00:33, 556.69it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [02:09<00:33, 555.76it/s]Running loglikelihood requests:  67%|██████▋   | 37889/56168 [02:09<00:32, 556.44it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [02:09<00:32, 557.32it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [02:10<00:32, 556.11it/s]Running loglikelihood requests:  68%|██████▊   | 38081/56168 [02:10<00:32, 561.22it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [02:10<00:31, 567.00it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [02:10<00:31, 570.78it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [02:10<00:31, 572.30it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [02:10<00:31, 574.13it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [02:10<00:30, 573.16it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [02:10<00:30, 573.30it/s]Running loglikelihood requests:  69%|██████▊   | 38529/56168 [02:10<00:30, 573.78it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [02:11<00:30, 575.02it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [02:11<00:30, 574.83it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [02:11<00:30, 575.57it/s]Running loglikelihood requests:  69%|██████▉   | 38785/56168 [02:11<00:30, 574.52it/s]Running loglikelihood requests:  69%|██████▉   | 38849/56168 [02:11<00:30, 573.36it/s]Running loglikelihood requests:  69%|██████▉   | 38913/56168 [02:11<00:30, 573.58it/s]Running loglikelihood requests:  69%|██████▉   | 38977/56168 [02:11<00:30, 572.84it/s]Running loglikelihood requests:  70%|██████▉   | 39041/56168 [02:11<00:29, 574.18it/s]Running loglikelihood requests:  70%|██████▉   | 39105/56168 [02:11<00:29, 573.23it/s]Running loglikelihood requests:  70%|██████▉   | 39169/56168 [02:12<00:29, 575.50it/s]Running loglikelihood requests:  70%|██████▉   | 39233/56168 [02:12<00:29, 574.63it/s]Running loglikelihood requests:  70%|██████▉   | 39297/56168 [02:12<00:29, 575.49it/s]Running loglikelihood requests:  70%|███████   | 39361/56168 [02:12<00:29, 575.61it/s]Running loglikelihood requests:  70%|███████   | 39425/56168 [02:12<00:28, 577.56it/s]Running loglikelihood requests:  70%|███████   | 39489/56168 [02:12<00:28, 577.61it/s]Running loglikelihood requests:  70%|███████   | 39553/56168 [02:12<00:28, 576.24it/s]Running loglikelihood requests:  71%|███████   | 39617/56168 [02:12<00:28, 574.78it/s]Running loglikelihood requests:  71%|███████   | 39681/56168 [02:12<00:28, 576.59it/s]Running loglikelihood requests:  71%|███████   | 39745/56168 [02:13<00:28, 577.11it/s]Running loglikelihood requests:  71%|███████   | 39809/56168 [02:13<00:28, 579.21it/s]Running loglikelihood requests:  71%|███████   | 39873/56168 [02:13<00:28, 578.08it/s]Running loglikelihood requests:  71%|███████   | 39937/56168 [02:13<00:28, 579.58it/s]Running loglikelihood requests:  71%|███████   | 40001/56168 [02:13<00:27, 580.88it/s]Running loglikelihood requests:  71%|███████▏  | 40065/56168 [02:13<00:27, 581.63it/s]Running loglikelihood requests:  71%|███████▏  | 40129/56168 [02:13<00:27, 583.67it/s]Running loglikelihood requests:  72%|███████▏  | 40193/56168 [02:13<00:27, 582.21it/s]Running loglikelihood requests:  72%|███████▏  | 40257/56168 [02:13<00:27, 583.79it/s]Running loglikelihood requests:  72%|███████▏  | 40321/56168 [02:14<00:27, 583.06it/s]Running loglikelihood requests:  72%|███████▏  | 40385/56168 [02:14<00:27, 583.46it/s]Running loglikelihood requests:  72%|███████▏  | 40449/56168 [02:14<00:26, 584.40it/s]Running loglikelihood requests:  72%|███████▏  | 40513/56168 [02:14<00:26, 583.20it/s]Running loglikelihood requests:  72%|███████▏  | 40577/56168 [02:14<00:26, 583.31it/s]Running loglikelihood requests:  72%|███████▏  | 40641/56168 [02:14<00:26, 581.21it/s]Running loglikelihood requests:  72%|███████▏  | 40705/56168 [02:14<00:26, 582.11it/s]Running loglikelihood requests:  73%|███████▎  | 40769/56168 [02:14<00:26, 580.48it/s]Running loglikelihood requests:  73%|███████▎  | 40833/56168 [02:14<00:26, 580.71it/s]Running loglikelihood requests:  73%|███████▎  | 40897/56168 [02:15<00:26, 580.34it/s]Running loglikelihood requests:  73%|███████▎  | 40961/56168 [02:15<00:26, 581.80it/s]Running loglikelihood requests:  73%|███████▎  | 41025/56168 [02:15<00:26, 582.33it/s]Running loglikelihood requests:  73%|███████▎  | 41089/56168 [02:15<00:25, 582.50it/s]Running loglikelihood requests:  73%|███████▎  | 41153/56168 [02:15<00:25, 582.76it/s]Running loglikelihood requests:  73%|███████▎  | 41217/56168 [02:15<00:25, 580.61it/s]Running loglikelihood requests:  73%|███████▎  | 41281/56168 [02:15<00:25, 582.51it/s]Running loglikelihood requests:  74%|███████▎  | 41345/56168 [02:15<00:25, 581.33it/s]Running loglikelihood requests:  74%|███████▎  | 41409/56168 [02:15<00:25, 581.33it/s]Running loglikelihood requests:  74%|███████▍  | 41473/56168 [02:16<00:25, 580.82it/s]Running loglikelihood requests:  74%|███████▍  | 41537/56168 [02:16<00:25, 582.96it/s]Running loglikelihood requests:  74%|███████▍  | 41601/56168 [02:16<00:24, 585.07it/s]Running loglikelihood requests:  74%|███████▍  | 41665/56168 [02:16<00:24, 585.22it/s]Running loglikelihood requests:  74%|███████▍  | 41729/56168 [02:16<00:24, 587.48it/s]Running loglikelihood requests:  74%|███████▍  | 41793/56168 [02:16<00:24, 587.78it/s]Running loglikelihood requests:  75%|███████▍  | 41857/56168 [02:16<00:24, 586.80it/s]Running loglikelihood requests:  75%|███████▍  | 41921/56168 [02:16<00:24, 588.99it/s]Running loglikelihood requests:  75%|███████▍  | 41985/56168 [02:16<00:24, 586.91it/s]Running loglikelihood requests:  75%|███████▍  | 42049/56168 [02:17<00:24, 587.88it/s]Running loglikelihood requests:  75%|███████▍  | 42113/56168 [02:17<00:23, 588.38it/s]Running loglikelihood requests:  75%|███████▌  | 42177/56168 [02:17<00:23, 587.15it/s]Running loglikelihood requests:  75%|███████▌  | 42241/56168 [02:17<00:23, 588.09it/s]Running loglikelihood requests:  75%|███████▌  | 42305/56168 [02:17<00:23, 588.10it/s]Running loglikelihood requests:  75%|███████▌  | 42369/56168 [02:17<00:23, 588.76it/s]Running loglikelihood requests:  76%|███████▌  | 42433/56168 [02:17<00:23, 589.53it/s]Running loglikelihood requests:  76%|███████▌  | 42497/56168 [02:17<00:23, 589.11it/s]Running loglikelihood requests:  76%|███████▌  | 42561/56168 [02:17<00:23, 589.60it/s]Running loglikelihood requests:  76%|███████▌  | 42625/56168 [02:18<00:23, 588.52it/s]Running loglikelihood requests:  76%|███████▌  | 42689/56168 [02:18<00:22, 588.94it/s]Running loglikelihood requests:  76%|███████▌  | 42753/56168 [02:18<00:22, 590.90it/s]Running loglikelihood requests:  76%|███████▌  | 42817/56168 [02:18<00:22, 589.43it/s]Running loglikelihood requests:  76%|███████▋  | 42881/56168 [02:18<00:22, 589.70it/s]Running loglikelihood requests:  76%|███████▋  | 42945/56168 [02:18<00:22, 590.92it/s]Running loglikelihood requests:  77%|███████▋  | 43009/56168 [02:18<00:22, 589.47it/s]Running loglikelihood requests:  77%|███████▋  | 43073/56168 [02:18<00:22, 590.51it/s]Running loglikelihood requests:  77%|███████▋  | 43137/56168 [02:18<00:22, 590.56it/s]Running loglikelihood requests:  77%|███████▋  | 43201/56168 [02:18<00:21, 590.68it/s]Running loglikelihood requests:  77%|███████▋  | 43265/56168 [02:19<00:21, 591.87it/s]Running loglikelihood requests:  77%|███████▋  | 43329/56168 [02:19<00:21, 592.43it/s]Running loglikelihood requests:  77%|███████▋  | 43393/56168 [02:19<00:21, 591.36it/s]Running loglikelihood requests:  77%|███████▋  | 43457/56168 [02:19<00:21, 592.89it/s]Running loglikelihood requests:  77%|███████▋  | 43521/56168 [02:19<00:21, 592.10it/s]Running loglikelihood requests:  78%|███████▊  | 43585/56168 [02:19<00:21, 591.88it/s]Running loglikelihood requests:  78%|███████▊  | 43649/56168 [02:19<00:21, 592.34it/s]Running loglikelihood requests:  78%|███████▊  | 43713/56168 [02:19<00:21, 591.62it/s]Running loglikelihood requests:  78%|███████▊  | 43777/56168 [02:19<00:20, 590.31it/s]Running loglikelihood requests:  78%|███████▊  | 43841/56168 [02:20<00:20, 591.56it/s]Running loglikelihood requests:  78%|███████▊  | 43905/56168 [02:20<00:21, 567.43it/s]Running loglikelihood requests:  78%|███████▊  | 43969/56168 [02:20<00:21, 575.63it/s]Running loglikelihood requests:  78%|███████▊  | 44033/56168 [02:20<00:20, 581.69it/s]Running loglikelihood requests:  79%|███████▊  | 44097/56168 [02:20<00:20, 576.75it/s]Running loglikelihood requests:  79%|███████▊  | 44161/56168 [02:20<00:20, 582.63it/s]Running loglikelihood requests:  79%|███████▊  | 44225/56168 [02:20<00:20, 583.33it/s]Running loglikelihood requests:  79%|███████▉  | 44289/56168 [02:20<00:20, 585.66it/s]Running loglikelihood requests:  79%|███████▉  | 44353/56168 [02:20<00:20, 587.59it/s]Running loglikelihood requests:  79%|███████▉  | 44417/56168 [02:21<00:19, 590.61it/s]Running loglikelihood requests:  79%|███████▉  | 44481/56168 [02:21<00:19, 590.03it/s]Running loglikelihood requests:  79%|███████▉  | 44545/56168 [02:21<00:19, 591.69it/s]Running loglikelihood requests:  79%|███████▉  | 44609/56168 [02:21<00:19, 593.50it/s]Running loglikelihood requests:  80%|███████▉  | 44673/56168 [02:21<00:19, 591.46it/s]Running loglikelihood requests:  80%|███████▉  | 44737/56168 [02:21<00:19, 592.19it/s]Running loglikelihood requests:  80%|███████▉  | 44801/56168 [02:21<00:19, 589.45it/s]Running loglikelihood requests:  80%|███████▉  | 44865/56168 [02:21<00:19, 588.78it/s]Running loglikelihood requests:  80%|███████▉  | 44929/56168 [02:21<00:19, 591.28it/s]Running loglikelihood requests:  80%|████████  | 44993/56168 [02:22<00:18, 590.92it/s]Running loglikelihood requests:  80%|████████  | 45057/56168 [02:22<00:18, 592.71it/s]Running loglikelihood requests:  80%|████████  | 45121/56168 [02:22<00:18, 594.10it/s]Running loglikelihood requests:  80%|████████  | 45185/56168 [02:22<00:18, 594.92it/s]Running loglikelihood requests:  81%|████████  | 45249/56168 [02:22<00:18, 589.16it/s]Running loglikelihood requests:  81%|████████  | 45313/56168 [02:22<00:18, 584.27it/s]Running loglikelihood requests:  81%|████████  | 45377/56168 [02:22<00:18, 586.12it/s]Running loglikelihood requests:  81%|████████  | 45441/56168 [02:22<00:18, 577.35it/s]Running loglikelihood requests:  81%|████████  | 45505/56168 [02:22<00:18, 582.73it/s]Running loglikelihood requests:  81%|████████  | 45569/56168 [02:23<00:18, 576.49it/s]Running loglikelihood requests:  81%|████████  | 45633/56168 [02:23<00:18, 582.53it/s]Running loglikelihood requests:  81%|████████▏ | 45697/56168 [02:23<00:17, 586.74it/s]Running loglikelihood requests:  81%|████████▏ | 45761/56168 [02:23<00:17, 578.82it/s]Running loglikelihood requests:  82%|████████▏ | 45825/56168 [02:23<00:17, 583.15it/s]Running loglikelihood requests:  82%|████████▏ | 45889/56168 [02:23<00:17, 576.35it/s]Running loglikelihood requests:  82%|████████▏ | 45953/56168 [02:23<00:17, 581.98it/s]Running loglikelihood requests:  82%|████████▏ | 46017/56168 [02:23<00:17, 577.15it/s]Running loglikelihood requests:  82%|████████▏ | 46081/56168 [02:23<00:17, 581.69it/s]Running loglikelihood requests:  82%|████████▏ | 46145/56168 [02:24<00:17, 586.30it/s]Running loglikelihood requests:  82%|████████▏ | 46209/56168 [02:24<00:17, 577.28it/s]Running loglikelihood requests:  82%|████████▏ | 46273/56168 [02:24<00:16, 592.72it/s]Running loglikelihood requests:  82%|████████▏ | 46337/56168 [02:24<00:16, 602.05it/s]Running loglikelihood requests:  83%|████████▎ | 46401/56168 [02:24<00:16, 601.38it/s]Running loglikelihood requests:  83%|████████▎ | 46474/56168 [02:24<00:15, 638.20it/s]Running loglikelihood requests:  83%|████████▎ | 46539/56168 [02:24<00:15, 623.93it/s]Running loglikelihood requests:  83%|████████▎ | 46602/56168 [02:24<00:15, 619.72it/s]Running loglikelihood requests:  83%|████████▎ | 46665/56168 [02:24<00:15, 622.62it/s]Running loglikelihood requests:  83%|████████▎ | 46728/56168 [02:24<00:15, 615.56it/s]Running loglikelihood requests:  83%|████████▎ | 46790/56168 [02:25<00:15, 603.82it/s]Running loglikelihood requests:  83%|████████▎ | 46855/56168 [02:25<00:15, 617.17it/s]Running loglikelihood requests:  84%|████████▎ | 46917/56168 [02:25<00:15, 607.72it/s]Running loglikelihood requests:  84%|████████▎ | 46978/56168 [02:25<00:15, 596.78it/s]Running loglikelihood requests:  84%|████████▍ | 47041/56168 [02:25<00:15, 592.88it/s]Running loglikelihood requests:  84%|████████▍ | 47105/56168 [02:25<00:15, 596.13it/s]Running loglikelihood requests:  84%|████████▍ | 47169/56168 [02:25<00:15, 599.39it/s]Running loglikelihood requests:  84%|████████▍ | 47233/56168 [02:25<00:14, 607.56it/s]Running loglikelihood requests:  84%|████████▍ | 47297/56168 [02:25<00:14, 604.17it/s]Running loglikelihood requests:  84%|████████▍ | 47361/56168 [02:26<00:14, 613.83it/s]Running loglikelihood requests:  84%|████████▍ | 47425/56168 [02:26<00:14, 613.02it/s]Running loglikelihood requests:  85%|████████▍ | 47489/56168 [02:26<00:13, 620.15it/s]Running loglikelihood requests:  85%|████████▍ | 47553/56168 [02:26<00:13, 621.67it/s]Running loglikelihood requests:  85%|████████▍ | 47617/56168 [02:26<00:13, 619.15it/s]Running loglikelihood requests:  85%|████████▍ | 47681/56168 [02:26<00:13, 622.98it/s]Running loglikelihood requests:  85%|████████▌ | 47745/56168 [02:26<00:13, 626.01it/s]Running loglikelihood requests:  85%|████████▌ | 47809/56168 [02:26<00:13, 626.81it/s]Running loglikelihood requests:  85%|████████▌ | 47873/56168 [02:26<00:13, 625.11it/s]Running loglikelihood requests:  85%|████████▌ | 47937/56168 [02:26<00:13, 625.77it/s]Running loglikelihood requests:  85%|████████▌ | 48001/56168 [02:27<00:13, 626.57it/s]Running loglikelihood requests:  86%|████████▌ | 48065/56168 [02:27<00:12, 628.95it/s]Running loglikelihood requests:  86%|████████▌ | 48129/56168 [02:27<00:12, 629.85it/s]Running loglikelihood requests:  86%|████████▌ | 48193/56168 [02:27<00:12, 631.60it/s]Running loglikelihood requests:  86%|████████▌ | 48257/56168 [02:27<00:12, 631.80it/s]Running loglikelihood requests:  86%|████████▌ | 48321/56168 [02:27<00:12, 632.06it/s]Running loglikelihood requests:  86%|████████▌ | 48385/56168 [02:27<00:12, 632.80it/s]Running loglikelihood requests:  86%|████████▋ | 48449/56168 [02:27<00:12, 632.90it/s]Running loglikelihood requests:  86%|████████▋ | 48513/56168 [02:27<00:12, 629.03it/s]Running loglikelihood requests:  86%|████████▋ | 48577/56168 [02:27<00:12, 629.74it/s]Running loglikelihood requests:  87%|████████▋ | 48641/56168 [02:28<00:11, 630.34it/s]Running loglikelihood requests:  87%|████████▋ | 48705/56168 [02:28<00:11, 630.87it/s]Running loglikelihood requests:  87%|████████▋ | 48769/56168 [02:28<00:11, 630.70it/s]Running loglikelihood requests:  87%|████████▋ | 48833/56168 [02:28<00:11, 630.53it/s]Running loglikelihood requests:  87%|████████▋ | 48897/56168 [02:28<00:11, 630.71it/s]Running loglikelihood requests:  87%|████████▋ | 48961/56168 [02:28<00:11, 632.31it/s]Running loglikelihood requests:  87%|████████▋ | 49025/56168 [02:28<00:11, 632.38it/s]Running loglikelihood requests:  87%|████████▋ | 49089/56168 [02:28<00:11, 633.64it/s]Running loglikelihood requests:  88%|████████▊ | 49153/56168 [02:28<00:11, 634.71it/s]Running loglikelihood requests:  88%|████████▊ | 49218/56168 [02:28<00:10, 639.07it/s]Running loglikelihood requests:  88%|████████▊ | 49283/56168 [02:29<00:10, 642.24it/s]Running loglikelihood requests:  88%|████████▊ | 49353/56168 [02:29<00:10, 659.45it/s]Running loglikelihood requests:  88%|████████▊ | 49421/56168 [02:29<00:10, 665.51it/s]Running loglikelihood requests:  88%|████████▊ | 49488/56168 [02:29<00:10, 664.45it/s]Running loglikelihood requests:  88%|████████▊ | 49555/56168 [02:29<00:09, 663.27it/s]Running loglikelihood requests:  88%|████████▊ | 49622/56168 [02:29<00:09, 661.89it/s]Running loglikelihood requests:  88%|████████▊ | 49689/56168 [02:29<00:09, 659.99it/s]Running loglikelihood requests:  89%|████████▊ | 49756/56168 [02:29<00:09, 658.14it/s]Running loglikelihood requests:  89%|████████▊ | 49822/56168 [02:29<00:09, 656.81it/s]Running loglikelihood requests:  89%|████████▉ | 49888/56168 [02:29<00:09, 656.06it/s]Running loglikelihood requests:  89%|████████▉ | 49954/56168 [02:30<00:09, 655.09it/s]Running loglikelihood requests:  89%|████████▉ | 50020/56168 [02:30<00:09, 653.98it/s]Running loglikelihood requests:  89%|████████▉ | 50086/56168 [02:30<00:09, 653.01it/s]Running loglikelihood requests:  89%|████████▉ | 50152/56168 [02:30<00:09, 652.50it/s]Running loglikelihood requests:  89%|████████▉ | 50218/56168 [02:30<00:09, 651.88it/s]Running loglikelihood requests:  90%|████████▉ | 50284/56168 [02:30<00:09, 651.09it/s]Running loglikelihood requests:  90%|████████▉ | 50350/56168 [02:30<00:08, 652.69it/s]Running loglikelihood requests:  90%|████████▉ | 50426/56168 [02:30<00:08, 684.46it/s]Running loglikelihood requests:  90%|████████▉ | 50497/56168 [02:30<00:10, 549.84it/s]Running loglikelihood requests:  90%|█████████ | 50572/56168 [02:31<00:09, 600.28it/s]Running loglikelihood requests:  90%|█████████ | 50641/56168 [02:31<00:08, 623.74it/s]Running loglikelihood requests:  90%|█████████ | 50715/56168 [02:31<00:08, 655.60it/s]Running loglikelihood requests:  90%|█████████ | 50787/56168 [02:31<00:07, 673.70it/s]Running loglikelihood requests:  91%|█████████ | 50857/56168 [02:31<00:07, 679.29it/s]Running loglikelihood requests:  91%|█████████ | 50927/56168 [02:31<00:07, 683.87it/s]Running loglikelihood requests:  91%|█████████ | 50997/56168 [02:31<00:07, 687.01it/s]Running loglikelihood requests:  91%|█████████ | 51067/56168 [02:31<00:07, 689.55it/s]Running loglikelihood requests:  91%|█████████ | 51137/56168 [02:31<00:09, 547.92it/s]Running loglikelihood requests:  91%|█████████ | 51208/56168 [02:32<00:08, 588.42it/s]Running loglikelihood requests:  91%|█████████▏| 51292/56168 [02:32<00:07, 654.53it/s]Running loglikelihood requests:  91%|█████████▏| 51375/56168 [02:32<00:06, 702.33it/s]Running loglikelihood requests:  92%|█████████▏| 51457/56168 [02:32<00:07, 590.44it/s]Running loglikelihood requests:  92%|█████████▏| 51539/56168 [02:32<00:07, 646.20it/s]Running loglikelihood requests:  92%|█████████▏| 51631/56168 [02:32<00:06, 716.81it/s]Running loglikelihood requests:  92%|█████████▏| 51713/56168 [02:32<00:07, 605.25it/s]Running loglikelihood requests:  92%|█████████▏| 51788/56168 [02:32<00:06, 639.65it/s]Running loglikelihood requests:  92%|█████████▏| 51858/56168 [02:33<00:06, 654.22it/s]Running loglikelihood requests:  92%|█████████▏| 51928/56168 [02:33<00:06, 628.75it/s]Running loglikelihood requests:  93%|█████████▎| 51994/56168 [02:33<00:06, 613.43it/s]Running loglikelihood requests:  93%|█████████▎| 52076/56168 [02:33<00:06, 668.33it/s]Running loglikelihood requests:  93%|█████████▎| 52154/56168 [02:33<00:05, 698.99it/s]Running loglikelihood requests:  93%|█████████▎| 52226/56168 [02:33<00:07, 562.40it/s]Running loglikelihood requests:  93%|█████████▎| 52294/56168 [02:33<00:06, 590.91it/s]Running loglikelihood requests:  93%|█████████▎| 52361/56168 [02:33<00:06, 601.97it/s]Running loglikelihood requests:  93%|█████████▎| 52425/56168 [02:33<00:06, 602.61it/s]Running loglikelihood requests:  93%|█████████▎| 52488/56168 [02:34<00:06, 604.87it/s]Running loglikelihood requests:  94%|█████████▎| 52551/56168 [02:34<00:06, 601.71it/s]Running loglikelihood requests:  94%|█████████▎| 52613/56168 [02:34<00:06, 591.79it/s]Running loglikelihood requests:  94%|█████████▍| 52673/56168 [02:34<00:06, 582.20it/s]Running loglikelihood requests:  94%|█████████▍| 52737/56168 [02:34<00:05, 579.38it/s]Running loglikelihood requests:  94%|█████████▍| 52801/56168 [02:34<00:05, 592.50it/s]Running loglikelihood requests:  94%|█████████▍| 52865/56168 [02:34<00:05, 592.93it/s]Running loglikelihood requests:  94%|█████████▍| 52929/56168 [02:34<00:05, 596.80it/s]Running loglikelihood requests:  94%|█████████▍| 53013/56168 [02:34<00:04, 666.10it/s]Running loglikelihood requests:  95%|█████████▍| 53105/56168 [02:35<00:04, 739.51it/s]Running loglikelihood requests:  95%|█████████▍| 53180/56168 [02:35<00:04, 734.28it/s]Running loglikelihood requests:  95%|█████████▍| 53254/56168 [02:35<00:05, 568.17it/s]Running loglikelihood requests:  95%|█████████▍| 53317/56168 [02:35<00:05, 549.54it/s]Running loglikelihood requests:  95%|█████████▌| 53377/56168 [02:35<00:05, 496.25it/s]Running loglikelihood requests:  95%|█████████▌| 53441/56168 [02:35<00:05, 466.12it/s]Running loglikelihood requests:  95%|█████████▌| 53505/56168 [02:35<00:06, 430.10it/s]Running loglikelihood requests:  95%|█████████▌| 53569/56168 [02:36<00:05, 437.02it/s]Running loglikelihood requests:  95%|█████████▌| 53633/56168 [02:36<00:05, 478.85it/s]Running loglikelihood requests:  96%|█████████▌| 53721/56168 [02:36<00:04, 574.98it/s]Running loglikelihood requests:  96%|█████████▌| 53783/56168 [02:36<00:04, 581.47it/s]Running loglikelihood requests:  96%|█████████▌| 53889/56168 [02:36<00:03, 595.54it/s]Running loglikelihood requests:  96%|█████████▌| 53953/56168 [02:36<00:03, 606.15it/s]Running loglikelihood requests:  96%|█████████▌| 54054/56168 [02:36<00:02, 707.29it/s]Running loglikelihood requests:  96%|█████████▋| 54145/56168 [02:36<00:03, 642.89it/s]Running loglikelihood requests:  97%|█████████▋| 54273/56168 [02:37<00:02, 671.98it/s]Running loglikelihood requests:  97%|█████████▋| 54401/56168 [02:37<00:02, 628.89it/s]Running loglikelihood requests:  97%|█████████▋| 54529/56168 [02:37<00:02, 662.34it/s]Running loglikelihood requests:  97%|█████████▋| 54657/56168 [02:37<00:02, 684.33it/s]Running loglikelihood requests:  98%|█████████▊| 54781/56168 [02:37<00:01, 794.39it/s]Running loglikelihood requests:  98%|█████████▊| 54867/56168 [02:37<00:01, 693.71it/s]Running loglikelihood requests:  98%|█████████▊| 54977/56168 [02:38<00:01, 683.95it/s]Running loglikelihood requests:  98%|█████████▊| 55105/56168 [02:38<00:01, 706.55it/s]Running loglikelihood requests:  98%|█████████▊| 55233/56168 [02:38<00:01, 723.57it/s]Running loglikelihood requests:  99%|█████████▊| 55361/56168 [02:38<00:01, 736.65it/s]Running loglikelihood requests:  99%|█████████▉| 55489/56168 [02:38<00:00, 744.98it/s]Running loglikelihood requests:  99%|█████████▉| 55617/56168 [02:38<00:00, 748.47it/s]Running loglikelihood requests:  99%|█████████▉| 55745/56168 [02:39<00:00, 748.43it/s]Running loglikelihood requests:  99%|█████████▉| 55835/56168 [02:39<00:00, 779.01it/s]Running loglikelihood requests: 100%|█████████▉| 55915/56168 [02:39<00:00, 712.36it/s]Running loglikelihood requests: 100%|█████████▉| 56001/56168 [02:39<00:00, 625.46it/s]Running loglikelihood requests: 100%|█████████▉| 56129/56168 [02:39<00:00, 681.08it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:39<00:00, 351.63it/s]
2025-05-15:03:23:52,033 WARNING  [huggingface.py:1353] Failed to get model SHA for /work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent_kl/checkpoint-490 at revision main. Error: Repo id must be in the form 'repo_name' or 'namespace/repo_name': '/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent_kl/checkpoint-490'. Use `repo_type` argument if needed.
2025-05-15:03:23:59,910 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent_kl/checkpoint-490,tokenizer=meta-llama/Meta-Llama-3-8b-Instruct), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.6980|±  |0.0038|
| - humanities                          |      2|none  |      |acc   |↑  |0.6733|±  |0.0066|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.5794|±  |0.0442|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.7758|±  |0.0326|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.8676|±  |0.0238|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.8903|±  |0.0203|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.8099|±  |0.0358|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.8056|±  |0.0383|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.8282|±  |0.0296|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.7023|±  |0.0246|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.5374|±  |0.0167|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.7395|±  |0.0249|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.7623|±  |0.0237|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.5971|±  |0.0125|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.8304|±  |0.0288|
| - other                               |      2|none  |      |acc   |↑  |0.7602|±  |0.0075|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.8100|±  |0.0394|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.7660|±  |0.0261|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.7630|±  |0.0324|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.5200|±  |0.0502|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.7803|±  |0.0278|
|  - management                         |      1|none  |     0|acc   |↑  |0.7767|±  |0.0412|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8675|±  |0.0222|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.7700|±  |0.0423|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.8084|±  |0.0141|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.7353|±  |0.0253|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.6596|±  |0.0283|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.8235|±  |0.0232|
|  - virology                           |      1|none  |     0|acc   |↑  |0.5542|±  |0.0387|
| - social sciences                     |      2|none  |      |acc   |↑  |0.7442|±  |0.0078|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.6228|±  |0.0456|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.6919|±  |0.0329|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8187|±  |0.0278|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.6872|±  |0.0235|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.7689|±  |0.0274|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.8459|±  |0.0155|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7176|±  |0.0395|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.7271|±  |0.0180|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6818|±  |0.0446|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.6408|±  |0.0307|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8060|±  |0.0280|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.7900|±  |0.0409|
| - stem                                |      2|none  |      |acc   |↑  |0.6286|±  |0.0085|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.5400|±  |0.0501|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.6963|±  |0.0397|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.7566|±  |0.0349|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.7778|±  |0.0348|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4700|±  |0.0502|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.6100|±  |0.0490|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.4900|±  |0.0502|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5294|±  |0.0497|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.8100|±  |0.0394|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.6383|±  |0.0314|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.6828|±  |0.0388|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.6217|±  |0.0250|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7419|±  |0.0249|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.5764|±  |0.0348|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.7000|±  |0.0461|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.5370|±  |0.0304|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.4768|±  |0.0408|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.6157|±  |0.0332|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.5714|±  |0.0470|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.6980|±  |0.0038|
| - humanities     |      2|none  |      |acc   |↑  |0.6733|±  |0.0066|
| - other          |      2|none  |      |acc   |↑  |0.7602|±  |0.0075|
| - social sciences|      2|none  |      |acc   |↑  |0.7442|±  |0.0078|
| - stem           |      2|none  |      |acc   |↑  |0.6286|±  |0.0085|

2025-05-15:03:24:07,140 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-15:03:24:07,305 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,314 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,320 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,323 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,326 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,338 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,353 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,362 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,371 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,377 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,380 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,394 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,406 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,409 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,411 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,417 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,428 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,448 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:07,454 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,528 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,582 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,597 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:08,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,550 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,553 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,566 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,569 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,922 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,923 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,925 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,927 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:09,965 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,005 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,008 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,012 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,038 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,041 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,064 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,081 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,084 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,088 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,118 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,121 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,135 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,138 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,148 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,158 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,168 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,172 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,182 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,186 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,189 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,197 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,204 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,218 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,252 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,300 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,304 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,322 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,323 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,323 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,471 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,485 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,550 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,594 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,599 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,618 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,649 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,662 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,673 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,677 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,711 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,714 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,744 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,759 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:10,808 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:12,305 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:12,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:12,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:12,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:12,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:12,386 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:12,388 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:12,400 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,379 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,395 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,398 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,400 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,402 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,424 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,427 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,441 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,448 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,476 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,478 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,482 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,591 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,597 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,662 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,678 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,681 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,688 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,714 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,716 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,820 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,842 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,846 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,897 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,902 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,905 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,925 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,927 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,931 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,948 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,950 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,953 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,977 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,985 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,987 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,990 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,995 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:14,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,001 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,019 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,029 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,032 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,038 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,058 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,063 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,069 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,070 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,096 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,099 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,107 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,111 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,138 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,140 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,164 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,165 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,167 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,176 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,178 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,181 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,211 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,219 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,247 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,282 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,285 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,293 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,330 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,357 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,362 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,366 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,371 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,441 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,459 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,482 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,485 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,538 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,550 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,553 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,554 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,594 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,597 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,605 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,608 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,623 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,625 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,630 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,637 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,643 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,645 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,665 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,672 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,674 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,675 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,676 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,678 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,727 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,747 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,913 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,915 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:15,956 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:19,380 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:19,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:24:19,385 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-15:03:24:19,388 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-15:03:24:19,388 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo/checkpoint-150', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-15:03:24:22,864 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-15:03:24:23,417 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:02<00:08,  2.85s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:05<00:04,  2.48s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:07<00:02,  2.43s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:08<00:00,  1.78s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:08<00:00,  2.06s/it]
2025-05-15:03:24:54,614 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,615 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,615 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,615 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,615 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,615 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,616 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,616 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,616 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,616 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,616 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,616 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,617 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,617 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,617 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,617 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,617 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,617 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,618 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,618 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,618 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,618 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,618 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,618 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,619 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,619 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,619 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,619 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,619 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,620 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,620 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,620 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,620 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,620 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,620 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,621 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,621 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,621 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,621 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,621 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,622 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,622 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,622 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,622 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,622 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,622 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,623 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,623 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,623 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,623 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,623 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,623 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,624 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,624 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,624 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,624 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,624 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:24:54,625 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-15:03:24:54,630 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 78%|███████▊  | 78/100 [00:00<00:00, 771.03it/s]100%|██████████| 100/100 [00:00<00:00, 731.11it/s]
2025-05-15:03:24:54,776 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 16%|█▋        | 51/310 [00:00<00:00, 507.20it/s] 33%|███▎      | 102/310 [00:00<00:00, 497.12it/s] 58%|█████▊    | 179/310 [00:00<00:00, 617.65it/s] 85%|████████▍ | 263/310 [00:00<00:00, 703.02it/s]100%|██████████| 310/310 [00:00<00:00, 670.71it/s]
2025-05-15:03:24:55,256 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 83%|████████▎ | 83/100 [00:00<00:00, 822.88it/s]100%|██████████| 100/100 [00:00<00:00, 825.26it/s]
2025-05-15:03:24:55,382 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 57%|█████▋    | 83/145 [00:00<00:00, 823.64it/s]100%|██████████| 145/145 [00:00<00:00, 821.08it/s]
2025-05-15:03:24:55,564 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 84%|████████▍ | 84/100 [00:00<00:00, 836.18it/s]100%|██████████| 100/100 [00:00<00:00, 835.02it/s]
2025-05-15:03:24:55,689 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 41%|████▏     | 84/203 [00:00<00:00, 834.84it/s] 84%|████████▎ | 170/203 [00:00<00:00, 843.85it/s]100%|██████████| 203/203 [00:00<00:00, 841.25it/s]
2025-05-15:03:24:55,938 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 55%|█████▍    | 83/152 [00:00<00:00, 826.87it/s]100%|██████████| 152/152 [00:00<00:00, 819.88it/s]
2025-05-15:03:24:56,129 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 83%|████████▎ | 85/102 [00:00<00:00, 846.27it/s]100%|██████████| 102/102 [00:00<00:00, 844.38it/s]
2025-05-15:03:24:56,255 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 85%|████████▌ | 85/100 [00:00<00:00, 841.36it/s]100%|██████████| 100/100 [00:00<00:00, 839.95it/s]
2025-05-15:03:24:56,379 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 58%|█████▊    | 83/144 [00:00<00:00, 827.43it/s]100%|██████████| 144/144 [00:00<00:00, 831.46it/s]
2025-05-15:03:24:56,558 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 37%|███▋      | 86/235 [00:00<00:00, 851.13it/s] 73%|███████▎  | 172/235 [00:00<00:00, 848.69it/s]100%|██████████| 235/235 [00:00<00:00, 844.76it/s]
2025-05-15:03:24:56,845 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 70%|██████▉   | 78/112 [00:00<00:00, 773.84it/s]100%|██████████| 112/112 [00:00<00:00, 789.50it/s]
2025-05-15:03:24:56,991 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 31%|███       | 83/270 [00:00<00:00, 827.56it/s] 62%|██████▏   | 168/270 [00:00<00:00, 837.84it/s] 93%|█████████▎| 252/270 [00:00<00:00, 836.04it/s]100%|██████████| 270/270 [00:00<00:00, 834.35it/s]
2025-05-15:03:24:57,325 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 82%|████████▏ | 82/100 [00:00<00:00, 813.77it/s]100%|██████████| 100/100 [00:00<00:00, 814.32it/s]
2025-05-15:03:24:57,453 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 84%|████████▍ | 84/100 [00:00<00:00, 838.42it/s]100%|██████████| 100/100 [00:00<00:00, 836.46it/s]
2025-05-15:03:24:57,577 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 61%|██████▏   | 83/135 [00:00<00:00, 822.77it/s]100%|██████████| 135/135 [00:00<00:00, 826.59it/s]
2025-05-15:03:24:57,746 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 22%|██▏       | 85/378 [00:00<00:00, 846.17it/s] 45%|████▍     | 170/378 [00:00<00:00, 842.86it/s] 67%|██████▋   | 255/378 [00:00<00:00, 843.64it/s] 90%|████████▉ | 340/378 [00:00<00:00, 822.26it/s]100%|██████████| 378/378 [00:00<00:00, 829.73it/s]
2025-05-15:03:24:58,214 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 55%|█████▍    | 83/151 [00:00<00:00, 821.71it/s]100%|██████████| 151/151 [00:00<00:00, 821.08it/s]
2025-05-15:03:24:58,404 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 39%|███▉      | 84/216 [00:00<00:00, 832.83it/s] 78%|███████▊  | 168/216 [00:00<00:00, 804.44it/s]100%|██████████| 216/216 [00:00<00:00, 807.70it/s]
2025-05-15:03:24:58,681 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 22%|██▏       | 58/265 [00:00<00:00, 573.47it/s] 46%|████▌     | 121/265 [00:00<00:00, 583.93it/s] 68%|██████▊   | 180/265 [00:00<00:00, 502.31it/s] 88%|████████▊ | 232/265 [00:00<00:00, 469.87it/s]100%|██████████| 265/265 [00:00<00:00, 473.31it/s]
2025-05-15:03:24:59,257 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 46%|████▌     | 46/100 [00:00<00:00, 441.35it/s]100%|██████████| 100/100 [00:00<00:00, 535.53it/s]
2025-05-15:03:24:59,455 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 83%|████████▎ | 85/103 [00:00<00:00, 840.73it/s]100%|██████████| 103/103 [00:00<00:00, 839.09it/s]
2025-05-15:03:24:59,582 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 28%|██▊       | 85/306 [00:00<00:00, 843.48it/s] 56%|█████▌    | 170/306 [00:00<00:00, 738.08it/s] 83%|████████▎ | 255/306 [00:00<00:00, 783.54it/s]100%|██████████| 306/306 [00:00<00:00, 789.44it/s]
2025-05-15:03:24:59,980 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 49%|████▉     | 85/173 [00:00<00:00, 846.64it/s] 98%|█████████▊| 170/173 [00:00<00:00, 822.43it/s]100%|██████████| 173/173 [00:00<00:00, 824.70it/s]
2025-05-15:03:25:00,197 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 51%|█████     | 85/166 [00:00<00:00, 849.11it/s]100%|██████████| 166/166 [00:00<00:00, 828.25it/s]
2025-05-15:03:25:00,404 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 32%|███▏      | 86/272 [00:00<00:00, 850.32it/s] 63%|██████▎   | 172/272 [00:00<00:00, 849.27it/s] 95%|█████████▍| 258/272 [00:00<00:00, 849.74it/s]100%|██████████| 272/272 [00:00<00:00, 849.47it/s]
2025-05-15:03:25:00,735 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 11%|█         | 86/783 [00:00<00:00, 855.86it/s] 22%|██▏       | 172/783 [00:00<00:00, 849.60it/s] 33%|███▎      | 257/783 [00:00<00:00, 842.39it/s] 44%|████▎     | 342/783 [00:00<00:00, 691.63it/s] 53%|█████▎    | 415/783 [00:00<00:00, 564.42it/s] 61%|██████    | 477/783 [00:00<00:00, 520.71it/s] 68%|██████▊   | 533/783 [00:00<00:00, 526.86it/s] 79%|███████▉  | 618/783 [00:00<00:00, 611.62it/s] 88%|████████▊ | 690/783 [00:01<00:00, 639.85it/s] 97%|█████████▋| 763/783 [00:01<00:00, 663.81it/s]100%|██████████| 783/783 [00:01<00:00, 646.70it/s]
2025-05-15:03:25:01,971 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 86%|████████▌ | 86/100 [00:00<00:00, 851.91it/s]100%|██████████| 100/100 [00:00<00:00, 850.51it/s]
2025-05-15:03:25:02,092 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 86%|████████▌ | 86/100 [00:00<00:00, 853.88it/s]100%|██████████| 100/100 [00:00<00:00, 851.68it/s]
2025-05-15:03:25:02,214 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 30%|██▉       | 84/282 [00:00<00:00, 837.53it/s] 60%|█████▉    | 168/282 [00:00<00:00, 808.27it/s] 88%|████████▊ | 249/282 [00:00<00:00, 730.43it/s]100%|██████████| 282/282 [00:00<00:00, 761.51it/s]
2025-05-15:03:25:02,594 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:02, 78.91it/s] 44%|████▍     | 103/234 [00:00<00:00, 361.54it/s] 74%|███████▍  | 173/234 [00:00<00:00, 478.28it/s]100%|██████████| 234/234 [00:00<00:00, 433.61it/s]
2025-05-15:03:25:03,143 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 38%|███▊      | 85/223 [00:00<00:00, 847.07it/s] 76%|███████▌  | 170/223 [00:00<00:00, 842.45it/s]100%|██████████| 223/223 [00:00<00:00, 827.70it/s]
2025-05-15:03:25:03,421 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 71%|███████   | 78/110 [00:00<00:00, 735.28it/s]100%|██████████| 110/110 [00:00<00:00, 759.51it/s]
2025-05-15:03:25:03,571 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 42%|████▏     | 85/201 [00:00<00:00, 848.80it/s] 85%|████████▌ | 171/201 [00:00<00:00, 850.00it/s]100%|██████████| 201/201 [00:00<00:00, 849.12it/s]
2025-05-15:03:25:03,815 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 43%|████▎     | 86/198 [00:00<00:00, 854.96it/s] 87%|████████▋ | 172/198 [00:00<00:00, 852.36it/s]100%|██████████| 198/198 [00:00<00:00, 851.86it/s]
2025-05-15:03:25:04,055 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 35%|███▍      | 85/245 [00:00<00:00, 823.95it/s] 70%|██████▉   | 171/245 [00:00<00:00, 839.83it/s]100%|██████████| 245/245 [00:00<00:00, 821.13it/s]
2025-05-15:03:25:04,362 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 16%|█▌        | 85/545 [00:00<00:00, 849.05it/s] 31%|███       | 170/545 [00:00<00:00, 603.11it/s] 43%|████▎     | 236/545 [00:00<00:00, 621.92it/s] 59%|█████▉    | 322/545 [00:00<00:00, 702.72it/s] 75%|███████▍  | 407/545 [00:00<00:00, 750.85it/s] 90%|█████████ | 492/545 [00:00<00:00, 781.67it/s]100%|██████████| 545/545 [00:00<00:00, 741.99it/s]
2025-05-15:03:25:05,115 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 71%|███████   | 71/100 [00:00<00:00, 708.06it/s]100%|██████████| 100/100 [00:00<00:00, 741.05it/s]
2025-05-15:03:25:05,254 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 22%|██▏       | 86/390 [00:00<00:00, 851.49it/s] 44%|████▍     | 172/390 [00:00<00:00, 854.74it/s] 66%|██████▌   | 258/390 [00:00<00:00, 853.45it/s] 88%|████████▊ | 344/390 [00:00<00:00, 851.62it/s]100%|██████████| 390/390 [00:00<00:00, 850.68it/s]
2025-05-15:03:25:05,726 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 36%|███▌      | 85/238 [00:00<00:00, 848.23it/s] 71%|███████▏  | 170/238 [00:00<00:00, 822.11it/s]100%|██████████| 238/238 [00:00<00:00, 831.43it/s]
2025-05-15:03:25:06,021 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 62%|██████▏   | 71/114 [00:00<00:00, 707.01it/s]100%|██████████| 114/114 [00:00<00:00, 559.18it/s]
2025-05-15:03:25:06,230 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s]  7%|▋         | 43/612 [00:00<00:01, 428.82it/s] 14%|█▍        | 86/612 [00:00<00:01, 420.92it/s] 21%|██        | 130/612 [00:00<00:01, 426.68it/s] 33%|███▎      | 200/612 [00:00<00:00, 532.53it/s] 46%|████▌     | 283/612 [00:00<00:00, 638.57it/s] 60%|█████▉    | 367/612 [00:00<00:00, 695.67it/s] 71%|███████▏  | 437/612 [00:00<00:00, 686.13it/s] 83%|████████▎ | 506/612 [00:00<00:00, 633.87it/s] 93%|█████████▎| 571/612 [00:00<00:00, 622.61it/s]100%|██████████| 612/612 [00:01<00:00, 599.32it/s]
2025-05-15:03:25:07,277 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 61%|██████    | 80/131 [00:00<00:00, 796.42it/s]100%|██████████| 131/131 [00:00<00:00, 821.91it/s]
2025-05-15:03:25:07,442 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 45%|████▌     | 87/193 [00:00<00:00, 864.87it/s] 90%|█████████ | 174/193 [00:00<00:00, 863.67it/s]100%|██████████| 193/193 [00:00<00:00, 861.05it/s]
2025-05-15:03:25:07,673 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  9%|▉         | 85/895 [00:00<00:00, 848.51it/s] 19%|█▉        | 171/895 [00:00<00:00, 852.45it/s] 29%|██▊       | 257/895 [00:00<00:00, 773.97it/s] 38%|███▊      | 343/895 [00:00<00:00, 802.63it/s] 47%|████▋     | 424/895 [00:00<00:00, 794.39it/s] 57%|█████▋    | 510/895 [00:00<00:00, 813.75it/s] 66%|██████▋   | 595/895 [00:00<00:00, 823.05it/s] 76%|███████▌  | 680/895 [00:00<00:00, 830.62it/s] 86%|████████▌ | 766/895 [00:00<00:00, 837.40it/s] 95%|█████████▌| 852/895 [00:01<00:00, 842.15it/s]100%|██████████| 895/895 [00:01<00:00, 825.89it/s]
2025-05-15:03:25:08,787 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 25%|██▌       | 60/237 [00:00<00:00, 597.33it/s] 62%|██████▏   | 146/237 [00:00<00:00, 750.35it/s] 98%|█████████▊| 232/237 [00:00<00:00, 796.48it/s]100%|██████████| 237/237 [00:00<00:00, 768.92it/s]
2025-05-15:03:25:09,105 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 28%|██▊       | 46/165 [00:00<00:00, 454.58it/s] 75%|███████▌  | 124/165 [00:00<00:00, 642.10it/s]100%|██████████| 165/165 [00:00<00:00, 657.03it/s]
2025-05-15:03:25:09,363 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 13%|█▎        | 40/311 [00:00<00:00, 388.94it/s] 25%|██▌       | 79/311 [00:00<00:00, 379.64it/s] 53%|█████▎    | 166/311 [00:00<00:00, 596.39it/s] 73%|███████▎  | 226/311 [00:00<00:00, 585.54it/s] 92%|█████████▏| 285/311 [00:00<00:00, 576.23it/s]100%|██████████| 311/311 [00:00<00:00, 541.11it/s]
2025-05-15:03:25:09,950 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 16%|█▌        | 55/346 [00:00<00:00, 511.42it/s] 31%|███       | 107/346 [00:00<00:00, 505.35it/s] 47%|████▋     | 162/346 [00:00<00:00, 522.53it/s] 62%|██████▏   | 215/346 [00:00<00:00, 503.47it/s] 78%|███████▊  | 269/346 [00:00<00:00, 515.78it/s] 93%|█████████▎| 321/346 [00:00<00:00, 510.29it/s]100%|██████████| 346/346 [00:00<00:00, 507.40it/s]
2025-05-15:03:25:10,650 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 15%|█▍        | 30/204 [00:00<00:00, 277.76it/s] 39%|███▉      | 80/204 [00:00<00:00, 393.94it/s] 65%|██████▍   | 132/204 [00:00<00:00, 448.54it/s] 87%|████████▋ | 178/204 [00:00<00:00, 417.72it/s]100%|██████████| 204/204 [00:00<00:00, 411.84it/s]
2025-05-15:03:25:11,160 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 34%|███▍      | 41/121 [00:00<00:00, 406.70it/s] 71%|███████   | 86/121 [00:00<00:00, 431.13it/s]100%|██████████| 121/121 [00:00<00:00, 432.37it/s]
2025-05-15:03:25:11,445 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  4%|▎         | 54/1534 [00:00<00:02, 535.32it/s]  7%|▋         | 113/1534 [00:00<00:02, 566.97it/s] 11%|█         | 170/1534 [00:00<00:02, 541.47it/s] 15%|█▍        | 225/1534 [00:00<00:02, 529.37it/s] 18%|█▊        | 279/1534 [00:00<00:02, 520.58it/s] 23%|██▎       | 347/1534 [00:00<00:02, 572.10it/s] 28%|██▊       | 429/1534 [00:00<00:01, 649.28it/s] 34%|███▎      | 514/1534 [00:00<00:01, 711.78it/s] 39%|███▉      | 600/1534 [00:00<00:01, 755.25it/s] 44%|████▍     | 676/1534 [00:01<00:01, 669.25it/s] 49%|████▊     | 745/1534 [00:01<00:01, 547.13it/s] 52%|█████▏    | 805/1534 [00:01<00:01, 540.93it/s] 56%|█████▋    | 863/1534 [00:01<00:01, 531.99it/s] 60%|█████▉    | 919/1534 [00:01<00:01, 515.21it/s] 63%|██████▎   | 972/1534 [00:01<00:01, 515.97it/s] 67%|██████▋   | 1025/1534 [00:01<00:01, 503.45it/s] 70%|███████   | 1076/1534 [00:01<00:00, 491.80it/s] 73%|███████▎  | 1126/1534 [00:02<00:00, 485.14it/s] 77%|███████▋  | 1175/1534 [00:02<00:00, 469.42it/s] 80%|███████▉  | 1223/1534 [00:02<00:00, 425.47it/s] 83%|████████▎ | 1269/1534 [00:02<00:00, 429.94it/s] 86%|████████▌ | 1319/1534 [00:02<00:00, 447.47it/s] 89%|████████▉ | 1365/1534 [00:02<00:00, 449.10it/s] 92%|█████████▏| 1411/1534 [00:02<00:00, 436.29it/s] 95%|█████████▌| 1462/1534 [00:02<00:00, 450.32it/s] 98%|█████████▊| 1508/1534 [00:02<00:00, 440.68it/s]100%|██████████| 1534/1534 [00:02<00:00, 515.34it/s]
2025-05-15:03:25:14,504 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 30%|██▉       | 51/171 [00:00<00:00, 493.17it/s] 59%|█████▉    | 101/171 [00:00<00:00, 488.12it/s]100%|██████████| 171/171 [00:00<00:00, 587.47it/s]
2025-05-15:03:25:14,803 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 76%|███████▌  | 82/108 [00:00<00:00, 815.21it/s]100%|██████████| 108/108 [00:00<00:00, 812.53it/s]
2025-05-15:03:25:14,941 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 51%|█████     | 64/126 [00:00<00:00, 591.68it/s] 98%|█████████▊| 124/126 [00:00<00:00, 451.33it/s]100%|██████████| 126/126 [00:00<00:00, 470.46it/s]
2025-05-15:03:25:15,215 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 15%|█▍        | 47/324 [00:00<00:00, 441.79it/s] 28%|██▊       | 92/324 [00:00<00:02, 103.94it/s] 53%|█████▎    | 171/324 [00:00<00:00, 213.47it/s] 79%|███████▉  | 256/324 [00:00<00:00, 331.75it/s]100%|██████████| 324/324 [00:01<00:00, 303.74it/s]
2025-05-15:03:25:16,301 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 48%|████▊     | 78/163 [00:00<00:00, 776.59it/s] 96%|█████████▌| 156/163 [00:00<00:00, 657.34it/s]100%|██████████| 163/163 [00:00<00:00, 659.05it/s]
2025-05-15:03:25:16,556 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<38:41:37,  2.48s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:03<37:54, 24.67it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:04<22:38, 41.24it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<17:30, 53.28it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<14:54, 62.53it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<13:19, 69.82it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:07<12:15, 75.81it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<11:28, 80.87it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<10:53, 85.21it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<10:28, 88.47it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:08, 91.32it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<09:53, 93.39it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<09:34, 96.38it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<09:20, 98.81it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:12<09:06, 101.17it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:12<08:53, 103.49it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:13<08:40, 105.97it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:13<08:29, 108.10it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:14<08:18, 110.41it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:15<08:10, 111.98it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:15<08:01, 114.02it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:16<07:53, 115.68it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:16<07:45, 117.58it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:17<07:39, 119.09it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:17<07:32, 120.79it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:18<07:25, 122.50it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:18<07:19, 123.93it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:19<07:15, 125.04it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:19<07:11, 126.03it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:20<07:08, 126.88it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:20<07:03, 128.15it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:21<06:59, 129.20it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:21<06:56, 130.06it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:22<06:53, 130.68it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:22<06:50, 131.40it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:23<06:48, 131.94it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:23<06:46, 132.35it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:24<06:39, 134.74it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:24<06:33, 136.54it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:24<06:28, 138.04it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:25<06:25, 139.23it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:25<06:22, 140.10it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:26<06:19, 140.86it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:26<06:17, 141.34it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:27<06:13, 142.68it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:27<06:11, 143.29it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:28<06:08, 144.36it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:28<06:07, 144.70it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:28<06:06, 144.78it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:29<06:05, 145.06it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:29<06:04, 145.48it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:30<06:00, 146.66it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:30<05:57, 147.64it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:31<05:58, 147.16it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:31<05:55, 148.42it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:31<05:51, 149.84it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:32<05:49, 150.28it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:32<05:48, 150.89it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:33<05:44, 152.38it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:33<05:42, 153.04it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:34<05:39, 154.29it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:34<05:35, 155.65it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:34<05:33, 156.52it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:35<05:29, 158.19it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:35<05:27, 158.91it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:36<05:26, 159.41it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:36<05:24, 159.89it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:36<05:21, 161.27it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:37<05:15, 164.48it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:37<05:14, 164.76it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:37<05:11, 166.04it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:38<05:08, 167.37it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:38<05:04, 169.20it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:39<05:02, 170.25it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:39<05:01, 170.74it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:39<04:58, 172.28it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:40<04:55, 173.58it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:40<04:55, 173.46it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:40<04:53, 174.62it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:41<04:49, 176.27it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:41<04:48, 177.10it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:41<04:46, 177.79it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:42<04:44, 178.82it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:42<04:43, 179.65it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:43<04:41, 180.32it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:43<04:40, 180.88it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:43<04:39, 181.35it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:44<04:38, 181.88it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:44<04:39, 180.94it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:44<04:36, 182.51it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:45<04:33, 184.21it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:45<04:33, 184.10it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:45<04:32, 184.75it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:46<04:29, 186.35it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:46<04:27, 187.38it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:46<04:28, 186.55it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:47<04:20, 191.98it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:47<04:15, 195.89it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:47<04:10, 198.85it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:48<04:07, 201.16it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:48<04:04, 203.17it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:48<04:02, 204.68it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:49<04:01, 205.92it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:49<03:58, 207.61it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:49<03:59, 206.70it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:49<04:00, 205.35it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:50<03:58, 207.40it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:50<03:56, 208.83it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:50<03:54, 210.21it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:51<03:53, 210.90it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:51<03:50, 213.10it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:51<03:48, 214.84it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:52<03:46, 215.89it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:52<03:45, 217.06it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:52<03:44, 217.72it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:52<03:43, 218.73it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:53<03:41, 220.43it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:53<03:39, 221.71it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:53<03:38, 222.51it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:54<03:37, 223.51it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [00:54<03:38, 221.90it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [00:54<03:37, 222.95it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [00:54<03:36, 223.12it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [00:55<03:36, 223.29it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [00:55<03:34, 224.36it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [00:55<03:34, 224.40it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [00:56<03:32, 226.06it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [00:56<03:32, 226.33it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [00:56<03:30, 228.23it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [00:56<03:29, 229.10it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [00:57<03:28, 229.55it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [00:57<03:26, 231.92it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [00:57<03:26, 230.68it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [00:57<03:29, 227.72it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [00:58<03:26, 230.55it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [00:58<03:21, 236.35it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [00:58<03:17, 239.72it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [00:59<03:17, 240.16it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [00:59<03:15, 242.63it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [00:59<03:12, 245.12it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [00:59<03:11, 246.90it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:00<03:12, 244.92it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:00<03:10, 246.58it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:00<03:12, 243.73it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:00<03:08, 249.03it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:01<03:04, 254.61it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:01<03:04, 253.81it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:01<03:00, 259.08it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:01<02:57, 262.47it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:02<02:56, 264.93it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:02<02:54, 267.23it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:02<02:52, 268.87it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:02<02:50, 272.06it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:02<02:48, 274.68it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:03<02:47, 277.10it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:03<02:45, 279.14it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:03<02:44, 280.62it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:03<02:43, 281.27it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:04<02:44, 280.58it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:04<02:43, 281.81it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:04<02:42, 283.19it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:04<02:40, 285.28it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:04<02:39, 286.85it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:05<02:38, 288.06it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:05<02:37, 289.52it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:05<02:37, 289.77it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:05<02:36, 291.45it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:06<02:35, 292.01it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:06<02:35, 292.15it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:06<02:34, 293.01it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:06<02:33, 294.13it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:06<02:31, 297.62it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:07<02:30, 299.81it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:07<02:29, 301.50it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:07<02:28, 303.18it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:07<02:27, 304.02it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:07<02:27, 304.84it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:08<02:26, 305.58it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:08<02:25, 307.21it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:08<02:25, 307.53it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:08<02:24, 308.08it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:09<02:24, 308.21it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:09<02:24, 309.07it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:09<02:25, 306.18it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:09<02:23, 309.69it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:09<02:23, 309.88it/s]Running loglikelihood requests:  21%|██        | 11905/56168 [01:10<02:22, 310.45it/s]Running loglikelihood requests:  21%|██▏       | 11969/56168 [01:10<02:21, 312.86it/s]Running loglikelihood requests:  21%|██▏       | 12033/56168 [01:10<02:19, 317.12it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [01:10<02:17, 319.55it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [01:10<02:16, 321.40it/s]Running loglikelihood requests:  22%|██▏       | 12225/56168 [01:11<02:15, 323.59it/s]Running loglikelihood requests:  22%|██▏       | 12289/56168 [01:11<02:15, 324.59it/s]Running loglikelihood requests:  22%|██▏       | 12353/56168 [01:11<02:14, 325.59it/s]Running loglikelihood requests:  22%|██▏       | 12417/56168 [01:11<02:13, 326.89it/s]Running loglikelihood requests:  22%|██▏       | 12481/56168 [01:11<02:13, 327.00it/s]Running loglikelihood requests:  22%|██▏       | 12545/56168 [01:12<02:12, 328.27it/s]Running loglikelihood requests:  22%|██▏       | 12609/56168 [01:12<02:12, 327.98it/s]Running loglikelihood requests:  23%|██▎       | 12673/56168 [01:12<02:12, 328.67it/s]Running loglikelihood requests:  23%|██▎       | 12737/56168 [01:12<02:11, 329.48it/s]Running loglikelihood requests:  23%|██▎       | 12801/56168 [01:12<02:11, 329.42it/s]Running loglikelihood requests:  23%|██▎       | 12865/56168 [01:12<02:11, 330.07it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [01:13<02:10, 330.67it/s]Running loglikelihood requests:  23%|██▎       | 12993/56168 [01:13<02:10, 331.56it/s]Running loglikelihood requests:  23%|██▎       | 13057/56168 [01:13<02:10, 331.04it/s]Running loglikelihood requests:  23%|██▎       | 13121/56168 [01:13<02:11, 328.04it/s]Running loglikelihood requests:  23%|██▎       | 13185/56168 [01:13<02:13, 321.14it/s]Running loglikelihood requests:  24%|██▎       | 13249/56168 [01:14<02:18, 310.06it/s]Running loglikelihood requests:  24%|██▎       | 13313/56168 [01:14<02:16, 313.59it/s]Running loglikelihood requests:  24%|██▍       | 13377/56168 [01:14<02:13, 320.57it/s]Running loglikelihood requests:  24%|██▍       | 13441/56168 [01:14<02:11, 325.59it/s]Running loglikelihood requests:  24%|██▍       | 13505/56168 [01:14<02:09, 329.82it/s]Running loglikelihood requests:  24%|██▍       | 13569/56168 [01:15<02:08, 332.39it/s]Running loglikelihood requests:  24%|██▍       | 13633/56168 [01:15<02:06, 335.57it/s]Running loglikelihood requests:  24%|██▍       | 13697/56168 [01:15<02:06, 336.96it/s]Running loglikelihood requests:  24%|██▍       | 13761/56168 [01:15<02:06, 334.38it/s]Running loglikelihood requests:  25%|██▍       | 13825/56168 [01:15<02:06, 333.45it/s]Running loglikelihood requests:  25%|██▍       | 13889/56168 [01:16<02:06, 335.12it/s]Running loglikelihood requests:  25%|██▍       | 13953/56168 [01:16<02:07, 330.73it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [01:16<02:05, 334.79it/s]Running loglikelihood requests:  25%|██▌       | 14081/56168 [01:16<02:05, 334.14it/s]Running loglikelihood requests:  25%|██▌       | 14145/56168 [01:16<02:07, 329.54it/s]Running loglikelihood requests:  25%|██▌       | 14209/56168 [01:17<02:06, 332.38it/s]Running loglikelihood requests:  25%|██▌       | 14273/56168 [01:17<02:06, 330.30it/s]Running loglikelihood requests:  26%|██▌       | 14337/56168 [01:17<02:05, 334.32it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [01:17<02:06, 329.36it/s]Running loglikelihood requests:  26%|██▌       | 14465/56168 [01:17<02:13, 313.40it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [01:18<02:13, 311.62it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [01:18<02:11, 317.26it/s]Running loglikelihood requests:  26%|██▌       | 14657/56168 [01:18<02:14, 309.27it/s]Running loglikelihood requests:  26%|██▌       | 14721/56168 [01:18<02:13, 309.35it/s]Running loglikelihood requests:  26%|██▋       | 14785/56168 [01:18<02:09, 320.49it/s]Running loglikelihood requests:  26%|██▋       | 14849/56168 [01:19<02:16, 302.36it/s]Running loglikelihood requests:  27%|██▋       | 14913/56168 [01:19<02:18, 298.75it/s]Running loglikelihood requests:  27%|██▋       | 14977/56168 [01:19<02:18, 297.80it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [01:19<02:17, 299.51it/s]Running loglikelihood requests:  27%|██▋       | 15105/56168 [01:19<02:16, 301.75it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [01:20<02:12, 310.24it/s]Running loglikelihood requests:  27%|██▋       | 15233/56168 [01:20<02:08, 318.91it/s]Running loglikelihood requests:  27%|██▋       | 15297/56168 [01:20<02:07, 319.77it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [01:20<02:09, 314.06it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [01:20<02:10, 313.39it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [01:21<02:09, 313.73it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [01:21<02:09, 313.53it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [01:21<02:09, 313.38it/s]Running loglikelihood requests:  28%|██▊       | 15681/56168 [01:21<02:07, 317.36it/s]Running loglikelihood requests:  28%|██▊       | 15745/56168 [01:21<02:06, 320.58it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [01:22<02:04, 323.90it/s]Running loglikelihood requests:  28%|██▊       | 15873/56168 [01:22<02:02, 328.82it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [01:22<02:04, 322.13it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [01:22<02:06, 316.48it/s]Running loglikelihood requests:  29%|██▊       | 16065/56168 [01:22<02:05, 318.79it/s]Running loglikelihood requests:  29%|██▊       | 16129/56168 [01:23<02:03, 324.07it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [01:23<02:00, 332.78it/s]Running loglikelihood requests:  29%|██▉       | 16257/56168 [01:23<02:11, 302.98it/s]Running loglikelihood requests:  29%|██▉       | 16321/56168 [01:23<02:10, 306.28it/s]Running loglikelihood requests:  29%|██▉       | 16385/56168 [01:23<02:05, 317.38it/s]Running loglikelihood requests:  29%|██▉       | 16449/56168 [01:24<02:02, 323.53it/s]Running loglikelihood requests:  29%|██▉       | 16513/56168 [01:24<02:00, 329.05it/s]Running loglikelihood requests:  30%|██▉       | 16577/56168 [01:24<02:01, 326.10it/s]Running loglikelihood requests:  30%|██▉       | 16641/56168 [01:24<02:00, 328.57it/s]Running loglikelihood requests:  30%|██▉       | 16705/56168 [01:24<01:59, 330.85it/s]Running loglikelihood requests:  30%|██▉       | 16769/56168 [01:25<02:07, 309.18it/s]Running loglikelihood requests:  30%|██▉       | 16833/56168 [01:25<02:12, 296.56it/s]Running loglikelihood requests:  30%|███       | 16897/56168 [01:25<02:12, 296.53it/s]Running loglikelihood requests:  30%|███       | 16961/56168 [01:25<02:12, 296.96it/s]Running loglikelihood requests:  30%|███       | 17025/56168 [01:26<02:21, 276.20it/s]Running loglikelihood requests:  30%|███       | 17089/56168 [01:26<02:14, 289.90it/s]Running loglikelihood requests:  31%|███       | 17153/56168 [01:26<02:15, 287.62it/s]Running loglikelihood requests:  31%|███       | 17217/56168 [01:26<02:14, 289.76it/s]Running loglikelihood requests:  31%|███       | 17281/56168 [01:26<02:10, 297.37it/s]Running loglikelihood requests:  31%|███       | 17345/56168 [01:27<02:06, 305.76it/s]Running loglikelihood requests:  31%|███       | 17409/56168 [01:27<02:06, 306.65it/s]Running loglikelihood requests:  31%|███       | 17473/56168 [01:27<02:06, 306.48it/s]Running loglikelihood requests:  31%|███       | 17537/56168 [01:27<02:08, 299.57it/s]Running loglikelihood requests:  31%|███▏      | 17601/56168 [01:28<02:07, 303.61it/s]Running loglikelihood requests:  31%|███▏      | 17665/56168 [01:28<02:03, 310.55it/s]Running loglikelihood requests:  32%|███▏      | 17729/56168 [01:28<02:00, 318.23it/s]Running loglikelihood requests:  32%|███▏      | 17793/56168 [01:28<01:58, 324.06it/s]Running loglikelihood requests:  32%|███▏      | 17857/56168 [01:28<01:56, 327.81it/s]Running loglikelihood requests:  32%|███▏      | 17921/56168 [01:28<01:54, 333.31it/s]Running loglikelihood requests:  32%|███▏      | 17985/56168 [01:29<01:55, 331.61it/s]Running loglikelihood requests:  32%|███▏      | 18049/56168 [01:29<01:53, 336.16it/s]Running loglikelihood requests:  32%|███▏      | 18113/56168 [01:29<01:51, 341.80it/s]Running loglikelihood requests:  32%|███▏      | 18177/56168 [01:29<01:49, 346.45it/s]Running loglikelihood requests:  32%|███▏      | 18241/56168 [01:29<01:48, 349.39it/s]Running loglikelihood requests:  33%|███▎      | 18305/56168 [01:30<01:48, 348.31it/s]Running loglikelihood requests:  33%|███▎      | 18369/56168 [01:30<01:48, 348.52it/s]Running loglikelihood requests:  33%|███▎      | 18433/56168 [01:30<01:47, 352.56it/s]Running loglikelihood requests:  33%|███▎      | 18497/56168 [01:30<01:47, 351.55it/s]Running loglikelihood requests:  33%|███▎      | 18561/56168 [01:30<01:46, 354.04it/s]Running loglikelihood requests:  33%|███▎      | 18625/56168 [01:30<01:42, 367.36it/s]Running loglikelihood requests:  33%|███▎      | 18689/56168 [01:31<01:39, 376.81it/s]Running loglikelihood requests:  33%|███▎      | 18753/56168 [01:31<01:37, 383.71it/s]Running loglikelihood requests:  34%|███▎      | 18817/56168 [01:31<01:35, 389.96it/s]Running loglikelihood requests:  34%|███▎      | 18881/56168 [01:31<01:34, 394.21it/s]Running loglikelihood requests:  34%|███▎      | 18945/56168 [01:31<01:33, 396.96it/s]Running loglikelihood requests:  34%|███▍      | 19009/56168 [01:31<01:33, 398.62it/s]Running loglikelihood requests:  34%|███▍      | 19073/56168 [01:32<01:32, 398.92it/s]Running loglikelihood requests:  34%|███▍      | 19137/56168 [01:32<01:32, 399.85it/s]Running loglikelihood requests:  34%|███▍      | 19201/56168 [01:32<01:32, 401.14it/s]Running loglikelihood requests:  34%|███▍      | 19265/56168 [01:32<01:32, 400.83it/s]Running loglikelihood requests:  34%|███▍      | 19329/56168 [01:32<01:31, 401.09it/s]Running loglikelihood requests:  35%|███▍      | 19393/56168 [01:32<01:31, 401.82it/s]Running loglikelihood requests:  35%|███▍      | 19457/56168 [01:33<01:31, 402.03it/s]Running loglikelihood requests:  35%|███▍      | 19521/56168 [01:33<01:30, 402.85it/s]Running loglikelihood requests:  35%|███▍      | 19585/56168 [01:33<01:36, 379.75it/s]Running loglikelihood requests:  35%|███▍      | 19649/56168 [01:33<01:38, 371.93it/s]Running loglikelihood requests:  35%|███▌      | 19713/56168 [01:33<01:35, 381.71it/s]Running loglikelihood requests:  35%|███▌      | 19777/56168 [01:33<01:35, 382.42it/s]Running loglikelihood requests:  35%|███▌      | 19841/56168 [01:34<01:33, 389.28it/s]Running loglikelihood requests:  35%|███▌      | 19905/56168 [01:34<01:31, 394.77it/s]Running loglikelihood requests:  36%|███▌      | 19969/56168 [01:34<01:31, 397.69it/s]Running loglikelihood requests:  36%|███▌      | 20033/56168 [01:34<01:31, 395.89it/s]Running loglikelihood requests:  36%|███▌      | 20097/56168 [01:34<01:31, 394.48it/s]Running loglikelihood requests:  36%|███▌      | 20161/56168 [01:34<01:32, 389.07it/s]Running loglikelihood requests:  36%|███▌      | 20225/56168 [01:34<01:31, 391.75it/s]Running loglikelihood requests:  36%|███▌      | 20289/56168 [01:35<01:30, 396.85it/s]Running loglikelihood requests:  36%|███▌      | 20353/56168 [01:35<01:29, 400.12it/s]Running loglikelihood requests:  36%|███▋      | 20417/56168 [01:35<01:29, 399.00it/s]Running loglikelihood requests:  36%|███▋      | 20481/56168 [01:35<01:29, 400.21it/s]Running loglikelihood requests:  37%|███▋      | 20545/56168 [01:35<01:31, 389.43it/s]Running loglikelihood requests:  37%|███▋      | 20609/56168 [01:35<01:30, 391.67it/s]Running loglikelihood requests:  37%|███▋      | 20673/56168 [01:36<01:29, 396.56it/s]Running loglikelihood requests:  37%|███▋      | 20737/56168 [01:36<01:29, 394.97it/s]Running loglikelihood requests:  37%|███▋      | 20801/56168 [01:36<01:27, 402.43it/s]Running loglikelihood requests:  37%|███▋      | 20865/56168 [01:36<01:26, 407.73it/s]Running loglikelihood requests:  37%|███▋      | 20929/56168 [01:36<01:25, 411.48it/s]Running loglikelihood requests:  37%|███▋      | 20993/56168 [01:36<01:24, 414.45it/s]Running loglikelihood requests:  37%|███▋      | 21057/56168 [01:37<01:24, 415.20it/s]Running loglikelihood requests:  38%|███▊      | 21121/56168 [01:37<01:24, 417.22it/s]Running loglikelihood requests:  38%|███▊      | 21185/56168 [01:37<01:23, 417.91it/s]Running loglikelihood requests:  38%|███▊      | 21249/56168 [01:37<01:23, 418.23it/s]Running loglikelihood requests:  38%|███▊      | 21313/56168 [01:37<01:24, 413.82it/s]Running loglikelihood requests:  38%|███▊      | 21377/56168 [01:37<01:25, 407.06it/s]Running loglikelihood requests:  38%|███▊      | 21441/56168 [01:37<01:26, 401.39it/s]Running loglikelihood requests:  38%|███▊      | 21505/56168 [01:38<01:29, 385.17it/s]Running loglikelihood requests:  38%|███▊      | 21569/56168 [01:38<01:27, 396.78it/s]Running loglikelihood requests:  39%|███▊      | 21633/56168 [01:38<01:27, 395.80it/s]Running loglikelihood requests:  39%|███▊      | 21697/56168 [01:38<01:27, 394.63it/s]Running loglikelihood requests:  39%|███▊      | 21761/56168 [01:38<01:25, 400.16it/s]Running loglikelihood requests:  39%|███▉      | 21825/56168 [01:38<01:24, 404.54it/s]Running loglikelihood requests:  39%|███▉      | 21889/56168 [01:39<01:23, 410.77it/s]Running loglikelihood requests:  39%|███▉      | 21953/56168 [01:39<01:23, 407.95it/s]Running loglikelihood requests:  39%|███▉      | 22017/56168 [01:39<01:24, 405.46it/s]Running loglikelihood requests:  39%|███▉      | 22081/56168 [01:39<01:23, 408.66it/s]Running loglikelihood requests:  39%|███▉      | 22145/56168 [01:39<01:22, 411.89it/s]Running loglikelihood requests:  40%|███▉      | 22209/56168 [01:39<01:21, 417.89it/s]Running loglikelihood requests:  40%|███▉      | 22273/56168 [01:40<01:20, 419.09it/s]Running loglikelihood requests:  40%|███▉      | 22337/56168 [01:40<01:19, 423.31it/s]Running loglikelihood requests:  40%|███▉      | 22401/56168 [01:40<01:19, 426.49it/s]Running loglikelihood requests:  40%|███▉      | 22465/56168 [01:40<01:18, 426.90it/s]Running loglikelihood requests:  40%|████      | 22529/56168 [01:40<01:18, 428.01it/s]Running loglikelihood requests:  40%|████      | 22593/56168 [01:40<01:18, 429.77it/s]Running loglikelihood requests:  40%|████      | 22657/56168 [01:40<01:18, 428.79it/s]Running loglikelihood requests:  40%|████      | 22721/56168 [01:41<01:17, 429.44it/s]Running loglikelihood requests:  41%|████      | 22785/56168 [01:41<01:17, 430.22it/s]Running loglikelihood requests:  41%|████      | 22849/56168 [01:41<01:17, 430.05it/s]Running loglikelihood requests:  41%|████      | 22913/56168 [01:41<01:17, 431.51it/s]Running loglikelihood requests:  41%|████      | 22977/56168 [01:41<01:16, 431.86it/s]Running loglikelihood requests:  41%|████      | 23041/56168 [01:41<01:16, 431.34it/s]Running loglikelihood requests:  41%|████      | 23105/56168 [01:41<01:16, 430.55it/s]Running loglikelihood requests:  41%|████      | 23169/56168 [01:42<01:16, 430.49it/s]Running loglikelihood requests:  41%|████▏     | 23233/56168 [01:42<01:15, 435.62it/s]Running loglikelihood requests:  41%|████▏     | 23297/56168 [01:42<01:14, 438.53it/s]Running loglikelihood requests:  42%|████▏     | 23361/56168 [01:42<01:18, 418.57it/s]Running loglikelihood requests:  42%|████▏     | 23425/56168 [01:42<01:16, 428.96it/s]Running loglikelihood requests:  42%|████▏     | 23489/56168 [01:42<01:15, 431.09it/s]Running loglikelihood requests:  42%|████▏     | 23553/56168 [01:42<01:14, 436.13it/s]Running loglikelihood requests:  42%|████▏     | 23617/56168 [01:43<01:15, 431.18it/s]Running loglikelihood requests:  42%|████▏     | 23681/56168 [01:43<01:14, 435.46it/s]Running loglikelihood requests:  42%|████▏     | 23745/56168 [01:43<01:14, 437.39it/s]Running loglikelihood requests:  42%|████▏     | 23809/56168 [01:43<01:13, 442.63it/s]Running loglikelihood requests:  43%|████▎     | 23873/56168 [01:43<01:14, 435.12it/s]Running loglikelihood requests:  43%|████▎     | 23937/56168 [01:43<01:13, 441.24it/s]Running loglikelihood requests:  43%|████▎     | 24001/56168 [01:44<01:12, 443.26it/s]Running loglikelihood requests:  43%|████▎     | 24065/56168 [01:44<01:13, 438.63it/s]Running loglikelihood requests:  43%|████▎     | 24129/56168 [01:44<01:13, 438.88it/s]Running loglikelihood requests:  43%|████▎     | 24193/56168 [01:44<01:13, 435.01it/s]Running loglikelihood requests:  43%|████▎     | 24257/56168 [01:44<01:12, 437.73it/s]Running loglikelihood requests:  43%|████▎     | 24321/56168 [01:44<01:11, 443.84it/s]Running loglikelihood requests:  43%|████▎     | 24385/56168 [01:44<01:12, 441.12it/s]Running loglikelihood requests:  44%|████▎     | 24449/56168 [01:45<01:10, 446.82it/s]Running loglikelihood requests:  44%|████▎     | 24513/56168 [01:45<01:10, 451.36it/s]Running loglikelihood requests:  44%|████▍     | 24577/56168 [01:45<01:09, 453.62it/s]Running loglikelihood requests:  44%|████▍     | 24641/56168 [01:45<01:09, 455.67it/s]Running loglikelihood requests:  44%|████▍     | 24705/56168 [01:45<01:09, 455.83it/s]Running loglikelihood requests:  44%|████▍     | 24769/56168 [01:45<01:08, 456.21it/s]Running loglikelihood requests:  44%|████▍     | 24833/56168 [01:45<01:08, 458.03it/s]Running loglikelihood requests:  44%|████▍     | 24897/56168 [01:45<01:08, 459.25it/s]Running loglikelihood requests:  44%|████▍     | 24961/56168 [01:46<01:07, 460.93it/s]Running loglikelihood requests:  45%|████▍     | 25025/56168 [01:46<01:07, 458.89it/s]Running loglikelihood requests:  45%|████▍     | 25089/56168 [01:46<01:08, 455.40it/s]Running loglikelihood requests:  45%|████▍     | 25153/56168 [01:46<01:07, 457.93it/s]Running loglikelihood requests:  45%|████▍     | 25217/56168 [01:46<01:07, 459.76it/s]Running loglikelihood requests:  45%|████▌     | 25281/56168 [01:46<01:07, 460.60it/s]Running loglikelihood requests:  45%|████▌     | 25345/56168 [01:46<01:07, 453.30it/s]Running loglikelihood requests:  45%|████▌     | 25409/56168 [01:47<01:07, 457.00it/s]Running loglikelihood requests:  45%|████▌     | 25473/56168 [01:47<01:06, 458.34it/s]Running loglikelihood requests:  45%|████▌     | 25537/56168 [01:47<01:06, 459.13it/s]Running loglikelihood requests:  46%|████▌     | 25601/56168 [01:47<01:06, 460.12it/s]Running loglikelihood requests:  46%|████▌     | 25665/56168 [01:47<01:06, 461.53it/s]Running loglikelihood requests:  46%|████▌     | 25729/56168 [01:47<01:05, 463.43it/s]Running loglikelihood requests:  46%|████▌     | 25793/56168 [01:47<01:05, 464.23it/s]Running loglikelihood requests:  46%|████▌     | 25857/56168 [01:48<01:05, 463.49it/s]Running loglikelihood requests:  46%|████▌     | 25921/56168 [01:48<01:05, 463.52it/s]Running loglikelihood requests:  46%|████▋     | 25985/56168 [01:48<01:04, 464.40it/s]Running loglikelihood requests:  46%|████▋     | 26049/56168 [01:48<01:04, 465.41it/s]Running loglikelihood requests:  46%|████▋     | 26113/56168 [01:48<01:04, 466.08it/s]Running loglikelihood requests:  47%|████▋     | 26177/56168 [01:48<01:04, 464.75it/s]Running loglikelihood requests:  47%|████▋     | 26241/56168 [01:48<01:04, 464.40it/s]Running loglikelihood requests:  47%|████▋     | 26305/56168 [01:49<01:04, 464.93it/s]Running loglikelihood requests:  47%|████▋     | 26369/56168 [01:49<01:03, 466.95it/s]Running loglikelihood requests:  47%|████▋     | 26433/56168 [01:49<01:03, 467.28it/s]Running loglikelihood requests:  47%|████▋     | 26497/56168 [01:49<01:03, 467.30it/s]Running loglikelihood requests:  47%|████▋     | 26561/56168 [01:49<01:03, 467.57it/s]Running loglikelihood requests:  47%|████▋     | 26625/56168 [01:49<01:03, 467.65it/s]Running loglikelihood requests:  48%|████▊     | 26689/56168 [01:49<01:02, 468.76it/s]Running loglikelihood requests:  48%|████▊     | 26753/56168 [01:49<01:01, 475.23it/s]Running loglikelihood requests:  48%|████▊     | 26817/56168 [01:50<01:01, 480.10it/s]Running loglikelihood requests:  48%|████▊     | 26881/56168 [01:50<01:00, 481.49it/s]Running loglikelihood requests:  48%|████▊     | 26945/56168 [01:50<01:00, 484.61it/s]Running loglikelihood requests:  48%|████▊     | 27009/56168 [01:50<01:00, 485.83it/s]Running loglikelihood requests:  48%|████▊     | 27073/56168 [01:50<00:59, 487.39it/s]Running loglikelihood requests:  48%|████▊     | 27137/56168 [01:50<00:59, 486.73it/s]Running loglikelihood requests:  48%|████▊     | 27201/56168 [01:50<00:59, 489.31it/s]Running loglikelihood requests:  49%|████▊     | 27265/56168 [01:51<00:59, 488.95it/s]Running loglikelihood requests:  49%|████▊     | 27329/56168 [01:51<00:58, 489.91it/s]Running loglikelihood requests:  49%|████▉     | 27393/56168 [01:51<00:58, 489.94it/s]Running loglikelihood requests:  49%|████▉     | 27457/56168 [01:51<00:58, 490.56it/s]Running loglikelihood requests:  49%|████▉     | 27521/56168 [01:51<00:58, 491.09it/s]Running loglikelihood requests:  49%|████▉     | 27585/56168 [01:51<00:58, 489.86it/s]Running loglikelihood requests:  49%|████▉     | 27649/56168 [01:51<00:58, 491.48it/s]Running loglikelihood requests:  49%|████▉     | 27713/56168 [01:51<00:57, 490.77it/s]Running loglikelihood requests:  49%|████▉     | 27777/56168 [01:52<00:57, 492.23it/s]Running loglikelihood requests:  50%|████▉     | 27841/56168 [01:52<00:57, 492.62it/s]Running loglikelihood requests:  50%|████▉     | 27905/56168 [01:52<00:57, 493.52it/s]Running loglikelihood requests:  50%|████▉     | 27969/56168 [01:52<00:57, 493.63it/s]Running loglikelihood requests:  50%|████▉     | 28033/56168 [01:52<00:58, 481.35it/s]Running loglikelihood requests:  50%|█████     | 28097/56168 [01:52<00:58, 478.80it/s]Running loglikelihood requests:  50%|█████     | 28161/56168 [01:52<00:57, 483.28it/s]Running loglikelihood requests:  50%|█████     | 28225/56168 [01:53<00:57, 486.35it/s]Running loglikelihood requests:  50%|█████     | 28289/56168 [01:53<00:56, 490.77it/s]Running loglikelihood requests:  50%|█████     | 28353/56168 [01:53<00:56, 491.33it/s]Running loglikelihood requests:  51%|█████     | 28417/56168 [01:53<00:56, 492.93it/s]Running loglikelihood requests:  51%|█████     | 28481/56168 [01:53<00:56, 492.71it/s]Running loglikelihood requests:  51%|█████     | 28545/56168 [01:53<00:56, 492.84it/s]Running loglikelihood requests:  51%|█████     | 28609/56168 [01:53<00:55, 494.43it/s]Running loglikelihood requests:  51%|█████     | 28673/56168 [01:53<00:55, 493.23it/s]Running loglikelihood requests:  51%|█████     | 28737/56168 [01:54<00:55, 493.67it/s]Running loglikelihood requests:  51%|█████▏    | 28801/56168 [01:54<00:55, 493.94it/s]Running loglikelihood requests:  51%|█████▏    | 28865/56168 [01:54<00:55, 494.85it/s]Running loglikelihood requests:  52%|█████▏    | 28929/56168 [01:54<00:54, 496.38it/s]Running loglikelihood requests:  52%|█████▏    | 28993/56168 [01:54<00:54, 495.24it/s]Running loglikelihood requests:  52%|█████▏    | 29057/56168 [01:54<00:54, 495.27it/s]Running loglikelihood requests:  52%|█████▏    | 29121/56168 [01:54<00:54, 496.23it/s]Running loglikelihood requests:  52%|█████▏    | 29185/56168 [01:54<00:54, 494.60it/s]Running loglikelihood requests:  52%|█████▏    | 29249/56168 [01:55<00:54, 495.49it/s]Running loglikelihood requests:  52%|█████▏    | 29313/56168 [01:55<00:54, 495.44it/s]Running loglikelihood requests:  52%|█████▏    | 29377/56168 [01:55<00:53, 498.01it/s]Running loglikelihood requests:  52%|█████▏    | 29441/56168 [01:55<00:53, 499.08it/s]Running loglikelihood requests:  53%|█████▎    | 29505/56168 [01:55<00:53, 499.34it/s]Running loglikelihood requests:  53%|█████▎    | 29569/56168 [01:55<00:53, 499.71it/s]Running loglikelihood requests:  53%|█████▎    | 29633/56168 [01:55<00:53, 493.17it/s]Running loglikelihood requests:  53%|█████▎    | 29697/56168 [01:55<00:53, 495.36it/s]Running loglikelihood requests:  53%|█████▎    | 29761/56168 [01:56<00:53, 496.82it/s]Running loglikelihood requests:  53%|█████▎    | 29825/56168 [01:56<00:53, 496.88it/s]Running loglikelihood requests:  53%|█████▎    | 29889/56168 [01:56<00:52, 498.13it/s]Running loglikelihood requests:  53%|█████▎    | 29953/56168 [01:56<00:52, 499.99it/s]Running loglikelihood requests:  53%|█████▎    | 30017/56168 [01:56<00:52, 498.38it/s]Running loglikelihood requests:  54%|█████▎    | 30081/56168 [01:56<00:52, 498.32it/s]Running loglikelihood requests:  54%|█████▎    | 30145/56168 [01:56<00:52, 499.42it/s]Running loglikelihood requests:  54%|█████▍    | 30209/56168 [01:56<00:52, 497.36it/s]Running loglikelihood requests:  54%|█████▍    | 30273/56168 [01:57<00:52, 497.30it/s]Running loglikelihood requests:  54%|█████▍    | 30337/56168 [01:57<00:51, 497.06it/s]Running loglikelihood requests:  54%|█████▍    | 30401/56168 [01:57<00:51, 497.08it/s]Running loglikelihood requests:  54%|█████▍    | 30465/56168 [01:57<00:51, 498.56it/s]Running loglikelihood requests:  54%|█████▍    | 30529/56168 [01:57<00:51, 499.10it/s]Running loglikelihood requests:  54%|█████▍    | 30593/56168 [01:57<00:51, 500.82it/s]Running loglikelihood requests:  55%|█████▍    | 30657/56168 [01:57<00:50, 501.96it/s]Running loglikelihood requests:  55%|█████▍    | 30721/56168 [01:58<00:50, 501.53it/s]Running loglikelihood requests:  55%|█████▍    | 30785/56168 [01:58<00:50, 500.18it/s]Running loglikelihood requests:  55%|█████▍    | 30849/56168 [01:58<00:50, 501.11it/s]Running loglikelihood requests:  55%|█████▌    | 30913/56168 [01:58<00:50, 501.00it/s]Running loglikelihood requests:  55%|█████▌    | 30977/56168 [01:58<00:50, 499.22it/s]Running loglikelihood requests:  55%|█████▌    | 31041/56168 [01:58<00:50, 499.12it/s]Running loglikelihood requests:  55%|█████▌    | 31105/56168 [01:58<00:49, 501.73it/s]Running loglikelihood requests:  55%|█████▌    | 31169/56168 [01:58<00:49, 501.65it/s]Running loglikelihood requests:  56%|█████▌    | 31233/56168 [01:59<00:49, 504.36it/s]Running loglikelihood requests:  56%|█████▌    | 31297/56168 [01:59<00:49, 506.38it/s]Running loglikelihood requests:  56%|█████▌    | 31361/56168 [01:59<00:48, 507.18it/s]Running loglikelihood requests:  56%|█████▌    | 31425/56168 [01:59<00:49, 504.78it/s]Running loglikelihood requests:  56%|█████▌    | 31489/56168 [01:59<00:49, 502.31it/s]Running loglikelihood requests:  56%|█████▌    | 31553/56168 [01:59<00:48, 502.50it/s]Running loglikelihood requests:  56%|█████▋    | 31617/56168 [01:59<00:49, 500.51it/s]Running loglikelihood requests:  56%|█████▋    | 31681/56168 [01:59<00:48, 501.24it/s]Running loglikelihood requests:  57%|█████▋    | 31745/56168 [02:00<00:48, 501.71it/s]Running loglikelihood requests:  57%|█████▋    | 31809/56168 [02:00<00:47, 511.48it/s]Running loglikelihood requests:  57%|█████▋    | 31873/56168 [02:00<00:46, 517.34it/s]Running loglikelihood requests:  57%|█████▋    | 31937/56168 [02:00<00:46, 522.38it/s]Running loglikelihood requests:  57%|█████▋    | 32001/56168 [02:00<00:45, 526.11it/s]Running loglikelihood requests:  57%|█████▋    | 32065/56168 [02:00<00:45, 530.51it/s]Running loglikelihood requests:  57%|█████▋    | 32129/56168 [02:00<00:45, 533.41it/s]Running loglikelihood requests:  57%|█████▋    | 32193/56168 [02:00<00:44, 535.67it/s]Running loglikelihood requests:  57%|█████▋    | 32257/56168 [02:01<00:44, 537.40it/s]Running loglikelihood requests:  58%|█████▊    | 32321/56168 [02:01<00:44, 537.07it/s]Running loglikelihood requests:  58%|█████▊    | 32385/56168 [02:01<00:44, 535.73it/s]Running loglikelihood requests:  58%|█████▊    | 32449/56168 [02:01<00:44, 535.94it/s]Running loglikelihood requests:  58%|█████▊    | 32513/56168 [02:01<00:44, 535.26it/s]Running loglikelihood requests:  58%|█████▊    | 32577/56168 [02:01<00:43, 536.88it/s]Running loglikelihood requests:  58%|█████▊    | 32641/56168 [02:01<00:43, 540.20it/s]Running loglikelihood requests:  58%|█████▊    | 32705/56168 [02:01<00:43, 541.98it/s]Running loglikelihood requests:  58%|█████▊    | 32769/56168 [02:01<00:43, 542.05it/s]Running loglikelihood requests:  58%|█████▊    | 32833/56168 [02:02<00:43, 540.65it/s]Running loglikelihood requests:  59%|█████▊    | 32897/56168 [02:02<00:43, 539.13it/s]Running loglikelihood requests:  59%|█████▊    | 32961/56168 [02:02<00:43, 537.73it/s]Running loglikelihood requests:  59%|█████▉    | 33025/56168 [02:02<00:43, 537.91it/s]Running loglikelihood requests:  59%|█████▉    | 33089/56168 [02:02<00:42, 538.40it/s]Running loglikelihood requests:  59%|█████▉    | 33153/56168 [02:02<00:42, 541.18it/s]Running loglikelihood requests:  59%|█████▉    | 33217/56168 [02:02<00:42, 543.22it/s]Running loglikelihood requests:  59%|█████▉    | 33281/56168 [02:02<00:42, 543.82it/s]Running loglikelihood requests:  59%|█████▉    | 33345/56168 [02:03<00:42, 542.11it/s]Running loglikelihood requests:  59%|█████▉    | 33409/56168 [02:03<00:41, 542.51it/s]Running loglikelihood requests:  60%|█████▉    | 33473/56168 [02:03<00:42, 536.92it/s]Running loglikelihood requests:  60%|█████▉    | 33537/56168 [02:03<00:42, 532.82it/s]Running loglikelihood requests:  60%|█████▉    | 33601/56168 [02:03<00:42, 528.76it/s]Running loglikelihood requests:  60%|█████▉    | 33665/56168 [02:03<00:42, 525.27it/s]Running loglikelihood requests:  60%|██████    | 33729/56168 [02:03<00:42, 529.62it/s]Running loglikelihood requests:  60%|██████    | 33793/56168 [02:03<00:42, 531.05it/s]Running loglikelihood requests:  60%|██████    | 33857/56168 [02:04<00:42, 521.24it/s]Running loglikelihood requests:  60%|██████    | 33921/56168 [02:04<00:42, 527.52it/s]Running loglikelihood requests:  61%|██████    | 33985/56168 [02:04<00:41, 531.06it/s]Running loglikelihood requests:  61%|██████    | 34049/56168 [02:04<00:41, 534.69it/s]Running loglikelihood requests:  61%|██████    | 34113/56168 [02:04<00:41, 531.23it/s]Running loglikelihood requests:  61%|██████    | 34177/56168 [02:04<00:41, 529.64it/s]Running loglikelihood requests:  61%|██████    | 34241/56168 [02:04<00:41, 534.23it/s]Running loglikelihood requests:  61%|██████    | 34305/56168 [02:04<00:41, 524.14it/s]Running loglikelihood requests:  61%|██████    | 34369/56168 [02:04<00:41, 530.50it/s]Running loglikelihood requests:  61%|██████▏   | 34433/56168 [02:05<00:40, 536.64it/s]Running loglikelihood requests:  61%|██████▏   | 34497/56168 [02:05<00:40, 540.43it/s]Running loglikelihood requests:  62%|██████▏   | 34561/56168 [02:05<00:39, 541.81it/s]Running loglikelihood requests:  62%|██████▏   | 34625/56168 [02:05<00:39, 540.98it/s]Running loglikelihood requests:  62%|██████▏   | 34689/56168 [02:05<00:39, 542.47it/s]Running loglikelihood requests:  62%|██████▏   | 34753/56168 [02:05<00:39, 545.70it/s]Running loglikelihood requests:  62%|██████▏   | 34817/56168 [02:05<00:39, 547.00it/s]Running loglikelihood requests:  62%|██████▏   | 34881/56168 [02:05<00:38, 546.47it/s]Running loglikelihood requests:  62%|██████▏   | 34945/56168 [02:06<00:38, 545.40it/s]Running loglikelihood requests:  62%|██████▏   | 35009/56168 [02:06<00:38, 546.28it/s]Running loglikelihood requests:  62%|██████▏   | 35073/56168 [02:06<00:38, 547.50it/s]Running loglikelihood requests:  63%|██████▎   | 35137/56168 [02:06<00:38, 547.36it/s]Running loglikelihood requests:  63%|██████▎   | 35201/56168 [02:06<00:38, 545.98it/s]Running loglikelihood requests:  63%|██████▎   | 35265/56168 [02:06<00:38, 544.93it/s]Running loglikelihood requests:  63%|██████▎   | 35329/56168 [02:06<00:38, 544.99it/s]Running loglikelihood requests:  63%|██████▎   | 35393/56168 [02:06<00:38, 546.37it/s]Running loglikelihood requests:  63%|██████▎   | 35457/56168 [02:06<00:38, 531.29it/s]Running loglikelihood requests:  63%|██████▎   | 35521/56168 [02:07<00:38, 532.87it/s]Running loglikelihood requests:  63%|██████▎   | 35585/56168 [02:07<00:38, 534.09it/s]Running loglikelihood requests:  63%|██████▎   | 35649/56168 [02:07<00:37, 540.44it/s]Running loglikelihood requests:  64%|██████▎   | 35713/56168 [02:07<00:38, 535.78it/s]Running loglikelihood requests:  64%|██████▎   | 35777/56168 [02:07<00:38, 525.87it/s]Running loglikelihood requests:  64%|██████▍   | 35841/56168 [02:07<00:38, 527.38it/s]Running loglikelihood requests:  64%|██████▍   | 35905/56168 [02:07<00:37, 535.38it/s]Running loglikelihood requests:  64%|██████▍   | 35969/56168 [02:07<00:37, 539.37it/s]Running loglikelihood requests:  64%|██████▍   | 36033/56168 [02:08<00:38, 529.02it/s]Running loglikelihood requests:  64%|██████▍   | 36097/56168 [02:08<00:37, 531.26it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [02:08<00:39, 509.83it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [02:08<00:38, 514.29it/s]Running loglikelihood requests:  65%|██████▍   | 36289/56168 [02:08<00:38, 519.60it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [02:08<00:37, 529.02it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [02:08<00:37, 521.52it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [02:08<00:37, 520.92it/s]Running loglikelihood requests:  65%|██████▌   | 36545/56168 [02:09<00:37, 529.80it/s]Running loglikelihood requests:  65%|██████▌   | 36609/56168 [02:09<00:36, 538.30it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [02:09<00:35, 543.63it/s]Running loglikelihood requests:  65%|██████▌   | 36737/56168 [02:09<00:35, 544.39it/s]Running loglikelihood requests:  66%|██████▌   | 36801/56168 [02:09<00:35, 544.18it/s]Running loglikelihood requests:  66%|██████▌   | 36865/56168 [02:09<00:36, 533.09it/s]Running loglikelihood requests:  66%|██████▌   | 36929/56168 [02:09<00:35, 535.09it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [02:09<00:36, 524.08it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [02:09<00:35, 531.24it/s]Running loglikelihood requests:  66%|██████▌   | 37121/56168 [02:10<00:35, 534.59it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [02:10<00:35, 541.72it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [02:10<00:34, 545.59it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [02:10<00:34, 546.36it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [02:10<00:34, 548.52it/s]Running loglikelihood requests:  67%|██████▋   | 37441/56168 [02:10<00:33, 551.49it/s]Running loglikelihood requests:  67%|██████▋   | 37505/56168 [02:10<00:33, 552.01it/s]Running loglikelihood requests:  67%|██████▋   | 37569/56168 [02:10<00:33, 552.22it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [02:11<00:33, 553.75it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [02:11<00:33, 554.96it/s]Running loglikelihood requests:  67%|██████▋   | 37761/56168 [02:11<00:33, 551.69it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [02:11<00:33, 550.17it/s]Running loglikelihood requests:  67%|██████▋   | 37889/56168 [02:11<00:33, 552.36it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [02:11<00:32, 554.34it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [02:11<00:32, 553.17it/s]Running loglikelihood requests:  68%|██████▊   | 38081/56168 [02:11<00:32, 561.40it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [02:11<00:31, 567.27it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [02:12<00:31, 570.18it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [02:12<00:31, 571.97it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [02:12<00:31, 564.68it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [02:12<00:31, 568.98it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [02:12<00:30, 571.37it/s]Running loglikelihood requests:  69%|██████▊   | 38529/56168 [02:12<00:30, 573.68it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [02:12<00:30, 576.25it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [02:12<00:30, 565.22it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [02:12<00:31, 554.34it/s]Running loglikelihood requests:  69%|██████▉   | 38785/56168 [02:13<00:32, 531.78it/s]Running loglikelihood requests:  69%|██████▉   | 38849/56168 [02:13<00:35, 493.65it/s]Running loglikelihood requests:  69%|██████▉   | 38913/56168 [02:13<00:33, 515.30it/s]Running loglikelihood requests:  69%|██████▉   | 38977/56168 [02:13<00:32, 534.60it/s]Running loglikelihood requests:  70%|██████▉   | 39041/56168 [02:13<00:32, 533.18it/s]Running loglikelihood requests:  70%|██████▉   | 39105/56168 [02:13<00:31, 545.88it/s]Running loglikelihood requests:  70%|██████▉   | 39169/56168 [02:13<00:30, 549.57it/s]Running loglikelihood requests:  70%|██████▉   | 39233/56168 [02:13<00:30, 556.84it/s]Running loglikelihood requests:  70%|██████▉   | 39297/56168 [02:14<00:29, 565.18it/s]Running loglikelihood requests:  70%|███████   | 39361/56168 [02:14<00:29, 569.77it/s]Running loglikelihood requests:  70%|███████   | 39425/56168 [02:14<00:29, 574.74it/s]Running loglikelihood requests:  70%|███████   | 39489/56168 [02:14<00:28, 577.84it/s]Running loglikelihood requests:  70%|███████   | 39553/56168 [02:14<00:28, 581.31it/s]Running loglikelihood requests:  71%|███████   | 39617/56168 [02:14<00:28, 583.21it/s]Running loglikelihood requests:  71%|███████   | 39681/56168 [02:14<00:28, 577.07it/s]Running loglikelihood requests:  71%|███████   | 39745/56168 [02:14<00:28, 570.18it/s]Running loglikelihood requests:  71%|███████   | 39809/56168 [02:14<00:29, 563.21it/s]Running loglikelihood requests:  71%|███████   | 39873/56168 [02:15<00:29, 555.30it/s]Running loglikelihood requests:  71%|███████   | 39937/56168 [02:15<00:28, 560.32it/s]Running loglikelihood requests:  71%|███████   | 40001/56168 [02:15<00:28, 568.48it/s]Running loglikelihood requests:  71%|███████▏  | 40065/56168 [02:15<00:28, 572.84it/s]Running loglikelihood requests:  71%|███████▏  | 40129/56168 [02:15<00:27, 577.57it/s]Running loglikelihood requests:  72%|███████▏  | 40193/56168 [02:15<00:27, 581.38it/s]Running loglikelihood requests:  72%|███████▏  | 40257/56168 [02:15<00:28, 567.80it/s]Running loglikelihood requests:  72%|███████▏  | 40321/56168 [02:15<00:28, 553.94it/s]Running loglikelihood requests:  72%|███████▏  | 40385/56168 [02:15<00:28, 560.88it/s]Running loglikelihood requests:  72%|███████▏  | 40449/56168 [02:16<00:27, 566.70it/s]Running loglikelihood requests:  72%|███████▏  | 40513/56168 [02:16<00:28, 552.06it/s]Running loglikelihood requests:  72%|███████▏  | 40577/56168 [02:16<00:30, 510.90it/s]Running loglikelihood requests:  72%|███████▏  | 40641/56168 [02:16<00:30, 517.09it/s]Running loglikelihood requests:  72%|███████▏  | 40705/56168 [02:16<00:31, 483.93it/s]Running loglikelihood requests:  73%|███████▎  | 40769/56168 [02:16<00:30, 507.58it/s]Running loglikelihood requests:  73%|███████▎  | 40833/56168 [02:16<00:28, 528.96it/s]Running loglikelihood requests:  73%|███████▎  | 40897/56168 [02:16<00:28, 528.53it/s]Running loglikelihood requests:  73%|███████▎  | 40961/56168 [02:17<00:27, 543.83it/s]Running loglikelihood requests:  73%|███████▎  | 41025/56168 [02:17<00:27, 548.47it/s]Running loglikelihood requests:  73%|███████▎  | 41089/56168 [02:17<00:27, 547.63it/s]Running loglikelihood requests:  73%|███████▎  | 41153/56168 [02:17<00:27, 544.54it/s]Running loglikelihood requests:  73%|███████▎  | 41217/56168 [02:17<00:27, 550.38it/s]Running loglikelihood requests:  73%|███████▎  | 41281/56168 [02:17<00:26, 560.66it/s]Running loglikelihood requests:  74%|███████▎  | 41345/56168 [02:17<00:25, 570.88it/s]Running loglikelihood requests:  74%|███████▎  | 41409/56168 [02:17<00:25, 575.94it/s]Running loglikelihood requests:  74%|███████▍  | 41473/56168 [02:17<00:25, 576.77it/s]Running loglikelihood requests:  74%|███████▍  | 41537/56168 [02:18<00:25, 576.25it/s]Running loglikelihood requests:  74%|███████▍  | 41601/56168 [02:18<00:25, 570.13it/s]Running loglikelihood requests:  74%|███████▍  | 41665/56168 [02:18<00:25, 573.17it/s]Running loglikelihood requests:  74%|███████▍  | 41729/56168 [02:18<00:25, 565.46it/s]Running loglikelihood requests:  74%|███████▍  | 41793/56168 [02:18<00:25, 561.62it/s]Running loglikelihood requests:  75%|███████▍  | 41857/56168 [02:18<00:25, 566.44it/s]Running loglikelihood requests:  75%|███████▍  | 41921/56168 [02:18<00:25, 548.19it/s]Running loglikelihood requests:  75%|███████▍  | 41985/56168 [02:18<00:25, 556.71it/s]Running loglikelihood requests:  75%|███████▍  | 42049/56168 [02:18<00:25, 563.00it/s]Running loglikelihood requests:  75%|███████▍  | 42113/56168 [02:19<00:25, 558.15it/s]Running loglikelihood requests:  75%|███████▌  | 42177/56168 [02:19<00:24, 561.44it/s]Running loglikelihood requests:  75%|███████▌  | 42241/56168 [02:19<00:24, 562.74it/s]Running loglikelihood requests:  75%|███████▌  | 42305/56168 [02:19<00:24, 570.19it/s]Running loglikelihood requests:  75%|███████▌  | 42369/56168 [02:19<00:25, 536.33it/s]Running loglikelihood requests:  76%|███████▌  | 42433/56168 [02:19<00:24, 551.50it/s]Running loglikelihood requests:  76%|███████▌  | 42497/56168 [02:19<00:24, 562.43it/s]Running loglikelihood requests:  76%|███████▌  | 42561/56168 [02:19<00:23, 572.03it/s]Running loglikelihood requests:  76%|███████▌  | 42625/56168 [02:19<00:23, 575.75it/s]Running loglikelihood requests:  76%|███████▌  | 42689/56168 [02:20<00:23, 577.16it/s]Running loglikelihood requests:  76%|███████▌  | 42753/56168 [02:20<00:23, 580.58it/s]Running loglikelihood requests:  76%|███████▌  | 42817/56168 [02:20<00:22, 581.19it/s]Running loglikelihood requests:  76%|███████▋  | 42881/56168 [02:20<00:22, 581.63it/s]Running loglikelihood requests:  76%|███████▋  | 42945/56168 [02:20<00:23, 571.99it/s]Running loglikelihood requests:  77%|███████▋  | 43009/56168 [02:20<00:23, 555.14it/s]Running loglikelihood requests:  77%|███████▋  | 43073/56168 [02:20<00:23, 548.25it/s]Running loglikelihood requests:  77%|███████▋  | 43137/56168 [02:20<00:23, 553.57it/s]Running loglikelihood requests:  77%|███████▋  | 43201/56168 [02:21<00:23, 558.23it/s]Running loglikelihood requests:  77%|███████▋  | 43265/56168 [02:21<00:23, 551.67it/s]Running loglikelihood requests:  77%|███████▋  | 43329/56168 [02:21<00:22, 562.17it/s]Running loglikelihood requests:  77%|███████▋  | 43393/56168 [02:21<00:22, 560.50it/s]Running loglikelihood requests:  77%|███████▋  | 43457/56168 [02:21<00:22, 569.84it/s]Running loglikelihood requests:  77%|███████▋  | 43521/56168 [02:21<00:22, 555.78it/s]Running loglikelihood requests:  78%|███████▊  | 43585/56168 [02:21<00:22, 564.92it/s]Running loglikelihood requests:  78%|███████▊  | 43649/56168 [02:21<00:21, 574.13it/s]Running loglikelihood requests:  78%|███████▊  | 43713/56168 [02:21<00:21, 581.25it/s]Running loglikelihood requests:  78%|███████▊  | 43777/56168 [02:22<00:21, 584.15it/s]Running loglikelihood requests:  78%|███████▊  | 43841/56168 [02:22<00:20, 588.99it/s]Running loglikelihood requests:  78%|███████▊  | 43905/56168 [02:22<00:20, 591.64it/s]Running loglikelihood requests:  78%|███████▊  | 43969/56168 [02:22<00:20, 593.61it/s]Running loglikelihood requests:  78%|███████▊  | 44033/56168 [02:22<00:20, 593.93it/s]Running loglikelihood requests:  79%|███████▊  | 44097/56168 [02:22<00:20, 594.32it/s]Running loglikelihood requests:  79%|███████▊  | 44161/56168 [02:22<00:20, 592.69it/s]Running loglikelihood requests:  79%|███████▊  | 44225/56168 [02:22<00:20, 580.33it/s]Running loglikelihood requests:  79%|███████▉  | 44289/56168 [02:22<00:20, 569.79it/s]Running loglikelihood requests:  79%|███████▉  | 44353/56168 [02:22<00:20, 576.35it/s]Running loglikelihood requests:  79%|███████▉  | 44417/56168 [02:23<00:20, 580.73it/s]Running loglikelihood requests:  79%|███████▉  | 44481/56168 [02:23<00:19, 584.94it/s]Running loglikelihood requests:  79%|███████▉  | 44545/56168 [02:23<00:19, 585.84it/s]Running loglikelihood requests:  79%|███████▉  | 44609/56168 [02:23<00:21, 528.42it/s]Running loglikelihood requests:  80%|███████▉  | 44673/56168 [02:23<00:21, 546.45it/s]Running loglikelihood requests:  80%|███████▉  | 44737/56168 [02:23<00:20, 559.11it/s]Running loglikelihood requests:  80%|███████▉  | 44801/56168 [02:23<00:19, 568.43it/s]Running loglikelihood requests:  80%|███████▉  | 44865/56168 [02:23<00:19, 572.48it/s]Running loglikelihood requests:  80%|███████▉  | 44929/56168 [02:24<00:19, 567.68it/s]Running loglikelihood requests:  80%|████████  | 44993/56168 [02:24<00:19, 565.36it/s]Running loglikelihood requests:  80%|████████  | 45057/56168 [02:24<00:19, 575.57it/s]Running loglikelihood requests:  80%|████████  | 45121/56168 [02:24<00:19, 573.61it/s]Running loglikelihood requests:  80%|████████  | 45185/56168 [02:24<00:18, 581.80it/s]Running loglikelihood requests:  81%|████████  | 45249/56168 [02:24<00:19, 570.48it/s]Running loglikelihood requests:  81%|████████  | 45313/56168 [02:24<00:18, 571.73it/s]Running loglikelihood requests:  81%|████████  | 45377/56168 [02:24<00:18, 580.79it/s]Running loglikelihood requests:  81%|████████  | 45441/56168 [02:24<00:18, 567.30it/s]Running loglikelihood requests:  81%|████████  | 45505/56168 [02:25<00:18, 576.10it/s]Running loglikelihood requests:  81%|████████  | 45569/56168 [02:25<00:18, 584.38it/s]Running loglikelihood requests:  81%|████████  | 45633/56168 [02:25<00:17, 589.22it/s]Running loglikelihood requests:  81%|████████▏ | 45697/56168 [02:25<00:17, 590.71it/s]Running loglikelihood requests:  81%|████████▏ | 45761/56168 [02:25<00:17, 590.98it/s]Running loglikelihood requests:  82%|████████▏ | 45825/56168 [02:25<00:17, 592.97it/s]Running loglikelihood requests:  82%|████████▏ | 45889/56168 [02:25<00:17, 584.74it/s]Running loglikelihood requests:  82%|████████▏ | 45953/56168 [02:25<00:17, 577.13it/s]Running loglikelihood requests:  82%|████████▏ | 46017/56168 [02:25<00:17, 574.05it/s]Running loglikelihood requests:  82%|████████▏ | 46081/56168 [02:26<00:17, 580.80it/s]Running loglikelihood requests:  82%|████████▏ | 46145/56168 [02:26<00:17, 565.95it/s]Running loglikelihood requests:  82%|████████▏ | 46209/56168 [02:26<00:17, 565.33it/s]Running loglikelihood requests:  82%|████████▏ | 46273/56168 [02:26<00:16, 584.29it/s]Running loglikelihood requests:  82%|████████▏ | 46337/56168 [02:26<00:17, 576.83it/s]Running loglikelihood requests:  83%|████████▎ | 46401/56168 [02:26<00:16, 583.41it/s]Running loglikelihood requests:  83%|████████▎ | 46465/56168 [02:26<00:16, 597.99it/s]Running loglikelihood requests:  83%|████████▎ | 46529/56168 [02:26<00:15, 609.00it/s]Running loglikelihood requests:  83%|████████▎ | 46593/56168 [02:26<00:15, 616.56it/s]Running loglikelihood requests:  83%|████████▎ | 46657/56168 [02:26<00:15, 621.32it/s]Running loglikelihood requests:  83%|████████▎ | 46721/56168 [02:27<00:15, 610.65it/s]Running loglikelihood requests:  83%|████████▎ | 46789/56168 [02:27<00:14, 630.69it/s]Running loglikelihood requests:  83%|████████▎ | 46853/56168 [02:27<00:14, 633.07it/s]Running loglikelihood requests:  84%|████████▎ | 46917/56168 [02:27<00:15, 613.88it/s]Running loglikelihood requests:  84%|████████▎ | 46979/56168 [02:27<00:15, 606.68it/s]Running loglikelihood requests:  84%|████████▍ | 47047/56168 [02:27<00:14, 627.87it/s]Running loglikelihood requests:  84%|████████▍ | 47110/56168 [02:27<00:14, 619.12it/s]Running loglikelihood requests:  84%|████████▍ | 47173/56168 [02:27<00:14, 613.91it/s]Running loglikelihood requests:  84%|████████▍ | 47235/56168 [02:27<00:14, 597.90it/s]Running loglikelihood requests:  84%|████████▍ | 47302/56168 [02:28<00:14, 618.47it/s]Running loglikelihood requests:  84%|████████▍ | 47372/56168 [02:28<00:13, 642.03it/s]Running loglikelihood requests:  84%|████████▍ | 47437/56168 [02:28<00:13, 643.22it/s]Running loglikelihood requests:  85%|████████▍ | 47502/56168 [02:28<00:13, 644.39it/s]Running loglikelihood requests:  85%|████████▍ | 47567/56168 [02:28<00:13, 642.61it/s]Running loglikelihood requests:  85%|████████▍ | 47632/56168 [02:28<00:13, 632.88it/s]Running loglikelihood requests:  85%|████████▍ | 47696/56168 [02:28<00:13, 633.05it/s]Running loglikelihood requests:  85%|████████▌ | 47760/56168 [02:28<00:13, 633.27it/s]Running loglikelihood requests:  85%|████████▌ | 47824/56168 [02:28<00:13, 611.77it/s]Running loglikelihood requests:  85%|████████▌ | 47886/56168 [02:28<00:13, 609.93it/s]Running loglikelihood requests:  85%|████████▌ | 47948/56168 [02:29<00:13, 611.58it/s]Running loglikelihood requests:  85%|████████▌ | 48010/56168 [02:29<00:13, 600.89it/s]Running loglikelihood requests:  86%|████████▌ | 48071/56168 [02:29<00:13, 595.95it/s]Running loglikelihood requests:  86%|████████▌ | 48131/56168 [02:29<00:13, 590.02it/s]Running loglikelihood requests:  86%|████████▌ | 48193/56168 [02:29<00:14, 538.54it/s]Running loglikelihood requests:  86%|████████▌ | 48260/56168 [02:29<00:13, 574.16it/s]Running loglikelihood requests:  86%|████████▌ | 48321/56168 [02:29<00:13, 584.02it/s]Running loglikelihood requests:  86%|████████▌ | 48387/56168 [02:29<00:12, 605.71it/s]Running loglikelihood requests:  86%|████████▋ | 48459/56168 [02:29<00:12, 638.58it/s]Running loglikelihood requests:  86%|████████▋ | 48527/56168 [02:29<00:11, 650.56it/s]Running loglikelihood requests:  87%|████████▋ | 48595/56168 [02:30<00:11, 659.04it/s]Running loglikelihood requests:  87%|████████▋ | 48662/56168 [02:30<00:11, 661.31it/s]Running loglikelihood requests:  87%|████████▋ | 48729/56168 [02:30<00:11, 662.33it/s]Running loglikelihood requests:  87%|████████▋ | 48796/56168 [02:30<00:11, 663.77it/s]Running loglikelihood requests:  87%|████████▋ | 48863/56168 [02:30<00:10, 664.11it/s]Running loglikelihood requests:  87%|████████▋ | 48930/56168 [02:30<00:10, 665.69it/s]Running loglikelihood requests:  87%|████████▋ | 48997/56168 [02:30<00:10, 665.57it/s]Running loglikelihood requests:  87%|████████▋ | 49064/56168 [02:30<00:10, 664.27it/s]Running loglikelihood requests:  87%|████████▋ | 49131/56168 [02:30<00:10, 649.02it/s]Running loglikelihood requests:  88%|████████▊ | 49196/56168 [02:31<00:11, 629.80it/s]Running loglikelihood requests:  88%|████████▊ | 49260/56168 [02:31<00:11, 617.26it/s]Running loglikelihood requests:  88%|████████▊ | 49322/56168 [02:31<00:11, 596.93it/s]Running loglikelihood requests:  88%|████████▊ | 49382/56168 [02:31<00:11, 589.65it/s]Running loglikelihood requests:  88%|████████▊ | 49442/56168 [02:31<00:11, 590.12it/s]Running loglikelihood requests:  88%|████████▊ | 49502/56168 [02:31<00:11, 565.30it/s]Running loglikelihood requests:  88%|████████▊ | 49559/56168 [02:31<00:11, 557.72it/s]Running loglikelihood requests:  88%|████████▊ | 49615/56168 [02:31<00:11, 556.66it/s]Running loglikelihood requests:  88%|████████▊ | 49671/56168 [02:31<00:11, 548.40it/s]Running loglikelihood requests:  89%|████████▊ | 49729/56168 [02:31<00:11, 542.62it/s]Running loglikelihood requests:  89%|████████▊ | 49799/56168 [02:32<00:10, 587.49it/s]Running loglikelihood requests:  89%|████████▉ | 49859/56168 [02:32<00:11, 570.17it/s]Running loglikelihood requests:  89%|████████▉ | 49921/56168 [02:32<00:10, 578.28it/s]Running loglikelihood requests:  89%|████████▉ | 49985/56168 [02:32<00:10, 578.00it/s]Running loglikelihood requests:  89%|████████▉ | 50049/56168 [02:32<00:10, 580.72it/s]Running loglikelihood requests:  89%|████████▉ | 50127/56168 [02:32<00:09, 637.21it/s]Running loglikelihood requests:  89%|████████▉ | 50192/56168 [02:32<00:09, 624.96it/s]Running loglikelihood requests:  90%|████████▉ | 50273/56168 [02:32<00:08, 677.91it/s]Running loglikelihood requests:  90%|████████▉ | 50342/56168 [02:32<00:08, 680.95it/s]Running loglikelihood requests:  90%|████████▉ | 50420/56168 [02:33<00:08, 709.94it/s]Running loglikelihood requests:  90%|████████▉ | 50492/56168 [02:33<00:07, 711.59it/s]Running loglikelihood requests:  90%|█████████ | 50564/56168 [02:33<00:10, 557.09it/s]Running loglikelihood requests:  90%|█████████ | 50636/56168 [02:33<00:09, 597.47it/s]Running loglikelihood requests:  90%|█████████ | 50701/56168 [02:33<00:08, 610.04it/s]Running loglikelihood requests:  90%|█████████ | 50769/56168 [02:33<00:08, 628.81it/s]Running loglikelihood requests:  91%|█████████ | 50844/56168 [02:33<00:08, 662.56it/s]Running loglikelihood requests:  91%|█████████ | 50915/56168 [02:33<00:07, 675.89it/s]Running loglikelihood requests:  91%|█████████ | 50999/56168 [02:33<00:07, 723.27it/s]Running loglikelihood requests:  91%|█████████ | 51073/56168 [02:34<00:08, 581.09it/s]Running loglikelihood requests:  91%|█████████ | 51149/56168 [02:34<00:08, 625.57it/s]Running loglikelihood requests:  91%|█████████ | 51223/56168 [02:34<00:07, 655.66it/s]Running loglikelihood requests:  91%|█████████▏| 51301/56168 [02:34<00:07, 689.61it/s]Running loglikelihood requests:  91%|█████████▏| 51390/56168 [02:34<00:06, 745.79it/s]Running loglikelihood requests:  92%|█████████▏| 51467/56168 [02:34<00:07, 605.97it/s]Running loglikelihood requests:  92%|█████████▏| 51549/56168 [02:34<00:07, 658.71it/s]Running loglikelihood requests:  92%|█████████▏| 51633/56168 [02:34<00:06, 705.94it/s]Running loglikelihood requests:  92%|█████████▏| 51713/56168 [02:35<00:07, 592.46it/s]Running loglikelihood requests:  92%|█████████▏| 51801/56168 [02:35<00:06, 661.01it/s]Running loglikelihood requests:  92%|█████████▏| 51876/56168 [02:35<00:06, 683.59it/s]Running loglikelihood requests:  93%|█████████▎| 51961/56168 [02:35<00:05, 727.61it/s]Running loglikelihood requests:  93%|█████████▎| 52038/56168 [02:35<00:06, 599.62it/s]Running loglikelihood requests:  93%|█████████▎| 52119/56168 [02:35<00:06, 650.53it/s]Running loglikelihood requests:  93%|█████████▎| 52201/56168 [02:35<00:05, 693.95it/s]Running loglikelihood requests:  93%|█████████▎| 52289/56168 [02:35<00:06, 603.52it/s]Running loglikelihood requests:  93%|█████████▎| 52381/56168 [02:36<00:05, 678.47it/s]Running loglikelihood requests:  93%|█████████▎| 52466/56168 [02:36<00:05, 721.77it/s]Running loglikelihood requests:  94%|█████████▎| 52545/56168 [02:36<00:05, 604.10it/s]Running loglikelihood requests:  94%|█████████▎| 52641/56168 [02:36<00:05, 688.03it/s]Running loglikelihood requests:  94%|█████████▍| 52732/56168 [02:36<00:04, 743.89it/s]Running loglikelihood requests:  94%|█████████▍| 52813/56168 [02:36<00:05, 623.37it/s]Running loglikelihood requests:  94%|█████████▍| 52913/56168 [02:36<00:04, 712.38it/s]Running loglikelihood requests:  94%|█████████▍| 52993/56168 [02:37<00:05, 604.40it/s]Running loglikelihood requests:  95%|█████████▍| 53096/56168 [02:37<00:04, 701.69it/s]Running loglikelihood requests:  95%|█████████▍| 53185/56168 [02:37<00:04, 616.53it/s]Running loglikelihood requests:  95%|█████████▍| 53284/56168 [02:37<00:04, 700.40it/s]Running loglikelihood requests:  95%|█████████▌| 53377/56168 [02:37<00:04, 624.17it/s]Running loglikelihood requests:  95%|█████████▌| 53463/56168 [02:37<00:03, 676.68it/s]Running loglikelihood requests:  95%|█████████▌| 53554/56168 [02:37<00:03, 732.96it/s]Running loglikelihood requests:  95%|█████████▌| 53634/56168 [02:37<00:04, 617.03it/s]Running loglikelihood requests:  96%|█████████▌| 53729/56168 [02:38<00:03, 693.89it/s]Running loglikelihood requests:  96%|█████████▌| 53824/56168 [02:38<00:03, 757.36it/s]Running loglikelihood requests:  96%|█████████▌| 53907/56168 [02:38<00:03, 668.35it/s]Running loglikelihood requests:  96%|█████████▌| 54017/56168 [02:38<00:03, 658.56it/s]Running loglikelihood requests:  96%|█████████▋| 54145/56168 [02:38<00:02, 692.32it/s]Running loglikelihood requests:  97%|█████████▋| 54273/56168 [02:38<00:02, 712.45it/s]Running loglikelihood requests:  97%|█████████▋| 54401/56168 [02:39<00:02, 725.71it/s]Running loglikelihood requests:  97%|█████████▋| 54529/56168 [02:39<00:02, 737.89it/s]Running loglikelihood requests:  97%|█████████▋| 54657/56168 [02:39<00:02, 747.61it/s]Running loglikelihood requests:  98%|█████████▊| 54785/56168 [02:39<00:01, 750.09it/s]Running loglikelihood requests:  98%|█████████▊| 54913/56168 [02:39<00:01, 754.62it/s]Running loglikelihood requests:  98%|█████████▊| 55041/56168 [02:39<00:01, 758.66it/s]Running loglikelihood requests:  98%|█████████▊| 55169/56168 [02:40<00:01, 759.01it/s]Running loglikelihood requests:  98%|█████████▊| 55297/56168 [02:40<00:01, 756.24it/s]Running loglikelihood requests:  99%|█████████▊| 55425/56168 [02:40<00:00, 760.23it/s]Running loglikelihood requests:  99%|█████████▉| 55553/56168 [02:40<00:00, 762.81it/s]Running loglikelihood requests:  99%|█████████▉| 55661/56168 [02:40<00:00, 826.40it/s]Running loglikelihood requests:  99%|█████████▉| 55747/56168 [02:40<00:00, 732.33it/s]Running loglikelihood requests:  99%|█████████▉| 55873/56168 [02:40<00:00, 740.96it/s]Running loglikelihood requests: 100%|█████████▉| 56001/56168 [02:41<00:00, 750.25it/s]Running loglikelihood requests: 100%|█████████▉| 56129/56168 [02:41<00:00, 774.50it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:41<00:00, 348.28it/s]
2025-05-15:03:28:36,735 WARNING  [huggingface.py:1353] Failed to get model SHA for /work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo/checkpoint-150 at revision main. Error: Repo id must be in the form 'repo_name' or 'namespace/repo_name': '/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo/checkpoint-150'. Use `repo_type` argument if needed.
2025-05-15:03:28:43,129 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo/checkpoint-150,tokenizer=meta-llama/Meta-Llama-3-8b-Instruct), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.6971|±  |0.0038|
| - humanities                          |      2|none  |      |acc   |↑  |0.6708|±  |0.0067|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.5635|±  |0.0444|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.7758|±  |0.0326|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.8627|±  |0.0242|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.8819|±  |0.0210|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.7934|±  |0.0370|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.7685|±  |0.0408|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.8160|±  |0.0304|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6936|±  |0.0248|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.5486|±  |0.0166|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.7363|±  |0.0250|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.7593|±  |0.0238|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.5939|±  |0.0125|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.8363|±  |0.0284|
| - other                               |      2|none  |      |acc   |↑  |0.7602|±  |0.0075|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.8100|±  |0.0394|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.7623|±  |0.0262|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.7688|±  |0.0321|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.5400|±  |0.0501|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.7578|±  |0.0288|
|  - management                         |      1|none  |     0|acc   |↑  |0.7767|±  |0.0412|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8632|±  |0.0225|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.7600|±  |0.0429|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.8110|±  |0.0140|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.7255|±  |0.0256|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.6773|±  |0.0279|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.8309|±  |0.0228|
|  - virology                           |      1|none  |     0|acc   |↑  |0.5482|±  |0.0387|
| - social sciences                     |      2|none  |      |acc   |↑  |0.7449|±  |0.0078|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.6140|±  |0.0458|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7121|±  |0.0323|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8238|±  |0.0275|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.6846|±  |0.0236|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.7689|±  |0.0274|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.8422|±  |0.0156|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7023|±  |0.0401|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.7320|±  |0.0179|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6727|±  |0.0449|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.6367|±  |0.0308|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8109|±  |0.0277|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8000|±  |0.0402|
| - stem                                |      2|none  |      |acc   |↑  |0.6277|±  |0.0085|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.5200|±  |0.0502|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.6889|±  |0.0400|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.7368|±  |0.0358|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.7778|±  |0.0348|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4700|±  |0.0502|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.6100|±  |0.0490|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.4900|±  |0.0502|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5490|±  |0.0495|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.8100|±  |0.0394|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.6340|±  |0.0315|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.6621|±  |0.0394|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.6138|±  |0.0251|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7484|±  |0.0247|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.5764|±  |0.0348|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.7200|±  |0.0451|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.5333|±  |0.0304|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.4834|±  |0.0408|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.6389|±  |0.0328|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.5625|±  |0.0471|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.6971|±  |0.0038|
| - humanities     |      2|none  |      |acc   |↑  |0.6708|±  |0.0067|
| - other          |      2|none  |      |acc   |↑  |0.7602|±  |0.0075|
| - social sciences|      2|none  |      |acc   |↑  |0.7449|±  |0.0078|
| - stem           |      2|none  |      |acc   |↑  |0.6277|±  |0.0085|

2025-05-15:03:28:50,616 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-15:03:28:50,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,829 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,837 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,845 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,857 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,860 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,866 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,872 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,881 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:50,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,650 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,658 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,662 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,666 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,675 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,690 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,714 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:51,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,610 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,623 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,635 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,641 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:52,650 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,005 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,013 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,079 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,095 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,112 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,154 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,158 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,162 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,167 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,171 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,184 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,188 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,192 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,230 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,243 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,252 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,256 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,260 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,277 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,281 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,290 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,294 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,308 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,308 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,311 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,402 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,405 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,409 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,424 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,427 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,440 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,443 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,459 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,471 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,474 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,489 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,492 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,522 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,528 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,538 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,547 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,561 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,566 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,569 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,581 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,610 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,625 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,639 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,645 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,648 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:53,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:54,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:54,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:54,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:54,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:54,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:54,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:54,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:54,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,744 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,759 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,830 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,842 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,846 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,856 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,861 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,877 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,881 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,883 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,885 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,887 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,889 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,892 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,894 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,896 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,902 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,906 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,922 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,924 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,930 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,936 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,948 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,950 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,956 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,960 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,968 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,980 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,982 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,984 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,990 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,994 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:55,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,008 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,010 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,012 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,016 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,020 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,032 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,041 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,043 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,053 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,059 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,063 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,069 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,072 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,074 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,076 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,078 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,082 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,084 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,086 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,089 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,096 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,099 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,103 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,111 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,113 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,114 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,118 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,121 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,123 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,130 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,132 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,135 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,140 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,142 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,144 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,154 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,158 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,162 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,163 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,165 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,166 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,168 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,169 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,171 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,173 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,176 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,180 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,182 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,184 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,188 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,190 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,198 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,202 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,204 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,206 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,207 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,212 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,215 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,218 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,224 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,228 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,229 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,237 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,245 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,247 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,252 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,260 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,262 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,263 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,266 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,268 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,271 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,273 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,347 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,353 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:56,364 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:58,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:58,979 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:03:28:58,983 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-15:03:28:58,986 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-15:03:28:58,986 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo_kl/checkpoint-150', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-15:03:29:01,612 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-15:03:29:02,245 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:02<00:08,  2.81s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:04<00:04,  2.37s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:07<00:02,  2.31s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:07<00:00,  1.74s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:07<00:00,  1.99s/it]
2025-05-15:03:29:29,005 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,005 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,005 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,005 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,005 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,006 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,006 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,006 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,006 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,006 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,006 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,006 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,006 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,007 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,007 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,007 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,007 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,007 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,007 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,007 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,007 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,008 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,008 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,008 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,008 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,008 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,008 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,008 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,008 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,009 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,009 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,009 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,009 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,009 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,010 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,010 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,010 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,010 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,010 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,010 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,011 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,011 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,011 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,011 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,011 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,011 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,012 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,012 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,012 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,012 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,012 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,012 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,012 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,013 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,013 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,013 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,013 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:03:29:29,013 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-15:03:29:29,019 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 77%|███████▋  | 77/100 [00:00<00:00, 764.22it/s]100%|██████████| 100/100 [00:00<00:00, 765.68it/s]
2025-05-15:03:29:29,155 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 27%|██▋       | 83/310 [00:00<00:00, 822.94it/s] 54%|█████▎    | 166/310 [00:00<00:00, 733.66it/s] 77%|███████▋  | 240/310 [00:00<00:00, 701.46it/s]100%|██████████| 310/310 [00:00<00:00, 681.62it/s]
2025-05-15:03:29:29,621 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 67%|██████▋   | 67/100 [00:00<00:00, 660.28it/s]100%|██████████| 100/100 [00:00<00:00, 662.69it/s]
2025-05-15:03:29:29,777 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 48%|████▊     | 69/145 [00:00<00:00, 681.66it/s] 96%|█████████▌| 139/145 [00:00<00:00, 690.51it/s]100%|██████████| 145/145 [00:00<00:00, 687.19it/s]
2025-05-15:03:29:29,995 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 68%|██████▊   | 68/100 [00:00<00:00, 673.01it/s]100%|██████████| 100/100 [00:00<00:00, 680.33it/s]
2025-05-15:03:29:30,147 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 37%|███▋      | 75/203 [00:00<00:00, 747.54it/s] 77%|███████▋  | 156/203 [00:00<00:00, 783.99it/s]100%|██████████| 203/203 [00:00<00:00, 790.06it/s]
2025-05-15:03:29:30,412 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 55%|█████▌    | 84/152 [00:00<00:00, 831.81it/s]100%|██████████| 152/152 [00:00<00:00, 834.15it/s]
2025-05-15:03:29:30,601 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 66%|██████▌   | 67/102 [00:00<00:00, 669.22it/s]100%|██████████| 102/102 [00:00<00:00, 657.26it/s]
2025-05-15:03:29:30,761 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 66%|██████▌   | 66/100 [00:00<00:00, 652.86it/s]100%|██████████| 100/100 [00:00<00:00, 643.12it/s]
2025-05-15:03:29:30,922 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 47%|████▋     | 67/144 [00:00<00:00, 661.08it/s] 93%|█████████▎| 134/144 [00:00<00:00, 659.38it/s]100%|██████████| 144/144 [00:00<00:00, 657.72it/s]
2025-05-15:03:29:31,149 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 28%|██▊       | 65/235 [00:00<00:00, 641.81it/s] 56%|█████▌    | 131/235 [00:00<00:00, 650.40it/s] 84%|████████▍ | 197/235 [00:00<00:00, 625.16it/s]100%|██████████| 235/235 [00:00<00:00, 626.97it/s]
2025-05-15:03:29:31,534 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 64%|██████▍   | 72/112 [00:00<00:00, 719.94it/s]100%|██████████| 112/112 [00:00<00:00, 721.00it/s]
2025-05-15:03:29:31,696 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 29%|██▉       | 79/270 [00:00<00:00, 783.84it/s] 59%|█████▉    | 160/270 [00:00<00:00, 798.71it/s] 89%|████████▉ | 240/270 [00:00<00:00, 640.78it/s]100%|██████████| 270/270 [00:00<00:00, 659.22it/s]
2025-05-15:03:29:32,116 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 52%|█████▏    | 52/100 [00:00<00:00, 413.49it/s] 94%|█████████▍| 94/100 [00:00<00:00, 298.40it/s]100%|██████████| 100/100 [00:00<00:00, 311.99it/s]
2025-05-15:03:29:32,450 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 31%|███       | 31/100 [00:00<00:00, 308.53it/s] 67%|██████▋   | 67/100 [00:00<00:00, 328.44it/s]100%|██████████| 100/100 [00:00<00:00, 354.31it/s]
2025-05-15:03:29:32,749 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 39%|███▊      | 52/135 [00:00<00:00, 519.38it/s] 77%|███████▋  | 104/135 [00:00<00:00, 500.09it/s]100%|██████████| 135/135 [00:00<00:00, 494.55it/s]
2025-05-15:03:29:33,034 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 13%|█▎        | 48/378 [00:00<00:00, 474.65it/s] 27%|██▋       | 101/378 [00:00<00:00, 506.86it/s] 40%|████      | 152/378 [00:00<00:00, 489.66it/s] 53%|█████▎    | 202/378 [00:00<00:00, 481.05it/s] 66%|██████▋   | 251/378 [00:00<00:00, 419.53it/s] 80%|███████▉  | 301/378 [00:00<00:00, 442.16it/s] 92%|█████████▏| 347/378 [00:00<00:00, 411.37it/s]100%|██████████| 378/378 [00:00<00:00, 439.71it/s]
2025-05-15:03:29:33,915 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 30%|██▉       | 45/151 [00:00<00:00, 449.17it/s] 63%|██████▎   | 95/151 [00:00<00:00, 477.78it/s] 95%|█████████▍| 143/151 [00:00<00:00, 467.68it/s]100%|██████████| 151/151 [00:00<00:00, 465.31it/s]
2025-05-15:03:29:34,254 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 21%|██        | 45/216 [00:00<00:00, 449.61it/s] 44%|████▎     | 94/216 [00:00<00:00, 455.99it/s] 67%|██████▋   | 144/216 [00:00<00:00, 473.31it/s] 89%|████████▉ | 192/216 [00:00<00:00, 467.03it/s]100%|██████████| 216/216 [00:00<00:00, 458.24it/s]
2025-05-15:03:29:34,735 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 17%|█▋        | 45/265 [00:00<00:00, 445.55it/s] 40%|███▉      | 105/265 [00:00<00:00, 534.04it/s] 60%|██████    | 159/265 [00:00<00:00, 518.50it/s] 80%|███████▉  | 211/265 [00:00<00:00, 514.48it/s] 99%|█████████▉| 263/265 [00:00<00:00, 481.47it/s]100%|██████████| 265/265 [00:00<00:00, 495.31it/s]
2025-05-15:03:29:35,287 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 47%|████▋     | 47/100 [00:00<00:00, 466.96it/s] 94%|█████████▍| 94/100 [00:00<00:00, 434.73it/s]100%|██████████| 100/100 [00:00<00:00, 451.68it/s]
2025-05-15:03:29:35,520 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 46%|████▌     | 47/103 [00:00<00:00, 466.98it/s] 95%|█████████▌| 98/103 [00:00<00:00, 488.43it/s]100%|██████████| 103/103 [00:00<00:00, 493.02it/s]
2025-05-15:03:29:35,739 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 15%|█▌        | 46/306 [00:00<00:00, 455.39it/s] 30%|███       | 92/306 [00:00<00:00, 396.23it/s] 55%|█████▌    | 169/306 [00:00<00:00, 552.59it/s] 80%|████████  | 245/306 [00:00<00:00, 629.78it/s]100%|██████████| 306/306 [00:00<00:00, 600.55it/s]
2025-05-15:03:29:36,267 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 45%|████▍     | 77/173 [00:00<00:00, 769.60it/s] 89%|████████▉ | 154/173 [00:00<00:00, 588.92it/s]100%|██████████| 173/173 [00:00<00:00, 624.46it/s]
2025-05-15:03:29:36,552 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 33%|███▎      | 55/166 [00:00<00:00, 527.94it/s] 65%|██████▌   | 108/166 [00:00<00:00, 437.14it/s] 92%|█████████▏| 153/166 [00:00<00:00, 439.19it/s]100%|██████████| 166/166 [00:00<00:00, 452.86it/s]
2025-05-15:03:29:36,933 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 16%|█▌        | 44/272 [00:00<00:00, 416.61it/s] 32%|███▏      | 86/272 [00:00<00:00, 411.11it/s] 50%|█████     | 137/272 [00:00<00:00, 454.27it/s] 71%|███████   | 193/272 [00:00<00:00, 493.25it/s] 95%|█████████▌| 259/272 [00:00<00:00, 552.63it/s]100%|██████████| 272/272 [00:00<00:00, 514.45it/s]
2025-05-15:03:29:37,473 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 10%|▉         | 78/783 [00:00<00:00, 777.49it/s] 20%|█▉        | 156/783 [00:00<00:00, 737.89it/s] 29%|██▉       | 230/783 [00:00<00:00, 562.59it/s] 37%|███▋      | 290/783 [00:00<00:00, 531.73it/s] 44%|████▍     | 346/783 [00:00<00:00, 485.05it/s] 51%|█████     | 396/783 [00:00<00:00, 466.05it/s] 61%|██████    | 476/783 [00:00<00:00, 557.73it/s] 71%|███████▏  | 559/783 [00:00<00:00, 634.12it/s] 80%|███████▉  | 625/783 [00:01<00:00, 619.32it/s] 88%|████████▊ | 689/783 [00:01<00:00, 611.02it/s] 96%|█████████▌| 752/783 [00:01<00:00, 612.60it/s]100%|██████████| 783/783 [00:01<00:00, 592.50it/s]
2025-05-15:03:29:38,822 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 82%|████████▏ | 82/100 [00:00<00:00, 815.74it/s]100%|██████████| 100/100 [00:00<00:00, 818.64it/s]
2025-05-15:03:29:38,955 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 85%|████████▌ | 85/100 [00:00<00:00, 847.46it/s]100%|██████████| 100/100 [00:00<00:00, 847.02it/s]
2025-05-15:03:29:39,077 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 30%|███       | 85/282 [00:00<00:00, 840.18it/s] 60%|██████    | 170/282 [00:00<00:00, 767.75it/s] 88%|████████▊ | 248/282 [00:00<00:00, 744.97it/s]100%|██████████| 282/282 [00:00<00:00, 750.59it/s]
2025-05-15:03:29:39,463 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:03, 69.47it/s] 38%|███▊      | 89/234 [00:00<00:00, 284.82it/s] 68%|██████▊   | 158/234 [00:00<00:00, 416.68it/s] 97%|█████████▋| 227/234 [00:00<00:00, 502.25it/s]100%|██████████| 234/234 [00:00<00:00, 398.75it/s]
2025-05-15:03:29:40,059 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 29%|██▉       | 65/223 [00:00<00:00, 642.93it/s] 60%|█████▉    | 133/223 [00:00<00:00, 660.72it/s] 91%|█████████ | 202/223 [00:00<00:00, 672.23it/s]100%|██████████| 223/223 [00:00<00:00, 668.45it/s]
2025-05-15:03:29:40,403 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 63%|██████▎   | 69/110 [00:00<00:00, 687.43it/s]100%|██████████| 110/110 [00:00<00:00, 688.80it/s]
2025-05-15:03:29:40,569 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 34%|███▍      | 69/201 [00:00<00:00, 680.70it/s] 69%|██████▊   | 138/201 [00:00<00:00, 683.36it/s]100%|██████████| 201/201 [00:00<00:00, 683.58it/s]
2025-05-15:03:29:40,872 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 34%|███▍      | 68/198 [00:00<00:00, 678.06it/s] 69%|██████▊   | 136/198 [00:00<00:00, 673.17it/s]100%|██████████| 198/198 [00:00<00:00, 677.30it/s]
2025-05-15:03:29:41,174 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 30%|██▉       | 73/245 [00:00<00:00, 719.88it/s] 59%|█████▉    | 145/245 [00:00<00:00, 719.22it/s] 91%|█████████▏| 224/245 [00:00<00:00, 749.58it/s]100%|██████████| 245/245 [00:00<00:00, 745.61it/s]
2025-05-15:03:29:41,514 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 15%|█▍        | 80/545 [00:00<00:00, 798.83it/s] 29%|██▉       | 160/545 [00:00<00:00, 789.63it/s] 44%|████▍     | 242/545 [00:00<00:00, 801.63it/s] 59%|█████▉    | 323/545 [00:00<00:00, 749.79it/s] 74%|███████▍  | 404/545 [00:00<00:00, 769.26it/s] 88%|████████▊ | 482/545 [00:00<00:00, 759.41it/s]100%|██████████| 545/545 [00:00<00:00, 759.74it/s]
2025-05-15:03:29:42,251 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 71%|███████   | 71/100 [00:00<00:00, 706.44it/s]100%|██████████| 100/100 [00:00<00:00, 713.10it/s]
2025-05-15:03:29:42,398 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 18%|█▊        | 72/390 [00:00<00:00, 710.97it/s] 37%|███▋      | 144/390 [00:00<00:00, 661.20it/s] 54%|█████▍    | 211/390 [00:00<00:00, 647.84it/s] 71%|███████   | 276/390 [00:00<00:00, 572.89it/s] 86%|████████▌ | 336/390 [00:00<00:00, 580.64it/s]100%|██████████| 390/390 [00:00<00:00, 607.07it/s]
2025-05-15:03:29:43,057 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 21%|██        | 50/238 [00:00<00:00, 471.45it/s] 48%|████▊     | 115/238 [00:00<00:00, 569.63it/s] 77%|███████▋  | 184/238 [00:00<00:00, 622.24it/s]100%|██████████| 238/238 [00:00<00:00, 605.16it/s]
2025-05-15:03:29:43,461 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 47%|████▋     | 54/114 [00:00<00:00, 538.30it/s] 96%|█████████▋| 110/114 [00:00<00:00, 541.39it/s]100%|██████████| 114/114 [00:00<00:00, 544.74it/s]
2025-05-15:03:29:43,676 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 10%|▉         | 60/612 [00:00<00:00, 557.17it/s] 19%|█▉        | 116/612 [00:00<00:00, 547.76it/s] 29%|██▊       | 175/612 [00:00<00:00, 564.84it/s] 38%|███▊      | 233/612 [00:00<00:00, 558.03it/s] 47%|████▋     | 289/612 [00:00<00:00, 556.37it/s] 56%|█████▋    | 345/612 [00:00<00:00, 547.47it/s] 66%|██████▌   | 403/612 [00:00<00:00, 556.25it/s] 76%|███████▌  | 466/612 [00:00<00:00, 578.68it/s] 87%|████████▋ | 535/612 [00:00<00:00, 612.48it/s] 98%|█████████▊| 598/612 [00:01<00:00, 617.58it/s]100%|██████████| 612/612 [00:01<00:00, 584.60it/s]
2025-05-15:03:29:44,749 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 43%|████▎     | 56/131 [00:00<00:00, 558.36it/s] 87%|████████▋ | 114/131 [00:00<00:00, 560.38it/s]100%|██████████| 131/131 [00:00<00:00, 560.19it/s]
2025-05-15:03:29:44,990 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 33%|███▎      | 63/193 [00:00<00:00, 623.51it/s] 65%|██████▌   | 126/193 [00:00<00:00, 570.11it/s] 97%|█████████▋| 188/193 [00:00<00:00, 591.39it/s]100%|██████████| 193/193 [00:00<00:00, 594.17it/s]
2025-05-15:03:29:45,324 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  7%|▋         | 66/895 [00:00<00:01, 646.38it/s] 15%|█▌        | 135/895 [00:00<00:01, 671.81it/s] 23%|██▎       | 204/895 [00:00<00:01, 676.55it/s] 32%|███▏      | 285/895 [00:00<00:00, 728.35it/s] 42%|████▏     | 372/895 [00:00<00:00, 776.99it/s] 51%|█████▏    | 459/895 [00:00<00:00, 806.15it/s] 61%|██████    | 545/895 [00:00<00:00, 823.19it/s] 71%|███████   | 631/895 [00:00<00:00, 832.80it/s] 80%|███████▉  | 715/895 [00:00<00:00, 832.91it/s] 89%|████████▉ | 801/895 [00:01<00:00, 839.40it/s] 99%|█████████▉| 885/895 [00:01<00:00, 809.77it/s]100%|██████████| 895/895 [00:01<00:00, 789.53it/s]
2025-05-15:03:29:46,507 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 22%|██▏       | 52/237 [00:00<00:00, 518.94it/s] 47%|████▋     | 111/237 [00:00<00:00, 557.44it/s] 70%|███████   | 167/237 [00:00<00:00, 549.57it/s] 94%|█████████▎| 222/237 [00:00<00:00, 535.33it/s]100%|██████████| 237/237 [00:00<00:00, 546.34it/s]
2025-05-15:03:29:46,952 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 34%|███▍      | 56/165 [00:00<00:00, 556.32it/s] 70%|██████▉   | 115/165 [00:00<00:00, 573.61it/s]100%|██████████| 165/165 [00:00<00:00, 572.62it/s]
2025-05-15:03:29:47,251 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 16%|█▌        | 49/311 [00:00<00:00, 486.92it/s] 32%|███▏      | 98/311 [00:00<00:00, 464.17it/s] 47%|████▋     | 147/311 [00:00<00:00, 472.58it/s] 63%|██████▎   | 197/311 [00:00<00:00, 482.23it/s] 79%|███████▉  | 246/311 [00:00<00:00, 452.32it/s] 97%|█████████▋| 303/311 [00:00<00:00, 489.47it/s]100%|██████████| 311/311 [00:00<00:00, 482.74it/s]
2025-05-15:03:29:47,945 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 15%|█▌        | 52/346 [00:00<00:00, 513.70it/s] 31%|███       | 106/346 [00:00<00:00, 528.94it/s] 46%|████▌     | 159/346 [00:00<00:00, 510.53it/s] 63%|██████▎   | 219/346 [00:00<00:00, 541.98it/s] 79%|███████▉  | 275/346 [00:00<00:00, 546.42it/s] 95%|█████████▌| 330/346 [00:00<00:00, 545.49it/s]100%|██████████| 346/346 [00:00<00:00, 542.65it/s]
2025-05-15:03:29:48,598 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 26%|██▋       | 54/204 [00:00<00:00, 539.27it/s] 53%|█████▎    | 108/204 [00:00<00:00, 538.95it/s] 81%|████████  | 165/204 [00:00<00:00, 551.20it/s]100%|██████████| 204/204 [00:00<00:00, 545.99it/s]
2025-05-15:03:29:48,983 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 45%|████▌     | 55/121 [00:00<00:00, 548.26it/s] 91%|█████████ | 110/121 [00:00<00:00, 543.08it/s]100%|██████████| 121/121 [00:00<00:00, 537.31it/s]
2025-05-15:03:29:49,215 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  4%|▍         | 59/1534 [00:00<00:02, 580.19it/s]  8%|▊         | 125/1534 [00:00<00:02, 622.19it/s] 13%|█▎        | 193/1534 [00:00<00:02, 647.51it/s] 17%|█▋        | 259/1534 [00:00<00:01, 648.62it/s] 21%|██        | 324/1534 [00:00<00:01, 631.09it/s] 26%|██▌       | 401/1534 [00:00<00:01, 674.49it/s] 31%|███       | 469/1534 [00:00<00:01, 607.74it/s] 35%|███▍      | 531/1534 [00:00<00:01, 568.01it/s] 38%|███▊      | 589/1534 [00:00<00:01, 535.30it/s] 42%|████▏     | 644/1534 [00:01<00:01, 465.03it/s] 45%|████▌     | 693/1534 [00:01<00:01, 463.66it/s] 48%|████▊     | 741/1534 [00:01<00:01, 460.11it/s] 51%|█████▏    | 789/1534 [00:01<00:01, 465.23it/s] 55%|█████▍    | 837/1534 [00:01<00:01, 469.12it/s] 58%|█████▊    | 886/1534 [00:01<00:01, 473.59it/s] 61%|██████    | 934/1534 [00:01<00:01, 439.46it/s] 64%|██████▍   | 979/1534 [00:01<00:01, 432.16it/s] 67%|██████▋   | 1028/1534 [00:02<00:01, 439.61it/s] 70%|██████▉   | 1073/1534 [00:02<00:01, 432.01it/s] 73%|███████▎  | 1117/1534 [00:02<00:00, 432.49it/s] 76%|███████▌  | 1161/1534 [00:02<00:00, 421.13it/s] 78%|███████▊  | 1204/1534 [00:02<00:00, 412.24it/s] 83%|████████▎ | 1271/1534 [00:02<00:00, 483.92it/s] 88%|████████▊ | 1355/1534 [00:02<00:00, 584.52it/s] 94%|█████████▍| 1439/1534 [00:02<00:00, 658.06it/s] 99%|█████████▉| 1526/1534 [00:02<00:00, 720.10it/s]100%|██████████| 1534/1534 [00:02<00:00, 536.48it/s]
2025-05-15:03:29:52,155 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 45%|████▌     | 77/171 [00:00<00:00, 767.16it/s] 90%|█████████ | 154/171 [00:00<00:00, 710.62it/s]100%|██████████| 171/171 [00:00<00:00, 713.73it/s]
2025-05-15:03:29:52,402 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 69%|██████▉   | 75/108 [00:00<00:00, 743.84it/s]100%|██████████| 108/108 [00:00<00:00, 731.85it/s]
2025-05-15:03:29:52,555 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 59%|█████▊    | 74/126 [00:00<00:00, 733.39it/s]100%|██████████| 126/126 [00:00<00:00, 723.42it/s]
2025-05-15:03:29:52,736 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 22%|██▏       | 72/324 [00:00<00:00, 719.81it/s] 44%|████▍     | 144/324 [00:00<00:00, 248.74it/s] 67%|██████▋   | 217/324 [00:00<00:00, 356.30it/s] 89%|████████▉ | 289/324 [00:00<00:00, 443.40it/s]100%|██████████| 324/324 [00:00<00:00, 408.12it/s]
2025-05-15:03:29:53,542 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 28%|██▊       | 45/163 [00:00<00:00, 444.65it/s] 63%|██████▎   | 103/163 [00:00<00:00, 507.56it/s] 98%|█████████▊| 160/163 [00:00<00:00, 533.80it/s]100%|██████████| 163/163 [00:00<00:00, 522.91it/s]
2025-05-15:03:29:53,862 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<32:33:34,  2.09s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:02<33:53, 27.59it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:03<20:56, 44.62it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<16:33, 56.34it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<14:16, 65.30it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<12:54, 72.07it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:06<12:02, 77.17it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<11:19, 81.98it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<10:46, 86.05it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:08<10:21, 89.44it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:02, 92.15it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<09:46, 94.63it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:10<09:25, 97.89it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<09:07, 101.06it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:11<08:54, 103.45it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:12<08:43, 105.40it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:12<08:33, 107.40it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:13<08:24, 109.14it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:14<08:16, 110.76it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:14<08:08, 112.58it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:15<08:00, 114.25it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:15<07:53, 115.86it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:16<07:50, 116.44it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:16<07:46, 117.18it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:17<07:41, 118.47it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:17<07:31, 120.79it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:18<07:24, 122.68it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:18<07:18, 124.21it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:19<07:13, 125.38it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:19<07:09, 126.48it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:20<07:03, 127.97it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:20<07:01, 128.42it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:21<06:59, 129.10it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:21<06:58, 129.25it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:22<06:57, 129.42it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:22<06:53, 130.31it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:23<06:53, 130.39it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:23<06:56, 129.25it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:24<06:48, 131.67it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:24<06:42, 133.46it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:25<06:36, 135.07it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:25<06:29, 137.35it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:26<06:24, 138.91it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:26<06:22, 139.57it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:26<06:16, 141.61it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:27<06:12, 142.97it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:27<06:09, 143.90it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:28<06:07, 144.77it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:28<06:06, 145.06it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:29<06:03, 146.09it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:29<06:01, 146.58it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:29<05:57, 147.94it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:30<05:54, 149.00it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:30<05:52, 149.91it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:31<05:49, 150.76it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:31<05:50, 150.08it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:32<05:47, 151.37it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:32<05:45, 152.16it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:32<05:41, 153.64it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:33<05:38, 154.94it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:33<05:35, 155.80it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:34<05:33, 156.56it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:34<05:33, 156.53it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:34<05:29, 158.13it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:35<05:26, 159.39it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:35<05:23, 160.68it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:36<05:21, 161.71it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:36<05:19, 162.39it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:36<05:13, 165.52it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:37<05:08, 167.63it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:37<05:05, 169.20it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:37<05:02, 170.72it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:38<05:00, 171.47it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:38<04:58, 172.44it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:39<04:56, 173.19it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:39<04:55, 173.54it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:39<04:54, 174.24it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:40<04:52, 175.10it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:40<04:50, 175.96it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:40<04:48, 177.31it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:41<04:46, 178.46it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:41<04:44, 179.13it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:41<04:42, 179.96it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:42<04:41, 180.67it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:42<04:40, 180.90it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:42<04:40, 181.12it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:43<04:39, 181.49it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:43<04:37, 182.21it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:44<04:37, 182.32it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:44<04:34, 184.06it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:44<04:31, 185.76it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:45<04:29, 186.52it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:45<04:28, 187.42it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:45<04:27, 188.05it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:46<04:25, 188.95it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:46<04:24, 189.26it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:46<04:18, 193.73it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:46<04:12, 197.57it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:47<04:09, 200.16it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:47<04:06, 202.03it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:47<04:04, 203.75it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:48<04:02, 204.98it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:48<04:00, 206.12it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:48<03:58, 207.52it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:49<03:57, 208.58it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:49<03:56, 209.45it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:49<03:54, 210.17it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:50<03:53, 210.92it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:50<03:53, 210.70it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:50<03:52, 211.58it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:50<03:49, 213.83it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:51<03:48, 215.02it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:51<03:46, 216.21it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:51<03:45, 217.20it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:52<03:44, 218.14it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:52<03:43, 218.79it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:52<03:41, 220.49it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:53<03:47, 214.23it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:53<03:46, 214.70it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:53<03:47, 213.86it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [00:53<03:42, 217.80it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [00:54<03:40, 219.92it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [00:54<03:38, 221.00it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [00:54<03:35, 224.28it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [00:55<03:32, 226.55it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [00:55<03:33, 225.99it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [00:55<03:33, 225.72it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [00:55<03:33, 224.75it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [00:56<03:31, 226.81it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [00:56<03:29, 228.84it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [00:56<03:27, 230.73it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [00:56<03:25, 232.79it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [00:57<03:23, 234.88it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [00:57<03:21, 236.76it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [00:57<03:19, 238.24it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [00:58<03:16, 241.36it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [00:58<03:14, 243.63it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [00:58<03:14, 244.06it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [00:58<03:13, 244.47it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [00:59<03:12, 246.14it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [00:59<03:10, 247.88it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [00:59<03:09, 248.75it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [00:59<03:08, 249.19it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:00<03:07, 250.20it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:00<03:03, 255.92it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:00<03:00, 259.43it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:00<02:58, 262.12it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:01<02:57, 263.44it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:01<02:55, 265.56it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:01<02:54, 267.62it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:01<02:53, 268.53it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:01<02:52, 269.69it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:02<02:49, 273.40it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:02<02:48, 275.84it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:02<02:46, 278.01it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:02<02:45, 279.52it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:03<02:45, 278.71it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:03<02:44, 280.81it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:03<02:45, 278.68it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:03<02:46, 276.68it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:04<02:49, 270.29it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:04<02:49, 271.35it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:04<02:45, 276.89it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:04<02:43, 279.41it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:04<02:41, 283.55it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:05<02:39, 285.61it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:05<02:38, 287.34it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:05<02:38, 287.07it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:05<02:38, 286.54it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:06<02:37, 287.07it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:06<02:39, 284.82it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:06<02:40, 282.56it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:06<02:38, 284.10it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:06<02:37, 285.51it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:07<02:38, 284.24it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:07<02:35, 288.30it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:07<02:36, 287.76it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:07<02:34, 290.79it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:08<02:36, 287.00it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:08<02:32, 292.48it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:08<02:40, 278.13it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:08<02:38, 280.59it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:08<02:36, 283.57it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:09<02:35, 285.44it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:09<02:30, 295.53it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:09<02:25, 303.77it/s]Running loglikelihood requests:  21%|██        | 11905/56168 [01:09<02:24, 306.47it/s]Running loglikelihood requests:  21%|██▏       | 11969/56168 [01:09<02:23, 307.04it/s]Running loglikelihood requests:  21%|██▏       | 12033/56168 [01:10<02:22, 309.55it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [01:10<02:25, 302.07it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [01:10<02:22, 308.49it/s]Running loglikelihood requests:  22%|██▏       | 12225/56168 [01:10<02:19, 313.93it/s]Running loglikelihood requests:  22%|██▏       | 12289/56168 [01:11<02:18, 316.76it/s]Running loglikelihood requests:  22%|██▏       | 12353/56168 [01:11<02:17, 318.94it/s]Running loglikelihood requests:  22%|██▏       | 12417/56168 [01:11<02:16, 321.42it/s]Running loglikelihood requests:  22%|██▏       | 12481/56168 [01:11<02:15, 323.21it/s]Running loglikelihood requests:  22%|██▏       | 12545/56168 [01:11<02:14, 324.65it/s]Running loglikelihood requests:  22%|██▏       | 12609/56168 [01:11<02:13, 326.31it/s]Running loglikelihood requests:  23%|██▎       | 12673/56168 [01:12<02:12, 327.31it/s]Running loglikelihood requests:  23%|██▎       | 12737/56168 [01:12<02:13, 326.04it/s]Running loglikelihood requests:  23%|██▎       | 12801/56168 [01:12<02:12, 326.56it/s]Running loglikelihood requests:  23%|██▎       | 12865/56168 [01:12<02:12, 326.86it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [01:12<02:12, 327.30it/s]Running loglikelihood requests:  23%|██▎       | 12993/56168 [01:13<02:12, 324.98it/s]Running loglikelihood requests:  23%|██▎       | 13057/56168 [01:13<02:12, 325.10it/s]Running loglikelihood requests:  23%|██▎       | 13121/56168 [01:13<02:16, 314.69it/s]Running loglikelihood requests:  23%|██▎       | 13185/56168 [01:13<02:13, 321.99it/s]Running loglikelihood requests:  24%|██▎       | 13249/56168 [01:13<02:11, 326.18it/s]Running loglikelihood requests:  24%|██▎       | 13313/56168 [01:14<02:10, 328.14it/s]Running loglikelihood requests:  24%|██▍       | 13377/56168 [01:14<02:09, 330.18it/s]Running loglikelihood requests:  24%|██▍       | 13441/56168 [01:14<02:08, 332.02it/s]Running loglikelihood requests:  24%|██▍       | 13505/56168 [01:14<02:07, 334.24it/s]Running loglikelihood requests:  24%|██▍       | 13569/56168 [01:14<02:06, 336.04it/s]Running loglikelihood requests:  24%|██▍       | 13633/56168 [01:15<02:06, 337.14it/s]Running loglikelihood requests:  24%|██▍       | 13697/56168 [01:15<02:05, 338.23it/s]Running loglikelihood requests:  24%|██▍       | 13761/56168 [01:15<02:05, 339.16it/s]Running loglikelihood requests:  25%|██▍       | 13825/56168 [01:15<02:04, 338.82it/s]Running loglikelihood requests:  25%|██▍       | 13889/56168 [01:15<02:07, 331.63it/s]Running loglikelihood requests:  25%|██▍       | 13953/56168 [01:16<02:07, 330.26it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [01:16<02:07, 330.42it/s]Running loglikelihood requests:  25%|██▌       | 14081/56168 [01:16<02:06, 332.78it/s]Running loglikelihood requests:  25%|██▌       | 14145/56168 [01:16<02:06, 332.49it/s]Running loglikelihood requests:  25%|██▌       | 14209/56168 [01:16<02:07, 329.33it/s]Running loglikelihood requests:  25%|██▌       | 14273/56168 [01:17<02:06, 332.24it/s]Running loglikelihood requests:  26%|██▌       | 14337/56168 [01:17<02:05, 332.52it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [01:17<02:05, 333.54it/s]Running loglikelihood requests:  26%|██▌       | 14465/56168 [01:17<02:05, 332.17it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [01:17<02:05, 331.73it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [01:17<02:04, 335.21it/s]Running loglikelihood requests:  26%|██▌       | 14657/56168 [01:18<02:03, 337.27it/s]Running loglikelihood requests:  26%|██▌       | 14721/56168 [01:18<02:02, 339.05it/s]Running loglikelihood requests:  26%|██▋       | 14785/56168 [01:18<02:01, 341.70it/s]Running loglikelihood requests:  26%|██▋       | 14849/56168 [01:18<02:00, 342.76it/s]Running loglikelihood requests:  27%|██▋       | 14913/56168 [01:18<02:00, 343.77it/s]Running loglikelihood requests:  27%|██▋       | 14977/56168 [01:19<01:59, 344.38it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [01:19<01:59, 344.18it/s]Running loglikelihood requests:  27%|██▋       | 15105/56168 [01:19<01:59, 344.67it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [01:19<01:59, 344.40it/s]Running loglikelihood requests:  27%|██▋       | 15233/56168 [01:19<01:58, 345.76it/s]Running loglikelihood requests:  27%|██▋       | 15297/56168 [01:20<01:58, 345.28it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [01:20<01:58, 344.53it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [01:20<01:59, 340.50it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [01:20<02:00, 337.80it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [01:20<02:01, 334.93it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [01:20<02:00, 337.61it/s]Running loglikelihood requests:  28%|██▊       | 15681/56168 [01:21<01:59, 338.95it/s]Running loglikelihood requests:  28%|██▊       | 15745/56168 [01:21<02:00, 334.69it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [01:21<01:59, 338.63it/s]Running loglikelihood requests:  28%|██▊       | 15873/56168 [01:21<01:57, 341.50it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [01:21<01:57, 342.02it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [01:22<01:56, 344.96it/s]Running loglikelihood requests:  29%|██▊       | 16065/56168 [01:22<01:57, 340.96it/s]Running loglikelihood requests:  29%|██▊       | 16129/56168 [01:22<01:58, 338.20it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [01:22<01:56, 342.60it/s]Running loglikelihood requests:  29%|██▉       | 16257/56168 [01:22<01:55, 346.01it/s]Running loglikelihood requests:  29%|██▉       | 16321/56168 [01:23<01:55, 345.40it/s]Running loglikelihood requests:  29%|██▉       | 16385/56168 [01:23<01:54, 346.82it/s]Running loglikelihood requests:  29%|██▉       | 16449/56168 [01:23<01:54, 347.92it/s]Running loglikelihood requests:  29%|██▉       | 16513/56168 [01:23<01:55, 344.48it/s]Running loglikelihood requests:  30%|██▉       | 16577/56168 [01:23<01:55, 343.60it/s]Running loglikelihood requests:  30%|██▉       | 16641/56168 [01:23<01:56, 339.61it/s]Running loglikelihood requests:  30%|██▉       | 16705/56168 [01:24<01:57, 337.09it/s]Running loglikelihood requests:  30%|██▉       | 16769/56168 [01:24<01:58, 332.16it/s]Running loglikelihood requests:  30%|██▉       | 16833/56168 [01:24<01:56, 338.04it/s]Running loglikelihood requests:  30%|███       | 16897/56168 [01:24<01:56, 337.61it/s]Running loglikelihood requests:  30%|███       | 16961/56168 [01:24<01:56, 336.32it/s]Running loglikelihood requests:  30%|███       | 17025/56168 [01:25<01:56, 335.32it/s]Running loglikelihood requests:  30%|███       | 17089/56168 [01:25<01:56, 335.73it/s]Running loglikelihood requests:  31%|███       | 17153/56168 [01:25<01:54, 341.25it/s]Running loglikelihood requests:  31%|███       | 17217/56168 [01:25<01:52, 345.71it/s]Running loglikelihood requests:  31%|███       | 17281/56168 [01:25<01:51, 348.19it/s]Running loglikelihood requests:  31%|███       | 17345/56168 [01:26<01:51, 349.20it/s]Running loglikelihood requests:  31%|███       | 17409/56168 [01:26<01:50, 350.23it/s]Running loglikelihood requests:  31%|███       | 17473/56168 [01:26<01:50, 351.45it/s]Running loglikelihood requests:  31%|███       | 17537/56168 [01:26<01:49, 351.66it/s]Running loglikelihood requests:  31%|███▏      | 17601/56168 [01:26<01:50, 349.57it/s]Running loglikelihood requests:  31%|███▏      | 17665/56168 [01:26<01:49, 351.65it/s]Running loglikelihood requests:  32%|███▏      | 17729/56168 [01:27<01:48, 352.74it/s]Running loglikelihood requests:  32%|███▏      | 17793/56168 [01:27<01:48, 354.60it/s]Running loglikelihood requests:  32%|███▏      | 17857/56168 [01:27<01:47, 355.16it/s]Running loglikelihood requests:  32%|███▏      | 17921/56168 [01:27<01:47, 355.16it/s]Running loglikelihood requests:  32%|███▏      | 17985/56168 [01:27<01:47, 356.20it/s]Running loglikelihood requests:  32%|███▏      | 18049/56168 [01:28<01:46, 356.40it/s]Running loglikelihood requests:  32%|███▏      | 18113/56168 [01:28<01:47, 355.51it/s]Running loglikelihood requests:  32%|███▏      | 18177/56168 [01:28<01:48, 351.32it/s]Running loglikelihood requests:  32%|███▏      | 18241/56168 [01:28<01:47, 351.39it/s]Running loglikelihood requests:  33%|███▎      | 18305/56168 [01:28<01:47, 352.22it/s]Running loglikelihood requests:  33%|███▎      | 18369/56168 [01:28<01:46, 354.19it/s]Running loglikelihood requests:  33%|███▎      | 18433/56168 [01:29<01:46, 355.02it/s]Running loglikelihood requests:  33%|███▎      | 18497/56168 [01:29<01:46, 352.24it/s]Running loglikelihood requests:  33%|███▎      | 18561/56168 [01:29<01:46, 353.27it/s]Running loglikelihood requests:  33%|███▎      | 18625/56168 [01:29<01:43, 362.27it/s]Running loglikelihood requests:  33%|███▎      | 18689/56168 [01:29<01:41, 369.64it/s]Running loglikelihood requests:  33%|███▎      | 18753/56168 [01:29<01:38, 378.07it/s]Running loglikelihood requests:  34%|███▎      | 18817/56168 [01:30<01:38, 379.99it/s]Running loglikelihood requests:  34%|███▎      | 18881/56168 [01:30<01:38, 380.48it/s]Running loglikelihood requests:  34%|███▎      | 18945/56168 [01:30<01:36, 386.88it/s]Running loglikelihood requests:  34%|███▍      | 19009/56168 [01:30<01:36, 386.54it/s]Running loglikelihood requests:  34%|███▍      | 19073/56168 [01:30<01:35, 387.91it/s]Running loglikelihood requests:  34%|███▍      | 19137/56168 [01:30<01:34, 392.75it/s]Running loglikelihood requests:  34%|███▍      | 19201/56168 [01:31<01:35, 389.08it/s]Running loglikelihood requests:  34%|███▍      | 19265/56168 [01:31<01:33, 393.83it/s]Running loglikelihood requests:  34%|███▍      | 19329/56168 [01:31<01:33, 395.22it/s]Running loglikelihood requests:  35%|███▍      | 19393/56168 [01:31<01:32, 396.92it/s]Running loglikelihood requests:  35%|███▍      | 19457/56168 [01:31<01:32, 398.91it/s]Running loglikelihood requests:  35%|███▍      | 19521/56168 [01:31<01:31, 400.49it/s]Running loglikelihood requests:  35%|███▍      | 19585/56168 [01:32<01:31, 401.64it/s]Running loglikelihood requests:  35%|███▍      | 19649/56168 [01:32<01:30, 403.51it/s]Running loglikelihood requests:  35%|███▌      | 19713/56168 [01:32<01:30, 403.30it/s]Running loglikelihood requests:  35%|███▌      | 19777/56168 [01:32<01:30, 402.55it/s]Running loglikelihood requests:  35%|███▌      | 19841/56168 [01:32<01:30, 402.09it/s]Running loglikelihood requests:  35%|███▌      | 19905/56168 [01:32<01:30, 402.03it/s]Running loglikelihood requests:  36%|███▌      | 19969/56168 [01:33<01:30, 401.98it/s]Running loglikelihood requests:  36%|███▌      | 20033/56168 [01:33<01:29, 404.01it/s]Running loglikelihood requests:  36%|███▌      | 20097/56168 [01:33<01:28, 405.37it/s]Running loglikelihood requests:  36%|███▌      | 20161/56168 [01:33<01:28, 405.63it/s]Running loglikelihood requests:  36%|███▌      | 20225/56168 [01:33<01:28, 406.20it/s]Running loglikelihood requests:  36%|███▌      | 20289/56168 [01:33<01:28, 405.01it/s]Running loglikelihood requests:  36%|███▌      | 20353/56168 [01:33<01:28, 405.85it/s]Running loglikelihood requests:  36%|███▋      | 20417/56168 [01:34<01:29, 401.32it/s]Running loglikelihood requests:  36%|███▋      | 20481/56168 [01:34<01:30, 393.56it/s]Running loglikelihood requests:  37%|███▋      | 20545/56168 [01:34<01:30, 393.71it/s]Running loglikelihood requests:  37%|███▋      | 20609/56168 [01:34<01:30, 393.19it/s]Running loglikelihood requests:  37%|███▋      | 20673/56168 [01:34<01:29, 395.64it/s]Running loglikelihood requests:  37%|███▋      | 20737/56168 [01:34<01:30, 392.93it/s]Running loglikelihood requests:  37%|███▋      | 20801/56168 [01:35<01:30, 390.94it/s]Running loglikelihood requests:  37%|███▋      | 20865/56168 [01:35<01:29, 394.31it/s]Running loglikelihood requests:  37%|███▋      | 20929/56168 [01:35<01:29, 394.79it/s]Running loglikelihood requests:  37%|███▋      | 20993/56168 [01:35<01:28, 398.70it/s]Running loglikelihood requests:  37%|███▋      | 21057/56168 [01:35<01:28, 396.41it/s]Running loglikelihood requests:  38%|███▊      | 21121/56168 [01:35<01:27, 400.30it/s]Running loglikelihood requests:  38%|███▊      | 21185/56168 [01:36<01:26, 404.01it/s]Running loglikelihood requests:  38%|███▊      | 21249/56168 [01:36<01:26, 402.38it/s]Running loglikelihood requests:  38%|███▊      | 21313/56168 [01:36<01:25, 405.87it/s]Running loglikelihood requests:  38%|███▊      | 21377/56168 [01:36<01:26, 402.95it/s]Running loglikelihood requests:  38%|███▊      | 21441/56168 [01:36<01:26, 400.63it/s]Running loglikelihood requests:  38%|███▊      | 21505/56168 [01:36<01:26, 399.08it/s]Running loglikelihood requests:  38%|███▊      | 21569/56168 [01:37<01:27, 396.34it/s]Running loglikelihood requests:  39%|███▊      | 21633/56168 [01:37<01:25, 404.11it/s]Running loglikelihood requests:  39%|███▊      | 21697/56168 [01:37<01:23, 410.38it/s]Running loglikelihood requests:  39%|███▊      | 21761/56168 [01:37<01:22, 414.88it/s]Running loglikelihood requests:  39%|███▉      | 21825/56168 [01:37<01:22, 418.69it/s]Running loglikelihood requests:  39%|███▉      | 21889/56168 [01:37<01:21, 422.05it/s]Running loglikelihood requests:  39%|███▉      | 21953/56168 [01:37<01:21, 420.87it/s]Running loglikelihood requests:  39%|███▉      | 22017/56168 [01:38<01:20, 423.87it/s]Running loglikelihood requests:  39%|███▉      | 22081/56168 [01:38<01:20, 423.89it/s]Running loglikelihood requests:  39%|███▉      | 22145/56168 [01:38<01:20, 425.00it/s]Running loglikelihood requests:  40%|███▉      | 22209/56168 [01:38<01:19, 425.38it/s]Running loglikelihood requests:  40%|███▉      | 22273/56168 [01:38<01:19, 426.49it/s]Running loglikelihood requests:  40%|███▉      | 22337/56168 [01:38<01:19, 426.90it/s]Running loglikelihood requests:  40%|███▉      | 22401/56168 [01:38<01:19, 425.72it/s]Running loglikelihood requests:  40%|███▉      | 22465/56168 [01:39<01:18, 427.86it/s]Running loglikelihood requests:  40%|████      | 22529/56168 [01:39<01:18, 427.30it/s]Running loglikelihood requests:  40%|████      | 22593/56168 [01:39<01:18, 427.52it/s]Running loglikelihood requests:  40%|████      | 22657/56168 [01:39<01:18, 427.18it/s]Running loglikelihood requests:  40%|████      | 22721/56168 [01:39<01:18, 427.05it/s]Running loglikelihood requests:  41%|████      | 22785/56168 [01:39<01:18, 427.66it/s]Running loglikelihood requests:  41%|████      | 22849/56168 [01:40<01:17, 427.79it/s]Running loglikelihood requests:  41%|████      | 22913/56168 [01:40<01:17, 428.49it/s]Running loglikelihood requests:  41%|████      | 22977/56168 [01:40<01:17, 429.67it/s]Running loglikelihood requests:  41%|████      | 23041/56168 [01:40<01:17, 429.93it/s]Running loglikelihood requests:  41%|████      | 23105/56168 [01:40<01:16, 430.61it/s]Running loglikelihood requests:  41%|████      | 23169/56168 [01:40<01:16, 431.08it/s]Running loglikelihood requests:  41%|████▏     | 23233/56168 [01:40<01:16, 429.56it/s]Running loglikelihood requests:  41%|████▏     | 23297/56168 [01:41<01:15, 436.08it/s]Running loglikelihood requests:  42%|████▏     | 23361/56168 [01:41<01:14, 437.44it/s]Running loglikelihood requests:  42%|████▏     | 23425/56168 [01:41<01:18, 416.69it/s]Running loglikelihood requests:  42%|████▏     | 23489/56168 [01:41<01:17, 420.90it/s]Running loglikelihood requests:  42%|████▏     | 23553/56168 [01:41<01:15, 429.78it/s]Running loglikelihood requests:  42%|████▏     | 23617/56168 [01:41<01:15, 432.77it/s]Running loglikelihood requests:  42%|████▏     | 23681/56168 [01:41<01:15, 430.60it/s]Running loglikelihood requests:  42%|████▏     | 23745/56168 [01:42<01:14, 437.43it/s]Running loglikelihood requests:  42%|████▏     | 23809/56168 [01:42<01:13, 442.78it/s]Running loglikelihood requests:  43%|████▎     | 23873/56168 [01:42<01:12, 446.66it/s]Running loglikelihood requests:  43%|████▎     | 23937/56168 [01:42<01:11, 447.70it/s]Running loglikelihood requests:  43%|████▎     | 24001/56168 [01:42<01:11, 450.89it/s]Running loglikelihood requests:  43%|████▎     | 24065/56168 [01:42<01:10, 452.25it/s]Running loglikelihood requests:  43%|████▎     | 24129/56168 [01:42<01:10, 453.36it/s]Running loglikelihood requests:  43%|████▎     | 24193/56168 [01:43<01:10, 455.68it/s]Running loglikelihood requests:  43%|████▎     | 24257/56168 [01:43<01:09, 457.15it/s]Running loglikelihood requests:  43%|████▎     | 24321/56168 [01:43<01:09, 459.15it/s]Running loglikelihood requests:  43%|████▎     | 24385/56168 [01:43<01:09, 456.21it/s]Running loglikelihood requests:  44%|████▎     | 24449/56168 [01:43<01:09, 455.90it/s]Running loglikelihood requests:  44%|████▎     | 24513/56168 [01:43<01:10, 446.43it/s]Running loglikelihood requests:  44%|████▍     | 24577/56168 [01:43<01:10, 450.82it/s]Running loglikelihood requests:  44%|████▍     | 24641/56168 [01:44<01:09, 451.05it/s]Running loglikelihood requests:  44%|████▍     | 24705/56168 [01:44<01:10, 448.44it/s]Running loglikelihood requests:  44%|████▍     | 24769/56168 [01:44<01:14, 422.30it/s]Running loglikelihood requests:  44%|████▍     | 24833/56168 [01:44<01:13, 428.52it/s]Running loglikelihood requests:  44%|████▍     | 24897/56168 [01:44<01:12, 432.02it/s]Running loglikelihood requests:  44%|████▍     | 24961/56168 [01:44<01:10, 439.67it/s]Running loglikelihood requests:  45%|████▍     | 25025/56168 [01:44<01:09, 446.08it/s]Running loglikelihood requests:  45%|████▍     | 25089/56168 [01:45<01:08, 450.85it/s]Running loglikelihood requests:  45%|████▍     | 25153/56168 [01:45<01:09, 445.09it/s]Running loglikelihood requests:  45%|████▍     | 25217/56168 [01:45<01:09, 442.92it/s]Running loglikelihood requests:  45%|████▌     | 25281/56168 [01:45<01:09, 441.59it/s]Running loglikelihood requests:  45%|████▌     | 25345/56168 [01:45<01:09, 445.83it/s]Running loglikelihood requests:  45%|████▌     | 25409/56168 [01:45<01:09, 442.05it/s]Running loglikelihood requests:  45%|████▌     | 25473/56168 [01:45<01:09, 439.00it/s]Running loglikelihood requests:  45%|████▌     | 25537/56168 [01:46<01:09, 441.18it/s]Running loglikelihood requests:  46%|████▌     | 25601/56168 [01:46<01:09, 441.20it/s]Running loglikelihood requests:  46%|████▌     | 25665/56168 [01:46<01:10, 435.61it/s]Running loglikelihood requests:  46%|████▌     | 25729/56168 [01:46<01:09, 437.43it/s]Running loglikelihood requests:  46%|████▌     | 25793/56168 [01:46<01:09, 435.87it/s]Running loglikelihood requests:  46%|████▌     | 25857/56168 [01:46<01:09, 435.43it/s]Running loglikelihood requests:  46%|████▌     | 25921/56168 [01:46<01:09, 436.70it/s]Running loglikelihood requests:  46%|████▋     | 25985/56168 [01:47<01:09, 434.72it/s]Running loglikelihood requests:  46%|████▋     | 26049/56168 [01:47<01:09, 433.42it/s]Running loglikelihood requests:  46%|████▋     | 26113/56168 [01:47<01:08, 438.40it/s]Running loglikelihood requests:  47%|████▋     | 26177/56168 [01:47<01:08, 440.66it/s]Running loglikelihood requests:  47%|████▋     | 26241/56168 [01:47<01:07, 445.56it/s]Running loglikelihood requests:  47%|████▋     | 26305/56168 [01:47<01:07, 444.62it/s]Running loglikelihood requests:  47%|████▋     | 26369/56168 [01:48<01:06, 447.60it/s]Running loglikelihood requests:  47%|████▋     | 26433/56168 [01:48<01:06, 449.60it/s]Running loglikelihood requests:  47%|████▋     | 26497/56168 [01:48<01:06, 444.14it/s]Running loglikelihood requests:  47%|████▋     | 26561/56168 [01:48<01:06, 445.80it/s]Running loglikelihood requests:  47%|████▋     | 26625/56168 [01:48<01:06, 443.25it/s]Running loglikelihood requests:  48%|████▊     | 26689/56168 [01:48<01:06, 444.36it/s]Running loglikelihood requests:  48%|████▊     | 26753/56168 [01:48<01:04, 457.06it/s]Running loglikelihood requests:  48%|████▊     | 26817/56168 [01:48<01:02, 466.78it/s]Running loglikelihood requests:  48%|████▊     | 26881/56168 [01:49<01:02, 471.98it/s]Running loglikelihood requests:  48%|████▊     | 26945/56168 [01:49<01:01, 477.49it/s]Running loglikelihood requests:  48%|████▊     | 27009/56168 [01:49<01:00, 480.38it/s]Running loglikelihood requests:  48%|████▊     | 27073/56168 [01:49<01:00, 484.49it/s]Running loglikelihood requests:  48%|████▊     | 27137/56168 [01:49<00:59, 485.45it/s]Running loglikelihood requests:  48%|████▊     | 27201/56168 [01:49<00:59, 487.62it/s]Running loglikelihood requests:  49%|████▊     | 27265/56168 [01:49<00:59, 484.58it/s]Running loglikelihood requests:  49%|████▊     | 27329/56168 [01:50<01:00, 480.36it/s]Running loglikelihood requests:  49%|████▉     | 27393/56168 [01:50<01:01, 469.61it/s]Running loglikelihood requests:  49%|████▉     | 27457/56168 [01:50<01:00, 477.07it/s]Running loglikelihood requests:  49%|████▉     | 27521/56168 [01:50<01:00, 476.22it/s]Running loglikelihood requests:  49%|████▉     | 27585/56168 [01:50<01:00, 472.15it/s]Running loglikelihood requests:  49%|████▉     | 27649/56168 [01:50<00:59, 478.84it/s]Running loglikelihood requests:  49%|████▉     | 27713/56168 [01:50<00:58, 484.75it/s]Running loglikelihood requests:  49%|████▉     | 27777/56168 [01:50<00:58, 485.70it/s]Running loglikelihood requests:  50%|████▉     | 27841/56168 [01:51<00:58, 488.04it/s]Running loglikelihood requests:  50%|████▉     | 27905/56168 [01:51<00:57, 489.58it/s]Running loglikelihood requests:  50%|████▉     | 27969/56168 [01:51<00:59, 475.44it/s]Running loglikelihood requests:  50%|████▉     | 28033/56168 [01:51<01:02, 447.15it/s]Running loglikelihood requests:  50%|█████     | 28097/56168 [01:51<01:05, 431.53it/s]Running loglikelihood requests:  50%|█████     | 28161/56168 [01:51<01:02, 447.90it/s]Running loglikelihood requests:  50%|█████     | 28225/56168 [01:51<01:00, 458.99it/s]Running loglikelihood requests:  50%|█████     | 28289/56168 [01:52<00:59, 467.77it/s]Running loglikelihood requests:  50%|█████     | 28353/56168 [01:52<00:58, 473.93it/s]Running loglikelihood requests:  51%|█████     | 28417/56168 [01:52<00:58, 477.52it/s]Running loglikelihood requests:  51%|█████     | 28481/56168 [01:52<00:59, 467.72it/s]Running loglikelihood requests:  51%|█████     | 28545/56168 [01:52<00:59, 463.36it/s]Running loglikelihood requests:  51%|█████     | 28609/56168 [01:52<00:59, 464.17it/s]Running loglikelihood requests:  51%|█████     | 28673/56168 [01:52<00:59, 465.54it/s]Running loglikelihood requests:  51%|█████     | 28737/56168 [01:53<00:58, 467.45it/s]Running loglikelihood requests:  51%|█████▏    | 28801/56168 [01:53<00:57, 474.47it/s]Running loglikelihood requests:  51%|█████▏    | 28865/56168 [01:53<00:57, 470.95it/s]Running loglikelihood requests:  52%|█████▏    | 28929/56168 [01:53<00:58, 461.82it/s]Running loglikelihood requests:  52%|█████▏    | 28993/56168 [01:53<00:57, 470.57it/s]Running loglikelihood requests:  52%|█████▏    | 29057/56168 [01:53<00:58, 464.02it/s]Running loglikelihood requests:  52%|█████▏    | 29121/56168 [01:53<00:57, 466.52it/s]Running loglikelihood requests:  52%|█████▏    | 29185/56168 [01:54<00:58, 464.11it/s]Running loglikelihood requests:  52%|█████▏    | 29249/56168 [01:54<01:00, 447.20it/s]Running loglikelihood requests:  52%|█████▏    | 29313/56168 [01:54<00:59, 450.55it/s]Running loglikelihood requests:  52%|█████▏    | 29377/56168 [01:54<00:58, 457.20it/s]Running loglikelihood requests:  52%|█████▏    | 29441/56168 [01:54<00:58, 458.56it/s]Running loglikelihood requests:  53%|█████▎    | 29505/56168 [01:54<00:58, 459.68it/s]Running loglikelihood requests:  53%|█████▎    | 29569/56168 [01:54<00:57, 462.31it/s]Running loglikelihood requests:  53%|█████▎    | 29633/56168 [01:54<00:56, 467.22it/s]Running loglikelihood requests:  53%|█████▎    | 29697/56168 [01:55<00:57, 462.27it/s]Running loglikelihood requests:  53%|█████▎    | 29761/56168 [01:55<00:57, 460.70it/s]Running loglikelihood requests:  53%|█████▎    | 29825/56168 [01:55<00:56, 462.86it/s]Running loglikelihood requests:  53%|█████▎    | 29889/56168 [01:55<00:56, 468.32it/s]Running loglikelihood requests:  53%|█████▎    | 29953/56168 [01:55<00:54, 477.50it/s]Running loglikelihood requests:  53%|█████▎    | 30017/56168 [01:55<00:53, 485.01it/s]Running loglikelihood requests:  54%|█████▎    | 30081/56168 [01:55<00:53, 487.69it/s]Running loglikelihood requests:  54%|█████▎    | 30145/56168 [01:56<00:53, 490.06it/s]Running loglikelihood requests:  54%|█████▍    | 30209/56168 [01:56<00:52, 492.82it/s]Running loglikelihood requests:  54%|█████▍    | 30273/56168 [01:56<00:52, 493.80it/s]Running loglikelihood requests:  54%|█████▍    | 30337/56168 [01:56<00:52, 496.29it/s]Running loglikelihood requests:  54%|█████▍    | 30401/56168 [01:56<00:51, 498.25it/s]Running loglikelihood requests:  54%|█████▍    | 30465/56168 [01:56<00:51, 498.58it/s]Running loglikelihood requests:  54%|█████▍    | 30529/56168 [01:56<00:51, 499.04it/s]Running loglikelihood requests:  54%|█████▍    | 30593/56168 [01:56<00:51, 499.42it/s]Running loglikelihood requests:  55%|█████▍    | 30657/56168 [01:57<00:50, 500.41it/s]Running loglikelihood requests:  55%|█████▍    | 30721/56168 [01:57<00:50, 501.15it/s]Running loglikelihood requests:  55%|█████▍    | 30785/56168 [01:57<00:50, 500.52it/s]Running loglikelihood requests:  55%|█████▍    | 30849/56168 [01:57<00:50, 499.35it/s]Running loglikelihood requests:  55%|█████▌    | 30913/56168 [01:57<00:51, 487.94it/s]Running loglikelihood requests:  55%|█████▌    | 30977/56168 [01:57<00:51, 492.00it/s]Running loglikelihood requests:  55%|█████▌    | 31041/56168 [01:57<00:51, 485.37it/s]Running loglikelihood requests:  55%|█████▌    | 31105/56168 [01:58<00:53, 468.06it/s]Running loglikelihood requests:  55%|█████▌    | 31169/56168 [01:58<00:52, 476.58it/s]Running loglikelihood requests:  56%|█████▌    | 31233/56168 [01:58<00:53, 469.91it/s]Running loglikelihood requests:  56%|█████▌    | 31297/56168 [01:58<00:52, 471.56it/s]Running loglikelihood requests:  56%|█████▌    | 31361/56168 [01:58<00:52, 472.12it/s]Running loglikelihood requests:  56%|█████▌    | 31425/56168 [01:58<00:54, 456.38it/s]Running loglikelihood requests:  56%|█████▌    | 31489/56168 [01:58<00:54, 456.62it/s]Running loglikelihood requests:  56%|█████▌    | 31553/56168 [01:58<00:53, 463.05it/s]Running loglikelihood requests:  56%|█████▋    | 31617/56168 [01:59<00:52, 467.47it/s]Running loglikelihood requests:  56%|█████▋    | 31681/56168 [01:59<00:55, 438.21it/s]Running loglikelihood requests:  57%|█████▋    | 31745/56168 [01:59<00:55, 438.17it/s]Running loglikelihood requests:  57%|█████▋    | 31809/56168 [01:59<00:54, 445.75it/s]Running loglikelihood requests:  57%|█████▋    | 31873/56168 [01:59<00:52, 466.81it/s]Running loglikelihood requests:  57%|█████▋    | 31937/56168 [01:59<00:49, 485.35it/s]Running loglikelihood requests:  57%|█████▋    | 32001/56168 [01:59<00:48, 499.03it/s]Running loglikelihood requests:  57%|█████▋    | 32065/56168 [02:00<00:47, 507.62it/s]Running loglikelihood requests:  57%|█████▋    | 32129/56168 [02:00<00:47, 502.60it/s]Running loglikelihood requests:  57%|█████▋    | 32193/56168 [02:00<00:46, 513.94it/s]Running loglikelihood requests:  57%|█████▋    | 32257/56168 [02:00<00:46, 508.79it/s]Running loglikelihood requests:  58%|█████▊    | 32321/56168 [02:00<00:46, 509.59it/s]Running loglikelihood requests:  58%|█████▊    | 32385/56168 [02:00<00:47, 502.15it/s]Running loglikelihood requests:  58%|█████▊    | 32449/56168 [02:00<00:47, 503.42it/s]Running loglikelihood requests:  58%|█████▊    | 32513/56168 [02:00<00:47, 501.23it/s]Running loglikelihood requests:  58%|█████▊    | 32577/56168 [02:01<00:46, 506.06it/s]Running loglikelihood requests:  58%|█████▊    | 32641/56168 [02:01<00:45, 516.37it/s]Running loglikelihood requests:  58%|█████▊    | 32705/56168 [02:01<00:44, 522.18it/s]Running loglikelihood requests:  58%|█████▊    | 32769/56168 [02:01<00:44, 523.29it/s]Running loglikelihood requests:  58%|█████▊    | 32833/56168 [02:01<00:45, 512.91it/s]Running loglikelihood requests:  59%|█████▊    | 32897/56168 [02:01<00:45, 511.98it/s]Running loglikelihood requests:  59%|█████▊    | 32961/56168 [02:01<00:45, 513.29it/s]Running loglikelihood requests:  59%|█████▉    | 33025/56168 [02:01<00:46, 501.47it/s]Running loglikelihood requests:  59%|█████▉    | 33089/56168 [02:02<00:45, 503.64it/s]Running loglikelihood requests:  59%|█████▉    | 33153/56168 [02:02<00:46, 499.10it/s]Running loglikelihood requests:  59%|█████▉    | 33217/56168 [02:02<00:46, 498.23it/s]Running loglikelihood requests:  59%|█████▉    | 33281/56168 [02:02<00:44, 511.64it/s]Running loglikelihood requests:  59%|█████▉    | 33345/56168 [02:02<00:43, 520.81it/s]Running loglikelihood requests:  59%|█████▉    | 33409/56168 [02:02<00:43, 528.02it/s]Running loglikelihood requests:  60%|█████▉    | 33473/56168 [02:02<00:42, 531.71it/s]Running loglikelihood requests:  60%|█████▉    | 33537/56168 [02:02<00:42, 533.46it/s]Running loglikelihood requests:  60%|█████▉    | 33601/56168 [02:03<00:42, 535.01it/s]Running loglikelihood requests:  60%|█████▉    | 33665/56168 [02:03<00:41, 538.46it/s]Running loglikelihood requests:  60%|██████    | 33729/56168 [02:03<00:41, 541.09it/s]Running loglikelihood requests:  60%|██████    | 33793/56168 [02:03<00:41, 542.70it/s]Running loglikelihood requests:  60%|██████    | 33857/56168 [02:03<00:41, 542.33it/s]Running loglikelihood requests:  60%|██████    | 33921/56168 [02:03<00:41, 539.94it/s]Running loglikelihood requests:  61%|██████    | 33985/56168 [02:03<00:41, 530.67it/s]Running loglikelihood requests:  61%|██████    | 34049/56168 [02:03<00:44, 493.88it/s]Running loglikelihood requests:  61%|██████    | 34113/56168 [02:04<00:44, 497.88it/s]Running loglikelihood requests:  61%|██████    | 34177/56168 [02:04<00:43, 503.07it/s]Running loglikelihood requests:  61%|██████    | 34241/56168 [02:04<00:44, 492.10it/s]Running loglikelihood requests:  61%|██████    | 34305/56168 [02:04<00:44, 491.44it/s]Running loglikelihood requests:  61%|██████    | 34369/56168 [02:04<00:44, 490.63it/s]Running loglikelihood requests:  61%|██████▏   | 34433/56168 [02:04<00:43, 499.50it/s]Running loglikelihood requests:  61%|██████▏   | 34497/56168 [02:04<00:42, 505.22it/s]Running loglikelihood requests:  62%|██████▏   | 34561/56168 [02:04<00:41, 515.34it/s]Running loglikelihood requests:  62%|██████▏   | 34625/56168 [02:05<00:43, 496.64it/s]Running loglikelihood requests:  62%|██████▏   | 34689/56168 [02:05<00:43, 495.45it/s]Running loglikelihood requests:  62%|██████▏   | 34753/56168 [02:05<00:42, 499.90it/s]Running loglikelihood requests:  62%|██████▏   | 34817/56168 [02:05<00:42, 504.60it/s]Running loglikelihood requests:  62%|██████▏   | 34881/56168 [02:05<00:41, 508.73it/s]Running loglikelihood requests:  62%|██████▏   | 34945/56168 [02:05<00:42, 502.71it/s]Running loglikelihood requests:  62%|██████▏   | 35009/56168 [02:05<00:44, 471.78it/s]Running loglikelihood requests:  62%|██████▏   | 35073/56168 [02:05<00:42, 492.03it/s]Running loglikelihood requests:  63%|██████▎   | 35137/56168 [02:06<00:42, 497.95it/s]Running loglikelihood requests:  63%|██████▎   | 35201/56168 [02:06<00:41, 511.27it/s]Running loglikelihood requests:  63%|██████▎   | 35265/56168 [02:06<00:40, 519.59it/s]Running loglikelihood requests:  63%|██████▎   | 35329/56168 [02:06<00:39, 526.63it/s]Running loglikelihood requests:  63%|██████▎   | 35393/56168 [02:06<00:39, 529.89it/s]Running loglikelihood requests:  63%|██████▎   | 35457/56168 [02:06<00:38, 531.46it/s]Running loglikelihood requests:  63%|██████▎   | 35521/56168 [02:06<00:40, 514.27it/s]Running loglikelihood requests:  63%|██████▎   | 35585/56168 [02:06<00:40, 509.17it/s]Running loglikelihood requests:  63%|██████▎   | 35649/56168 [02:07<00:40, 510.91it/s]Running loglikelihood requests:  64%|██████▎   | 35713/56168 [02:07<00:40, 505.52it/s]Running loglikelihood requests:  64%|██████▎   | 35777/56168 [02:07<00:39, 510.44it/s]Running loglikelihood requests:  64%|██████▍   | 35841/56168 [02:07<00:40, 507.37it/s]Running loglikelihood requests:  64%|██████▍   | 35905/56168 [02:07<00:39, 509.73it/s]Running loglikelihood requests:  64%|██████▍   | 35969/56168 [02:07<00:39, 505.06it/s]Running loglikelihood requests:  64%|██████▍   | 36033/56168 [02:07<00:39, 512.13it/s]Running loglikelihood requests:  64%|██████▍   | 36097/56168 [02:07<00:39, 507.02it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [02:08<00:39, 511.65it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [02:08<00:39, 499.66it/s]Running loglikelihood requests:  65%|██████▍   | 36289/56168 [02:08<00:39, 504.10it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [02:08<00:38, 517.42it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [02:08<00:38, 519.70it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [02:08<00:37, 529.84it/s]Running loglikelihood requests:  65%|██████▌   | 36545/56168 [02:08<00:36, 535.90it/s]Running loglikelihood requests:  65%|██████▌   | 36609/56168 [02:08<00:36, 539.93it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [02:09<00:35, 544.19it/s]Running loglikelihood requests:  65%|██████▌   | 36737/56168 [02:09<00:35, 546.77it/s]Running loglikelihood requests:  66%|██████▌   | 36801/56168 [02:09<00:36, 533.17it/s]Running loglikelihood requests:  66%|██████▌   | 36865/56168 [02:09<00:36, 532.77it/s]Running loglikelihood requests:  66%|██████▌   | 36929/56168 [02:09<00:35, 539.19it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [02:09<00:35, 542.39it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [02:09<00:34, 546.49it/s]Running loglikelihood requests:  66%|██████▌   | 37121/56168 [02:09<00:34, 549.17it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [02:09<00:34, 551.40it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [02:10<00:34, 553.51it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [02:10<00:33, 554.66it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [02:10<00:33, 554.64it/s]Running loglikelihood requests:  67%|██████▋   | 37441/56168 [02:10<00:33, 552.12it/s]Running loglikelihood requests:  67%|██████▋   | 37505/56168 [02:10<00:36, 507.46it/s]Running loglikelihood requests:  67%|██████▋   | 37569/56168 [02:10<00:35, 519.38it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [02:10<00:35, 520.17it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [02:10<00:35, 514.66it/s]Running loglikelihood requests:  67%|██████▋   | 37761/56168 [02:11<00:36, 502.73it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [02:11<00:36, 495.95it/s]Running loglikelihood requests:  67%|██████▋   | 37889/56168 [02:11<00:36, 505.50it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [02:11<00:36, 501.30it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [02:11<00:35, 509.31it/s]Running loglikelihood requests:  68%|██████▊   | 38081/56168 [02:11<00:36, 495.95it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [02:11<00:36, 497.78it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [02:11<00:35, 507.74it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [02:12<00:35, 511.00it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [02:12<00:36, 492.64it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [02:12<00:35, 506.20it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [02:12<00:34, 517.13it/s]Running loglikelihood requests:  69%|██████▊   | 38529/56168 [02:12<00:34, 516.96it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [02:12<00:33, 525.55it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [02:12<00:33, 529.46it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [02:12<00:32, 530.45it/s]Running loglikelihood requests:  69%|██████▉   | 38785/56168 [02:13<00:32, 535.20it/s]Running loglikelihood requests:  69%|██████▉   | 38849/56168 [02:13<00:32, 538.93it/s]Running loglikelihood requests:  69%|██████▉   | 38913/56168 [02:13<00:31, 540.78it/s]Running loglikelihood requests:  69%|██████▉   | 38977/56168 [02:13<00:31, 547.60it/s]Running loglikelihood requests:  70%|██████▉   | 39041/56168 [02:13<00:30, 556.13it/s]Running loglikelihood requests:  70%|██████▉   | 39105/56168 [02:13<00:30, 551.95it/s]Running loglikelihood requests:  70%|██████▉   | 39169/56168 [02:13<00:30, 551.09it/s]Running loglikelihood requests:  70%|██████▉   | 39233/56168 [02:13<00:31, 536.17it/s]Running loglikelihood requests:  70%|██████▉   | 39297/56168 [02:13<00:31, 536.34it/s]Running loglikelihood requests:  70%|███████   | 39361/56168 [02:14<00:31, 534.64it/s]Running loglikelihood requests:  70%|███████   | 39425/56168 [02:14<00:31, 539.40it/s]Running loglikelihood requests:  70%|███████   | 39489/56168 [02:14<00:30, 540.61it/s]Running loglikelihood requests:  70%|███████   | 39553/56168 [02:14<00:30, 544.72it/s]Running loglikelihood requests:  71%|███████   | 39617/56168 [02:14<00:30, 547.06it/s]Running loglikelihood requests:  71%|███████   | 39681/56168 [02:14<00:30, 541.86it/s]Running loglikelihood requests:  71%|███████   | 39745/56168 [02:14<00:30, 539.59it/s]Running loglikelihood requests:  71%|███████   | 39809/56168 [02:14<00:29, 545.66it/s]Running loglikelihood requests:  71%|███████   | 39873/56168 [02:15<00:30, 538.67it/s]Running loglikelihood requests:  71%|███████   | 39937/56168 [02:15<00:29, 551.68it/s]Running loglikelihood requests:  71%|███████   | 40001/56168 [02:15<00:28, 563.06it/s]Running loglikelihood requests:  71%|███████▏  | 40065/56168 [02:15<00:28, 568.84it/s]Running loglikelihood requests:  71%|███████▏  | 40129/56168 [02:15<00:27, 574.95it/s]Running loglikelihood requests:  72%|███████▏  | 40193/56168 [02:15<00:27, 578.74it/s]Running loglikelihood requests:  72%|███████▏  | 40257/56168 [02:15<00:27, 582.29it/s]Running loglikelihood requests:  72%|███████▏  | 40321/56168 [02:15<00:27, 584.56it/s]Running loglikelihood requests:  72%|███████▏  | 40385/56168 [02:15<00:27, 583.29it/s]Running loglikelihood requests:  72%|███████▏  | 40449/56168 [02:16<00:27, 569.39it/s]Running loglikelihood requests:  72%|███████▏  | 40513/56168 [02:16<00:27, 575.71it/s]Running loglikelihood requests:  72%|███████▏  | 40577/56168 [02:16<00:27, 576.22it/s]Running loglikelihood requests:  72%|███████▏  | 40641/56168 [02:16<00:27, 560.03it/s]Running loglikelihood requests:  72%|███████▏  | 40705/56168 [02:16<00:27, 567.52it/s]Running loglikelihood requests:  73%|███████▎  | 40769/56168 [02:16<00:26, 574.00it/s]Running loglikelihood requests:  73%|███████▎  | 40833/56168 [02:16<00:26, 573.17it/s]Running loglikelihood requests:  73%|███████▎  | 40897/56168 [02:16<00:26, 578.11it/s]Running loglikelihood requests:  73%|███████▎  | 40961/56168 [02:16<00:26, 577.40it/s]Running loglikelihood requests:  73%|███████▎  | 41025/56168 [02:17<00:26, 576.28it/s]Running loglikelihood requests:  73%|███████▎  | 41089/56168 [02:17<00:27, 548.97it/s]Running loglikelihood requests:  73%|███████▎  | 41153/56168 [02:17<00:27, 548.42it/s]Running loglikelihood requests:  73%|███████▎  | 41217/56168 [02:17<00:28, 528.42it/s]Running loglikelihood requests:  73%|███████▎  | 41281/56168 [02:17<00:27, 544.55it/s]Running loglikelihood requests:  74%|███████▎  | 41345/56168 [02:17<00:26, 554.65it/s]Running loglikelihood requests:  74%|███████▎  | 41409/56168 [02:17<00:26, 562.90it/s]Running loglikelihood requests:  74%|███████▍  | 41473/56168 [02:17<00:25, 568.14it/s]Running loglikelihood requests:  74%|███████▍  | 41537/56168 [02:17<00:25, 572.80it/s]Running loglikelihood requests:  74%|███████▍  | 41601/56168 [02:18<00:25, 571.54it/s]Running loglikelihood requests:  74%|███████▍  | 41665/56168 [02:18<00:25, 575.18it/s]Running loglikelihood requests:  74%|███████▍  | 41729/56168 [02:18<00:25, 576.98it/s]Running loglikelihood requests:  74%|███████▍  | 41793/56168 [02:18<00:24, 579.48it/s]Running loglikelihood requests:  75%|███████▍  | 41857/56168 [02:18<00:26, 533.38it/s]Running loglikelihood requests:  75%|███████▍  | 41921/56168 [02:18<00:26, 539.00it/s]Running loglikelihood requests:  75%|███████▍  | 41985/56168 [02:18<00:26, 544.75it/s]Running loglikelihood requests:  75%|███████▍  | 42049/56168 [02:18<00:26, 537.62it/s]Running loglikelihood requests:  75%|███████▍  | 42113/56168 [02:19<00:26, 533.62it/s]Running loglikelihood requests:  75%|███████▌  | 42177/56168 [02:19<00:25, 539.77it/s]Running loglikelihood requests:  75%|███████▌  | 42241/56168 [02:19<00:25, 540.20it/s]Running loglikelihood requests:  75%|███████▌  | 42305/56168 [02:19<00:25, 544.34it/s]Running loglikelihood requests:  75%|███████▌  | 42369/56168 [02:19<00:25, 539.90it/s]Running loglikelihood requests:  76%|███████▌  | 42433/56168 [02:19<00:25, 543.37it/s]Running loglikelihood requests:  76%|███████▌  | 42497/56168 [02:19<00:24, 548.35it/s]Running loglikelihood requests:  76%|███████▌  | 42561/56168 [02:19<00:24, 550.82it/s]Running loglikelihood requests:  76%|███████▌  | 42625/56168 [02:19<00:24, 559.47it/s]Running loglikelihood requests:  76%|███████▌  | 42689/56168 [02:20<00:24, 554.14it/s]Running loglikelihood requests:  76%|███████▌  | 42753/56168 [02:20<00:24, 537.71it/s]Running loglikelihood requests:  76%|███████▌  | 42817/56168 [02:20<00:24, 536.59it/s]Running loglikelihood requests:  76%|███████▋  | 42881/56168 [02:20<00:24, 535.15it/s]Running loglikelihood requests:  76%|███████▋  | 42945/56168 [02:20<00:24, 535.40it/s]Running loglikelihood requests:  77%|███████▋  | 43009/56168 [02:20<00:24, 543.60it/s]Running loglikelihood requests:  77%|███████▋  | 43073/56168 [02:20<00:24, 531.80it/s]Running loglikelihood requests:  77%|███████▋  | 43137/56168 [02:20<00:26, 496.54it/s]Running loglikelihood requests:  77%|███████▋  | 43201/56168 [02:21<00:24, 522.52it/s]Running loglikelihood requests:  77%|███████▋  | 43265/56168 [02:21<00:23, 544.44it/s]Running loglikelihood requests:  77%|███████▋  | 43329/56168 [02:21<00:22, 560.11it/s]Running loglikelihood requests:  77%|███████▋  | 43393/56168 [02:21<00:22, 569.67it/s]Running loglikelihood requests:  77%|███████▋  | 43457/56168 [02:21<00:22, 577.68it/s]Running loglikelihood requests:  77%|███████▋  | 43521/56168 [02:21<00:22, 556.08it/s]Running loglikelihood requests:  78%|███████▊  | 43585/56168 [02:21<00:23, 545.85it/s]Running loglikelihood requests:  78%|███████▊  | 43649/56168 [02:21<00:23, 538.34it/s]Running loglikelihood requests:  78%|███████▊  | 43713/56168 [02:21<00:22, 547.00it/s]Running loglikelihood requests:  78%|███████▊  | 43777/56168 [02:22<00:22, 553.68it/s]Running loglikelihood requests:  78%|███████▊  | 43841/56168 [02:22<00:21, 565.14it/s]Running loglikelihood requests:  78%|███████▊  | 43905/56168 [02:22<00:21, 563.31it/s]Running loglikelihood requests:  78%|███████▊  | 43969/56168 [02:22<00:22, 550.20it/s]Running loglikelihood requests:  78%|███████▊  | 44033/56168 [02:22<00:21, 553.36it/s]Running loglikelihood requests:  79%|███████▊  | 44097/56168 [02:22<00:21, 552.81it/s]Running loglikelihood requests:  79%|███████▊  | 44161/56168 [02:22<00:21, 560.10it/s]Running loglikelihood requests:  79%|███████▊  | 44225/56168 [02:22<00:21, 563.19it/s]Running loglikelihood requests:  79%|███████▉  | 44289/56168 [02:23<00:21, 555.82it/s]Running loglikelihood requests:  79%|███████▉  | 44353/56168 [02:23<00:21, 557.67it/s]Running loglikelihood requests:  79%|███████▉  | 44417/56168 [02:23<00:21, 558.81it/s]Running loglikelihood requests:  79%|███████▉  | 44481/56168 [02:23<00:22, 525.38it/s]Running loglikelihood requests:  79%|███████▉  | 44545/56168 [02:23<00:23, 496.73it/s]Running loglikelihood requests:  79%|███████▉  | 44609/56168 [02:23<00:23, 489.03it/s]Running loglikelihood requests:  80%|███████▉  | 44673/56168 [02:23<00:24, 477.47it/s]Running loglikelihood requests:  80%|███████▉  | 44737/56168 [02:23<00:22, 500.61it/s]Running loglikelihood requests:  80%|███████▉  | 44801/56168 [02:24<00:21, 522.79it/s]Running loglikelihood requests:  80%|███████▉  | 44865/56168 [02:24<00:20, 541.59it/s]Running loglikelihood requests:  80%|███████▉  | 44929/56168 [02:24<00:20, 555.37it/s]Running loglikelihood requests:  80%|████████  | 44993/56168 [02:24<00:20, 547.18it/s]Running loglikelihood requests:  80%|████████  | 45057/56168 [02:24<00:19, 560.69it/s]Running loglikelihood requests:  80%|████████  | 45121/56168 [02:24<00:20, 540.49it/s]Running loglikelihood requests:  80%|████████  | 45185/56168 [02:24<00:20, 523.50it/s]Running loglikelihood requests:  81%|████████  | 45249/56168 [02:24<00:20, 536.03it/s]Running loglikelihood requests:  81%|████████  | 45313/56168 [02:24<00:19, 544.81it/s]Running loglikelihood requests:  81%|████████  | 45377/56168 [02:25<00:19, 551.68it/s]Running loglikelihood requests:  81%|████████  | 45441/56168 [02:25<00:19, 545.09it/s]Running loglikelihood requests:  81%|████████  | 45505/56168 [02:25<00:19, 553.50it/s]Running loglikelihood requests:  81%|████████  | 45569/56168 [02:25<00:18, 558.61it/s]Running loglikelihood requests:  81%|████████  | 45633/56168 [02:25<00:18, 569.66it/s]Running loglikelihood requests:  81%|████████▏ | 45697/56168 [02:25<00:18, 580.47it/s]Running loglikelihood requests:  81%|████████▏ | 45761/56168 [02:25<00:17, 588.57it/s]Running loglikelihood requests:  82%|████████▏ | 45825/56168 [02:25<00:17, 583.23it/s]Running loglikelihood requests:  82%|████████▏ | 45889/56168 [02:25<00:17, 589.33it/s]Running loglikelihood requests:  82%|████████▏ | 45953/56168 [02:26<00:17, 593.33it/s]Running loglikelihood requests:  82%|████████▏ | 46017/56168 [02:26<00:17, 595.99it/s]Running loglikelihood requests:  82%|████████▏ | 46081/56168 [02:26<00:16, 598.71it/s]Running loglikelihood requests:  82%|████████▏ | 46145/56168 [02:26<00:16, 601.82it/s]Running loglikelihood requests:  82%|████████▏ | 46209/56168 [02:26<00:16, 603.30it/s]Running loglikelihood requests:  82%|████████▏ | 46276/56168 [02:26<00:15, 622.47it/s]Running loglikelihood requests:  83%|████████▎ | 46340/56168 [02:26<00:15, 627.54it/s]Running loglikelihood requests:  83%|████████▎ | 46403/56168 [02:26<00:15, 627.87it/s]Running loglikelihood requests:  83%|████████▎ | 46466/56168 [02:26<00:15, 627.61it/s]Running loglikelihood requests:  83%|████████▎ | 46531/56168 [02:26<00:15, 634.08it/s]Running loglikelihood requests:  83%|████████▎ | 46595/56168 [02:27<00:15, 632.47it/s]Running loglikelihood requests:  83%|████████▎ | 46659/56168 [02:27<00:15, 614.41it/s]Running loglikelihood requests:  83%|████████▎ | 46723/56168 [02:27<00:15, 621.79it/s]Running loglikelihood requests:  83%|████████▎ | 46786/56168 [02:27<00:15, 623.87it/s]Running loglikelihood requests:  83%|████████▎ | 46850/56168 [02:27<00:14, 628.58it/s]Running loglikelihood requests:  84%|████████▎ | 46913/56168 [02:27<00:14, 627.39it/s]Running loglikelihood requests:  84%|████████▎ | 46977/56168 [02:27<00:14, 630.20it/s]Running loglikelihood requests:  84%|████████▍ | 47041/56168 [02:27<00:14, 630.99it/s]Running loglikelihood requests:  84%|████████▍ | 47105/56168 [02:27<00:14, 631.35it/s]Running loglikelihood requests:  84%|████████▍ | 47169/56168 [02:27<00:14, 632.72it/s]Running loglikelihood requests:  84%|████████▍ | 47233/56168 [02:28<00:14, 614.57it/s]Running loglikelihood requests:  84%|████████▍ | 47298/56168 [02:28<00:14, 624.70it/s]Running loglikelihood requests:  84%|████████▍ | 47361/56168 [02:28<00:14, 591.73it/s]Running loglikelihood requests:  84%|████████▍ | 47436/56168 [02:28<00:13, 636.55it/s]Running loglikelihood requests:  85%|████████▍ | 47508/56168 [02:28<00:13, 660.62it/s]Running loglikelihood requests:  85%|████████▍ | 47581/56168 [02:28<00:12, 680.77it/s]Running loglikelihood requests:  85%|████████▍ | 47650/56168 [02:28<00:12, 681.41it/s]Running loglikelihood requests:  85%|████████▍ | 47719/56168 [02:28<00:12, 681.57it/s]Running loglikelihood requests:  85%|████████▌ | 47788/56168 [02:28<00:12, 681.28it/s]Running loglikelihood requests:  85%|████████▌ | 47857/56168 [02:29<00:12, 681.69it/s]Running loglikelihood requests:  85%|████████▌ | 47926/56168 [02:29<00:12, 680.69it/s]Running loglikelihood requests:  85%|████████▌ | 47995/56168 [02:29<00:12, 665.02it/s]Running loglikelihood requests:  86%|████████▌ | 48062/56168 [02:29<00:12, 652.56it/s]Running loglikelihood requests:  86%|████████▌ | 48128/56168 [02:29<00:12, 641.60it/s]Running loglikelihood requests:  86%|████████▌ | 48193/56168 [02:29<00:15, 502.05it/s]Running loglikelihood requests:  86%|████████▌ | 48257/56168 [02:29<00:15, 522.81it/s]Running loglikelihood requests:  86%|████████▌ | 48321/56168 [02:29<00:14, 540.95it/s]Running loglikelihood requests:  86%|████████▌ | 48386/56168 [02:29<00:13, 569.34it/s]Running loglikelihood requests:  86%|████████▋ | 48449/56168 [02:30<00:13, 584.59it/s]Running loglikelihood requests:  86%|████████▋ | 48513/56168 [02:30<00:12, 599.53it/s]Running loglikelihood requests:  86%|████████▋ | 48577/56168 [02:30<00:12, 610.12it/s]Running loglikelihood requests:  87%|████████▋ | 48641/56168 [02:30<00:12, 617.63it/s]Running loglikelihood requests:  87%|████████▋ | 48705/56168 [02:30<00:11, 623.76it/s]Running loglikelihood requests:  87%|████████▋ | 48769/56168 [02:30<00:11, 627.29it/s]Running loglikelihood requests:  87%|████████▋ | 48833/56168 [02:30<00:11, 630.91it/s]Running loglikelihood requests:  87%|████████▋ | 48897/56168 [02:30<00:11, 632.75it/s]Running loglikelihood requests:  87%|████████▋ | 48961/56168 [02:30<00:11, 634.36it/s]Running loglikelihood requests:  87%|████████▋ | 49027/56168 [02:30<00:11, 641.91it/s]Running loglikelihood requests:  87%|████████▋ | 49096/56168 [02:31<00:10, 656.11it/s]Running loglikelihood requests:  88%|████████▊ | 49162/56168 [02:31<00:10, 656.15it/s]Running loglikelihood requests:  88%|████████▊ | 49229/56168 [02:31<00:10, 659.93it/s]Running loglikelihood requests:  88%|████████▊ | 49296/56168 [02:31<00:10, 662.55it/s]