2025-05-15:01:17:54,324 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-15:01:17:54,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,554 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,594 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,597 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:54,608 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,826 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,831 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,896 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,903 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:55,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:56,008 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:56,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:56,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:56,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:56,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:56,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:56,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:56,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:56,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,402 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,405 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,420 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,433 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,438 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,440 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,443 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,445 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:57,467 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,016 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,103 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,144 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,165 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,392 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,443 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,591 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,627 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,643 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,650 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,653 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,663 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,666 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,669 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,673 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,676 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,686 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,689 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,697 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,697 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,853 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,864 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,866 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,874 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,881 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,883 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,897 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,902 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,907 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,909 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,911 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,921 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,960 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:58,995 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,013 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,019 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,023 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,038 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,059 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,064 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,066 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,069 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,073 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,076 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,078 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,085 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,099 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:17:59,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:00,887 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:00,923 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:00,925 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:00,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:00,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:00,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:00,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:00,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,081 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,085 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,095 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,099 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,117 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,138 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,161 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,181 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,197 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,215 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,219 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,224 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,228 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,230 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,232 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,252 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,256 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,260 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,262 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,264 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,266 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,268 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,274 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,277 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,279 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,281 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,285 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,287 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,289 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,293 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,297 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,301 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,305 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,337 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,357 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,376 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,378 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,380 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,381 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,386 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,388 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,390 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,392 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,394 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,398 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,400 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,402 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,406 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,408 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,410 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,417 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,419 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,423 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,427 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,433 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,435 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,461 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,522 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,569 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,571 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,582 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,597 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,615 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,623 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,625 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,637 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,639 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,643 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,645 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,684 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,686 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,689 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,690 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,692 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,718 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,723 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,729 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,787 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,799 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,807 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,822 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,833 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,835 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,853 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,856 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:02,868 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:03,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:03,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:03,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:03,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:03,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:03,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:03,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:06,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:06,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:18:06,973 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-15:01:18:06,983 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-15:01:18:06,983 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent/checkpoint-485', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-15:01:18:08,430 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-15:01:18:09,072 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:17<00:51, 17.00s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:33<00:33, 16.87s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:51<00:17, 17.20s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:55<00:00, 11.94s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:55<00:00, 13.81s/it]
2025-05-15:01:19:38,233 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,233 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,234 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,235 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,236 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,236 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,236 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,236 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,236 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,236 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:19:38,236 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-15:01:19:38,247 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 41%|████      | 41/100 [00:00<00:00, 380.33it/s] 87%|████████▋ | 87/100 [00:00<00:00, 424.86it/s]100%|██████████| 100/100 [00:00<00:00, 396.61it/s]
2025-05-15:01:19:38,504 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 11%|█         | 33/310 [00:00<00:00, 311.37it/s] 30%|███       | 93/310 [00:00<00:00, 444.96it/s] 45%|████▍     | 138/310 [00:00<00:00, 340.09it/s] 57%|█████▋    | 176/310 [00:00<00:00, 351.55it/s] 73%|███████▎  | 225/310 [00:00<00:00, 384.76it/s] 85%|████████▌ | 265/310 [00:00<00:00, 371.87it/s]100%|██████████| 310/310 [00:00<00:00, 381.37it/s]
2025-05-15:01:19:39,331 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 38%|███▊      | 38/100 [00:00<00:00, 362.17it/s] 91%|█████████ | 91/100 [00:00<00:00, 458.27it/s]100%|██████████| 100/100 [00:00<00:00, 449.92it/s]
2025-05-15:01:19:39,558 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 26%|██▌       | 38/145 [00:00<00:00, 355.30it/s] 56%|█████▌    | 81/145 [00:00<00:00, 396.03it/s] 83%|████████▎ | 121/145 [00:00<00:00, 361.42it/s]100%|██████████| 145/145 [00:00<00:00, 350.48it/s]
2025-05-15:01:19:39,984 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 58%|█████▊    | 58/100 [00:00<00:00, 573.80it/s]100%|██████████| 100/100 [00:00<00:00, 511.09it/s]
2025-05-15:01:19:40,198 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 27%|██▋       | 55/203 [00:00<00:00, 528.46it/s] 53%|█████▎    | 108/203 [00:00<00:00, 280.71it/s] 82%|████████▏ | 166/203 [00:00<00:00, 370.81it/s]100%|██████████| 203/203 [00:00<00:00, 375.36it/s]
2025-05-15:01:19:40,746 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 22%|██▏       | 34/152 [00:00<00:00, 334.50it/s] 57%|█████▋    | 86/152 [00:00<00:00, 441.39it/s] 99%|█████████▉| 151/152 [00:00<00:00, 535.24it/s]100%|██████████| 152/152 [00:00<00:00, 499.60it/s]
2025-05-15:01:19:41,075 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 58%|█████▊    | 59/102 [00:00<00:00, 588.85it/s]100%|██████████| 102/102 [00:00<00:00, 558.85it/s]
2025-05-15:01:19:41,262 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 43%|████▎     | 43/100 [00:00<00:00, 425.55it/s] 86%|████████▌ | 86/100 [00:00<00:00, 373.48it/s]100%|██████████| 100/100 [00:00<00:00, 411.33it/s]
2025-05-15:01:19:41,517 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 56%|█████▌    | 80/144 [00:00<00:00, 795.95it/s]100%|██████████| 144/144 [00:00<00:00, 513.03it/s]
2025-05-15:01:19:41,804 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 26%|██▌       | 61/235 [00:00<00:00, 607.18it/s] 52%|█████▏    | 122/235 [00:00<00:00, 428.87it/s] 76%|███████▌  | 178/235 [00:00<00:00, 475.64it/s]100%|██████████| 235/235 [00:00<00:00, 506.02it/s]
2025-05-15:01:19:42,302 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 22%|██▏       | 25/112 [00:00<00:00, 240.25it/s] 67%|██████▋   | 75/112 [00:00<00:00, 383.97it/s]100%|██████████| 112/112 [00:00<00:00, 384.84it/s]
2025-05-15:01:19:42,599 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s]  9%|▊         | 23/270 [00:00<00:01, 212.75it/s] 22%|██▏       | 60/270 [00:00<00:00, 300.78it/s] 38%|███▊      | 102/270 [00:00<00:00, 353.01it/s] 51%|█████     | 138/270 [00:00<00:00, 257.79it/s] 67%|██████▋   | 182/270 [00:00<00:00, 301.39it/s] 82%|████████▏ | 221/270 [00:00<00:00, 325.95it/s] 95%|█████████▌| 257/270 [00:00<00:00, 317.78it/s]100%|██████████| 270/270 [00:00<00:00, 310.50it/s]
2025-05-15:01:19:43,511 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 67%|██████▋   | 67/100 [00:00<00:00, 669.70it/s]100%|██████████| 100/100 [00:00<00:00, 650.80it/s]
2025-05-15:01:19:43,675 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 30%|███       | 30/100 [00:00<00:00, 270.92it/s] 63%|██████▎   | 63/100 [00:00<00:00, 294.28it/s] 98%|█████████▊| 98/100 [00:00<00:00, 317.93it/s]100%|██████████| 100/100 [00:00<00:00, 312.50it/s]
2025-05-15:01:19:44,000 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 19%|█▉        | 26/135 [00:00<00:00, 259.37it/s] 54%|█████▍    | 73/135 [00:00<00:00, 355.24it/s] 81%|████████  | 109/135 [00:00<00:00, 286.51it/s]100%|██████████| 135/135 [00:00<00:00, 335.02it/s]
2025-05-15:01:19:44,409 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s]  5%|▌         | 19/378 [00:00<00:02, 172.72it/s] 13%|█▎        | 51/378 [00:00<00:01, 224.58it/s] 20%|██        | 77/378 [00:00<00:01, 238.61it/s] 31%|███       | 116/378 [00:00<00:00, 283.41it/s] 38%|███▊      | 145/378 [00:00<00:00, 263.35it/s] 49%|████▊     | 184/378 [00:00<00:00, 301.21it/s] 62%|██████▏   | 235/378 [00:00<00:00, 357.10it/s] 77%|███████▋  | 290/378 [00:00<00:00, 414.62it/s] 88%|████████▊ | 333/378 [00:00<00:00, 409.64it/s]100%|██████████| 378/378 [00:01<00:00, 357.42it/s]
2025-05-15:01:19:45,481 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 55%|█████▍    | 83/151 [00:00<00:00, 825.35it/s]100%|██████████| 151/151 [00:00<00:00, 647.97it/s]
2025-05-15:01:19:45,721 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 31%|███       | 67/216 [00:00<00:00, 665.70it/s] 62%|██████▏   | 134/216 [00:00<00:00, 564.70it/s]100%|██████████| 216/216 [00:00<00:00, 655.77it/s]
2025-05-15:01:19:46,078 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 23%|██▎       | 61/265 [00:00<00:00, 590.04it/s] 46%|████▌     | 121/265 [00:00<00:00, 508.40it/s] 65%|██████▌   | 173/265 [00:00<00:00, 496.84it/s] 84%|████████▍ | 223/265 [00:00<00:00, 481.45it/s]100%|██████████| 265/265 [00:00<00:00, 481.11it/s]
2025-05-15:01:19:46,638 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 65%|██████▌   | 65/100 [00:00<00:00, 642.84it/s]100%|██████████| 100/100 [00:00<00:00, 700.49it/s]
2025-05-15:01:19:46,785 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 40%|███▉      | 41/103 [00:00<00:00, 405.45it/s] 80%|███████▉  | 82/103 [00:00<00:00, 335.05it/s]100%|██████████| 103/103 [00:00<00:00, 341.83it/s]
2025-05-15:01:19:47,093 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s]  8%|▊         | 24/306 [00:00<00:01, 223.44it/s] 16%|█▋        | 50/306 [00:00<00:01, 234.88it/s] 34%|███▎      | 103/306 [00:00<00:00, 363.53it/s] 55%|█████▍    | 167/306 [00:00<00:00, 468.10it/s] 81%|████████  | 247/306 [00:00<00:00, 584.12it/s]100%|██████████| 306/306 [00:00<00:00, 508.24it/s]
2025-05-15:01:19:47,706 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 23%|██▎       | 39/173 [00:00<00:00, 386.32it/s] 58%|█████▊    | 100/173 [00:00<00:00, 500.15it/s] 87%|████████▋ | 150/173 [00:00<00:00, 488.32it/s]100%|██████████| 173/173 [00:00<00:00, 472.98it/s]
2025-05-15:01:19:48,078 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 23%|██▎       | 38/166 [00:00<00:00, 337.87it/s] 61%|██████▏   | 102/166 [00:00<00:00, 490.19it/s] 92%|█████████▏| 152/166 [00:00<00:00, 403.83it/s]100%|██████████| 166/166 [00:00<00:00, 412.53it/s]
2025-05-15:01:19:48,513 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 17%|█▋        | 47/272 [00:00<00:00, 453.30it/s] 35%|███▍      | 94/272 [00:00<00:00, 461.02it/s] 52%|█████▏    | 141/272 [00:00<00:00, 406.18it/s] 71%|███████   | 193/272 [00:00<00:00, 445.48it/s] 88%|████████▊ | 239/272 [00:00<00:00, 433.86it/s]100%|██████████| 272/272 [00:00<00:00, 460.14it/s]
2025-05-15:01:19:49,137 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 10%|█         | 80/783 [00:00<00:00, 797.52it/s] 20%|██        | 160/783 [00:00<00:01, 528.77it/s] 28%|██▊       | 219/783 [00:00<00:01, 398.33it/s] 34%|███▎      | 264/783 [00:00<00:01, 376.00it/s] 39%|███▉      | 305/783 [00:00<00:01, 375.82it/s] 44%|████▍     | 345/783 [00:00<00:01, 352.40it/s] 49%|████▉     | 382/783 [00:00<00:01, 339.92it/s] 56%|█████▌    | 436/783 [00:01<00:00, 376.98it/s] 61%|██████    | 475/783 [00:01<00:00, 364.05it/s] 66%|██████▌   | 514/783 [00:01<00:00, 356.84it/s] 71%|███████   | 555/783 [00:01<00:00, 370.36it/s] 76%|███████▌  | 593/783 [00:01<00:00, 350.91it/s] 80%|████████  | 629/783 [00:01<00:00, 336.88it/s] 87%|████████▋ | 681/783 [00:01<00:00, 385.28it/s] 92%|█████████▏| 721/783 [00:01<00:00, 349.48it/s] 97%|█████████▋| 758/783 [00:02<00:00, 352.38it/s]100%|██████████| 783/783 [00:02<00:00, 368.88it/s]
2025-05-15:01:19:51,287 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 58%|█████▊    | 58/100 [00:00<00:00, 578.29it/s]100%|██████████| 100/100 [00:00<00:00, 587.49it/s]
2025-05-15:01:19:51,462 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 36%|███▌      | 36/100 [00:00<00:00, 344.94it/s] 87%|████████▋ | 87/100 [00:00<00:00, 433.31it/s]100%|██████████| 100/100 [00:00<00:00, 449.00it/s]
2025-05-15:01:19:51,689 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 26%|██▌       | 72/282 [00:00<00:00, 717.24it/s] 51%|█████     | 144/282 [00:00<00:00, 492.39it/s] 70%|███████   | 198/282 [00:00<00:00, 413.33it/s] 86%|████████▌ | 242/282 [00:00<00:00, 350.26it/s]100%|██████████| 282/282 [00:00<00:00, 405.15it/s]
2025-05-15:01:19:52,401 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:04, 45.29it/s] 27%|██▋       | 63/234 [00:00<00:01, 143.03it/s] 52%|█████▏    | 121/234 [00:00<00:00, 257.85it/s] 82%|████████▏ | 193/234 [00:00<00:00, 379.94it/s]100%|██████████| 234/234 [00:00<00:00, 261.64it/s]
2025-05-15:01:19:53,305 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 10%|▉         | 22/223 [00:00<00:00, 217.85it/s] 45%|████▌     | 101/223 [00:00<00:00, 552.58it/s] 70%|███████   | 157/223 [00:00<00:00, 434.26it/s] 97%|█████████▋| 217/223 [00:00<00:00, 488.86it/s]100%|██████████| 223/223 [00:00<00:00, 467.55it/s]
2025-05-15:01:19:53,797 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 32%|███▏      | 35/110 [00:00<00:00, 349.90it/s] 87%|████████▋ | 96/110 [00:00<00:00, 471.54it/s]100%|██████████| 110/110 [00:00<00:00, 453.47it/s]
2025-05-15:01:19:54,050 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 20%|██        | 41/201 [00:00<00:00, 406.89it/s] 41%|████      | 82/201 [00:00<00:00, 291.69it/s] 62%|██████▏   | 125/201 [00:00<00:00, 342.75it/s] 81%|████████  | 162/201 [00:00<00:00, 248.20it/s]100%|██████████| 201/201 [00:00<00:00, 283.97it/s]100%|██████████| 201/201 [00:00<00:00, 290.43it/s]
2025-05-15:01:19:54,752 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 11%|█         | 21/198 [00:00<00:00, 198.19it/s] 32%|███▏      | 64/198 [00:00<00:00, 329.52it/s] 55%|█████▌    | 109/198 [00:00<00:00, 375.72it/s] 74%|███████▍  | 147/198 [00:00<00:00, 283.18it/s] 90%|████████▉ | 178/198 [00:00<00:00, 243.30it/s]100%|██████████| 198/198 [00:00<00:00, 271.68it/s]
2025-05-15:01:19:55,501 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 16%|█▋        | 40/245 [00:00<00:00, 397.40it/s] 33%|███▎      | 80/245 [00:00<00:00, 342.56it/s] 47%|████▋     | 115/245 [00:00<00:00, 342.23it/s] 68%|██████▊   | 167/245 [00:00<00:00, 407.47it/s] 87%|████████▋ | 214/245 [00:00<00:00, 413.89it/s]100%|██████████| 245/245 [00:00<00:00, 381.30it/s]
2025-05-15:01:19:56,177 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 12%|█▏        | 63/545 [00:00<00:00, 626.91it/s] 23%|██▎       | 126/545 [00:00<00:00, 473.09it/s] 32%|███▏      | 177/545 [00:00<00:00, 485.18it/s] 42%|████▏     | 227/545 [00:00<00:00, 343.95it/s] 49%|████▉     | 267/545 [00:00<00:00, 302.48it/s] 55%|█████▌    | 301/545 [00:00<00:00, 274.31it/s] 63%|██████▎   | 343/545 [00:01<00:00, 307.89it/s] 74%|███████▍  | 406/545 [00:01<00:00, 386.86it/s] 82%|████████▏ | 449/545 [00:01<00:00, 342.91it/s] 93%|█████████▎| 506/545 [00:01<00:00, 397.19it/s]100%|██████████| 545/545 [00:01<00:00, 380.83it/s]
2025-05-15:01:19:57,627 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 37%|███▋      | 37/100 [00:00<00:00, 318.60it/s] 69%|██████▉   | 69/100 [00:00<00:00, 248.47it/s]100%|██████████| 100/100 [00:00<00:00, 314.73it/s]
2025-05-15:01:19:57,951 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 11%|█         | 43/390 [00:00<00:00, 429.06it/s] 23%|██▎       | 90/390 [00:00<00:00, 436.62it/s] 34%|███▍      | 134/390 [00:00<00:00, 430.89it/s] 46%|████▌     | 178/390 [00:00<00:00, 416.78it/s] 56%|█████▋    | 220/390 [00:00<00:00, 377.34it/s] 66%|██████▋   | 259/390 [00:00<00:00, 329.50it/s] 78%|███████▊  | 303/390 [00:00<00:00, 359.59it/s] 98%|█████████▊| 381/390 [00:00<00:00, 471.18it/s]100%|██████████| 390/390 [00:00<00:00, 421.03it/s]
2025-05-15:01:19:58,897 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 19%|█▉        | 45/238 [00:00<00:00, 440.66it/s] 45%|████▍     | 106/238 [00:00<00:00, 506.02it/s] 66%|██████▌   | 157/238 [00:00<00:00, 391.99it/s] 84%|████████▎ | 199/238 [00:00<00:00, 382.95it/s]100%|██████████| 238/238 [00:00<00:00, 408.38it/s]
2025-05-15:01:19:59,492 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 35%|███▌      | 40/114 [00:00<00:00, 344.89it/s] 66%|██████▌   | 75/114 [00:00<00:00, 284.04it/s] 99%|█████████▉| 113/114 [00:00<00:00, 317.83it/s]100%|██████████| 114/114 [00:00<00:00, 315.73it/s]
2025-05-15:01:19:59,858 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s]  7%|▋         | 40/612 [00:00<00:01, 390.93it/s] 13%|█▎        | 80/612 [00:00<00:01, 345.65it/s] 22%|██▏       | 133/612 [00:00<00:01, 422.13it/s] 31%|███       | 190/612 [00:00<00:00, 466.79it/s] 40%|████      | 246/612 [00:00<00:00, 471.68it/s] 48%|████▊     | 294/612 [00:00<00:00, 425.78it/s] 55%|█████▌    | 338/612 [00:00<00:00, 375.60it/s] 62%|██████▏   | 377/612 [00:01<00:00, 317.31it/s] 74%|███████▎  | 451/612 [00:01<00:00, 418.40it/s] 83%|████████▎ | 508/612 [00:01<00:00, 451.73it/s] 93%|█████████▎| 567/612 [00:01<00:00, 487.50it/s]100%|██████████| 612/612 [00:01<00:00, 433.73it/s]
2025-05-15:01:20:01,302 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 32%|███▏      | 42/131 [00:00<00:00, 419.86it/s] 67%|██████▋   | 88/131 [00:00<00:00, 434.45it/s]100%|██████████| 131/131 [00:00<00:00, 418.11it/s]
2025-05-15:01:20:01,620 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 20%|██        | 39/193 [00:00<00:00, 387.42it/s] 52%|█████▏    | 101/193 [00:00<00:00, 515.41it/s] 79%|███████▉  | 153/193 [00:00<00:00, 382.39it/s]100%|██████████| 193/193 [00:00<00:00, 425.50it/s]
2025-05-15:01:20:02,082 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  7%|▋         | 60/895 [00:00<00:01, 594.43it/s] 13%|█▎        | 120/895 [00:00<00:01, 432.62it/s] 19%|█▊        | 166/895 [00:00<00:01, 367.52it/s] 25%|██▌       | 227/895 [00:00<00:01, 439.59it/s] 31%|███       | 278/895 [00:00<00:01, 453.46it/s] 36%|███▋      | 326/895 [00:00<00:01, 389.51it/s] 41%|████      | 368/895 [00:00<00:01, 352.49it/s] 45%|████▌     | 406/895 [00:01<00:01, 358.20it/s] 50%|████▉     | 444/895 [00:01<00:01, 316.99it/s] 54%|█████▎    | 479/895 [00:01<00:01, 322.97it/s] 58%|█████▊    | 519/895 [00:01<00:01, 320.11it/s] 62%|██████▏   | 552/895 [00:01<00:01, 285.71it/s] 68%|██████▊   | 606/895 [00:01<00:00, 348.10it/s] 72%|███████▏  | 643/895 [00:01<00:00, 340.01it/s] 76%|███████▌  | 679/895 [00:01<00:00, 312.05it/s] 81%|████████  | 722/895 [00:02<00:00, 341.89it/s] 85%|████████▍ | 758/895 [00:02<00:00, 341.36it/s] 89%|████████▉ | 800/895 [00:02<00:00, 362.41it/s] 94%|█████████▎| 838/895 [00:02<00:00, 340.86it/s] 99%|█████████▉| 887/895 [00:02<00:00, 380.86it/s]100%|██████████| 895/895 [00:02<00:00, 361.51it/s]
2025-05-15:01:20:04,613 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 27%|██▋       | 64/237 [00:00<00:00, 635.14it/s] 54%|█████▍    | 128/237 [00:00<00:00, 447.57it/s] 75%|███████▍  | 177/237 [00:00<00:00, 462.00it/s] 95%|█████████▌| 226/237 [00:00<00:00, 443.11it/s]100%|██████████| 237/237 [00:00<00:00, 462.13it/s]
2025-05-15:01:20:05,135 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 24%|██▎       | 39/165 [00:00<00:00, 377.79it/s] 57%|█████▋    | 94/165 [00:00<00:00, 474.32it/s] 86%|████████▌ | 142/165 [00:00<00:00, 463.27it/s]100%|██████████| 165/165 [00:00<00:00, 446.96it/s]
2025-05-15:01:20:05,517 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 14%|█▍        | 43/311 [00:00<00:00, 428.07it/s] 31%|███       | 97/311 [00:00<00:00, 492.83it/s] 50%|█████     | 156/311 [00:00<00:00, 535.12it/s] 68%|██████▊   | 210/311 [00:00<00:00, 441.89it/s] 87%|████████▋ | 270/311 [00:00<00:00, 474.19it/s]100%|██████████| 311/311 [00:00<00:00, 458.07it/s]
2025-05-15:01:20:06,208 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s]  8%|▊         | 28/346 [00:00<00:01, 238.51it/s] 23%|██▎       | 81/346 [00:00<00:00, 348.09it/s] 34%|███▍      | 117/346 [00:00<00:00, 345.62it/s] 46%|████▌     | 160/346 [00:00<00:00, 375.77it/s] 57%|█████▋    | 198/346 [00:00<00:00, 320.48it/s] 68%|██████▊   | 234/346 [00:00<00:00, 327.14it/s] 80%|████████  | 277/346 [00:00<00:00, 356.32it/s] 91%|█████████ | 314/346 [00:00<00:00, 327.26it/s]100%|██████████| 346/346 [00:01<00:00, 334.56it/s]
2025-05-15:01:20:07,267 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 29%|██▉       | 59/204 [00:00<00:00, 585.28it/s] 58%|█████▊    | 118/204 [00:00<00:00, 380.96it/s] 86%|████████▌ | 175/204 [00:00<00:00, 432.68it/s]100%|██████████| 204/204 [00:00<00:00, 448.55it/s]
2025-05-15:01:20:07,736 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 49%|████▉     | 59/121 [00:00<00:00, 583.67it/s] 99%|█████████▉| 120/121 [00:00<00:00, 595.29it/s]100%|██████████| 121/121 [00:00<00:00, 594.37it/s]
2025-05-15:01:20:07,944 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  4%|▍         | 63/1534 [00:00<00:02, 628.12it/s]  8%|▊         | 126/1534 [00:00<00:03, 427.29it/s] 11%|█▏        | 173/1534 [00:00<00:03, 435.25it/s] 15%|█▍        | 226/1534 [00:00<00:02, 466.89it/s] 18%|█▊        | 275/1534 [00:00<00:02, 420.51it/s] 21%|██        | 319/1534 [00:00<00:03, 396.27it/s] 24%|██▍       | 366/1534 [00:00<00:02, 411.22it/s] 27%|██▋       | 411/1534 [00:00<00:02, 418.02it/s] 30%|██▉       | 454/1534 [00:01<00:02, 421.31it/s] 35%|███▍      | 536/1534 [00:01<00:01, 530.70it/s] 39%|███▊      | 593/1534 [00:01<00:01, 541.55it/s] 42%|████▏     | 648/1534 [00:01<00:02, 436.48it/s] 45%|████▌     | 696/1534 [00:01<00:01, 422.31it/s] 49%|████▉     | 756/1534 [00:01<00:01, 467.12it/s] 53%|█████▎    | 806/1534 [00:01<00:01, 406.23it/s] 56%|█████▌    | 862/1534 [00:01<00:01, 443.50it/s] 59%|█████▉    | 910/1534 [00:02<00:01, 373.76it/s] 63%|██████▎   | 963/1534 [00:02<00:01, 409.83it/s] 66%|██████▌   | 1008/1534 [00:02<00:01, 320.67it/s] 69%|██████▉   | 1062/1534 [00:02<00:01, 367.12it/s] 72%|███████▏  | 1105/1534 [00:02<00:01, 283.39it/s] 75%|███████▌  | 1151/1534 [00:02<00:01, 317.81it/s] 78%|███████▊  | 1196/1534 [00:02<00:00, 343.74it/s] 81%|████████  | 1242/1534 [00:03<00:00, 371.19it/s] 85%|████████▍ | 1299/1534 [00:03<00:00, 405.39it/s] 89%|████████▊ | 1358/1534 [00:03<00:00, 452.86it/s] 92%|█████████▏| 1407/1534 [00:03<00:00, 338.04it/s] 95%|█████████▍| 1451/1534 [00:03<00:00, 359.81it/s] 97%|█████████▋| 1493/1534 [00:03<00:00, 373.31it/s]100%|██████████| 1534/1534 [00:03<00:00, 393.81it/s]
2025-05-15:01:20:11,905 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 25%|██▌       | 43/171 [00:00<00:00, 428.41it/s] 50%|█████     | 86/171 [00:00<00:00, 399.99it/s] 74%|███████▍  | 127/171 [00:00<00:00, 311.68it/s] 94%|█████████▎| 160/171 [00:00<00:00, 309.96it/s]100%|██████████| 171/171 [00:00<00:00, 328.85it/s]
2025-05-15:01:20:12,433 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 28%|██▊       | 30/108 [00:00<00:00, 246.26it/s] 62%|██████▏   | 67/108 [00:00<00:00, 293.64it/s]100%|██████████| 108/108 [00:00<00:00, 325.03it/s]
2025-05-15:01:20:12,770 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 18%|█▊        | 23/126 [00:00<00:00, 222.97it/s] 44%|████▎     | 55/126 [00:00<00:00, 278.74it/s] 66%|██████▌   | 83/126 [00:00<00:00, 269.86it/s]100%|██████████| 126/126 [00:00<00:00, 330.57it/s]100%|██████████| 126/126 [00:00<00:00, 305.62it/s]
2025-05-15:01:20:13,201 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 10%|▉         | 32/324 [00:00<00:00, 303.68it/s] 27%|██▋       | 88/324 [00:00<00:01, 120.74it/s] 41%|████      | 132/324 [00:00<00:01, 177.25it/s] 58%|█████▊    | 187/324 [00:00<00:00, 252.71it/s] 73%|███████▎  | 236/324 [00:00<00:00, 305.43it/s] 89%|████████▊ | 287/324 [00:01<00:00, 345.98it/s]100%|██████████| 324/324 [00:01<00:00, 277.79it/s]
2025-05-15:01:20:14,386 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 25%|██▍       | 40/163 [00:00<00:00, 389.99it/s] 57%|█████▋    | 93/163 [00:00<00:00, 471.03it/s] 87%|████████▋ | 141/163 [00:00<00:00, 324.24it/s]100%|██████████| 163/163 [00:00<00:00, 307.60it/s]
2025-05-15:01:20:14,935 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:03<47:27:58,  3.04s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:04<45:10, 20.70it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:04<26:52, 34.76it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:05<20:22, 45.80it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:06<17:03, 54.65it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:07<14:54, 62.46it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:08<13:47, 67.41it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:09<12:56, 71.72it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:09<12:16, 75.58it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:10<11:44, 78.88it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:11<11:16, 82.09it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:11<11:02, 83.70it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:12<10:48, 85.47it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:13<10:25, 88.52it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:14<10:22, 88.74it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:14<10:16, 89.58it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:15<10:10, 90.33it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:16<09:56, 92.40it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:16<09:43, 94.29it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:17<09:32, 95.98it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:18<09:23, 97.38it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:18<09:14, 98.87it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:19<09:05, 100.36it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:19<08:58, 101.54it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:20<09:06, 99.91it/s] Running loglikelihood requests:   3%|▎         | 1601/56168 [00:21<08:55, 101.94it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:21<09:04, 100.15it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:22<08:43, 103.95it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:22<08:39, 104.67it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:23<08:44, 103.54it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:24<08:37, 104.89it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:24<08:46, 102.87it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:25<08:37, 104.55it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:26<08:29, 106.13it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:26<08:24, 106.95it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:27<08:29, 105.88it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:27<08:16, 108.54it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:28<08:09, 109.87it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:28<08:12, 109.11it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:29<08:07, 110.14it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:30<08:22, 106.75it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:30<08:13, 108.55it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:31<08:02, 110.93it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:31<07:54, 112.46it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:32<07:53, 112.57it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:32<07:47, 114.09it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:33<07:18, 121.33it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:33<07:09, 123.75it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:34<06:46, 130.64it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:34<06:32, 135.04it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:35<06:24, 137.75it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:35<06:19, 139.49it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:36<06:08, 143.41it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:36<06:01, 145.94it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:36<06:01, 145.75it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:37<05:57, 147.14it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:37<05:51, 149.79it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:38<05:45, 151.89it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:38<05:47, 150.78it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:38<05:39, 154.41it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:39<05:34, 156.30it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:39<05:31, 157.69it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:40<05:28, 158.73it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:40<05:33, 156.22it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:40<05:27, 159.04it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:41<05:24, 160.16it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:41<05:19, 162.81it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:42<05:18, 162.79it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:42<05:12, 165.77it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:42<05:10, 166.79it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:43<05:08, 167.32it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:43<05:09, 166.96it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:44<05:07, 167.78it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:44<05:14, 163.55it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:44<05:09, 165.99it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:45<05:07, 167.05it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:45<05:02, 169.62it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:45<04:58, 171.71it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:46<05:04, 168.24it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:46<04:57, 171.55it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:46<04:52, 174.79it/s]Running loglikelihood requests:   9%|▉         | 5139/56168 [00:47<05:00, 169.63it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:47<05:22, 158.20it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:47<05:09, 164.26it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:48<05:03, 167.52it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:48<04:56, 171.46it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:48<04:48, 175.75it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:49<04:47, 176.22it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:49<04:44, 177.61it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:49<04:43, 178.25it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:50<04:48, 175.05it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:50<04:42, 178.12it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:51<04:33, 183.77it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:51<04:30, 185.65it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:51<04:35, 182.59it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:52<04:25, 188.96it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:52<04:24, 189.30it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:52<04:19, 192.73it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:53<04:18, 193.31it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:53<04:19, 192.38it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:53<04:14, 195.85it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:53<04:15, 195.04it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:54<04:26, 186.85it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:54<04:20, 190.84it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:54<04:12, 196.56it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:55<04:10, 197.98it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:55<04:03, 203.17it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:55<04:04, 201.57it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:56<03:59, 205.71it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:56<04:08, 198.31it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:56<04:01, 204.11it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:57<03:57, 206.46it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:57<03:53, 210.29it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:57<03:56, 207.01it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:58<03:56, 207.21it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:58<03:52, 210.46it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:58<03:47, 214.10it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:58<03:44, 217.46it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:59<03:42, 218.48it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:59<03:58, 204.04it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:59<03:50, 210.69it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:00<03:43, 216.80it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:00<03:39, 220.56it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:00<03:38, 221.49it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:01<03:40, 219.35it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:01<03:38, 220.65it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:01<03:35, 223.67it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:01<03:33, 225.74it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:02<03:31, 227.02it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:02<03:30, 227.82it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:02<03:26, 232.23it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:02<03:25, 233.05it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:03<03:22, 235.42it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:03<03:21, 236.78it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:03<03:18, 240.21it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:04<03:16, 242.67it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:04<03:20, 236.92it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:04<03:22, 234.70it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:04<03:21, 235.19it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:05<03:25, 230.56it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:05<03:24, 231.08it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:05<03:17, 239.40it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:05<03:23, 231.30it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:06<03:20, 235.34it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:06<03:12, 243.69it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:06<03:06, 251.16it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:06<03:02, 257.01it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:07<03:01, 258.16it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:07<03:04, 253.66it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:07<03:11, 244.16it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:07<03:13, 240.57it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:08<03:06, 249.10it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:08<03:00, 257.67it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:08<02:57, 261.88it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:08<02:53, 266.63it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:09<02:51, 270.66it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:09<02:48, 273.87it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:09<02:47, 275.69it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:09<02:53, 265.96it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:10<02:49, 272.00it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:10<02:50, 269.00it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:10<02:51, 267.99it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:10<02:48, 271.81it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:11<02:48, 271.62it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:11<02:46, 274.96it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:11<02:43, 278.63it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:11<02:40, 284.01it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:11<02:39, 284.92it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:12<02:38, 286.89it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:12<02:36, 289.30it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:12<02:34, 293.32it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:12<02:33, 294.14it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:13<02:34, 291.99it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:13<02:35, 291.34it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:13<02:33, 293.63it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:13<02:31, 296.82it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:13<02:29, 301.32it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:14<02:33, 291.85it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:14<02:29, 299.31it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:14<02:26, 306.48it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:14<02:24, 309.81it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:14<02:25, 306.27it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:15<02:25, 306.13it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:15<02:24, 307.48it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:15<02:24, 308.58it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:15<02:24, 307.60it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:15<02:24, 307.77it/s]Running loglikelihood requests:  21%|██        | 11905/56168 [01:16<02:21, 311.93it/s]Running loglikelihood requests:  21%|██▏       | 11969/56168 [01:16<02:24, 306.76it/s]Running loglikelihood requests:  21%|██▏       | 12033/56168 [01:16<02:22, 310.05it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [01:16<02:26, 300.42it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [01:16<02:22, 307.75it/s]Running loglikelihood requests:  22%|██▏       | 12225/56168 [01:17<02:21, 309.55it/s]Running loglikelihood requests:  22%|██▏       | 12289/56168 [01:17<02:24, 303.98it/s]Running loglikelihood requests:  22%|██▏       | 12353/56168 [01:17<02:22, 308.49it/s]Running loglikelihood requests:  22%|██▏       | 12417/56168 [01:17<02:33, 284.52it/s]Running loglikelihood requests:  22%|██▏       | 12481/56168 [01:18<02:27, 297.05it/s]Running loglikelihood requests:  22%|██▏       | 12545/56168 [01:18<02:22, 305.26it/s]Running loglikelihood requests:  22%|██▏       | 12609/56168 [01:18<02:18, 314.31it/s]Running loglikelihood requests:  23%|██▎       | 12673/56168 [01:18<02:19, 312.29it/s]Running loglikelihood requests:  23%|██▎       | 12737/56168 [01:18<02:21, 307.35it/s]Running loglikelihood requests:  23%|██▎       | 12801/56168 [01:19<02:16, 316.75it/s]Running loglikelihood requests:  23%|██▎       | 12865/56168 [01:19<02:19, 311.39it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [01:19<02:16, 316.60it/s]Running loglikelihood requests:  23%|██▎       | 12993/56168 [01:19<02:13, 323.52it/s]Running loglikelihood requests:  23%|██▎       | 13057/56168 [01:19<02:12, 325.84it/s]Running loglikelihood requests:  23%|██▎       | 13121/56168 [01:20<02:12, 324.32it/s]Running loglikelihood requests:  23%|██▎       | 13185/56168 [01:20<02:11, 326.70it/s]Running loglikelihood requests:  24%|██▎       | 13249/56168 [01:20<02:16, 314.97it/s]Running loglikelihood requests:  24%|██▎       | 13313/56168 [01:20<02:24, 296.33it/s]Running loglikelihood requests:  24%|██▍       | 13377/56168 [01:20<02:24, 296.67it/s]Running loglikelihood requests:  24%|██▍       | 13441/56168 [01:21<02:21, 301.45it/s]Running loglikelihood requests:  24%|██▍       | 13505/56168 [01:21<02:21, 300.94it/s]Running loglikelihood requests:  24%|██▍       | 13569/56168 [01:21<02:23, 297.40it/s]Running loglikelihood requests:  24%|██▍       | 13633/56168 [01:21<02:21, 300.59it/s]Running loglikelihood requests:  24%|██▍       | 13697/56168 [01:22<02:24, 293.62it/s]Running loglikelihood requests:  24%|██▍       | 13761/56168 [01:22<02:20, 302.27it/s]Running loglikelihood requests:  25%|██▍       | 13825/56168 [01:22<02:16, 310.93it/s]Running loglikelihood requests:  25%|██▍       | 13889/56168 [01:22<02:11, 321.25it/s]Running loglikelihood requests:  25%|██▍       | 13953/56168 [01:22<02:10, 324.64it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [01:22<02:09, 325.78it/s]Running loglikelihood requests:  25%|██▌       | 14081/56168 [01:23<02:14, 312.11it/s]Running loglikelihood requests:  25%|██▌       | 14145/56168 [01:23<02:12, 317.87it/s]Running loglikelihood requests:  25%|██▌       | 14209/56168 [01:23<02:12, 317.09it/s]Running loglikelihood requests:  25%|██▌       | 14273/56168 [01:23<02:08, 325.43it/s]Running loglikelihood requests:  26%|██▌       | 14337/56168 [01:23<02:12, 316.47it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [01:24<02:10, 319.64it/s]Running loglikelihood requests:  26%|██▌       | 14465/56168 [01:24<02:08, 325.08it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [01:24<02:06, 329.64it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [01:24<02:04, 333.29it/s]Running loglikelihood requests:  26%|██▌       | 14657/56168 [01:24<02:05, 329.86it/s]Running loglikelihood requests:  26%|██▌       | 14721/56168 [01:25<02:07, 324.64it/s]Running loglikelihood requests:  26%|██▋       | 14785/56168 [01:25<02:05, 329.15it/s]Running loglikelihood requests:  26%|██▋       | 14849/56168 [01:25<02:13, 310.22it/s]Running loglikelihood requests:  27%|██▋       | 14913/56168 [01:25<02:09, 317.36it/s]Running loglikelihood requests:  27%|██▋       | 14977/56168 [01:25<02:07, 323.44it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [01:26<02:06, 326.09it/s]Running loglikelihood requests:  27%|██▋       | 15105/56168 [01:26<02:05, 327.19it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [01:26<02:02, 333.39it/s]Running loglikelihood requests:  27%|██▋       | 15233/56168 [01:26<02:01, 337.34it/s]Running loglikelihood requests:  27%|██▋       | 15297/56168 [01:26<02:00, 340.23it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [01:27<01:59, 340.68it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [01:27<01:58, 343.72it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [01:27<01:59, 340.88it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [01:27<02:00, 337.84it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [01:27<02:01, 332.60it/s]Running loglikelihood requests:  28%|██▊       | 15681/56168 [01:28<02:00, 336.54it/s]Running loglikelihood requests:  28%|██▊       | 15745/56168 [01:28<01:59, 339.59it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [01:28<01:58, 340.60it/s]Running loglikelihood requests:  28%|██▊       | 15873/56168 [01:28<01:57, 341.50it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [01:28<01:56, 344.84it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [01:28<01:56, 344.73it/s]Running loglikelihood requests:  29%|██▊       | 16065/56168 [01:29<01:56, 343.99it/s]Running loglikelihood requests:  29%|██▊       | 16129/56168 [01:29<01:55, 346.54it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [01:29<01:57, 341.64it/s]Running loglikelihood requests:  29%|██▉       | 16257/56168 [01:29<02:01, 329.35it/s]Running loglikelihood requests:  29%|██▉       | 16321/56168 [01:29<02:01, 327.07it/s]Running loglikelihood requests:  29%|██▉       | 16385/56168 [01:30<02:03, 322.27it/s]Running loglikelihood requests:  29%|██▉       | 16449/56168 [01:30<01:59, 332.12it/s]Running loglikelihood requests:  29%|██▉       | 16513/56168 [01:30<01:56, 339.73it/s]Running loglikelihood requests:  30%|██▉       | 16577/56168 [01:30<01:55, 343.97it/s]Running loglikelihood requests:  30%|██▉       | 16641/56168 [01:30<01:53, 348.02it/s]Running loglikelihood requests:  30%|██▉       | 16705/56168 [01:31<01:52, 349.70it/s]Running loglikelihood requests:  30%|██▉       | 16769/56168 [01:31<01:52, 350.57it/s]Running loglikelihood requests:  30%|██▉       | 16833/56168 [01:31<01:51, 351.70it/s]Running loglikelihood requests:  30%|███       | 16897/56168 [01:31<01:51, 352.22it/s]Running loglikelihood requests:  30%|███       | 16961/56168 [01:31<01:51, 350.69it/s]Running loglikelihood requests:  30%|███       | 17025/56168 [01:31<01:50, 353.64it/s]Running loglikelihood requests:  30%|███       | 17089/56168 [01:32<01:52, 346.77it/s]Running loglikelihood requests:  31%|███       | 17153/56168 [01:32<01:51, 349.64it/s]Running loglikelihood requests:  31%|███       | 17217/56168 [01:32<01:54, 340.16it/s]Running loglikelihood requests:  31%|███       | 17281/56168 [01:32<01:55, 337.07it/s]Running loglikelihood requests:  31%|███       | 17345/56168 [01:32<01:53, 343.36it/s]Running loglikelihood requests:  31%|███       | 17409/56168 [01:33<01:51, 347.13it/s]Running loglikelihood requests:  31%|███       | 17473/56168 [01:33<01:54, 338.12it/s]Running loglikelihood requests:  31%|███       | 17537/56168 [01:33<01:54, 336.14it/s]Running loglikelihood requests:  31%|███▏      | 17601/56168 [01:33<01:54, 336.53it/s]Running loglikelihood requests:  31%|███▏      | 17665/56168 [01:33<01:53, 338.18it/s]Running loglikelihood requests:  32%|███▏      | 17729/56168 [01:34<01:51, 343.36it/s]Running loglikelihood requests:  32%|███▏      | 17793/56168 [01:34<01:50, 345.78it/s]Running loglikelihood requests:  32%|███▏      | 17857/56168 [01:34<01:46, 360.24it/s]Running loglikelihood requests:  32%|███▏      | 17921/56168 [01:34<01:44, 364.97it/s]Running loglikelihood requests:  32%|███▏      | 17985/56168 [01:34<01:41, 375.68it/s]Running loglikelihood requests:  32%|███▏      | 18049/56168 [01:34<01:39, 382.93it/s]Running loglikelihood requests:  32%|███▏      | 18113/56168 [01:35<01:40, 378.23it/s]Running loglikelihood requests:  32%|███▏      | 18177/56168 [01:35<01:39, 382.79it/s]Running loglikelihood requests:  32%|███▏      | 18241/56168 [01:35<01:37, 389.51it/s]Running loglikelihood requests:  33%|███▎      | 18305/56168 [01:35<01:36, 392.93it/s]Running loglikelihood requests:  33%|███▎      | 18369/56168 [01:35<01:37, 389.61it/s]Running loglikelihood requests:  33%|███▎      | 18433/56168 [01:35<01:35, 394.27it/s]Running loglikelihood requests:  33%|███▎      | 18497/56168 [01:35<01:35, 392.96it/s]Running loglikelihood requests:  33%|███▎      | 18561/56168 [01:36<01:45, 358.13it/s]Running loglikelihood requests:  33%|███▎      | 18625/56168 [01:36<01:41, 369.72it/s]Running loglikelihood requests:  33%|███▎      | 18689/56168 [01:36<01:38, 380.04it/s]Running loglikelihood requests:  33%|███▎      | 18753/56168 [01:36<01:36, 388.31it/s]Running loglikelihood requests:  34%|███▎      | 18817/56168 [01:36<01:35, 391.99it/s]Running loglikelihood requests:  34%|███▎      | 18881/56168 [01:36<01:34, 394.80it/s]Running loglikelihood requests:  34%|███▎      | 18945/56168 [01:37<01:34, 395.09it/s]Running loglikelihood requests:  34%|███▍      | 19009/56168 [01:37<01:34, 394.89it/s]Running loglikelihood requests:  34%|███▍      | 19073/56168 [01:37<01:33, 398.86it/s]Running loglikelihood requests:  34%|███▍      | 19137/56168 [01:37<01:33, 396.38it/s]Running loglikelihood requests:  34%|███▍      | 19201/56168 [01:37<01:38, 375.62it/s]Running loglikelihood requests:  34%|███▍      | 19265/56168 [01:38<01:45, 350.20it/s]Running loglikelihood requests:  34%|███▍      | 19329/56168 [01:38<01:41, 364.16it/s]Running loglikelihood requests:  35%|███▍      | 19393/56168 [01:38<01:37, 376.71it/s]Running loglikelihood requests:  35%|███▍      | 19457/56168 [01:38<01:36, 381.29it/s]Running loglikelihood requests:  35%|███▍      | 19521/56168 [01:38<01:34, 389.39it/s]Running loglikelihood requests:  35%|███▍      | 19585/56168 [01:38<01:31, 398.72it/s]Running loglikelihood requests:  35%|███▍      | 19649/56168 [01:38<01:30, 404.33it/s]Running loglikelihood requests:  35%|███▌      | 19713/56168 [01:39<01:28, 410.02it/s]Running loglikelihood requests:  35%|███▌      | 19777/56168 [01:39<01:29, 408.20it/s]Running loglikelihood requests:  35%|███▌      | 19841/56168 [01:39<01:28, 411.92it/s]Running loglikelihood requests:  35%|███▌      | 19905/56168 [01:39<01:27, 413.70it/s]Running loglikelihood requests:  36%|███▌      | 19969/56168 [01:39<01:27, 411.46it/s]Running loglikelihood requests:  36%|███▌      | 20033/56168 [01:39<01:27, 414.01it/s]Running loglikelihood requests:  36%|███▌      | 20097/56168 [01:40<01:26, 417.28it/s]Running loglikelihood requests:  36%|███▌      | 20161/56168 [01:40<01:30, 396.28it/s]Running loglikelihood requests:  36%|███▌      | 20225/56168 [01:40<01:28, 404.95it/s]Running loglikelihood requests:  36%|███▌      | 20289/56168 [01:40<01:33, 383.94it/s]Running loglikelihood requests:  36%|███▌      | 20353/56168 [01:40<01:30, 395.47it/s]Running loglikelihood requests:  36%|███▋      | 20417/56168 [01:40<01:31, 390.88it/s]Running loglikelihood requests:  36%|███▋      | 20481/56168 [01:41<01:29, 399.18it/s]Running loglikelihood requests:  37%|███▋      | 20545/56168 [01:41<01:28, 403.67it/s]Running loglikelihood requests:  37%|███▋      | 20609/56168 [01:41<01:33, 379.87it/s]Running loglikelihood requests:  37%|███▋      | 20673/56168 [01:41<01:31, 387.11it/s]Running loglikelihood requests:  37%|███▋      | 20737/56168 [01:41<01:29, 397.35it/s]Running loglikelihood requests:  37%|███▋      | 20801/56168 [01:41<01:28, 397.90it/s]Running loglikelihood requests:  37%|███▋      | 20865/56168 [01:42<01:27, 405.10it/s]Running loglikelihood requests:  37%|███▋      | 20929/56168 [01:42<01:28, 399.25it/s]Running loglikelihood requests:  37%|███▋      | 20993/56168 [01:42<01:27, 403.25it/s]Running loglikelihood requests:  37%|███▋      | 21057/56168 [01:42<01:25, 409.36it/s]Running loglikelihood requests:  38%|███▊      | 21121/56168 [01:42<01:25, 408.20it/s]Running loglikelihood requests:  38%|███▊      | 21185/56168 [01:42<01:34, 370.83it/s]Running loglikelihood requests:  38%|███▊      | 21249/56168 [01:43<01:33, 371.90it/s]Running loglikelihood requests:  38%|███▊      | 21313/56168 [01:43<01:37, 358.41it/s]Running loglikelihood requests:  38%|███▊      | 21377/56168 [01:43<01:35, 364.37it/s]Running loglikelihood requests:  38%|███▊      | 21441/56168 [01:43<01:32, 375.66it/s]Running loglikelihood requests:  38%|███▊      | 21505/56168 [01:43<01:33, 369.78it/s]Running loglikelihood requests:  38%|███▊      | 21569/56168 [01:43<01:32, 374.01it/s]Running loglikelihood requests:  39%|███▊      | 21633/56168 [01:44<01:30, 383.34it/s]Running loglikelihood requests:  39%|███▊      | 21697/56168 [01:44<01:31, 377.90it/s]Running loglikelihood requests:  39%|███▊      | 21761/56168 [01:44<01:27, 392.66it/s]Running loglikelihood requests:  39%|███▉      | 21825/56168 [01:44<01:28, 390.18it/s]Running loglikelihood requests:  39%|███▉      | 21889/56168 [01:44<01:26, 394.38it/s]Running loglikelihood requests:  39%|███▉      | 21953/56168 [01:44<01:25, 401.70it/s]Running loglikelihood requests:  39%|███▉      | 22017/56168 [01:44<01:22, 412.98it/s]Running loglikelihood requests:  39%|███▉      | 22081/56168 [01:45<01:20, 421.02it/s]Running loglikelihood requests:  39%|███▉      | 22145/56168 [01:45<01:21, 418.77it/s]Running loglikelihood requests:  40%|███▉      | 22209/56168 [01:45<01:22, 411.30it/s]Running loglikelihood requests:  40%|███▉      | 22273/56168 [01:45<01:20, 419.86it/s]Running loglikelihood requests:  40%|███▉      | 22337/56168 [01:45<01:20, 418.68it/s]Running loglikelihood requests:  40%|███▉      | 22401/56168 [01:45<01:18, 430.34it/s]Running loglikelihood requests:  40%|███▉      | 22465/56168 [01:46<01:17, 437.37it/s]Running loglikelihood requests:  40%|████      | 22529/56168 [01:46<01:16, 440.42it/s]Running loglikelihood requests:  40%|████      | 22593/56168 [01:46<01:15, 445.44it/s]Running loglikelihood requests:  40%|████      | 22657/56168 [01:46<01:14, 448.64it/s]Running loglikelihood requests:  40%|████      | 22721/56168 [01:46<01:16, 437.81it/s]Running loglikelihood requests:  41%|████      | 22785/56168 [01:46<01:16, 434.52it/s]Running loglikelihood requests:  41%|████      | 22849/56168 [01:46<01:15, 440.14it/s]Running loglikelihood requests:  41%|████      | 22913/56168 [01:47<01:15, 439.75it/s]Running loglikelihood requests:  41%|████      | 22977/56168 [01:47<01:14, 446.51it/s]Running loglikelihood requests:  41%|████      | 23041/56168 [01:47<01:13, 449.07it/s]Running loglikelihood requests:  41%|████      | 23105/56168 [01:47<01:15, 437.62it/s]Running loglikelihood requests:  41%|████      | 23169/56168 [01:47<01:15, 436.72it/s]Running loglikelihood requests:  41%|████▏     | 23233/56168 [01:47<01:14, 443.22it/s]Running loglikelihood requests:  41%|████▏     | 23297/56168 [01:47<01:13, 447.04it/s]Running loglikelihood requests:  42%|████▏     | 23361/56168 [01:48<01:13, 448.04it/s]Running loglikelihood requests:  42%|████▏     | 23425/56168 [01:48<01:13, 446.96it/s]Running loglikelihood requests:  42%|████▏     | 23489/56168 [01:48<01:12, 451.39it/s]Running loglikelihood requests:  42%|████▏     | 23553/56168 [01:48<01:15, 434.14it/s]Running loglikelihood requests:  42%|████▏     | 23617/56168 [01:48<01:15, 433.52it/s]Running loglikelihood requests:  42%|████▏     | 23681/56168 [01:48<01:13, 439.28it/s]Running loglikelihood requests:  42%|████▏     | 23745/56168 [01:48<01:12, 444.18it/s]Running loglikelihood requests:  42%|████▏     | 23809/56168 [01:49<01:12, 448.21it/s]Running loglikelihood requests:  43%|████▎     | 23873/56168 [01:49<01:11, 450.99it/s]Running loglikelihood requests:  43%|████▎     | 23937/56168 [01:49<01:10, 454.36it/s]Running loglikelihood requests:  43%|████▎     | 24001/56168 [01:49<01:10, 456.15it/s]Running loglikelihood requests:  43%|████▎     | 24065/56168 [01:49<01:13, 437.68it/s]Running loglikelihood requests:  43%|████▎     | 24129/56168 [01:49<01:12, 441.30it/s]Running loglikelihood requests:  43%|████▎     | 24193/56168 [01:49<01:11, 446.74it/s]Running loglikelihood requests:  43%|████▎     | 24257/56168 [01:50<01:10, 449.90it/s]Running loglikelihood requests:  43%|████▎     | 24321/56168 [01:50<01:10, 454.12it/s]Running loglikelihood requests:  43%|████▎     | 24385/56168 [01:50<01:09, 455.93it/s]Running loglikelihood requests:  44%|████▎     | 24449/56168 [01:50<01:09, 458.35it/s]Running loglikelihood requests:  44%|████▎     | 24513/56168 [01:50<01:08, 460.33it/s]Running loglikelihood requests:  44%|████▍     | 24577/56168 [01:50<01:08, 458.74it/s]Running loglikelihood requests:  44%|████▍     | 24641/56168 [01:50<01:08, 459.96it/s]Running loglikelihood requests:  44%|████▍     | 24705/56168 [01:51<01:08, 458.06it/s]Running loglikelihood requests:  44%|████▍     | 24769/56168 [01:51<01:11, 437.18it/s]Running loglikelihood requests:  44%|████▍     | 24833/56168 [01:51<01:11, 438.01it/s]Running loglikelihood requests:  44%|████▍     | 24897/56168 [01:51<01:12, 432.45it/s]Running loglikelihood requests:  44%|████▍     | 24961/56168 [01:51<01:12, 427.80it/s]Running loglikelihood requests:  45%|████▍     | 25025/56168 [01:51<01:12, 427.29it/s]Running loglikelihood requests:  45%|████▍     | 25089/56168 [01:51<01:14, 416.27it/s]Running loglikelihood requests:  45%|████▍     | 25153/56168 [01:52<01:15, 412.10it/s]Running loglikelihood requests:  45%|████▍     | 25217/56168 [01:52<01:13, 422.80it/s]Running loglikelihood requests:  45%|████▌     | 25281/56168 [01:52<01:12, 428.11it/s]Running loglikelihood requests:  45%|████▌     | 25345/56168 [01:52<01:09, 440.84it/s]Running loglikelihood requests:  45%|████▌     | 25409/56168 [01:52<01:07, 455.22it/s]Running loglikelihood requests:  45%|████▌     | 25473/56168 [01:52<01:06, 463.93it/s]Running loglikelihood requests:  45%|████▌     | 25537/56168 [01:52<01:05, 466.24it/s]Running loglikelihood requests:  46%|████▌     | 25601/56168 [01:53<01:11, 428.69it/s]Running loglikelihood requests:  46%|████▌     | 25665/56168 [01:53<01:09, 440.57it/s]Running loglikelihood requests:  46%|████▌     | 25729/56168 [01:53<01:07, 453.32it/s]Running loglikelihood requests:  46%|████▌     | 25793/56168 [01:53<01:05, 462.20it/s]Running loglikelihood requests:  46%|████▌     | 25857/56168 [01:53<01:06, 454.58it/s]Running loglikelihood requests:  46%|████▌     | 25921/56168 [01:53<01:08, 439.62it/s]Running loglikelihood requests:  46%|████▋     | 25985/56168 [01:53<01:08, 440.42it/s]Running loglikelihood requests:  46%|████▋     | 26049/56168 [01:54<01:09, 432.10it/s]Running loglikelihood requests:  46%|████▋     | 26113/56168 [01:54<01:07, 445.69it/s]Running loglikelihood requests:  47%|████▋     | 26177/56168 [01:54<01:05, 455.60it/s]Running loglikelihood requests:  47%|████▋     | 26241/56168 [01:54<01:05, 458.45it/s]Running loglikelihood requests:  47%|████▋     | 26305/56168 [01:54<01:06, 451.83it/s]Running loglikelihood requests:  47%|████▋     | 26369/56168 [01:54<01:16, 391.49it/s]Running loglikelihood requests:  47%|████▋     | 26433/56168 [01:55<01:12, 411.31it/s]Running loglikelihood requests:  47%|████▋     | 26497/56168 [01:55<01:08, 433.66it/s]Running loglikelihood requests:  47%|████▋     | 26561/56168 [01:55<01:06, 447.79it/s]Running loglikelihood requests:  47%|████▋     | 26625/56168 [01:55<01:04, 461.53it/s]Running loglikelihood requests:  48%|████▊     | 26689/56168 [01:55<01:03, 463.81it/s]Running loglikelihood requests:  48%|████▊     | 26753/56168 [01:55<01:07, 436.19it/s]Running loglikelihood requests:  48%|████▊     | 26817/56168 [01:55<01:06, 442.53it/s]Running loglikelihood requests:  48%|████▊     | 26881/56168 [01:55<01:05, 448.77it/s]Running loglikelihood requests:  48%|████▊     | 26945/56168 [01:56<01:06, 436.66it/s]Running loglikelihood requests:  48%|████▊     | 27009/56168 [01:56<01:05, 446.16it/s]Running loglikelihood requests:  48%|████▊     | 27073/56168 [01:56<01:03, 460.39it/s]Running loglikelihood requests:  48%|████▊     | 27137/56168 [01:56<01:02, 464.93it/s]Running loglikelihood requests:  48%|████▊     | 27201/56168 [01:56<01:01, 469.53it/s]Running loglikelihood requests:  49%|████▊     | 27265/56168 [01:56<01:04, 446.61it/s]Running loglikelihood requests:  49%|████▊     | 27329/56168 [01:56<01:06, 430.53it/s]Running loglikelihood requests:  49%|████▉     | 27393/56168 [01:57<01:09, 415.42it/s]Running loglikelihood requests:  49%|████▉     | 27457/56168 [01:57<01:08, 416.54it/s]Running loglikelihood requests:  49%|████▉     | 27521/56168 [01:57<01:07, 425.02it/s]Running loglikelihood requests:  49%|████▉     | 27585/56168 [01:57<01:05, 438.11it/s]Running loglikelihood requests:  49%|████▉     | 27649/56168 [01:57<01:08, 414.97it/s]Running loglikelihood requests:  49%|████▉     | 27713/56168 [01:57<01:08, 416.46it/s]Running loglikelihood requests:  49%|████▉     | 27777/56168 [01:58<01:08, 414.29it/s]Running loglikelihood requests:  50%|████▉     | 27841/56168 [01:58<01:07, 417.07it/s]Running loglikelihood requests:  50%|████▉     | 27905/56168 [01:58<01:06, 423.92it/s]Running loglikelihood requests:  50%|████▉     | 27969/56168 [01:58<01:09, 408.20it/s]Running loglikelihood requests:  50%|████▉     | 28033/56168 [01:58<01:08, 410.69it/s]Running loglikelihood requests:  50%|█████     | 28097/56168 [01:58<01:04, 434.70it/s]Running loglikelihood requests:  50%|█████     | 28161/56168 [01:58<01:07, 416.90it/s]Running loglikelihood requests:  50%|█████     | 28225/56168 [01:59<01:10, 394.43it/s]Running loglikelihood requests:  50%|█████     | 28289/56168 [01:59<01:07, 412.20it/s]Running loglikelihood requests:  50%|█████     | 28353/56168 [01:59<01:08, 406.16it/s]Running loglikelihood requests:  51%|█████     | 28417/56168 [01:59<01:09, 399.28it/s]Running loglikelihood requests:  51%|█████     | 28481/56168 [01:59<01:06, 417.75it/s]Running loglikelihood requests:  51%|█████     | 28545/56168 [01:59<01:09, 399.25it/s]Running loglikelihood requests:  51%|█████     | 28609/56168 [02:00<01:07, 407.90it/s]Running loglikelihood requests:  51%|█████     | 28673/56168 [02:00<01:03, 432.77it/s]Running loglikelihood requests:  51%|█████     | 28737/56168 [02:00<01:02, 438.92it/s]Running loglikelihood requests:  51%|█████▏    | 28801/56168 [02:00<01:01, 442.00it/s]Running loglikelihood requests:  51%|█████▏    | 28865/56168 [02:00<01:02, 439.72it/s]Running loglikelihood requests:  52%|█████▏    | 28929/56168 [02:00<01:01, 441.82it/s]Running loglikelihood requests:  52%|█████▏    | 28993/56168 [02:00<00:59, 457.15it/s]Running loglikelihood requests:  52%|█████▏    | 29057/56168 [02:01<00:57, 468.53it/s]Running loglikelihood requests:  52%|█████▏    | 29121/56168 [02:01<00:56, 476.87it/s]Running loglikelihood requests:  52%|█████▏    | 29185/56168 [02:01<00:56, 474.28it/s]Running loglikelihood requests:  52%|█████▏    | 29249/56168 [02:01<00:56, 476.88it/s]Running loglikelihood requests:  52%|█████▏    | 29313/56168 [02:01<00:57, 466.52it/s]Running loglikelihood requests:  52%|█████▏    | 29377/56168 [02:01<00:56, 471.97it/s]Running loglikelihood requests:  52%|█████▏    | 29441/56168 [02:01<00:55, 480.73it/s]Running loglikelihood requests:  53%|█████▎    | 29505/56168 [02:01<00:55, 484.73it/s]Running loglikelihood requests:  53%|█████▎    | 29569/56168 [02:02<01:00, 440.77it/s]Running loglikelihood requests:  53%|█████▎    | 29633/56168 [02:02<00:59, 447.27it/s]Running loglikelihood requests:  53%|█████▎    | 29697/56168 [02:02<00:57, 462.77it/s]Running loglikelihood requests:  53%|█████▎    | 29761/56168 [02:02<00:57, 461.92it/s]Running loglikelihood requests:  53%|█████▎    | 29825/56168 [02:02<00:55, 477.52it/s]Running loglikelihood requests:  53%|█████▎    | 29889/56168 [02:02<00:55, 476.98it/s]Running loglikelihood requests:  53%|█████▎    | 29953/56168 [02:02<00:55, 476.42it/s]Running loglikelihood requests:  53%|█████▎    | 30017/56168 [02:03<00:55, 469.22it/s]Running loglikelihood requests:  54%|█████▎    | 30081/56168 [02:03<00:54, 481.45it/s]Running loglikelihood requests:  54%|█████▎    | 30145/56168 [02:03<00:52, 491.43it/s]Running loglikelihood requests:  54%|█████▍    | 30209/56168 [02:03<00:52, 492.25it/s]Running loglikelihood requests:  54%|█████▍    | 30273/56168 [02:03<00:51, 507.33it/s]Running loglikelihood requests:  54%|█████▍    | 30337/56168 [02:03<00:51, 499.92it/s]Running loglikelihood requests:  54%|█████▍    | 30401/56168 [02:03<00:51, 500.17it/s]Running loglikelihood requests:  54%|█████▍    | 30465/56168 [02:03<00:50, 512.10it/s]Running loglikelihood requests:  54%|█████▍    | 30529/56168 [02:04<00:49, 513.32it/s]Running loglikelihood requests:  54%|█████▍    | 30593/56168 [02:04<00:50, 508.43it/s]Running loglikelihood requests:  55%|█████▍    | 30657/56168 [02:04<00:51, 499.86it/s]Running loglikelihood requests:  55%|█████▍    | 30721/56168 [02:04<00:51, 497.91it/s]Running loglikelihood requests:  55%|█████▍    | 30785/56168 [02:04<00:51, 495.93it/s]Running loglikelihood requests:  55%|█████▍    | 30849/56168 [02:04<00:51, 492.74it/s]Running loglikelihood requests:  55%|█████▌    | 30913/56168 [02:04<00:52, 480.49it/s]Running loglikelihood requests:  55%|█████▌    | 30977/56168 [02:05<00:53, 471.10it/s]Running loglikelihood requests:  55%|█████▌    | 31041/56168 [02:05<00:53, 468.02it/s]Running loglikelihood requests:  55%|█████▌    | 31105/56168 [02:05<00:52, 474.81it/s]Running loglikelihood requests:  55%|█████▌    | 31169/56168 [02:05<00:53, 470.19it/s]Running loglikelihood requests:  56%|█████▌    | 31233/56168 [02:05<00:53, 470.41it/s]Running loglikelihood requests:  56%|█████▌    | 31297/56168 [02:05<00:51, 485.52it/s]Running loglikelihood requests:  56%|█████▌    | 31361/56168 [02:05<00:51, 482.70it/s]Running loglikelihood requests:  56%|█████▌    | 31425/56168 [02:05<00:50, 492.11it/s]Running loglikelihood requests:  56%|█████▌    | 31489/56168 [02:06<00:51, 479.80it/s]Running loglikelihood requests:  56%|█████▌    | 31553/56168 [02:06<00:49, 492.61it/s]Running loglikelihood requests:  56%|█████▋    | 31617/56168 [02:06<00:49, 499.19it/s]Running loglikelihood requests:  56%|█████▋    | 31681/56168 [02:06<00:48, 506.59it/s]Running loglikelihood requests:  57%|█████▋    | 31745/56168 [02:06<00:48, 502.30it/s]Running loglikelihood requests:  57%|█████▋    | 31809/56168 [02:06<00:47, 508.81it/s]Running loglikelihood requests:  57%|█████▋    | 31873/56168 [02:06<00:48, 500.50it/s]Running loglikelihood requests:  57%|█████▋    | 31937/56168 [02:07<00:51, 467.20it/s]Running loglikelihood requests:  57%|█████▋    | 32001/56168 [02:07<00:51, 465.35it/s]Running loglikelihood requests:  57%|█████▋    | 32065/56168 [02:07<00:49, 486.73it/s]Running loglikelihood requests:  57%|█████▋    | 32129/56168 [02:07<00:47, 502.97it/s]Running loglikelihood requests:  57%|█████▋    | 32193/56168 [02:07<00:46, 513.45it/s]Running loglikelihood requests:  57%|█████▋    | 32257/56168 [02:07<00:45, 522.12it/s]Running loglikelihood requests:  58%|█████▊    | 32321/56168 [02:07<00:46, 511.29it/s]Running loglikelihood requests:  58%|█████▊    | 32385/56168 [02:07<00:45, 521.26it/s]Running loglikelihood requests:  58%|█████▊    | 32449/56168 [02:08<00:46, 506.92it/s]Running loglikelihood requests:  58%|█████▊    | 32513/56168 [02:08<00:46, 507.58it/s]Running loglikelihood requests:  58%|█████▊    | 32577/56168 [02:08<00:47, 501.84it/s]Running loglikelihood requests:  58%|█████▊    | 32641/56168 [02:08<00:47, 499.36it/s]Running loglikelihood requests:  58%|█████▊    | 32705/56168 [02:08<00:47, 495.05it/s]Running loglikelihood requests:  58%|█████▊    | 32769/56168 [02:08<00:45, 510.85it/s]Running loglikelihood requests:  58%|█████▊    | 32833/56168 [02:08<00:45, 517.11it/s]Running loglikelihood requests:  59%|█████▊    | 32897/56168 [02:08<00:47, 485.78it/s]Running loglikelihood requests:  59%|█████▊    | 32961/56168 [02:09<00:47, 485.14it/s]Running loglikelihood requests:  59%|█████▉    | 33025/56168 [02:09<00:49, 463.64it/s]Running loglikelihood requests:  59%|█████▉    | 33089/56168 [02:09<00:47, 481.72it/s]Running loglikelihood requests:  59%|█████▉    | 33153/56168 [02:09<00:46, 492.01it/s]Running loglikelihood requests:  59%|█████▉    | 33217/56168 [02:09<00:48, 475.74it/s]Running loglikelihood requests:  59%|█████▉    | 33281/56168 [02:09<00:46, 495.29it/s]Running loglikelihood requests:  59%|█████▉    | 33345/56168 [02:09<00:45, 500.17it/s]Running loglikelihood requests:  59%|█████▉    | 33409/56168 [02:09<00:44, 507.20it/s]Running loglikelihood requests:  60%|█████▉    | 33473/56168 [02:10<00:49, 457.82it/s]Running loglikelihood requests:  60%|█████▉    | 33537/56168 [02:10<00:51, 441.25it/s]Running loglikelihood requests:  60%|█████▉    | 33601/56168 [02:10<00:49, 454.35it/s]Running loglikelihood requests:  60%|█████▉    | 33665/56168 [02:10<00:52, 431.55it/s]Running loglikelihood requests:  60%|██████    | 33729/56168 [02:10<00:52, 428.69it/s]Running loglikelihood requests:  60%|██████    | 33793/56168 [02:10<00:50, 438.83it/s]Running loglikelihood requests:  60%|██████    | 33857/56168 [02:11<00:51, 429.48it/s]Running loglikelihood requests:  60%|██████    | 33921/56168 [02:11<00:52, 426.84it/s]Running loglikelihood requests:  61%|██████    | 33985/56168 [02:11<00:50, 437.24it/s]Running loglikelihood requests:  61%|██████    | 34049/56168 [02:11<00:47, 463.94it/s]Running loglikelihood requests:  61%|██████    | 34113/56168 [02:11<00:45, 484.48it/s]Running loglikelihood requests:  61%|██████    | 34177/56168 [02:11<00:46, 477.56it/s]Running loglikelihood requests:  61%|██████    | 34241/56168 [02:11<00:44, 496.75it/s]Running loglikelihood requests:  61%|██████    | 34305/56168 [02:11<00:44, 487.70it/s]Running loglikelihood requests:  61%|██████    | 34369/56168 [02:12<00:43, 495.60it/s]Running loglikelihood requests:  61%|██████▏   | 34433/56168 [02:12<00:43, 498.20it/s]Running loglikelihood requests:  61%|██████▏   | 34497/56168 [02:12<00:46, 467.96it/s]Running loglikelihood requests:  62%|██████▏   | 34561/56168 [02:12<00:44, 483.02it/s]Running loglikelihood requests:  62%|██████▏   | 34625/56168 [02:12<00:44, 488.02it/s]Running loglikelihood requests:  62%|██████▏   | 34689/56168 [02:12<00:43, 492.64it/s]Running loglikelihood requests:  62%|██████▏   | 34753/56168 [02:12<00:42, 509.34it/s]Running loglikelihood requests:  62%|██████▏   | 34817/56168 [02:12<00:42, 508.01it/s]Running loglikelihood requests:  62%|██████▏   | 34881/56168 [02:13<00:42, 504.82it/s]Running loglikelihood requests:  62%|██████▏   | 34945/56168 [02:13<00:40, 518.21it/s]Running loglikelihood requests:  62%|██████▏   | 35009/56168 [02:13<00:42, 499.48it/s]Running loglikelihood requests:  62%|██████▏   | 35073/56168 [02:13<00:42, 494.25it/s]Running loglikelihood requests:  63%|██████▎   | 35137/56168 [02:13<00:41, 503.41it/s]Running loglikelihood requests:  63%|██████▎   | 35201/56168 [02:13<00:48, 429.57it/s]Running loglikelihood requests:  63%|██████▎   | 35265/56168 [02:13<00:45, 460.35it/s]Running loglikelihood requests:  63%|██████▎   | 35329/56168 [02:14<00:43, 482.62it/s]Running loglikelihood requests:  63%|██████▎   | 35393/56168 [02:14<00:41, 501.96it/s]Running loglikelihood requests:  63%|██████▎   | 35457/56168 [02:14<00:40, 510.51it/s]Running loglikelihood requests:  63%|██████▎   | 35521/56168 [02:14<00:40, 508.87it/s]Running loglikelihood requests:  63%|██████▎   | 35585/56168 [02:14<00:39, 518.19it/s]Running loglikelihood requests:  63%|██████▎   | 35649/56168 [02:14<00:39, 515.91it/s]Running loglikelihood requests:  64%|██████▎   | 35713/56168 [02:14<00:41, 495.58it/s]Running loglikelihood requests:  64%|██████▎   | 35777/56168 [02:14<00:40, 508.83it/s]Running loglikelihood requests:  64%|██████▍   | 35841/56168 [02:15<00:40, 504.42it/s]Running loglikelihood requests:  64%|██████▍   | 35905/56168 [02:15<00:39, 507.68it/s]Running loglikelihood requests:  64%|██████▍   | 35969/56168 [02:15<00:40, 504.42it/s]Running loglikelihood requests:  64%|██████▍   | 36033/56168 [02:15<00:38, 517.67it/s]Running loglikelihood requests:  64%|██████▍   | 36097/56168 [02:15<00:37, 530.23it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [02:15<00:41, 483.60it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [02:15<00:39, 504.38it/s]Running loglikelihood requests:  65%|██████▍   | 36289/56168 [02:15<00:38, 512.62it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [02:16<00:38, 519.76it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [02:16<00:38, 513.54it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [02:16<00:38, 517.28it/s]Running loglikelihood requests:  65%|██████▌   | 36545/56168 [02:16<00:36, 531.76it/s]Running loglikelihood requests:  65%|██████▌   | 36609/56168 [02:16<00:38, 506.44it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [02:16<00:38, 505.01it/s]Running loglikelihood requests:  65%|██████▌   | 36737/56168 [02:16<00:36, 525.45it/s]Running loglikelihood requests:  66%|██████▌   | 36801/56168 [02:16<00:37, 521.41it/s]Running loglikelihood requests:  66%|██████▌   | 36865/56168 [02:17<00:42, 456.35it/s]Running loglikelihood requests:  66%|██████▌   | 36929/56168 [02:17<00:40, 471.61it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [02:17<00:40, 472.82it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [02:17<00:38, 500.27it/s]Running loglikelihood requests:  66%|██████▌   | 37121/56168 [02:17<00:37, 505.11it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [02:17<00:36, 519.79it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [02:17<00:35, 525.64it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [02:17<00:35, 533.00it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [02:18<00:35, 531.66it/s]Running loglikelihood requests:  67%|██████▋   | 37441/56168 [02:18<00:34, 536.56it/s]Running loglikelihood requests:  67%|██████▋   | 37505/56168 [02:18<00:34, 537.43it/s]Running loglikelihood requests:  67%|██████▋   | 37569/56168 [02:18<00:33, 548.02it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [02:18<00:33, 545.22it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [02:18<00:33, 555.98it/s]Running loglikelihood requests:  67%|██████▋   | 37761/56168 [02:18<00:32, 563.41it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [02:18<00:32, 568.82it/s]Running loglikelihood requests:  67%|██████▋   | 37889/56168 [02:18<00:32, 567.25it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [02:19<00:31, 569.95it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [02:19<00:32, 557.79it/s]Running loglikelihood requests:  68%|██████▊   | 38081/56168 [02:19<00:33, 545.24it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [02:19<00:38, 472.29it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [02:19<00:36, 489.74it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [02:19<00:39, 455.58it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [02:19<00:37, 471.76it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [02:20<00:40, 442.57it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [02:20<00:40, 439.16it/s]Running loglikelihood requests:  69%|██████▊   | 38529/56168 [02:20<00:37, 473.07it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [02:20<00:35, 490.16it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [02:20<00:33, 515.66it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [02:20<00:33, 526.42it/s]Running loglikelihood requests:  69%|██████▉   | 38785/56168 [02:20<00:32, 529.29it/s]Running loglikelihood requests:  69%|██████▉   | 38849/56168 [02:20<00:32, 537.67it/s]Running loglikelihood requests:  69%|██████▉   | 38913/56168 [02:21<00:33, 513.78it/s]Running loglikelihood requests:  69%|██████▉   | 38977/56168 [02:21<00:32, 526.09it/s]Running loglikelihood requests:  70%|██████▉   | 39041/56168 [02:21<00:31, 538.73it/s]Running loglikelihood requests:  70%|██████▉   | 39105/56168 [02:21<00:31, 539.03it/s]Running loglikelihood requests:  70%|██████▉   | 39169/56168 [02:21<00:32, 520.83it/s]Running loglikelihood requests:  70%|██████▉   | 39233/56168 [02:21<00:31, 530.95it/s]Running loglikelihood requests:  70%|██████▉   | 39297/56168 [02:21<00:31, 536.69it/s]Running loglikelihood requests:  70%|███████   | 39361/56168 [02:21<00:31, 534.38it/s]Running loglikelihood requests:  70%|███████   | 39425/56168 [02:21<00:30, 541.50it/s]Running loglikelihood requests:  70%|███████   | 39489/56168 [02:22<00:30, 543.56it/s]Running loglikelihood requests:  70%|███████   | 39553/56168 [02:22<00:30, 546.33it/s]Running loglikelihood requests:  71%|███████   | 39617/56168 [02:22<00:29, 559.39it/s]Running loglikelihood requests:  71%|███████   | 39681/56168 [02:22<00:29, 563.78it/s]Running loglikelihood requests:  71%|███████   | 39745/56168 [02:22<00:30, 546.30it/s]Running loglikelihood requests:  71%|███████   | 39809/56168 [02:22<00:31, 522.92it/s]Running loglikelihood requests:  71%|███████   | 39873/56168 [02:22<00:30, 540.73it/s]Running loglikelihood requests:  71%|███████   | 39937/56168 [02:22<00:30, 535.56it/s]Running loglikelihood requests:  71%|███████   | 40001/56168 [02:23<00:29, 543.13it/s]Running loglikelihood requests:  71%|███████▏  | 40065/56168 [02:23<00:29, 548.11it/s]Running loglikelihood requests:  71%|███████▏  | 40129/56168 [02:23<00:29, 544.37it/s]Running loglikelihood requests:  72%|███████▏  | 40193/56168 [02:23<00:28, 557.11it/s]Running loglikelihood requests:  72%|███████▏  | 40257/56168 [02:23<00:28, 563.21it/s]Running loglikelihood requests:  72%|███████▏  | 40321/56168 [02:23<00:30, 527.66it/s]Running loglikelihood requests:  72%|███████▏  | 40385/56168 [02:23<00:29, 541.24it/s]Running loglikelihood requests:  72%|███████▏  | 40449/56168 [02:23<00:29, 539.42it/s]Running loglikelihood requests:  72%|███████▏  | 40513/56168 [02:23<00:29, 526.64it/s]Running loglikelihood requests:  72%|███████▏  | 40577/56168 [02:24<00:29, 528.45it/s]Running loglikelihood requests:  72%|███████▏  | 40641/56168 [02:24<00:29, 521.46it/s]Running loglikelihood requests:  72%|███████▏  | 40705/56168 [02:24<00:28, 540.88it/s]Running loglikelihood requests:  73%|███████▎  | 40769/56168 [02:24<00:28, 534.91it/s]Running loglikelihood requests:  73%|███████▎  | 40833/56168 [02:24<00:29, 520.18it/s]Running loglikelihood requests:  73%|███████▎  | 40897/56168 [02:24<00:28, 539.09it/s]Running loglikelihood requests:  73%|███████▎  | 40961/56168 [02:24<00:28, 533.51it/s]Running loglikelihood requests:  73%|███████▎  | 41025/56168 [02:24<00:27, 549.02it/s]Running loglikelihood requests:  73%|███████▎  | 41089/56168 [02:25<00:27, 545.47it/s]Running loglikelihood requests:  73%|███████▎  | 41153/56168 [02:25<00:27, 552.64it/s]Running loglikelihood requests:  73%|███████▎  | 41217/56168 [02:25<00:26, 563.09it/s]Running loglikelihood requests:  73%|███████▎  | 41281/56168 [02:25<00:26, 569.41it/s]Running loglikelihood requests:  74%|███████▎  | 41345/56168 [02:25<00:26, 551.31it/s]Running loglikelihood requests:  74%|███████▎  | 41409/56168 [02:25<00:26, 561.77it/s]Running loglikelihood requests:  74%|███████▍  | 41473/56168 [02:25<00:27, 527.84it/s]Running loglikelihood requests:  74%|███████▍  | 41537/56168 [02:25<00:28, 521.93it/s]Running loglikelihood requests:  74%|███████▍  | 41601/56168 [02:25<00:27, 528.76it/s]Running loglikelihood requests:  74%|███████▍  | 41665/56168 [02:26<00:26, 547.64it/s]Running loglikelihood requests:  74%|███████▍  | 41729/56168 [02:26<00:25, 558.79it/s]Running loglikelihood requests:  74%|███████▍  | 41793/56168 [02:26<00:25, 561.31it/s]Running loglikelihood requests:  75%|███████▍  | 41857/56168 [02:26<00:25, 555.20it/s]Running loglikelihood requests:  75%|███████▍  | 41921/56168 [02:26<00:25, 560.40it/s]Running loglikelihood requests:  75%|███████▍  | 41985/56168 [02:26<00:25, 562.74it/s]Running loglikelihood requests:  75%|███████▍  | 42049/56168 [02:26<00:25, 563.11it/s]Running loglikelihood requests:  75%|███████▍  | 42113/56168 [02:26<00:29, 475.60it/s]Running loglikelihood requests:  75%|███████▌  | 42177/56168 [02:27<00:28, 494.57it/s]Running loglikelihood requests:  75%|███████▌  | 42241/56168 [02:27<00:32, 424.76it/s]Running loglikelihood requests:  75%|███████▌  | 42305/56168 [02:27<00:30, 454.79it/s]Running loglikelihood requests:  75%|███████▌  | 42369/56168 [02:27<00:28, 484.33it/s]Running loglikelihood requests:  76%|███████▌  | 42433/56168 [02:27<00:27, 491.68it/s]Running loglikelihood requests:  76%|███████▌  | 42497/56168 [02:27<00:26, 515.89it/s]Running loglikelihood requests:  76%|███████▌  | 42561/56168 [02:27<00:26, 522.98it/s]Running loglikelihood requests:  76%|███████▌  | 42625/56168 [02:27<00:25, 535.04it/s]Running loglikelihood requests:  76%|███████▌  | 42689/56168 [02:28<00:24, 546.88it/s]Running loglikelihood requests:  76%|███████▌  | 42753/56168 [02:28<00:24, 541.34it/s]Running loglikelihood requests:  76%|███████▌  | 42817/56168 [02:28<00:24, 543.38it/s]Running loglikelihood requests:  76%|███████▋  | 42881/56168 [02:28<00:25, 521.51it/s]Running loglikelihood requests:  76%|███████▋  | 42945/56168 [02:28<00:24, 530.28it/s]Running loglikelihood requests:  77%|███████▋  | 43009/56168 [02:28<00:24, 529.50it/s]Running loglikelihood requests:  77%|███████▋  | 43073/56168 [02:28<00:25, 519.28it/s]Running loglikelihood requests:  77%|███████▋  | 43137/56168 [02:28<00:25, 520.62it/s]Running loglikelihood requests:  77%|███████▋  | 43201/56168 [02:29<00:24, 539.78it/s]Running loglikelihood requests:  77%|███████▋  | 43265/56168 [02:29<00:23, 553.71it/s]Running loglikelihood requests:  77%|███████▋  | 43329/56168 [02:29<00:22, 564.84it/s]Running loglikelihood requests:  77%|███████▋  | 43393/56168 [02:29<00:22, 562.43it/s]Running loglikelihood requests:  77%|███████▋  | 43457/56168 [02:29<00:22, 569.30it/s]Running loglikelihood requests:  77%|███████▋  | 43521/56168 [02:29<00:22, 561.40it/s]Running loglikelihood requests:  78%|███████▊  | 43585/56168 [02:29<00:22, 569.23it/s]Running loglikelihood requests:  78%|███████▊  | 43649/56168 [02:29<00:21, 574.92it/s]Running loglikelihood requests:  78%|███████▊  | 43713/56168 [02:29<00:21, 579.24it/s]Running loglikelihood requests:  78%|███████▊  | 43777/56168 [02:30<00:21, 583.54it/s]Running loglikelihood requests:  78%|███████▊  | 43841/56168 [02:30<00:21, 565.45it/s]Running loglikelihood requests:  78%|███████▊  | 43905/56168 [02:30<00:21, 559.23it/s]Running loglikelihood requests:  78%|███████▊  | 43969/56168 [02:30<00:22, 549.66it/s]Running loglikelihood requests:  78%|███████▊  | 44033/56168 [02:30<00:22, 544.73it/s]Running loglikelihood requests:  79%|███████▊  | 44097/56168 [02:30<00:22, 535.58it/s]Running loglikelihood requests:  79%|███████▊  | 44161/56168 [02:30<00:22, 532.93it/s]Running loglikelihood requests:  79%|███████▊  | 44225/56168 [02:30<00:22, 524.75it/s]Running loglikelihood requests:  79%|███████▉  | 44289/56168 [02:31<00:22, 522.39it/s]Running loglikelihood requests:  79%|███████▉  | 44353/56168 [02:31<00:22, 514.83it/s]Running loglikelihood requests:  79%|███████▉  | 44417/56168 [02:31<00:21, 537.13it/s]Running loglikelihood requests:  79%|███████▉  | 44481/56168 [02:31<00:21, 541.22it/s]Running loglikelihood requests:  79%|███████▉  | 44545/56168 [02:31<00:22, 526.97it/s]Running loglikelihood requests:  79%|███████▉  | 44609/56168 [02:31<00:22, 512.25it/s]Running loglikelihood requests:  80%|███████▉  | 44673/56168 [02:31<00:21, 523.02it/s]Running loglikelihood requests:  80%|███████▉  | 44737/56168 [02:31<00:21, 525.60it/s]Running loglikelihood requests:  80%|███████▉  | 44801/56168 [02:31<00:21, 535.64it/s]Running loglikelihood requests:  80%|███████▉  | 44865/56168 [02:32<00:20, 545.51it/s]Running loglikelihood requests:  80%|███████▉  | 44929/56168 [02:32<00:20, 556.41it/s]Running loglikelihood requests:  80%|████████  | 44993/56168 [02:32<00:19, 568.38it/s]Running loglikelihood requests:  80%|████████  | 45057/56168 [02:32<00:19, 575.91it/s]Running loglikelihood requests:  80%|████████  | 45121/56168 [02:32<00:18, 583.51it/s]Running loglikelihood requests:  80%|████████  | 45185/56168 [02:32<00:18, 587.04it/s]Running loglikelihood requests:  81%|████████  | 45249/56168 [02:32<00:18, 578.27it/s]Running loglikelihood requests:  81%|████████  | 45313/56168 [02:32<00:18, 582.74it/s]Running loglikelihood requests:  81%|████████  | 45377/56168 [02:32<00:18, 570.37it/s]Running loglikelihood requests:  81%|████████  | 45441/56168 [02:33<00:21, 503.90it/s]Running loglikelihood requests:  81%|████████  | 45505/56168 [02:33<00:23, 455.76it/s]Running loglikelihood requests:  81%|████████  | 45569/56168 [02:33<00:21, 490.29it/s]Running loglikelihood requests:  81%|████████  | 45633/56168 [02:33<00:20, 510.41it/s]Running loglikelihood requests:  81%|████████▏ | 45697/56168 [02:33<00:20, 508.12it/s]Running loglikelihood requests:  81%|████████▏ | 45761/56168 [02:33<00:20, 509.90it/s]Running loglikelihood requests:  82%|████████▏ | 45825/56168 [02:33<00:22, 451.49it/s]Running loglikelihood requests:  82%|████████▏ | 45889/56168 [02:34<00:22, 466.88it/s]Running loglikelihood requests:  82%|████████▏ | 45953/56168 [02:34<00:20, 498.33it/s]Running loglikelihood requests:  82%|████████▏ | 46023/56168 [02:34<00:18, 548.76it/s]Running loglikelihood requests:  82%|████████▏ | 46089/56168 [02:34<00:17, 577.76it/s]Running loglikelihood requests:  82%|████████▏ | 46149/56168 [02:34<00:17, 571.57it/s]Running loglikelihood requests:  82%|████████▏ | 46209/56168 [02:34<00:17, 578.15it/s]Running loglikelihood requests:  82%|████████▏ | 46273/56168 [02:34<00:17, 566.60it/s]Running loglikelihood requests:  82%|████████▏ | 46337/56168 [02:34<00:17, 565.56it/s]Running loglikelihood requests:  83%|████████▎ | 46401/56168 [02:34<00:17, 565.88it/s]Running loglikelihood requests:  83%|████████▎ | 46465/56168 [02:35<00:18, 521.87it/s]Running loglikelihood requests:  83%|████████▎ | 46529/56168 [02:35<00:19, 506.35it/s]Running loglikelihood requests:  83%|████████▎ | 46593/56168 [02:35<00:17, 536.03it/s]Running loglikelihood requests:  83%|████████▎ | 46657/56168 [02:35<00:17, 556.32it/s]Running loglikelihood requests:  83%|████████▎ | 46721/56168 [02:35<00:17, 529.73it/s]Running loglikelihood requests:  83%|████████▎ | 46785/56168 [02:35<00:17, 538.66it/s]Running loglikelihood requests:  83%|████████▎ | 46849/56168 [02:35<00:19, 468.66it/s]Running loglikelihood requests:  84%|████████▎ | 46913/56168 [02:35<00:19, 476.16it/s]Running loglikelihood requests:  84%|████████▎ | 46977/56168 [02:36<00:18, 506.71it/s]Running loglikelihood requests:  84%|████████▍ | 47041/56168 [02:36<00:19, 471.92it/s]Running loglikelihood requests:  84%|████████▍ | 47105/56168 [02:36<00:17, 504.82it/s]Running loglikelihood requests:  84%|████████▍ | 47169/56168 [02:36<00:16, 535.32it/s]Running loglikelihood requests:  84%|████████▍ | 47235/56168 [02:36<00:15, 568.08it/s]Running loglikelihood requests:  84%|████████▍ | 47297/56168 [02:36<00:15, 568.78it/s]Running loglikelihood requests:  84%|████████▍ | 47361/56168 [02:36<00:15, 585.72it/s]Running loglikelihood requests:  84%|████████▍ | 47425/56168 [02:36<00:15, 576.64it/s]Running loglikelihood requests:  85%|████████▍ | 47489/56168 [02:37<00:14, 590.30it/s]Running loglikelihood requests:  85%|████████▍ | 47553/56168 [02:37<00:14, 601.61it/s]Running loglikelihood requests:  85%|████████▍ | 47623/56168 [02:37<00:13, 629.86it/s]Running loglikelihood requests:  85%|████████▍ | 47687/56168 [02:37<00:13, 632.53it/s]Running loglikelihood requests:  85%|████████▌ | 47751/56168 [02:37<00:14, 599.11it/s]Running loglikelihood requests:  85%|████████▌ | 47812/56168 [02:37<00:13, 598.92it/s]Running loglikelihood requests:  85%|████████▌ | 47873/56168 [02:37<00:13, 594.78it/s]Running loglikelihood requests:  85%|████████▌ | 47937/56168 [02:37<00:13, 602.28it/s]Running loglikelihood requests:  85%|████████▌ | 48001/56168 [02:37<00:14, 577.94it/s]Running loglikelihood requests:  86%|████████▌ | 48065/56168 [02:37<00:14, 552.56it/s]Running loglikelihood requests:  86%|████████▌ | 48136/56168 [02:38<00:13, 595.13it/s]Running loglikelihood requests:  86%|████████▌ | 48197/56168 [02:38<00:13, 580.79it/s]Running loglikelihood requests:  86%|████████▌ | 48257/56168 [02:38<00:13, 585.33it/s]Running loglikelihood requests:  86%|████████▌ | 48321/56168 [02:38<00:13, 579.94it/s]Running loglikelihood requests:  86%|████████▌ | 48385/56168 [02:38<00:13, 570.59it/s]Running loglikelihood requests:  86%|████████▋ | 48449/56168 [02:38<00:13, 563.69it/s]Running loglikelihood requests:  86%|████████▋ | 48522/56168 [02:38<00:12, 609.38it/s]Running loglikelihood requests:  86%|████████▋ | 48584/56168 [02:38<00:14, 522.83it/s]Running loglikelihood requests:  87%|████████▋ | 48641/56168 [02:39<00:14, 503.34it/s]Running loglikelihood requests:  87%|████████▋ | 48705/56168 [02:39<00:14, 513.23it/s]Running loglikelihood requests:  87%|████████▋ | 48769/56168 [02:39<00:13, 530.89it/s]Running loglikelihood requests:  87%|████████▋ | 48833/56168 [02:39<00:14, 500.49it/s]Running loglikelihood requests:  87%|████████▋ | 48897/56168 [02:39<00:13, 519.78it/s]Running loglikelihood requests:  87%|████████▋ | 48961/56168 [02:39<00:13, 536.06it/s]Running loglikelihood requests:  87%|████████▋ | 49025/56168 [02:39<00:12, 558.22it/s]Running loglikelihood requests:  87%|████████▋ | 49089/56168 [02:39<00:12, 571.83it/s]Running loglikelihood requests:  88%|████████▊ | 49155/56168 [02:39<00:11, 596.07it/s]Running loglikelihood requests:  88%|████████▊ | 49217/56168 [02:40<00:11, 585.88it/s]Running loglikelihood requests:  88%|████████▊ | 49281/56168 [02:40<00:11, 575.86it/s]Running loglikelihood requests:  88%|████████▊ | 49345/56168 [02:40<00:12, 559.16it/s]Running loglikelihood requests:  88%|████████▊ | 49409/56168 [02:40<00:11, 566.58it/s]Running loglikelihood requests:  88%|████████▊ | 49473/56168 [02:40<00:11, 566.78it/s]Running loglikelihood requests:  88%|████████▊ | 49537/56168 [02:40<00:11, 574.62it/s]Running loglikelihood requests:  88%|████████▊ | 49601/56168 [02:40<00:11, 554.96it/s]Running loglikelihood requests:  88%|████████▊ | 49670/56168 [02:40<00:10, 591.41it/s]Running loglikelihood requests:  89%|████████▊ | 49730/56168 [02:40<00:11, 566.37it/s]Running loglikelihood requests:  89%|████████▊ | 49793/56168 [02:41<00:11, 573.63it/s]Running loglikelihood requests:  89%|████████▉ | 49857/56168 [02:41<00:10, 585.86it/s]Running loglikelihood requests:  89%|████████▉ | 49921/56168 [02:41<00:10, 595.43it/s]Running loglikelihood requests:  89%|████████▉ | 49985/56168 [02:41<00:10, 568.28it/s]Running loglikelihood requests:  89%|████████▉ | 50049/56168 [02:41<00:11, 514.82it/s]Running loglikelihood requests:  89%|████████▉ | 50113/56168 [02:41<00:11, 532.34it/s]Running loglikelihood requests:  89%|████████▉ | 50177/56168 [02:41<00:11, 516.42it/s]Running loglikelihood requests:  89%|████████▉ | 50241/56168 [02:41<00:10, 540.27it/s]Running loglikelihood requests:  90%|████████▉ | 50305/56168 [02:42<00:11, 509.93it/s]Running loglikelihood requests:  90%|████████▉ | 50372/56168 [02:42<00:10, 537.75it/s]Running loglikelihood requests:  90%|████████▉ | 50433/56168 [02:42<00:10, 542.25it/s]Running loglikelihood requests:  90%|████████▉ | 50497/56168 [02:42<00:10, 547.29it/s]Running loglikelihood requests:  90%|█████████ | 50561/56168 [02:42<00:10, 549.37it/s]Running loglikelihood requests:  90%|█████████ | 50625/56168 [02:42<00:10, 537.37it/s]Running loglikelihood requests:  90%|█████████ | 50689/56168 [02:42<00:10, 507.91it/s]Running loglikelihood requests:  90%|█████████ | 50753/56168 [02:42<00:10, 528.33it/s]Running loglikelihood requests:  90%|█████████ | 50817/56168 [02:42<00:09, 552.52it/s]Running loglikelihood requests:  91%|█████████ | 50890/56168 [02:43<00:08, 590.01it/s]Running loglikelihood requests:  91%|█████████ | 50950/56168 [02:43<00:08, 586.48it/s]Running loglikelihood requests:  91%|█████████ | 51024/56168 [02:43<00:08, 629.34it/s]Running loglikelihood requests:  91%|█████████ | 51091/56168 [02:43<00:07, 640.90it/s]Running loglikelihood requests:  91%|█████████ | 51156/56168 [02:43<00:08, 608.67it/s]Running loglikelihood requests:  91%|█████████ | 51249/56168 [02:43<00:07, 698.72it/s]Running loglikelihood requests:  91%|█████████▏| 51320/56168 [02:43<00:06, 699.29it/s]Running loglikelihood requests:  91%|█████████▏| 51393/56168 [02:43<00:08, 566.73it/s]Running loglikelihood requests:  92%|█████████▏| 51457/56168 [02:43<00:08, 573.63it/s]Running loglikelihood requests:  92%|█████████▏| 51544/56168 [02:44<00:07, 650.06it/s]Running loglikelihood requests:  92%|█████████▏| 51613/56168 [02:44<00:07, 645.40it/s]Running loglikelihood requests:  92%|█████████▏| 51707/56168 [02:44<00:06, 725.70it/s]Running loglikelihood requests:  92%|█████████▏| 51783/56168 [02:44<00:07, 570.42it/s]Running loglikelihood requests:  92%|█████████▏| 51847/56168 [02:44<00:07, 553.92it/s]Running loglikelihood requests:  92%|█████████▏| 51915/56168 [02:44<00:07, 584.45it/s]Running loglikelihood requests:  93%|█████████▎| 52000/56168 [02:44<00:06, 652.58it/s]Running loglikelihood requests:  93%|█████████▎| 52070/56168 [02:44<00:06, 655.35it/s]Running loglikelihood requests:  93%|█████████▎| 52139/56168 [02:45<00:06, 616.69it/s]Running loglikelihood requests:  93%|█████████▎| 52203/56168 [02:45<00:06, 599.21it/s]Running loglikelihood requests:  93%|█████████▎| 52289/56168 [02:45<00:07, 542.74it/s]Running loglikelihood requests:  93%|█████████▎| 52353/56168 [02:45<00:07, 541.57it/s]Running loglikelihood requests:  93%|█████████▎| 52417/56168 [02:45<00:06, 545.98it/s]Running loglikelihood requests:  93%|█████████▎| 52481/56168 [02:45<00:06, 568.11it/s]Running loglikelihood requests:  94%|█████████▎| 52545/56168 [02:45<00:06, 560.02it/s]Running loglikelihood requests:  94%|█████████▎| 52609/56168 [02:45<00:06, 568.39it/s]Running loglikelihood requests:  94%|█████████▍| 52673/56168 [02:46<00:06, 574.67it/s]Running loglikelihood requests:  94%|█████████▍| 52737/56168 [02:46<00:06, 570.38it/s]Running loglikelihood requests:  94%|█████████▍| 52801/56168 [02:46<00:05, 561.90it/s]Running loglikelihood requests:  94%|█████████▍| 52865/56168 [02:46<00:06, 543.73it/s]Running loglikelihood requests:  94%|█████████▍| 52929/56168 [02:46<00:05, 563.77it/s]Running loglikelihood requests:  94%|█████████▍| 52993/56168 [02:46<00:05, 578.99it/s]Running loglikelihood requests:  94%|█████████▍| 53057/56168 [02:46<00:05, 588.23it/s]Running loglikelihood requests:  95%|█████████▍| 53121/56168 [02:46<00:05, 543.58it/s]Running loglikelihood requests:  95%|█████████▍| 53185/56168 [02:46<00:05, 555.45it/s]Running loglikelihood requests:  95%|█████████▍| 53249/56168 [02:47<00:05, 567.02it/s]Running loglikelihood requests:  95%|█████████▍| 53313/56168 [02:47<00:05, 567.16it/s]Running loglikelihood requests:  95%|█████████▌| 53377/56168 [02:47<00:04, 583.36it/s]Running loglikelihood requests:  95%|█████████▌| 53441/56168 [02:47<00:04, 587.36it/s]Running loglikelihood requests:  95%|█████████▌| 53505/56168 [02:47<00:04, 582.69it/s]Running loglikelihood requests:  95%|█████████▌| 53569/56168 [02:47<00:04, 578.28it/s]Running loglikelihood requests:  95%|█████████▌| 53633/56168 [02:47<00:04, 536.36it/s]Running loglikelihood requests:  96%|█████████▌| 53697/56168 [02:47<00:04, 520.71it/s]Running loglikelihood requests:  96%|█████████▌| 53761/56168 [02:47<00:04, 536.78it/s]Running loglikelihood requests:  96%|█████████▌| 53825/56168 [02:48<00:04, 525.18it/s]Running loglikelihood requests:  96%|█████████▌| 53889/56168 [02:48<00:04, 543.05it/s]Running loglikelihood requests:  96%|█████████▌| 54017/56168 [02:48<00:03, 620.81it/s]Running loglikelihood requests:  96%|█████████▋| 54089/56168 [02:48<00:03, 635.20it/s]Running loglikelihood requests:  96%|█████████▋| 54191/56168 [02:48<00:02, 732.95it/s]Running loglikelihood requests:  97%|█████████▋| 54273/56168 [02:48<00:02, 646.44it/s]Running loglikelihood requests:  97%|█████████▋| 54349/56168 [02:48<00:02, 674.09it/s]Running loglikelihood requests:  97%|█████████▋| 54441/56168 [02:48<00:02, 737.73it/s]Running loglikelihood requests:  97%|█████████▋| 54518/56168 [02:49<00:02, 668.02it/s]Running loglikelihood requests:  97%|█████████▋| 54588/56168 [02:49<00:02, 659.15it/s]Running loglikelihood requests:  97%|█████████▋| 54656/56168 [02:49<00:02, 643.68it/s]Running loglikelihood requests:  97%|█████████▋| 54722/56168 [02:49<00:02, 549.77it/s]Running loglikelihood requests:  98%|█████████▊| 54838/56168 [02:49<00:01, 698.92it/s]Running loglikelihood requests:  98%|█████████▊| 54914/56168 [02:49<00:02, 598.00it/s]Running loglikelihood requests:  98%|█████████▊| 55041/56168 [02:49<00:01, 626.63it/s]Running loglikelihood requests:  98%|█████████▊| 55169/56168 [02:50<00:01, 651.28it/s]Running loglikelihood requests:  98%|█████████▊| 55237/56168 [02:50<00:01, 585.34it/s]Running loglikelihood requests:  98%|█████████▊| 55297/56168 [02:50<00:01, 580.03it/s]Running loglikelihood requests:  99%|█████████▊| 55361/56168 [02:50<00:01, 585.66it/s]Running loglikelihood requests:  99%|█████████▊| 55425/56168 [02:50<00:01, 595.35it/s]Running loglikelihood requests:  99%|█████████▉| 55489/56168 [02:50<00:01, 571.78it/s]Running loglikelihood requests:  99%|█████████▉| 55553/56168 [02:50<00:01, 534.31it/s]Running loglikelihood requests:  99%|█████████▉| 55681/56168 [02:51<00:00, 508.17it/s]Running loglikelihood requests:  99%|█████████▉| 55781/56168 [02:51<00:00, 606.80it/s]Running loglikelihood requests:  99%|█████████▉| 55848/56168 [02:51<00:00, 595.63it/s]Running loglikelihood requests: 100%|█████████▉| 55937/56168 [02:51<00:00, 567.78it/s]Running loglikelihood requests: 100%|█████████▉| 56065/56168 [02:51<00:00, 632.87it/s]Running loglikelihood requests: 100%|█████████▉| 56130/56168 [02:51<00:00, 606.16it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:51<00:00, 326.86it/s]
2025-05-15:01:23:46,675 WARNING  [huggingface.py:1353] Failed to get model SHA for /work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent/checkpoint-485 at revision main. Error: Repo id must be in the form 'repo_name' or 'namespace/repo_name': '/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent/checkpoint-485'. Use `repo_type` argument if needed.
2025-05-15:01:23:57,319 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent/checkpoint-485,tokenizer=meta-llama/Meta-Llama-3-8b-Instruct), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.7879|±  |0.0034|
| - humanities                          |      2|none  |      |acc   |↑  |0.7753|±  |0.0060|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.7698|±  |0.0376|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.8667|±  |0.0265|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.9020|±  |0.0209|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.9114|±  |0.0185|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.8595|±  |0.0317|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.8426|±  |0.0352|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.8589|±  |0.0274|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.7283|±  |0.0239|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.6872|±  |0.0155|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.8199|±  |0.0218|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.8457|±  |0.0201|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.7327|±  |0.0113|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.8947|±  |0.0235|
| - other                               |      2|none  |      |acc   |↑  |0.8146|±  |0.0069|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.8400|±  |0.0368|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.8226|±  |0.0235|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.7283|±  |0.0339|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.7200|±  |0.0451|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.8117|±  |0.0262|
|  - management                         |      1|none  |     0|acc   |↑  |0.8350|±  |0.0368|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8846|±  |0.0209|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.8200|±  |0.0386|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.8570|±  |0.0125|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.8333|±  |0.0213|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.7411|±  |0.0261|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.8566|±  |0.0213|
|  - virology                           |      1|none  |     0|acc   |↑  |0.6446|±  |0.0373|
| - social sciences                     |      2|none  |      |acc   |↑  |0.8265|±  |0.0068|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.6930|±  |0.0434|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7828|±  |0.0294|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.9016|±  |0.0215|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.7974|±  |0.0204|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.8529|±  |0.0230|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.8899|±  |0.0134|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.8092|±  |0.0345|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.8284|±  |0.0153|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.8000|±  |0.0383|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.7469|±  |0.0278|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8458|±  |0.0255|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8200|±  |0.0386|
| - stem                                |      2|none  |      |acc   |↑  |0.7428|±  |0.0077|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.6600|±  |0.0476|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.8222|±  |0.0330|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.7237|±  |0.0364|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.7778|±  |0.0348|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.6600|±  |0.0476|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.7100|±  |0.0456|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.6300|±  |0.0485|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.6667|±  |0.0469|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.8800|±  |0.0327|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.7277|±  |0.0291|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.7724|±  |0.0349|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.7540|±  |0.0222|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.8065|±  |0.0225|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.7635|±  |0.0299|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.8000|±  |0.0402|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.6667|±  |0.0287|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.6887|±  |0.0378|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.7824|±  |0.0281|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.7232|±  |0.0425|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.7879|±  |0.0034|
| - humanities     |      2|none  |      |acc   |↑  |0.7753|±  |0.0060|
| - other          |      2|none  |      |acc   |↑  |0.8146|±  |0.0069|
| - social sciences|      2|none  |      |acc   |↑  |0.8265|±  |0.0068|
| - stem           |      2|none  |      |acc   |↑  |0.7428|±  |0.0077|

2025-05-15:01:24:09,818 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-15:01:24:10,107 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,132 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,163 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,166 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,189 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,192 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,219 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,268 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,271 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,274 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,277 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,302 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,304 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,312 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,331 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:10,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,807 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,831 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,835 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,936 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,994 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:11,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,043 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,073 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,112 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:12,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,814 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,820 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,835 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,856 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,861 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,864 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,874 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,877 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:13,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,538 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,797 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,812 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,833 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,853 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,885 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,905 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,931 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,948 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,982 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:14,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,019 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,023 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,072 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,089 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,115 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,156 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,170 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,173 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,181 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,192 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,202 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,312 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,314 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,333 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,366 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,388 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,492 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,588 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,627 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,643 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,645 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,648 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,665 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,673 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,676 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,681 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,684 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,686 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,694 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,697 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,727 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,733 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,735 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,740 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:15,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:17,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:17,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:17,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:17,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:17,707 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:17,711 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:17,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:17,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,561 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,605 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,653 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,707 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,733 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,735 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,736 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,744 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,747 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,759 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,787 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,807 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,808 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,820 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,822 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,830 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,833 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,835 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,837 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,845 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,853 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,857 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,860 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,862 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,864 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,874 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,899 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,901 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,903 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,911 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,913 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,930 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,931 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,933 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,937 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,956 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,968 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,990 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,995 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:19,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,012 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,016 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,029 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,038 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,043 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,046 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,053 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,056 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,059 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,069 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,070 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,072 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,073 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,075 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,076 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,078 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,086 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,089 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,093 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,095 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,098 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,103 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,111 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,113 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,114 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,118 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,121 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,132 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,135 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,138 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,161 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,163 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,164 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,166 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,167 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,169 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,170 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,172 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,178 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,180 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,181 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,183 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,194 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,197 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,216 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,256 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,259 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,262 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,264 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,267 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,269 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,289 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,293 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,297 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,298 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,300 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,302 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,326 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,327 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,351 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,353 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,574 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,582 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:20,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:23,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:23,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:24:23,750 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-15:01:24:23,753 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-15:01:24:23,753 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent_kl/checkpoint-490', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-15:01:24:29,953 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-15:01:24:31,521 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:18<00:55, 18.52s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:35<00:35, 17.62s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:52<00:17, 17.30s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:56<00:00, 12.01s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:56<00:00, 14.08s/it]
2025-05-15:01:25:54,470 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,470 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,470 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:25:54,473 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-15:01:25:54,480 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 25%|██▌       | 25/100 [00:00<00:00, 247.28it/s] 50%|█████     | 50/100 [00:00<00:00, 223.99it/s]100%|██████████| 100/100 [00:00<00:00, 314.89it/s]
2025-05-15:01:25:54,850 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 17%|█▋        | 53/310 [00:00<00:00, 529.00it/s] 34%|███▍      | 106/310 [00:00<00:00, 337.85it/s] 46%|████▋     | 144/310 [00:00<00:00, 296.53it/s] 57%|█████▋    | 176/310 [00:00<00:00, 274.42it/s] 66%|██████▌   | 205/310 [00:00<00:00, 251.02it/s] 80%|███████▉  | 247/310 [00:00<00:00, 291.23it/s] 99%|█████████▉| 307/310 [00:00<00:00, 367.50it/s]100%|██████████| 310/310 [00:00<00:00, 328.55it/s]
2025-05-15:01:25:55,806 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 63%|██████▎   | 63/100 [00:00<00:00, 620.98it/s]100%|██████████| 100/100 [00:00<00:00, 597.80it/s]
2025-05-15:01:25:55,979 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 28%|██▊       | 40/145 [00:00<00:00, 399.86it/s] 55%|█████▌    | 80/145 [00:00<00:00, 302.09it/s] 77%|███████▋  | 112/145 [00:00<00:00, 303.81it/s] 99%|█████████▉| 144/145 [00:00<00:00, 246.67it/s]100%|██████████| 145/145 [00:00<00:00, 271.65it/s]
2025-05-15:01:25:56,527 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 27%|██▋       | 27/100 [00:00<00:00, 269.18it/s] 91%|█████████ | 91/100 [00:00<00:00, 485.58it/s]100%|██████████| 100/100 [00:00<00:00, 465.42it/s]
2025-05-15:01:25:56,748 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s]  8%|▊         | 16/203 [00:00<00:01, 154.09it/s] 22%|██▏       | 45/203 [00:00<00:00, 223.25it/s] 33%|███▎      | 68/203 [00:00<00:00, 196.33it/s] 64%|██████▍   | 130/203 [00:00<00:00, 346.21it/s] 84%|████████▎ | 170/203 [00:00<00:00, 364.21it/s]100%|██████████| 203/203 [00:00<00:00, 302.87it/s]
2025-05-15:01:25:57,447 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 20%|█▉        | 30/152 [00:00<00:00, 295.90it/s] 63%|██████▎   | 96/152 [00:00<00:00, 506.89it/s] 97%|█████████▋| 147/152 [00:00<00:00, 277.66it/s]100%|██████████| 152/152 [00:00<00:00, 304.61it/s]
2025-05-15:01:25:57,974 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 34%|███▍      | 35/102 [00:00<00:00, 316.93it/s] 66%|██████▌   | 67/102 [00:00<00:00, 272.51it/s] 93%|█████████▎| 95/102 [00:00<00:00, 251.70it/s]100%|██████████| 102/102 [00:00<00:00, 258.66it/s]
2025-05-15:01:25:58,375 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 36%|███▌      | 36/100 [00:00<00:00, 359.78it/s]100%|██████████| 100/100 [00:00<00:00, 519.98it/s]100%|██████████| 100/100 [00:00<00:00, 494.69it/s]
2025-05-15:01:25:58,583 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 18%|█▊        | 26/144 [00:00<00:00, 250.49it/s] 36%|███▌      | 52/144 [00:00<00:00, 151.29it/s] 57%|█████▋    | 82/144 [00:00<00:00, 200.01it/s] 84%|████████▍ | 121/144 [00:00<00:00, 260.06it/s]100%|██████████| 144/144 [00:00<00:00, 248.49it/s]
2025-05-15:01:25:59,170 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 14%|█▍        | 33/235 [00:00<00:00, 319.51it/s] 30%|███       | 71/235 [00:00<00:00, 353.31it/s] 46%|████▌     | 107/235 [00:00<00:00, 290.24it/s] 59%|█████▊    | 138/235 [00:00<00:00, 253.93it/s] 73%|███████▎  | 171/235 [00:00<00:00, 275.99it/s]100%|██████████| 235/235 [00:00<00:00, 335.06it/s]
2025-05-15:01:25:59,917 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 35%|███▍      | 39/112 [00:00<00:00, 368.26it/s] 68%|██████▊   | 76/112 [00:00<00:00, 303.08it/s]100%|██████████| 112/112 [00:00<00:00, 374.62it/s]
2025-05-15:01:26:00,222 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 18%|█▊        | 49/270 [00:00<00:00, 475.18it/s] 38%|███▊      | 102/270 [00:00<00:00, 505.50it/s] 57%|█████▋    | 153/270 [00:00<00:00, 460.85it/s] 76%|███████▌  | 204/270 [00:00<00:00, 463.57it/s] 95%|█████████▍| 256/270 [00:00<00:00, 480.97it/s]100%|██████████| 270/270 [00:00<00:00, 483.89it/s]
2025-05-15:01:26:00,794 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 41%|████      | 41/100 [00:00<00:00, 407.06it/s] 82%|████████▏ | 82/100 [00:00<00:00, 378.07it/s]100%|██████████| 100/100 [00:00<00:00, 370.81it/s]
2025-05-15:01:26:01,073 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 37%|███▋      | 37/100 [00:00<00:00, 361.72it/s] 85%|████████▌ | 85/100 [00:00<00:00, 418.63it/s]100%|██████████| 100/100 [00:00<00:00, 436.02it/s]
2025-05-15:01:26:01,314 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 39%|███▊      | 52/135 [00:00<00:00, 514.45it/s] 77%|███████▋  | 104/135 [00:00<00:00, 446.07it/s]100%|██████████| 135/135 [00:00<00:00, 431.02it/s]
2025-05-15:01:26:01,634 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 17%|█▋        | 66/378 [00:00<00:00, 657.53it/s] 35%|███▍      | 132/378 [00:00<00:00, 598.74it/s] 51%|█████     | 193/378 [00:00<00:00, 444.39it/s] 64%|██████▍   | 241/378 [00:00<00:00, 392.98it/s] 81%|████████  | 305/378 [00:00<00:00, 461.23it/s] 94%|█████████▍| 356/378 [00:00<00:00, 466.78it/s]100%|██████████| 378/378 [00:00<00:00, 462.48it/s]
2025-05-15:01:26:02,480 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 27%|██▋       | 41/151 [00:00<00:00, 408.95it/s] 54%|█████▍    | 82/151 [00:00<00:00, 331.78it/s] 94%|█████████▍| 142/151 [00:00<00:00, 430.73it/s]100%|██████████| 151/151 [00:00<00:00, 422.66it/s]
2025-05-15:01:26:02,859 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 25%|██▌       | 54/216 [00:00<00:00, 538.59it/s] 50%|█████     | 108/216 [00:00<00:00, 467.19it/s] 72%|███████▏  | 156/216 [00:00<00:00, 455.60it/s] 94%|█████████▎| 202/216 [00:00<00:00, 410.91it/s]100%|██████████| 216/216 [00:00<00:00, 426.72it/s]
2025-05-15:01:26:03,377 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 15%|█▌        | 40/265 [00:00<00:00, 395.30it/s] 30%|███       | 80/265 [00:00<00:00, 376.27it/s] 45%|████▍     | 118/265 [00:00<00:00, 350.13it/s] 58%|█████▊    | 154/265 [00:00<00:00, 294.79it/s] 73%|███████▎  | 194/265 [00:00<00:00, 326.67it/s] 91%|█████████▏| 242/265 [00:00<00:00, 372.36it/s]100%|██████████| 265/265 [00:00<00:00, 367.09it/s]
2025-05-15:01:26:04,118 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 58%|█████▊    | 58/100 [00:00<00:00, 574.68it/s]100%|██████████| 100/100 [00:00<00:00, 492.49it/s]
2025-05-15:01:26:04,328 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 54%|█████▍    | 56/103 [00:00<00:00, 558.26it/s]100%|██████████| 103/103 [00:00<00:00, 560.82it/s]
2025-05-15:01:26:04,518 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 18%|█▊        | 56/306 [00:00<00:00, 554.03it/s] 39%|███▉      | 119/306 [00:00<00:00, 595.12it/s] 58%|█████▊    | 179/306 [00:00<00:00, 566.38it/s] 77%|███████▋  | 236/306 [00:00<00:00, 565.06it/s] 97%|█████████▋| 297/306 [00:00<00:00, 579.08it/s]100%|██████████| 306/306 [00:00<00:00, 571.17it/s]
2025-05-15:01:26:05,068 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 35%|███▌      | 61/173 [00:00<00:00, 601.98it/s] 71%|███████   | 122/173 [00:00<00:00, 569.94it/s]100%|██████████| 173/173 [00:00<00:00, 560.02it/s]
2025-05-15:01:26:05,385 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 26%|██▌       | 43/166 [00:00<00:00, 424.35it/s] 52%|█████▏    | 86/166 [00:00<00:00, 362.93it/s] 74%|███████▍  | 123/166 [00:00<00:00, 284.33it/s] 98%|█████████▊| 163/166 [00:00<00:00, 314.93it/s]100%|██████████| 166/166 [00:00<00:00, 324.71it/s]
2025-05-15:01:26:05,912 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 20%|██        | 55/272 [00:00<00:00, 509.74it/s] 39%|███▉      | 106/272 [00:00<00:00, 466.92it/s] 59%|█████▉    | 161/272 [00:00<00:00, 500.39it/s] 78%|███████▊  | 212/272 [00:00<00:00, 495.69it/s] 96%|█████████▋| 262/272 [00:00<00:00, 478.29it/s]100%|██████████| 272/272 [00:00<00:00, 483.21it/s]
2025-05-15:01:26:06,487 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s]  4%|▍         | 34/783 [00:00<00:02, 298.08it/s] 11%|█         | 83/783 [00:00<00:01, 396.56it/s] 16%|█▌        | 124/783 [00:00<00:02, 325.02it/s] 23%|██▎       | 183/783 [00:00<00:01, 413.77it/s] 29%|██▉       | 227/783 [00:00<00:01, 397.91it/s] 34%|███▍      | 269/783 [00:00<00:01, 323.43it/s] 42%|████▏     | 330/783 [00:00<00:01, 396.18it/s] 48%|████▊     | 374/783 [00:00<00:01, 384.53it/s] 53%|█████▎    | 415/783 [00:01<00:01, 359.36it/s] 58%|█████▊    | 453/783 [00:01<00:00, 333.90it/s] 62%|██████▏   | 488/783 [00:01<00:00, 312.85it/s] 68%|██████▊   | 536/783 [00:01<00:00, 353.51it/s] 77%|███████▋  | 600/783 [00:01<00:00, 427.83it/s] 84%|████████▍ | 660/783 [00:01<00:00, 473.10it/s] 91%|█████████ | 710/783 [00:01<00:00, 451.62it/s] 97%|█████████▋| 757/783 [00:01<00:00, 450.67it/s]100%|██████████| 783/783 [00:01<00:00, 393.02it/s]
2025-05-15:01:26:08,529 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 58%|█████▊    | 58/100 [00:00<00:00, 574.52it/s]100%|██████████| 100/100 [00:00<00:00, 559.70it/s]
2025-05-15:01:26:08,738 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 33%|███▎      | 33/100 [00:00<00:00, 328.55it/s] 67%|██████▋   | 67/100 [00:00<00:00, 332.72it/s]100%|██████████| 100/100 [00:00<00:00, 362.89it/s]
2025-05-15:01:26:09,019 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 23%|██▎       | 65/282 [00:00<00:00, 646.79it/s] 46%|████▌     | 130/282 [00:00<00:00, 448.40it/s] 63%|██████▎   | 179/282 [00:00<00:00, 397.30it/s] 82%|████████▏ | 230/282 [00:00<00:00, 423.70it/s] 98%|█████████▊| 275/282 [00:00<00:00, 363.29it/s]100%|██████████| 282/282 [00:00<00:00, 390.08it/s]
2025-05-15:01:26:09,757 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:04, 48.74it/s] 34%|███▍      | 79/234 [00:00<00:00, 196.50it/s] 57%|█████▋    | 134/234 [00:00<00:00, 294.34it/s] 86%|████████▋ | 202/234 [00:00<00:00, 403.27it/s]100%|██████████| 234/234 [00:00<00:00, 315.13it/s]
2025-05-15:01:26:10,528 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 26%|██▌       | 57/223 [00:00<00:00, 568.03it/s] 51%|█████     | 114/223 [00:00<00:00, 560.20it/s] 81%|████████  | 181/223 [00:00<00:00, 596.47it/s]100%|██████████| 223/223 [00:00<00:00, 604.87it/s]
2025-05-15:01:26:10,912 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 60%|██████    | 66/110 [00:00<00:00, 653.33it/s]100%|██████████| 110/110 [00:00<00:00, 649.98it/s]
2025-05-15:01:26:11,087 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 20%|█▉        | 40/201 [00:00<00:00, 395.05it/s] 55%|█████▌    | 111/201 [00:00<00:00, 575.72it/s] 94%|█████████▍| 189/201 [00:00<00:00, 664.67it/s]100%|██████████| 201/201 [00:00<00:00, 626.67it/s]
2025-05-15:01:26:11,416 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 39%|███▉      | 77/198 [00:00<00:00, 768.99it/s] 78%|███████▊  | 155/198 [00:00<00:00, 771.95it/s]100%|██████████| 198/198 [00:00<00:00, 761.60it/s]
2025-05-15:01:26:11,685 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 16%|█▌        | 39/245 [00:00<00:00, 385.19it/s] 32%|███▏      | 78/245 [00:00<00:00, 331.24it/s] 46%|████▌     | 112/245 [00:00<00:00, 323.40it/s] 63%|██████▎   | 154/245 [00:00<00:00, 358.56it/s] 83%|████████▎ | 204/245 [00:00<00:00, 405.01it/s]100%|██████████| 245/245 [00:00<00:00, 396.64it/s]
2025-05-15:01:26:12,341 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s]  6%|▌         | 34/545 [00:00<00:01, 335.81it/s] 12%|█▏        | 68/545 [00:00<00:01, 313.59it/s] 20%|█▉        | 108/545 [00:00<00:01, 349.45it/s] 31%|███       | 167/545 [00:00<00:00, 441.09it/s] 39%|███▉      | 212/545 [00:00<00:00, 395.49it/s] 46%|████▋     | 253/545 [00:00<00:00, 335.94it/s] 55%|█████▌    | 301/545 [00:00<00:00, 354.44it/s] 62%|██████▏   | 338/545 [00:00<00:00, 317.06it/s] 68%|██████▊   | 371/545 [00:01<00:00, 288.61it/s] 78%|███████▊  | 423/545 [00:01<00:00, 344.69it/s] 88%|████████▊ | 482/545 [00:01<00:00, 403.34it/s] 98%|█████████▊| 532/545 [00:01<00:00, 428.04it/s]100%|██████████| 545/545 [00:01<00:00, 373.95it/s]
2025-05-15:01:26:13,835 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 61%|██████    | 61/100 [00:00<00:00, 609.14it/s]100%|██████████| 100/100 [00:00<00:00, 553.67it/s]
2025-05-15:01:26:14,021 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 15%|█▌        | 60/390 [00:00<00:00, 593.79it/s] 31%|███       | 120/390 [00:00<00:00, 566.32it/s] 45%|████▌     | 177/390 [00:00<00:00, 502.36it/s] 58%|█████▊    | 228/390 [00:00<00:00, 462.26it/s] 72%|███████▏  | 280/390 [00:00<00:00, 469.21it/s] 84%|████████▍ | 328/390 [00:00<00:00, 426.42it/s] 95%|█████████▌| 372/390 [00:00<00:00, 406.46it/s]100%|██████████| 390/390 [00:00<00:00, 442.25it/s]
2025-05-15:01:26:14,933 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 15%|█▌        | 36/238 [00:00<00:00, 356.16it/s] 34%|███▍      | 81/238 [00:00<00:00, 408.31it/s] 57%|█████▋    | 135/238 [00:00<00:00, 465.64it/s] 76%|███████▋  | 182/238 [00:00<00:00, 405.00it/s] 94%|█████████▍| 224/238 [00:00<00:00, 348.07it/s]100%|██████████| 238/238 [00:00<00:00, 358.62it/s]
2025-05-15:01:26:15,613 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 39%|███▉      | 45/114 [00:00<00:00, 449.25it/s] 89%|████████▊ | 101/114 [00:00<00:00, 514.17it/s]100%|██████████| 114/114 [00:00<00:00, 489.52it/s]
2025-05-15:01:26:15,864 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s]  6%|▋         | 39/612 [00:00<00:01, 345.03it/s] 12%|█▏        | 74/612 [00:00<00:01, 347.78it/s] 21%|██▏       | 131/612 [00:00<00:01, 443.74it/s] 29%|██▉       | 176/612 [00:00<00:01, 398.59it/s] 35%|███▌      | 217/612 [00:00<00:01, 387.67it/s] 42%|████▏     | 259/612 [00:00<00:00, 396.00it/s] 50%|█████     | 308/612 [00:00<00:00, 423.89it/s] 57%|█████▋    | 351/612 [00:00<00:00, 354.84it/s] 64%|██████▎   | 389/612 [00:01<00:00, 285.64it/s] 70%|██████▉   | 428/612 [00:01<00:00, 303.76it/s] 76%|███████▌  | 464/612 [00:01<00:00, 317.31it/s] 81%|████████▏ | 498/612 [00:01<00:00, 314.37it/s] 92%|█████████▏| 562/612 [00:01<00:00, 394.42it/s] 99%|█████████▊| 604/612 [00:01<00:00, 379.01it/s]100%|██████████| 612/612 [00:01<00:00, 352.34it/s]
2025-05-15:01:26:17,651 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 20%|█▉        | 26/131 [00:00<00:00, 257.24it/s] 56%|█████▋    | 74/131 [00:00<00:00, 366.23it/s] 85%|████████▍ | 111/131 [00:00<00:00, 364.08it/s]100%|██████████| 131/131 [00:00<00:00, 346.04it/s]
2025-05-15:01:26:18,056 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 26%|██▋       | 51/193 [00:00<00:00, 509.70it/s] 54%|█████▍    | 105/193 [00:00<00:00, 487.95it/s] 80%|███████▉  | 154/193 [00:00<00:00, 406.65it/s]100%|██████████| 193/193 [00:00<00:00, 456.46it/s]
2025-05-15:01:26:18,500 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  7%|▋         | 62/895 [00:00<00:01, 612.41it/s] 14%|█▍        | 124/895 [00:00<00:01, 463.33it/s] 19%|█▉        | 173/895 [00:00<00:01, 426.07it/s] 24%|██▍       | 218/895 [00:00<00:01, 424.58it/s] 29%|██▉       | 262/895 [00:00<00:01, 393.73it/s] 34%|███▍      | 308/895 [00:00<00:01, 412.43it/s] 39%|███▉      | 350/895 [00:00<00:01, 348.49it/s] 43%|████▎     | 389/895 [00:00<00:01, 355.89it/s] 48%|████▊     | 426/895 [00:01<00:01, 349.03it/s] 54%|█████▍    | 484/895 [00:01<00:01, 391.75it/s] 59%|█████▊    | 524/895 [00:01<00:01, 350.61it/s] 66%|██████▋   | 593/895 [00:01<00:00, 437.15it/s] 72%|███████▏  | 640/895 [00:01<00:00, 444.65it/s] 77%|███████▋  | 687/895 [00:01<00:00, 408.37it/s] 82%|████████▏ | 734/895 [00:01<00:00, 423.18it/s] 88%|████████▊ | 791/895 [00:01<00:00, 463.14it/s] 94%|█████████▍| 845/895 [00:02<00:00, 484.15it/s]100%|██████████| 895/895 [00:02<00:00, 427.78it/s]
2025-05-15:01:26:20,630 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 25%|██▌       | 60/237 [00:00<00:00, 594.09it/s] 51%|█████     | 120/237 [00:00<00:00, 568.92it/s] 76%|███████▋  | 181/237 [00:00<00:00, 586.49it/s]100%|██████████| 237/237 [00:00<00:00, 608.85it/s]
2025-05-15:01:26:21,031 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 29%|██▉       | 48/165 [00:00<00:00, 390.24it/s] 53%|█████▎    | 88/165 [00:00<00:00, 389.76it/s] 86%|████████▌ | 142/165 [00:00<00:00, 454.38it/s]100%|██████████| 165/165 [00:00<00:00, 438.01it/s]
2025-05-15:01:26:21,416 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 16%|█▌        | 50/311 [00:00<00:00, 494.05it/s] 33%|███▎      | 103/311 [00:00<00:00, 511.90it/s] 50%|█████     | 157/311 [00:00<00:00, 523.19it/s] 73%|███████▎  | 226/311 [00:00<00:00, 586.60it/s] 92%|█████████▏| 285/311 [00:00<00:00, 580.64it/s]100%|██████████| 311/311 [00:00<00:00, 558.85it/s]
2025-05-15:01:26:22,015 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 21%|██        | 71/346 [00:00<00:00, 704.39it/s] 41%|████      | 142/346 [00:00<00:00, 624.71it/s] 60%|█████▉    | 206/346 [00:00<00:00, 497.23it/s] 77%|███████▋  | 267/346 [00:00<00:00, 533.19it/s] 93%|█████████▎| 323/346 [00:00<00:00, 481.89it/s]100%|██████████| 346/346 [00:00<00:00, 524.14it/s]
2025-05-15:01:26:22,701 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 36%|███▋      | 74/204 [00:00<00:00, 739.50it/s] 73%|███████▎  | 148/204 [00:00<00:00, 631.51it/s]100%|██████████| 204/204 [00:00<00:00, 649.97it/s]
2025-05-15:01:26:23,024 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 65%|██████▌   | 79/121 [00:00<00:00, 788.63it/s]100%|██████████| 121/121 [00:00<00:00, 807.36it/s]
2025-05-15:01:26:23,178 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  5%|▌         | 84/1534 [00:00<00:01, 838.36it/s] 11%|█         | 168/1534 [00:00<00:01, 834.28it/s] 16%|█▋        | 252/1534 [00:00<00:01, 748.23it/s] 22%|██▏       | 332/1534 [00:00<00:01, 765.67it/s] 27%|██▋       | 418/1534 [00:00<00:01, 796.23it/s] 33%|███▎      | 503/1534 [00:00<00:01, 812.42it/s] 38%|███▊      | 590/1534 [00:00<00:01, 827.77it/s] 44%|████▍     | 674/1534 [00:00<00:01, 773.73it/s] 49%|████▉     | 753/1534 [00:00<00:01, 728.75it/s] 54%|█████▍    | 827/1534 [00:01<00:01, 670.70it/s] 60%|█████▉    | 914/1534 [00:01<00:00, 722.38it/s] 65%|██████▌   | 1000/1534 [00:01<00:00, 760.10it/s] 71%|███████   | 1082/1534 [00:01<00:00, 775.88it/s] 76%|███████▌  | 1161/1534 [00:01<00:00, 694.49it/s] 80%|████████  | 1233/1534 [00:01<00:00, 659.59it/s] 85%|████████▍ | 1301/1534 [00:01<00:00, 509.38it/s] 89%|████████▊ | 1358/1534 [00:02<00:00, 514.70it/s] 92%|█████████▏| 1414/1534 [00:02<00:00, 458.12it/s] 95%|█████████▌| 1464/1534 [00:02<00:00, 393.67it/s] 99%|█████████▉| 1523/1534 [00:02<00:00, 430.72it/s]100%|██████████| 1534/1534 [00:02<00:00, 610.98it/s]
2025-05-15:01:26:25,760 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 14%|█▍        | 24/171 [00:00<00:00, 230.82it/s] 54%|█████▍    | 92/171 [00:00<00:00, 487.14it/s] 82%|████████▏ | 141/171 [00:00<00:00, 469.40it/s]100%|██████████| 171/171 [00:00<00:00, 385.24it/s]
2025-05-15:01:26:26,227 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 31%|███       | 33/108 [00:00<00:00, 327.26it/s] 85%|████████▌ | 92/108 [00:00<00:00, 470.15it/s]100%|██████████| 108/108 [00:00<00:00, 462.06it/s]
2025-05-15:01:26:26,486 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 44%|████▎     | 55/126 [00:00<00:00, 530.63it/s] 87%|████████▋ | 109/126 [00:00<00:00, 509.52it/s]100%|██████████| 126/126 [00:00<00:00, 513.20it/s]
2025-05-15:01:26:26,738 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 11%|█         | 36/324 [00:00<00:00, 352.69it/s] 25%|██▌       | 82/324 [00:00<00:00, 408.55it/s] 38%|███▊      | 123/324 [00:00<00:01, 109.25it/s] 47%|████▋     | 152/324 [00:01<00:01, 134.66it/s] 64%|██████▍   | 207/324 [00:01<00:00, 205.79it/s] 75%|███████▌  | 244/324 [00:01<00:00, 229.93it/s] 87%|████████▋ | 281/324 [00:01<00:00, 249.18it/s]100%|██████████| 324/324 [00:01<00:00, 224.36it/s]
2025-05-15:01:26:28,218 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 18%|█▊        | 30/163 [00:00<00:00, 296.36it/s] 47%|████▋     | 77/163 [00:00<00:00, 395.27it/s] 92%|█████████▏| 150/163 [00:00<00:00, 546.17it/s]100%|██████████| 163/163 [00:00<00:00, 508.42it/s]
2025-05-15:01:26:28,554 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:03<48:44:59,  3.12s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:04<46:39, 20.04it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:05<26:55, 34.68it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:05<20:41, 45.10it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:06<17:05, 54.52it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:07<15:01, 61.93it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:08<14:10, 65.57it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:09<13:27, 68.97it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:09<12:33, 73.89it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:10<11:58, 77.42it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:11<11:57, 77.44it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:12<11:40, 79.20it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:12<11:03, 83.46it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:13<10:39, 86.58it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:14<10:20, 89.01it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:15<10:09, 90.54it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:15<09:55, 92.67it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:16<09:38, 95.18it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:16<09:23, 97.62it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:17<09:39, 94.83it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:18<09:33, 95.74it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:18<09:16, 98.60it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:19<09:01, 101.13it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:20<08:58, 101.52it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:20<08:47, 103.51it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:21<08:45, 103.81it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:21<08:35, 105.76it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:22<08:25, 107.62it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:23<08:26, 107.34it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:23<08:33, 105.67it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:24<08:27, 106.94it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:24<08:12, 109.94it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:25<08:07, 110.97it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:25<08:08, 110.74it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:26<08:02, 111.94it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:27<07:55, 113.40it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:27<07:48, 115.06it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:28<07:45, 115.55it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:28<07:44, 115.75it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:29<07:37, 117.32it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:29<07:31, 118.73it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:30<07:27, 119.62it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:30<07:27, 119.51it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:31<07:25, 119.77it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:31<07:05, 125.32it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:32<07:00, 126.86it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:32<07:03, 125.67it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:33<07:03, 125.58it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:33<07:03, 125.42it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:34<07:01, 125.72it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:34<07:11, 122.85it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:35<07:09, 123.18it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:35<06:55, 127.14it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:36<06:40, 131.73it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:36<06:47, 129.25it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:37<06:54, 127.11it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:37<06:47, 129.08it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:38<06:55, 126.36it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:38<06:48, 128.47it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:39<06:23, 136.61it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:39<06:21, 137.02it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:40<06:24, 136.06it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:40<06:28, 134.46it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:41<06:30, 133.48it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:41<06:03, 143.40it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:41<06:02, 143.38it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:42<06:02, 143.14it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:42<06:03, 142.75it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:43<05:46, 149.40it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:43<05:54, 146.08it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:44<05:58, 144.02it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:44<05:52, 146.29it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:45<06:09, 139.69it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:45<06:23, 134.16it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:46<06:13, 137.71it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:46<05:46, 148.15it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:46<05:49, 146.97it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:47<05:45, 148.43it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:47<05:34, 152.88it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:48<05:42, 149.44it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:48<05:23, 157.93it/s]Running loglikelihood requests:   9%|▉         | 5183/56168 [00:48<04:12, 201.54it/s]Running loglikelihood requests:   9%|▉         | 5213/56168 [00:48<05:08, 165.33it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:49<06:12, 136.62it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:49<05:52, 144.25it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:50<05:33, 152.15it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:50<05:40, 149.15it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:50<05:19, 158.52it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:51<05:29, 153.67it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:51<05:41, 147.88it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:52<06:08, 137.12it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:52<05:42, 147.33it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:53<05:38, 148.52it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:53<05:19, 157.32it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:53<05:06, 163.66it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:54<04:53, 170.97it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:54<04:47, 174.24it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:54<04:38, 179.92it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:55<04:42, 176.68it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:55<04:31, 183.89it/s]Running loglikelihood requests:  11%|█         | 6304/56168 [00:55<04:17, 193.40it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:55<04:59, 166.36it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:56<04:58, 166.70it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:56<04:42, 176.16it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:57<04:48, 171.79it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:57<05:15, 157.08it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:57<05:00, 164.93it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:58<05:23, 152.71it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:58<05:09, 159.60it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:59<04:52, 168.39it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:59<04:44, 173.08it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:59<04:48, 170.56it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [01:00<04:57, 165.22it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [01:00<04:46, 171.08it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [01:00<04:26, 183.77it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [01:01<04:28, 181.93it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [01:01<04:14, 191.83it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [01:01<04:23, 185.08it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [01:02<04:36, 176.14it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [01:02<04:20, 187.20it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [01:02<04:26, 182.54it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [01:03<04:20, 186.54it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:03<04:27, 181.26it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:03<04:11, 192.59it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:04<04:19, 186.66it/s]Running loglikelihood requests:  14%|█▍        | 7867/56168 [01:04<03:31, 228.66it/s]Running loglikelihood requests:  14%|█▍        | 7897/56168 [01:04<04:32, 177.37it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:05<05:05, 158.00it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:05<04:28, 179.66it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:05<04:26, 180.33it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:06<04:07, 193.99it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:06<04:07, 193.60it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:06<04:08, 192.83it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:06<03:59, 199.68it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:07<04:02, 197.35it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:07<04:05, 194.65it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:07<03:53, 204.35it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:08<03:58, 199.72it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:08<04:15, 186.28it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:08<04:01, 196.39it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:09<04:05, 192.75it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:09<04:05, 192.81it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:09<03:47, 208.02it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:10<03:46, 208.08it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:10<03:47, 207.05it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:10<03:46, 208.30it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:11<03:32, 221.01it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:11<03:36, 217.30it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:11<03:36, 216.52it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:11<03:25, 228.23it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:12<03:32, 219.97it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:12<03:32, 220.00it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:12<03:19, 233.36it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:13<03:45, 206.44it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:13<03:39, 211.40it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:13<03:30, 220.31it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:14<03:38, 212.49it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:14<03:36, 213.44it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:14<03:20, 231.06it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:14<03:24, 225.36it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:15<03:28, 221.42it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:15<03:13, 237.86it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:15<03:18, 231.13it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:15<03:25, 223.14it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:16<03:27, 221.48it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:16<03:20, 228.31it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:16<03:22, 226.03it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:17<03:22, 225.84it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:17<03:06, 244.91it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:17<03:15, 232.97it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:17<03:16, 231.57it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:18<03:13, 234.19it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:18<03:05, 244.97it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:18<03:12, 235.85it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:18<03:14, 232.30it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:19<03:00, 250.61it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:19<03:06, 241.70it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:19<03:10, 236.97it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:19<02:56, 254.92it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:20<03:07, 239.74it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:20<03:05, 241.23it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:20<02:58, 251.49it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:20<02:45, 270.37it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:21<02:52, 259.00it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:21<02:56, 252.35it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:21<02:46, 267.04it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:21<02:49, 261.90it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:22<03:00, 245.41it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:22<02:56, 250.56it/s]Running loglikelihood requests:  21%|██        | 11905/56168 [01:22<02:57, 249.09it/s]Running loglikelihood requests:  21%|██▏       | 11969/56168 [01:23<03:01, 243.84it/s]Running loglikelihood requests:  21%|██▏       | 12033/56168 [01:23<03:03, 240.98it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [01:23<02:47, 262.54it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [01:23<02:53, 253.51it/s]Running loglikelihood requests:  22%|██▏       | 12225/56168 [01:23<02:42, 270.51it/s]Running loglikelihood requests:  22%|██▏       | 12289/56168 [01:24<02:55, 249.53it/s]Running loglikelihood requests:  22%|██▏       | 12353/56168 [01:24<03:04, 237.63it/s]Running loglikelihood requests:  22%|██▏       | 12417/56168 [01:24<02:55, 248.91it/s]Running loglikelihood requests:  22%|██▏       | 12481/56168 [01:25<02:59, 242.90it/s]Running loglikelihood requests:  22%|██▏       | 12545/56168 [01:25<02:45, 263.67it/s]Running loglikelihood requests:  22%|██▏       | 12609/56168 [01:25<02:50, 255.85it/s]Running loglikelihood requests:  23%|██▎       | 12673/56168 [01:25<02:39, 273.32it/s]Running loglikelihood requests:  23%|██▎       | 12737/56168 [01:25<02:48, 258.14it/s]Running loglikelihood requests:  23%|██▎       | 12801/56168 [01:26<02:46, 260.61it/s]Running loglikelihood requests:  23%|██▎       | 12865/56168 [01:26<02:54, 248.44it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [01:26<02:47, 258.57it/s]Running loglikelihood requests:  23%|██▎       | 12993/56168 [01:27<02:51, 251.33it/s]Running loglikelihood requests:  23%|██▎       | 13057/56168 [01:27<02:43, 264.38it/s]Running loglikelihood requests:  23%|██▎       | 13121/56168 [01:27<02:48, 255.56it/s]Running loglikelihood requests:  23%|██▎       | 13185/56168 [01:27<02:49, 253.62it/s]Running loglikelihood requests:  24%|██▎       | 13249/56168 [01:27<02:41, 266.49it/s]Running loglikelihood requests:  24%|██▎       | 13313/56168 [01:28<02:45, 258.56it/s]Running loglikelihood requests:  24%|██▍       | 13377/56168 [01:28<02:33, 278.13it/s]Running loglikelihood requests:  24%|██▍       | 13441/56168 [01:28<02:41, 264.65it/s]Running loglikelihood requests:  24%|██▍       | 13505/56168 [01:28<02:32, 280.51it/s]Running loglikelihood requests:  24%|██▍       | 13569/56168 [01:29<02:38, 268.86it/s]Running loglikelihood requests:  24%|██▍       | 13633/56168 [01:29<02:28, 287.13it/s]Running loglikelihood requests:  24%|██▍       | 13697/56168 [01:29<02:40, 265.28it/s]Running loglikelihood requests:  24%|██▍       | 13761/56168 [01:29<02:29, 284.48it/s]Running loglikelihood requests:  25%|██▍       | 13825/56168 [01:30<02:39, 264.84it/s]Running loglikelihood requests:  25%|██▍       | 13889/56168 [01:30<02:30, 281.67it/s]Running loglikelihood requests:  25%|██▍       | 13953/56168 [01:30<02:37, 267.96it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [01:30<02:34, 272.42it/s]Running loglikelihood requests:  25%|██▌       | 14081/56168 [01:31<02:48, 250.30it/s]Running loglikelihood requests:  25%|██▌       | 14145/56168 [01:31<02:36, 267.81it/s]Running loglikelihood requests:  25%|██▌       | 14209/56168 [01:31<02:29, 280.02it/s]Running loglikelihood requests:  25%|██▌       | 14273/56168 [01:31<02:40, 261.66it/s]Running loglikelihood requests:  26%|██▌       | 14337/56168 [01:31<02:33, 272.80it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [01:32<02:37, 264.67it/s]Running loglikelihood requests:  26%|██▌       | 14465/56168 [01:32<02:28, 280.69it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [01:32<02:39, 260.37it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [01:32<02:32, 272.62it/s]Running loglikelihood requests:  26%|██▌       | 14657/56168 [01:33<02:24, 287.35it/s]Running loglikelihood requests:  26%|██▌       | 14721/56168 [01:33<02:31, 273.45it/s]Running loglikelihood requests:  26%|██▋       | 14785/56168 [01:33<02:21, 292.04it/s]Running loglikelihood requests:  26%|██▋       | 14849/56168 [01:33<02:28, 277.32it/s]Running loglikelihood requests:  27%|██▋       | 14913/56168 [01:34<02:28, 278.62it/s]Running loglikelihood requests:  27%|██▋       | 14977/56168 [01:34<02:28, 277.57it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [01:34<02:42, 253.33it/s]Running loglikelihood requests:  27%|██▋       | 15105/56168 [01:34<02:56, 232.33it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [01:35<02:53, 235.68it/s]Running loglikelihood requests:  27%|██▋       | 15233/56168 [01:35<02:55, 233.76it/s]Running loglikelihood requests:  27%|██▋       | 15297/56168 [01:35<02:49, 241.01it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [01:35<02:42, 250.94it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [01:36<02:33, 266.15it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [01:36<02:42, 250.66it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [01:36<02:31, 268.06it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [01:36<02:22, 284.38it/s]Running loglikelihood requests:  28%|██▊       | 15681/56168 [01:37<02:35, 260.98it/s]Running loglikelihood requests:  28%|██▊       | 15745/56168 [01:37<02:27, 274.59it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [01:37<02:20, 286.64it/s]Running loglikelihood requests:  28%|██▊       | 15873/56168 [01:37<02:36, 258.15it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [01:38<02:34, 260.64it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [01:38<02:38, 252.65it/s]Running loglikelihood requests:  29%|██▊       | 16065/56168 [01:38<02:29, 267.74it/s]Running loglikelihood requests:  29%|██▊       | 16129/56168 [01:38<02:23, 279.02it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [01:39<02:33, 260.43it/s]Running loglikelihood requests:  29%|██▉       | 16257/56168 [01:39<02:26, 272.25it/s]Running loglikelihood requests:  29%|██▉       | 16321/56168 [01:39<02:19, 285.48it/s]Running loglikelihood requests:  29%|██▉       | 16385/56168 [01:39<02:29, 265.44it/s]Running loglikelihood requests:  29%|██▉       | 16449/56168 [01:39<02:22, 278.42it/s]Running loglikelihood requests:  29%|██▉       | 16513/56168 [01:40<02:20, 281.56it/s]Running loglikelihood requests:  30%|██▉       | 16577/56168 [01:40<02:32, 260.21it/s]Running loglikelihood requests:  30%|██▉       | 16641/56168 [01:40<02:24, 272.85it/s]Running loglikelihood requests:  30%|██▉       | 16705/56168 [01:40<02:20, 280.92it/s]Running loglikelihood requests:  30%|██▉       | 16769/56168 [01:41<02:21, 277.99it/s]Running loglikelihood requests:  30%|██▉       | 16833/56168 [01:41<02:17, 286.34it/s]Running loglikelihood requests:  30%|███       | 16897/56168 [01:41<02:29, 263.50it/s]Running loglikelihood requests:  30%|███       | 16961/56168 [01:41<02:23, 272.62it/s]Running loglikelihood requests:  30%|███       | 17025/56168 [01:42<02:19, 280.32it/s]Running loglikelihood requests:  30%|███       | 17089/56168 [01:42<02:19, 280.47it/s]Running loglikelihood requests:  31%|███       | 17153/56168 [01:42<02:13, 292.06it/s]Running loglikelihood requests:  31%|███       | 17217/56168 [01:42<02:06, 308.45it/s]Running loglikelihood requests:  31%|███       | 17281/56168 [01:42<02:17, 283.26it/s]Running loglikelihood requests:  31%|███       | 17345/56168 [01:43<02:20, 276.85it/s]Running loglikelihood requests:  31%|███       | 17409/56168 [01:43<02:15, 286.12it/s]Running loglikelihood requests:  31%|███       | 17473/56168 [01:43<02:20, 276.25it/s]Running loglikelihood requests:  31%|███       | 17537/56168 [01:43<02:12, 292.09it/s]Running loglikelihood requests:  31%|███▏      | 17601/56168 [01:44<02:06, 305.75it/s]Running loglikelihood requests:  31%|███▏      | 17665/56168 [01:44<02:18, 278.74it/s]Running loglikelihood requests:  32%|███▏      | 17729/56168 [01:44<02:18, 278.17it/s]Running loglikelihood requests:  32%|███▏      | 17793/56168 [01:44<02:15, 284.12it/s]Running loglikelihood requests:  32%|███▏      | 17857/56168 [01:44<02:12, 289.38it/s]Running loglikelihood requests:  32%|███▏      | 17921/56168 [01:45<02:04, 307.54it/s]Running loglikelihood requests:  32%|███▏      | 17985/56168 [01:45<01:58, 321.30it/s]Running loglikelihood requests:  32%|███▏      | 18049/56168 [01:45<02:03, 307.98it/s]Running loglikelihood requests:  32%|███▏      | 18113/56168 [01:45<01:55, 329.61it/s]Running loglikelihood requests:  32%|███▏      | 18177/56168 [01:45<01:49, 348.31it/s]Running loglikelihood requests:  32%|███▏      | 18241/56168 [01:46<01:59, 317.10it/s]Running loglikelihood requests:  33%|███▎      | 18305/56168 [01:46<01:51, 338.54it/s]Running loglikelihood requests:  33%|███▎      | 18369/56168 [01:46<01:46, 355.75it/s]Running loglikelihood requests:  33%|███▎      | 18433/56168 [01:46<01:47, 350.16it/s]Running loglikelihood requests:  33%|███▎      | 18497/56168 [01:46<01:54, 329.29it/s]Running loglikelihood requests:  33%|███▎      | 18561/56168 [01:46<01:48, 345.51it/s]Running loglikelihood requests:  33%|███▎      | 18625/56168 [01:47<01:48, 345.29it/s]Running loglikelihood requests:  33%|███▎      | 18689/56168 [01:47<01:53, 331.31it/s]Running loglikelihood requests:  33%|███▎      | 18753/56168 [01:47<01:46, 351.45it/s]Running loglikelihood requests:  34%|███▎      | 18817/56168 [01:47<01:42, 365.42it/s]Running loglikelihood requests:  34%|███▎      | 18881/56168 [01:47<01:51, 334.86it/s]Running loglikelihood requests:  34%|███▎      | 18945/56168 [01:48<01:45, 352.91it/s]Running loglikelihood requests:  34%|███▍      | 19009/56168 [01:48<01:41, 367.07it/s]Running loglikelihood requests:  34%|███▍      | 19073/56168 [01:48<01:43, 358.28it/s]Running loglikelihood requests:  34%|███▍      | 19137/56168 [01:48<01:50, 335.60it/s]Running loglikelihood requests:  34%|███▍      | 19201/56168 [01:48<01:52, 328.44it/s]Running loglikelihood requests:  34%|███▍      | 19265/56168 [01:49<02:04, 296.77it/s]Running loglikelihood requests:  34%|███▍      | 19329/56168 [01:49<01:55, 318.98it/s]Running loglikelihood requests:  35%|███▍      | 19393/56168 [01:49<01:53, 322.88it/s]Running loglikelihood requests:  35%|███▍      | 19447/56168 [01:49<01:41, 361.40it/s]Running loglikelihood requests:  35%|███▍      | 19487/56168 [01:49<01:54, 321.05it/s]Running loglikelihood requests:  35%|███▍      | 19522/56168 [01:49<02:08, 285.29it/s]Running loglikelihood requests:  35%|███▍      | 19585/56168 [01:50<02:16, 268.60it/s]Running loglikelihood requests:  35%|███▍      | 19649/56168 [01:50<02:03, 296.34it/s]Running loglikelihood requests:  35%|███▌      | 19713/56168 [01:50<01:55, 314.95it/s]Running loglikelihood requests:  35%|███▌      | 19777/56168 [01:50<02:04, 293.27it/s]Running loglikelihood requests:  35%|███▌      | 19841/56168 [01:50<02:04, 291.46it/s]Running loglikelihood requests:  35%|███▌      | 19905/56168 [01:51<02:00, 300.52it/s]Running loglikelihood requests:  36%|███▌      | 19969/56168 [01:51<02:07, 283.36it/s]Running loglikelihood requests:  36%|███▌      | 20033/56168 [01:51<02:01, 298.60it/s]Running loglikelihood requests:  36%|███▌      | 20097/56168 [01:51<02:04, 288.93it/s]Running loglikelihood requests:  36%|███▌      | 20161/56168 [01:52<01:54, 314.68it/s]Running loglikelihood requests:  36%|███▌      | 20225/56168 [01:52<01:54, 313.79it/s]Running loglikelihood requests:  36%|███▌      | 20258/56168 [01:52<01:54, 313.65it/s]Running loglikelihood requests:  36%|███▌      | 20290/56168 [01:52<02:06, 282.51it/s]Running loglikelihood requests:  36%|███▌      | 20353/56168 [01:52<02:03, 289.69it/s]Running loglikelihood requests:  36%|███▋      | 20417/56168 [01:52<02:06, 282.30it/s]Running loglikelihood requests:  36%|███▋      | 20481/56168 [01:53<01:55, 307.73it/s]Running loglikelihood requests:  37%|███▋      | 20545/56168 [01:53<01:55, 309.66it/s]Running loglikelihood requests:  37%|███▋      | 20609/56168 [01:53<02:04, 285.57it/s]Running loglikelihood requests:  37%|███▋      | 20673/56168 [01:53<02:17, 257.99it/s]Running loglikelihood requests:  37%|███▋      | 20737/56168 [01:54<02:26, 241.63it/s]Running loglikelihood requests:  37%|███▋      | 20801/56168 [01:54<02:22, 248.46it/s]Running loglikelihood requests:  37%|███▋      | 20865/56168 [01:54<02:16, 258.62it/s]Running loglikelihood requests:  37%|███▋      | 20929/56168 [01:54<02:31, 232.71it/s]Running loglikelihood requests:  37%|███▋      | 20993/56168 [01:55<02:13, 262.89it/s]Running loglikelihood requests:  37%|███▋      | 21057/56168 [01:55<02:09, 271.46it/s]Running loglikelihood requests:  38%|███▊      | 21121/56168 [01:55<01:55, 303.01it/s]Running loglikelihood requests:  38%|███▊      | 21185/56168 [01:55<01:58, 294.73it/s]Running loglikelihood requests:  38%|███▊      | 21249/56168 [01:55<01:51, 314.30it/s]Running loglikelihood requests:  38%|███▊      | 21313/56168 [01:56<01:41, 343.18it/s]Running loglikelihood requests:  38%|███▊      | 21377/56168 [01:56<01:37, 356.55it/s]Running loglikelihood requests:  38%|███▊      | 21441/56168 [01:56<01:50, 314.35it/s]Running loglikelihood requests:  38%|███▊      | 21505/56168 [01:56<01:48, 320.31it/s]Running loglikelihood requests:  38%|███▊      | 21569/56168 [01:56<01:43, 334.13it/s]Running loglikelihood requests:  39%|███▊      | 21633/56168 [01:57<01:41, 340.20it/s]Running loglikelihood requests:  39%|███▊      | 21668/56168 [01:57<01:45, 327.64it/s]Running loglikelihood requests:  39%|███▊      | 21701/56168 [01:57<01:59, 288.59it/s]Running loglikelihood requests:  39%|███▊      | 21761/56168 [01:57<02:00, 285.51it/s]Running loglikelihood requests:  39%|███▉      | 21825/56168 [01:57<01:56, 293.87it/s]Running loglikelihood requests:  39%|███▉      | 21889/56168 [01:57<01:57, 292.47it/s]Running loglikelihood requests:  39%|███▉      | 21953/56168 [01:58<01:56, 293.58it/s]Running loglikelihood requests:  39%|███▉      | 22017/56168 [01:58<01:48, 314.34it/s]Running loglikelihood requests:  39%|███▉      | 22081/56168 [01:58<01:53, 299.39it/s]Running loglikelihood requests:  39%|███▉      | 22145/56168 [01:58<01:46, 318.74it/s]Running loglikelihood requests:  40%|███▉      | 22209/56168 [01:58<01:40, 336.62it/s]Running loglikelihood requests:  40%|███▉      | 22273/56168 [01:59<01:33, 361.62it/s]Running loglikelihood requests:  40%|███▉      | 22337/56168 [01:59<01:38, 344.62it/s]Running loglikelihood requests:  40%|███▉      | 22401/56168 [01:59<01:34, 358.57it/s]Running loglikelihood requests:  40%|███▉      | 22465/56168 [01:59<01:30, 372.94it/s]Running loglikelihood requests:  40%|████      | 22529/56168 [01:59<01:32, 364.13it/s]Running loglikelihood requests:  40%|████      | 22593/56168 [02:00<01:40, 334.32it/s]Running loglikelihood requests:  40%|████      | 22657/56168 [02:00<01:34, 354.18it/s]Running loglikelihood requests:  40%|████      | 22721/56168 [02:00<01:29, 371.87it/s]Running loglikelihood requests:  41%|████      | 22785/56168 [02:00<01:36, 346.61it/s]Running loglikelihood requests:  41%|████      | 22849/56168 [02:00<01:30, 369.22it/s]Running loglikelihood requests:  41%|████      | 22913/56168 [02:00<01:36, 343.66it/s]Running loglikelihood requests:  41%|████      | 22977/56168 [02:01<01:41, 325.59it/s]Running loglikelihood requests:  41%|████      | 23041/56168 [02:01<01:34, 351.36it/s]Running loglikelihood requests:  41%|████      | 23105/56168 [02:01<01:28, 372.20it/s]Running loglikelihood requests:  41%|████      | 23169/56168 [02:01<01:28, 373.96it/s]Running loglikelihood requests:  41%|████▏     | 23233/56168 [02:01<01:30, 364.31it/s]Running loglikelihood requests:  41%|████▏     | 23297/56168 [02:01<01:26, 379.01it/s]Running loglikelihood requests:  42%|████▏     | 23361/56168 [02:02<01:34, 346.44it/s]Running loglikelihood requests:  42%|████▏     | 23425/56168 [02:02<01:27, 372.19it/s]Running loglikelihood requests:  42%|████▏     | 23489/56168 [02:02<01:22, 394.41it/s]Running loglikelihood requests:  42%|████▏     | 23553/56168 [02:02<01:31, 358.15it/s]Running loglikelihood requests:  42%|████▏     | 23617/56168 [02:02<01:26, 374.75it/s]Running loglikelihood requests:  42%|████▏     | 23681/56168 [02:02<01:23, 390.36it/s]Running loglikelihood requests:  42%|████▏     | 23745/56168 [02:03<01:39, 326.41it/s]Running loglikelihood requests:  42%|████▏     | 23809/56168 [02:03<01:32, 348.98it/s]Running loglikelihood requests:  43%|████▎     | 23873/56168 [02:03<01:31, 352.66it/s]Running loglikelihood requests:  43%|████▎     | 23937/56168 [02:03<01:31, 352.12it/s]Running loglikelihood requests:  43%|████▎     | 24001/56168 [02:03<01:24, 379.79it/s]Running loglikelihood requests:  43%|████▎     | 24065/56168 [02:04<01:30, 353.31it/s]Running loglikelihood requests:  43%|████▎     | 24129/56168 [02:04<01:26, 369.26it/s]Running loglikelihood requests:  43%|████▎     | 24193/56168 [02:04<01:22, 385.91it/s]Running loglikelihood requests:  43%|████▎     | 24257/56168 [02:04<01:31, 349.93it/s]Running loglikelihood requests:  43%|████▎     | 24321/56168 [02:04<01:26, 366.42it/s]Running loglikelihood requests:  43%|████▎     | 24385/56168 [02:05<01:34, 337.27it/s]Running loglikelihood requests:  44%|████▎     | 24449/56168 [02:05<01:27, 364.52it/s]Running loglikelihood requests:  44%|████▎     | 24513/56168 [02:05<01:36, 328.34it/s]Running loglikelihood requests:  44%|████▍     | 24577/56168 [02:05<01:37, 324.36it/s]Running loglikelihood requests:  44%|████▍     | 24641/56168 [02:05<01:32, 341.91it/s]Running loglikelihood requests:  44%|████▍     | 24705/56168 [02:05<01:33, 335.59it/s]Running loglikelihood requests:  44%|████▍     | 24769/56168 [02:06<01:29, 349.54it/s]Running loglikelihood requests:  44%|████▍     | 24833/56168 [02:06<01:23, 374.86it/s]Running loglikelihood requests:  44%|████▍     | 24897/56168 [02:06<01:25, 365.13it/s]Running loglikelihood requests:  44%|████▍     | 24961/56168 [02:06<01:24, 367.69it/s]Running loglikelihood requests:  45%|████▍     | 25025/56168 [02:06<01:25, 363.52it/s]Running loglikelihood requests:  45%|████▍     | 25089/56168 [02:07<01:34, 328.60it/s]Running loglikelihood requests:  45%|████▍     | 25153/56168 [02:07<01:26, 359.46it/s]Running loglikelihood requests:  45%|████▍     | 25217/56168 [02:07<01:20, 383.26it/s]Running loglikelihood requests:  45%|████▌     | 25281/56168 [02:07<01:28, 348.75it/s]Running loglikelihood requests:  45%|████▌     | 25345/56168 [02:07<01:22, 372.90it/s]Running loglikelihood requests:  45%|████▌     | 25409/56168 [02:07<01:32, 331.92it/s]Running loglikelihood requests:  45%|████▌     | 25473/56168 [02:08<01:24, 362.39it/s]Running loglikelihood requests:  45%|████▌     | 25537/56168 [02:08<01:21, 373.81it/s]Running loglikelihood requests:  46%|████▌     | 25601/56168 [02:08<01:31, 334.42it/s]Running loglikelihood requests:  46%|████▌     | 25665/56168 [02:08<01:26, 353.22it/s]Running loglikelihood requests:  46%|████▌     | 25729/56168 [02:08<01:30, 337.64it/s]Running loglikelihood requests:  46%|████▌     | 25793/56168 [02:08<01:23, 362.00it/s]Running loglikelihood requests:  46%|████▌     | 25857/56168 [02:09<01:33, 323.53it/s]Running loglikelihood requests:  46%|████▌     | 25921/56168 [02:09<01:30, 334.39it/s]Running loglikelihood requests:  46%|████▋     | 25985/56168 [02:09<01:26, 347.75it/s]Running loglikelihood requests:  46%|████▋     | 26049/56168 [02:09<01:19, 376.65it/s]Running loglikelihood requests:  46%|████▋     | 26113/56168 [02:09<01:25, 353.02it/s]Running loglikelihood requests:  47%|████▋     | 26177/56168 [02:10<01:19, 377.99it/s]Running loglikelihood requests:  47%|████▋     | 26241/56168 [02:10<01:14, 403.76it/s]Running loglikelihood requests:  47%|████▋     | 26305/56168 [02:10<01:10, 422.52it/s]Running loglikelihood requests:  47%|████▋     | 26369/56168 [02:10<01:18, 379.75it/s]Running loglikelihood requests:  47%|████▋     | 26433/56168 [02:10<01:13, 402.82it/s]Running loglikelihood requests:  47%|████▋     | 26497/56168 [02:10<01:12, 407.88it/s]Running loglikelihood requests:  47%|████▋     | 26561/56168 [02:10<01:16, 387.36it/s]Running loglikelihood requests:  47%|████▋     | 26625/56168 [02:11<01:12, 407.46it/s]Running loglikelihood requests:  48%|████▊     | 26689/56168 [02:11<01:09, 422.52it/s]Running loglikelihood requests:  48%|████▊     | 26753/56168 [02:11<01:16, 382.87it/s]Running loglikelihood requests:  48%|████▊     | 26817/56168 [02:11<01:13, 399.50it/s]Running loglikelihood requests:  48%|████▊     | 26881/56168 [02:11<01:09, 422.43it/s]Running loglikelihood requests:  48%|████▊     | 26945/56168 [02:11<01:15, 389.03it/s]Running loglikelihood requests:  48%|████▊     | 27009/56168 [02:12<01:13, 395.84it/s]Running loglikelihood requests:  48%|████▊     | 27073/56168 [02:12<01:22, 352.27it/s]Running loglikelihood requests:  48%|████▊     | 27137/56168 [02:12<01:16, 378.18it/s]Running loglikelihood requests:  48%|████▊     | 27201/56168 [02:12<01:13, 391.70it/s]Running loglikelihood requests:  49%|████▊     | 27265/56168 [02:12<01:21, 354.41it/s]Running loglikelihood requests:  49%|████▊     | 27329/56168 [02:12<01:15, 381.39it/s]Running loglikelihood requests:  49%|████▉     | 27393/56168 [02:13<01:18, 366.00it/s]Running loglikelihood requests:  49%|████▉     | 27457/56168 [02:13<01:24, 340.36it/s]Running loglikelihood requests:  49%|████▉     | 27521/56168 [02:13<01:23, 342.42it/s]Running loglikelihood requests:  49%|████▉     | 27585/56168 [02:13<01:21, 349.34it/s]Running loglikelihood requests:  49%|████▉     | 27649/56168 [02:13<01:14, 380.29it/s]Running loglikelihood requests:  49%|████▉     | 27713/56168 [02:14<01:20, 354.00it/s]Running loglikelihood requests:  49%|████▉     | 27777/56168 [02:14<01:13, 387.06it/s]Running loglikelihood requests:  50%|████▉     | 27841/56168 [02:14<01:19, 354.68it/s]Running loglikelihood requests:  50%|████▉     | 27905/56168 [02:14<01:18, 358.94it/s]Running loglikelihood requests:  50%|████▉     | 27969/56168 [02:14<01:21, 343.92it/s]Running loglikelihood requests:  50%|████▉     | 28033/56168 [02:14<01:15, 372.08it/s]Running loglikelihood requests:  50%|█████     | 28097/56168 [02:15<01:19, 351.20it/s]Running loglikelihood requests:  50%|█████     | 28161/56168 [02:15<01:14, 375.60it/s]Running loglikelihood requests:  50%|█████     | 28225/56168 [02:15<01:09, 404.47it/s]Running loglikelihood requests:  50%|█████     | 28289/56168 [02:15<01:14, 373.98it/s]Running loglikelihood requests:  50%|█████     | 28353/56168 [02:15<01:12, 385.63it/s]Running loglikelihood requests:  51%|█████     | 28417/56168 [02:15<01:09, 399.88it/s]Running loglikelihood requests:  51%|█████     | 28481/56168 [02:16<01:18, 354.01it/s]Running loglikelihood requests:  51%|█████     | 28545/56168 [02:16<01:15, 367.55it/s]Running loglikelihood requests:  51%|█████     | 28609/56168 [02:16<01:09, 399.06it/s]Running loglikelihood requests:  51%|█████     | 28673/56168 [02:16<01:14, 367.14it/s]Running loglikelihood requests:  51%|█████     | 28737/56168 [02:16<01:11, 382.84it/s]Running loglikelihood requests:  51%|█████▏    | 28801/56168 [02:16<01:08, 398.38it/s]Running loglikelihood requests:  51%|█████▏    | 28865/56168 [02:17<01:13, 369.13it/s]Running loglikelihood requests:  52%|█████▏    | 28929/56168 [02:17<01:15, 363.15it/s]Running loglikelihood requests:  52%|█████▏    | 28993/56168 [02:17<01:19, 343.39it/s]Running loglikelihood requests:  52%|█████▏    | 29057/56168 [02:17<01:14, 362.23it/s]Running loglikelihood requests:  52%|█████▏    | 29121/56168 [02:17<01:10, 383.79it/s]Running loglikelihood requests:  52%|█████▏    | 29185/56168 [02:18<01:22, 326.32it/s]Running loglikelihood requests:  52%|█████▏    | 29249/56168 [02:18<01:17, 347.10it/s]Running loglikelihood requests:  52%|█████▏    | 29313/56168 [02:18<01:10, 383.17it/s]Running loglikelihood requests:  52%|█████▏    | 29377/56168 [02:18<01:23, 322.11it/s]Running loglikelihood requests:  52%|█████▏    | 29441/56168 [02:18<01:15, 352.71it/s]Running loglikelihood requests:  53%|█████▎    | 29505/56168 [02:18<01:12, 367.13it/s]Running loglikelihood requests:  53%|█████▎    | 29569/56168 [02:19<01:18, 340.90it/s]Running loglikelihood requests:  53%|█████▎    | 29633/56168 [02:19<01:12, 364.51it/s]Running loglikelihood requests:  53%|█████▎    | 29697/56168 [02:19<01:09, 382.23it/s]Running loglikelihood requests:  53%|█████▎    | 29761/56168 [02:19<01:12, 365.86it/s]Running loglikelihood requests:  53%|█████▎    | 29825/56168 [02:19<01:06, 396.48it/s]Running loglikelihood requests:  53%|█████▎    | 29889/56168 [02:19<01:10, 374.61it/s]Running loglikelihood requests:  53%|█████▎    | 29953/56168 [02:20<01:03, 411.83it/s]Running loglikelihood requests:  53%|█████▎    | 30017/56168 [02:20<00:59, 442.88it/s]Running loglikelihood requests:  54%|█████▎    | 30081/56168 [02:20<01:05, 398.21it/s]Running loglikelihood requests:  54%|█████▎    | 30145/56168 [02:20<01:00, 431.37it/s]Running loglikelihood requests:  54%|█████▍    | 30209/56168 [02:20<01:01, 419.44it/s]Running loglikelihood requests:  54%|█████▍    | 30273/56168 [02:20<01:02, 411.52it/s]Running loglikelihood requests:  54%|█████▍    | 30337/56168 [02:20<00:58, 441.95it/s]Running loglikelihood requests:  54%|█████▍    | 30401/56168 [02:21<01:05, 390.64it/s]Running loglikelihood requests:  54%|█████▍    | 30465/56168 [02:21<01:00, 423.25it/s]Running loglikelihood requests:  54%|█████▍    | 30529/56168 [02:21<00:56, 451.84it/s]Running loglikelihood requests:  54%|█████▍    | 30593/56168 [02:21<00:57, 448.54it/s]Running loglikelihood requests:  55%|█████▍    | 30657/56168 [02:21<00:59, 427.54it/s]Running loglikelihood requests:  55%|█████▍    | 30721/56168 [02:21<01:00, 423.56it/s]Running loglikelihood requests:  55%|█████▍    | 30785/56168 [02:22<01:05, 389.72it/s]Running loglikelihood requests:  55%|█████▍    | 30849/56168 [02:22<01:01, 412.36it/s]Running loglikelihood requests:  55%|█████▌    | 30913/56168 [02:22<00:56, 444.20it/s]Running loglikelihood requests:  55%|█████▌    | 30977/56168 [02:22<01:03, 394.20it/s]Running loglikelihood requests:  55%|█████▌    | 31041/56168 [02:22<00:59, 424.98it/s]Running loglikelihood requests:  55%|█████▌    | 31105/56168 [02:22<00:55, 452.67it/s]Running loglikelihood requests:  55%|█████▌    | 31169/56168 [02:23<01:06, 378.72it/s]Running loglikelihood requests:  56%|█████▌    | 31233/56168 [02:23<01:00, 412.40it/s]Running loglikelihood requests:  56%|█████▌    | 31297/56168 [02:23<00:57, 434.48it/s]Running loglikelihood requests:  56%|█████▌    | 31361/56168 [02:23<01:04, 386.16it/s]Running loglikelihood requests:  56%|█████▌    | 31425/56168 [02:23<01:00, 407.96it/s]Running loglikelihood requests:  56%|█████▌    | 31489/56168 [02:23<00:57, 427.49it/s]Running loglikelihood requests:  56%|█████▌    | 31553/56168 [02:23<01:05, 378.25it/s]Running loglikelihood requests:  56%|█████▋    | 31617/56168 [02:24<01:01, 396.50it/s]Running loglikelihood requests:  56%|█████▋    | 31681/56168 [02:24<00:59, 411.10it/s]Running loglikelihood requests:  57%|█████▋    | 31745/56168 [02:24<01:05, 373.82it/s]Running loglikelihood requests:  57%|█████▋    | 31809/56168 [02:24<01:10, 347.12it/s]Running loglikelihood requests:  57%|█████▋    | 31873/56168 [02:24<01:06, 367.07it/s]Running loglikelihood requests:  57%|█████▋    | 31937/56168 [02:25<01:04, 377.13it/s]Running loglikelihood requests:  57%|█████▋    | 32001/56168 [02:25<01:04, 375.07it/s]Running loglikelihood requests:  57%|█████▋    | 32065/56168 [02:25<01:01, 394.31it/s]Running loglikelihood requests:  57%|█████▋    | 32129/56168 [02:25<01:04, 374.58it/s]Running loglikelihood requests:  57%|█████▋    | 32193/56168 [02:25<01:04, 370.26it/s]Running loglikelihood requests:  57%|█████▋    | 32257/56168 [02:25<01:01, 387.95it/s]Running loglikelihood requests:  58%|█████▊    | 32321/56168 [02:25<00:57, 417.37it/s]Running loglikelihood requests:  58%|█████▊    | 32385/56168 [02:26<01:01, 385.84it/s]Running loglikelihood requests:  58%|█████▊    | 32449/56168 [02:26<00:57, 414.35it/s]Running loglikelihood requests:  58%|█████▊    | 32513/56168 [02:26<00:53, 444.94it/s]Running loglikelihood requests:  58%|█████▊    | 32577/56168 [02:26<00:58, 406.62it/s]Running loglikelihood requests:  58%|█████▊    | 32641/56168 [02:26<00:55, 421.69it/s]Running loglikelihood requests:  58%|█████▊    | 32705/56168 [02:26<00:54, 427.68it/s]Running loglikelihood requests:  58%|█████▊    | 32769/56168 [02:27<01:00, 388.82it/s]Running loglikelihood requests:  58%|█████▊    | 32833/56168 [02:27<00:55, 417.63it/s]Running loglikelihood requests:  59%|█████▊    | 32897/56168 [02:27<00:52, 441.33it/s]Running loglikelihood requests:  59%|█████▊    | 32961/56168 [02:27<00:59, 389.49it/s]Running loglikelihood requests:  59%|█████▉    | 33025/56168 [02:27<00:56, 407.64it/s]Running loglikelihood requests:  59%|█████▉    | 33089/56168 [02:27<00:53, 430.10it/s]Running loglikelihood requests:  59%|█████▉    | 33153/56168 [02:27<00:57, 396.82it/s]Running loglikelihood requests:  59%|█████▉    | 33217/56168 [02:28<00:55, 416.10it/s]Running loglikelihood requests:  59%|█████▉    | 33281/56168 [02:28<00:58, 389.62it/s]Running loglikelihood requests:  59%|█████▉    | 33345/56168 [02:28<00:57, 398.94it/s]Running loglikelihood requests:  59%|█████▉    | 33409/56168 [02:28<00:54, 418.54it/s]Running loglikelihood requests:  60%|█████▉    | 33473/56168 [02:28<00:56, 403.39it/s]Running loglikelihood requests:  60%|█████▉    | 33537/56168 [02:28<00:54, 415.51it/s]Running loglikelihood requests:  60%|█████▉    | 33601/56168 [02:29<00:52, 431.80it/s]Running loglikelihood requests:  60%|█████▉    | 33665/56168 [02:29<00:56, 399.20it/s]Running loglikelihood requests:  60%|██████    | 33729/56168 [02:29<00:52, 429.97it/s]Running loglikelihood requests:  60%|██████    | 33793/56168 [02:29<00:50, 446.87it/s]Running loglikelihood requests:  60%|██████    | 33857/56168 [02:29<00:50, 442.06it/s]Running loglikelihood requests:  60%|██████    | 33921/56168 [02:29<00:52, 420.93it/s]Running loglikelihood requests:  61%|██████    | 33985/56168 [02:29<00:51, 433.96it/s]Running loglikelihood requests:  61%|██████    | 34049/56168 [02:30<00:55, 399.48it/s]Running loglikelihood requests:  61%|██████    | 34113/56168 [02:30<00:53, 415.82it/s]Running loglikelihood requests:  61%|██████    | 34177/56168 [02:30<00:51, 424.21it/s]Running loglikelihood requests:  61%|██████    | 34241/56168 [02:30<00:56, 390.49it/s]Running loglikelihood requests:  61%|██████    | 34305/56168 [02:30<00:54, 399.50it/s]Running loglikelihood requests:  61%|██████    | 34369/56168 [02:30<00:59, 366.40it/s]Running loglikelihood requests:  61%|██████▏   | 34433/56168 [02:31<00:53, 406.06it/s]Running loglikelihood requests:  61%|██████▏   | 34497/56168 [02:31<00:49, 436.27it/s]Running loglikelihood requests:  62%|██████▏   | 34561/56168 [02:31<00:53, 406.16it/s]Running loglikelihood requests:  62%|██████▏   | 34625/56168 [02:31<00:49, 432.46it/s]Running loglikelihood requests:  62%|██████▏   | 34689/56168 [02:31<00:53, 398.98it/s]Running loglikelihood requests:  62%|██████▏   | 34753/56168 [02:31<00:51, 418.00it/s]Running loglikelihood requests:  62%|██████▏   | 34817/56168 [02:32<00:54, 390.91it/s]Running loglikelihood requests:  62%|██████▏   | 34881/56168 [02:32<00:49, 428.00it/s]Running loglikelihood requests:  62%|██████▏   | 34945/56168 [02:32<00:46, 457.94it/s]Running loglikelihood requests:  62%|██████▏   | 35009/56168 [02:32<00:44, 480.22it/s]Running loglikelihood requests:  62%|██████▏   | 35073/56168 [02:32<00:42, 496.89it/s]Running loglikelihood requests:  63%|██████▎   | 35137/56168 [02:32<00:41, 510.74it/s]Running loglikelihood requests:  63%|██████▎   | 35201/56168 [02:32<00:40, 521.52it/s]Running loglikelihood requests:  63%|██████▎   | 35265/56168 [02:32<00:40, 518.42it/s]Running loglikelihood requests:  63%|██████▎   | 35329/56168 [02:33<00:40, 512.36it/s]Running loglikelihood requests:  63%|██████▎   | 35393/56168 [02:33<00:40, 513.26it/s]Running loglikelihood requests:  63%|██████▎   | 35457/56168 [02:33<00:41, 503.32it/s]Running loglikelihood requests:  63%|██████▎   | 35521/56168 [02:33<00:40, 507.41it/s]Running loglikelihood requests:  63%|██████▎   | 35585/56168 [02:33<00:41, 501.96it/s]Running loglikelihood requests:  63%|██████▎   | 35649/56168 [02:33<00:40, 505.82it/s]Running loglikelihood requests:  64%|██████▎   | 35713/56168 [02:33<00:41, 498.32it/s]Running loglikelihood requests:  64%|██████▎   | 35777/56168 [02:33<00:39, 511.85it/s]Running loglikelihood requests:  64%|██████▍   | 35841/56168 [02:34<00:40, 506.93it/s]Running loglikelihood requests:  64%|██████▍   | 35905/56168 [02:34<00:39, 510.03it/s]Running loglikelihood requests:  64%|██████▍   | 35969/56168 [02:34<00:39, 516.54it/s]Running loglikelihood requests:  64%|██████▍   | 36033/56168 [02:34<00:39, 508.76it/s]Running loglikelihood requests:  64%|██████▍   | 36097/56168 [02:34<00:39, 511.40it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [02:34<00:39, 505.12it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [02:34<00:39, 500.10it/s]Running loglikelihood requests:  65%|██████▍   | 36289/56168 [02:34<00:38, 513.84it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [02:35<00:39, 506.83it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [02:35<00:39, 501.73it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [02:35<00:38, 507.89it/s]Running loglikelihood requests:  65%|██████▌   | 36545/56168 [02:35<00:39, 498.95it/s]Running loglikelihood requests:  65%|██████▌   | 36609/56168 [02:35<00:39, 495.74it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [02:35<00:39, 495.07it/s]Running loglikelihood requests:  65%|██████▌   | 36737/56168 [02:35<00:41, 465.92it/s]Running loglikelihood requests:  66%|██████▌   | 36801/56168 [02:35<00:39, 492.85it/s]Running loglikelihood requests:  66%|██████▌   | 36865/56168 [02:36<00:39, 490.96it/s]Running loglikelihood requests:  66%|██████▌   | 36929/56168 [02:36<00:38, 497.68it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [02:36<00:37, 516.72it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [02:36<00:35, 531.36it/s]Running loglikelihood requests:  66%|██████▌   | 37121/56168 [02:36<00:35, 540.94it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [02:36<00:34, 549.11it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [02:36<00:34, 554.59it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [02:36<00:33, 556.28it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [02:36<00:34, 552.62it/s]Running loglikelihood requests:  67%|██████▋   | 37441/56168 [02:37<00:33, 557.90it/s]Running loglikelihood requests:  67%|██████▋   | 37505/56168 [02:37<00:33, 556.01it/s]Running loglikelihood requests:  67%|██████▋   | 37569/56168 [02:37<00:33, 548.88it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [02:37<00:34, 537.28it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [02:37<00:33, 548.04it/s]Running loglikelihood requests:  67%|██████▋   | 37761/56168 [02:37<00:33, 554.52it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [02:37<00:32, 561.11it/s]Running loglikelihood requests:  67%|██████▋   | 37889/56168 [02:37<00:32, 563.41it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [02:38<00:32, 566.36it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [02:38<00:32, 566.34it/s]Running loglikelihood requests:  68%|██████▊   | 38081/56168 [02:38<00:31, 568.73it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [02:38<00:31, 569.30it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [02:38<00:31, 569.58it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [02:38<00:31, 570.16it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [02:38<00:31, 570.51it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [02:38<00:31, 571.50it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [02:38<00:30, 571.30it/s]Running loglikelihood requests:  69%|██████▊   | 38529/56168 [02:39<00:30, 572.29it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [02:39<00:30, 570.25it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [02:39<00:30, 571.59it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [02:39<00:30, 568.21it/s]Running loglikelihood requests:  69%|██████▉   | 38785/56168 [02:39<00:30, 568.43it/s]Running loglikelihood requests:  69%|██████▉   | 38849/56168 [02:39<00:30, 569.88it/s]Running loglikelihood requests:  69%|██████▉   | 38913/56168 [02:39<00:30, 571.65it/s]Running loglikelihood requests:  69%|██████▉   | 38977/56168 [02:39<00:30, 572.36it/s]Running loglikelihood requests:  70%|██████▉   | 39041/56168 [02:39<00:29, 572.76it/s]Running loglikelihood requests:  70%|██████▉   | 39105/56168 [02:40<00:29, 573.58it/s]Running loglikelihood requests:  70%|██████▉   | 39169/56168 [02:40<00:29, 572.34it/s]Running loglikelihood requests:  70%|██████▉   | 39233/56168 [02:40<00:29, 572.79it/s]Running loglikelihood requests:  70%|██████▉   | 39297/56168 [02:40<00:29, 571.68it/s]Running loglikelihood requests:  70%|███████   | 39361/56168 [02:40<00:29, 572.18it/s]Running loglikelihood requests:  70%|███████   | 39425/56168 [02:40<00:29, 571.93it/s]Running loglikelihood requests:  70%|███████   | 39489/56168 [02:40<00:29, 573.71it/s]Running loglikelihood requests:  70%|███████   | 39553/56168 [02:40<00:29, 572.69it/s]Running loglikelihood requests:  71%|███████   | 39617/56168 [02:40<00:28, 573.48it/s]Running loglikelihood requests:  71%|███████   | 39681/56168 [02:41<00:28, 572.44it/s]Running loglikelihood requests:  71%|███████   | 39745/56168 [02:41<00:28, 572.38it/s]Running loglikelihood requests:  71%|███████   | 39809/56168 [02:41<00:28, 570.86it/s]Running loglikelihood requests:  71%|███████   | 39873/56168 [02:41<00:30, 531.36it/s]Running loglikelihood requests:  71%|███████   | 39937/56168 [02:41<00:29, 545.12it/s]Running loglikelihood requests:  71%|███████   | 40001/56168 [02:41<00:29, 551.82it/s]Running loglikelihood requests:  71%|███████▏  | 40065/56168 [02:41<00:28, 559.23it/s]Running loglikelihood requests:  71%|███████▏  | 40129/56168 [02:41<00:28, 563.96it/s]Running loglikelihood requests:  72%|███████▏  | 40193/56168 [02:41<00:28, 568.79it/s]Running loglikelihood requests:  72%|███████▏  | 40257/56168 [02:42<00:27, 570.81it/s]Running loglikelihood requests:  72%|███████▏  | 40321/56168 [02:42<00:27, 573.00it/s]Running loglikelihood requests:  72%|███████▏  | 40385/56168 [02:42<00:27, 573.85it/s]Running loglikelihood requests:  72%|███████▏  | 40449/56168 [02:42<00:27, 576.70it/s]Running loglikelihood requests:  72%|███████▏  | 40513/56168 [02:42<00:27, 575.92it/s]Running loglikelihood requests:  72%|███████▏  | 40577/56168 [02:42<00:27, 576.70it/s]Running loglikelihood requests:  72%|███████▏  | 40641/56168 [02:42<00:27, 562.68it/s]Running loglikelihood requests:  72%|███████▏  | 40705/56168 [02:42<00:28, 542.93it/s]Running loglikelihood requests:  73%|███████▎  | 40769/56168 [02:42<00:28, 547.63it/s]Running loglikelihood requests:  73%|███████▎  | 40833/56168 [02:43<00:27, 557.08it/s]Running loglikelihood requests:  73%|███████▎  | 40897/56168 [02:43<00:27, 563.97it/s]Running loglikelihood requests:  73%|███████▎  | 40961/56168 [02:43<00:26, 569.55it/s]Running loglikelihood requests:  73%|███████▎  | 41025/56168 [02:43<00:26, 573.22it/s]Running loglikelihood requests:  73%|███████▎  | 41089/56168 [02:43<00:26, 576.40it/s]Running loglikelihood requests:  73%|███████▎  | 41153/56168 [02:43<00:26, 576.02it/s]Running loglikelihood requests:  73%|███████▎  | 41217/56168 [02:43<00:25, 579.00it/s]Running loglikelihood requests:  73%|███████▎  | 41281/56168 [02:43<00:25, 578.82it/s]Running loglikelihood requests:  74%|███████▎  | 41345/56168 [02:43<00:25, 578.25it/s]Running loglikelihood requests:  74%|███████▎  | 41409/56168 [02:44<00:25, 576.64it/s]Running loglikelihood requests:  74%|███████▍  | 41473/56168 [02:44<00:25, 576.96it/s]Running loglikelihood requests:  74%|███████▍  | 41537/56168 [02:44<00:25, 576.73it/s]Running loglikelihood requests:  74%|███████▍  | 41601/56168 [02:44<00:25, 578.84it/s]Running loglikelihood requests:  74%|███████▍  | 41665/56168 [02:44<00:25, 579.48it/s]Running loglikelihood requests:  74%|███████▍  | 41729/56168 [02:44<00:24, 581.16it/s]Running loglikelihood requests:  74%|███████▍  | 41793/56168 [02:44<00:24, 582.27it/s]Running loglikelihood requests:  75%|███████▍  | 41857/56168 [02:44<00:24, 581.90it/s]Running loglikelihood requests:  75%|███████▍  | 41921/56168 [02:44<00:24, 582.53it/s]Running loglikelihood requests:  75%|███████▍  | 41985/56168 [02:45<00:24, 572.08it/s]Running loglikelihood requests:  75%|███████▍  | 42049/56168 [02:45<00:24, 575.04it/s]Running loglikelihood requests:  75%|███████▍  | 42113/56168 [02:45<00:24, 577.94it/s]Running loglikelihood requests:  75%|███████▌  | 42177/56168 [02:45<00:24, 580.09it/s]Running loglikelihood requests:  75%|███████▌  | 42241/56168 [02:45<00:24, 567.38it/s]Running loglikelihood requests:  75%|███████▌  | 42305/56168 [02:45<00:25, 544.30it/s]Running loglikelihood requests:  75%|███████▌  | 42369/56168 [02:45<00:25, 547.69it/s]Running loglikelihood requests:  76%|███████▌  | 42433/56168 [02:45<00:25, 540.79it/s]Running loglikelihood requests:  76%|███████▌  | 42497/56168 [02:46<00:25, 531.75it/s]Running loglikelihood requests:  76%|███████▌  | 42561/56168 [02:46<00:25, 533.91it/s]Running loglikelihood requests:  76%|███████▌  | 42625/56168 [02:46<00:25, 537.37it/s]Running loglikelihood requests:  76%|███████▌  | 42689/56168 [02:46<00:25, 532.20it/s]Running loglikelihood requests:  76%|███████▌  | 42753/56168 [02:46<00:24, 538.38it/s]Running loglikelihood requests:  76%|███████▌  | 42817/56168 [02:46<00:24, 534.87it/s]Running loglikelihood requests:  76%|███████▋  | 42881/56168 [02:46<00:24, 537.34it/s]Running loglikelihood requests:  76%|███████▋  | 42945/56168 [02:46<00:24, 529.84it/s]Running loglikelihood requests:  77%|███████▋  | 43009/56168 [02:46<00:24, 526.98it/s]Running loglikelihood requests:  77%|███████▋  | 43073/56168 [02:47<00:25, 512.73it/s]Running loglikelihood requests:  77%|███████▋  | 43137/56168 [02:47<00:25, 504.04it/s]Running loglikelihood requests:  77%|███████▋  | 43201/56168 [02:47<00:25, 511.32it/s]Running loglikelihood requests:  77%|███████▋  | 43265/56168 [02:47<00:25, 515.07it/s]Running loglikelihood requests:  77%|███████▋  | 43329/56168 [02:47<00:24, 519.91it/s]Running loglikelihood requests:  77%|███████▋  | 43393/56168 [02:47<00:23, 536.00it/s]Running loglikelihood requests:  77%|███████▋  | 43457/56168 [02:47<00:23, 544.78it/s]Running loglikelihood requests:  77%|███████▋  | 43521/56168 [02:47<00:22, 551.06it/s]Running loglikelihood requests:  78%|███████▊  | 43585/56168 [02:48<00:22, 557.37it/s]Running loglikelihood requests:  78%|███████▊  | 43649/56168 [02:48<00:23, 526.16it/s]Running loglikelihood requests:  78%|███████▊  | 43713/56168 [02:48<00:23, 526.85it/s]Running loglikelihood requests:  78%|███████▊  | 43777/56168 [02:48<00:24, 501.59it/s]Running loglikelihood requests:  78%|███████▊  | 43841/56168 [02:48<00:24, 494.33it/s]Running loglikelihood requests:  78%|███████▊  | 43905/56168 [02:48<00:24, 504.25it/s]Running loglikelihood requests:  78%|███████▊  | 43969/56168 [02:48<00:23, 513.00it/s]Running loglikelihood requests:  78%|███████▊  | 44033/56168 [02:48<00:22, 528.92it/s]Running loglikelihood requests:  79%|███████▊  | 44097/56168 [02:49<00:23, 524.65it/s]Running loglikelihood requests:  79%|███████▊  | 44161/56168 [02:49<00:23, 520.86it/s]Running loglikelihood requests:  79%|███████▊  | 44225/56168 [02:49<00:22, 531.95it/s]Running loglikelihood requests:  79%|███████▉  | 44289/56168 [02:49<00:22, 526.85it/s]Running loglikelihood requests:  79%|███████▉  | 44353/56168 [02:49<00:22, 520.67it/s]Running loglikelihood requests:  79%|███████▉  | 44417/56168 [02:49<00:22, 522.25it/s]Running loglikelihood requests:  79%|███████▉  | 44481/56168 [02:49<00:22, 527.53it/s]Running loglikelihood requests:  79%|███████▉  | 44545/56168 [02:49<00:21, 533.65it/s]Running loglikelihood requests:  79%|███████▉  | 44609/56168 [02:50<00:21, 531.10it/s]Running loglikelihood requests:  80%|███████▉  | 44673/56168 [02:50<00:22, 522.02it/s]Running loglikelihood requests:  80%|███████▉  | 44737/56168 [02:50<00:21, 536.71it/s]Running loglikelihood requests:  80%|███████▉  | 44801/56168 [02:50<00:20, 551.86it/s]Running loglikelihood requests:  80%|███████▉  | 44865/56168 [02:50<00:20, 558.11it/s]Running loglikelihood requests:  80%|███████▉  | 44929/56168 [02:50<00:20, 551.61it/s]Running loglikelihood requests:  80%|████████  | 44993/56168 [02:50<00:20, 555.33it/s]Running loglikelihood requests:  80%|████████  | 45057/56168 [02:50<00:19, 556.20it/s]Running loglikelihood requests:  80%|████████  | 45121/56168 [02:50<00:19, 558.98it/s]Running loglikelihood requests:  80%|████████  | 45185/56168 [02:51<00:19, 561.65it/s]Running loglikelihood requests:  81%|████████  | 45249/56168 [02:51<00:19, 560.80it/s]Running loglikelihood requests:  81%|████████  | 45313/56168 [02:51<00:19, 565.64it/s]Running loglikelihood requests:  81%|████████  | 45377/56168 [02:51<00:18, 568.22it/s]Running loglikelihood requests:  81%|████████  | 45441/56168 [02:51<00:18, 571.95it/s]Running loglikelihood requests:  81%|████████  | 45505/56168 [02:51<00:18, 580.95it/s]Running loglikelihood requests:  81%|████████  | 45569/56168 [02:51<00:17, 592.79it/s]Running loglikelihood requests:  81%|████████  | 45633/56168 [02:51<00:17, 594.89it/s]Running loglikelihood requests:  81%|████████▏ | 45697/56168 [02:51<00:17, 591.00it/s]Running loglikelihood requests:  81%|████████▏ | 45761/56168 [02:52<00:17, 592.27it/s]Running loglikelihood requests:  82%|████████▏ | 45825/56168 [02:52<00:17, 588.60it/s]Running loglikelihood requests:  82%|████████▏ | 45889/56168 [02:52<00:17, 584.20it/s]Running loglikelihood requests:  82%|████████▏ | 45953/56168 [02:52<00:17, 591.78it/s]Running loglikelihood requests:  82%|████████▏ | 46017/56168 [02:52<00:17, 590.34it/s]Running loglikelihood requests:  82%|████████▏ | 46081/56168 [02:52<00:17, 587.31it/s]Running loglikelihood requests:  82%|████████▏ | 46145/56168 [02:52<00:17, 588.11it/s]Running loglikelihood requests:  82%|████████▏ | 46209/56168 [02:52<00:16, 588.68it/s]Running loglikelihood requests:  82%|████████▏ | 46273/56168 [02:52<00:16, 596.25it/s]Running loglikelihood requests:  82%|████████▏ | 46337/56168 [02:53<00:16, 604.36it/s]Running loglikelihood requests:  83%|████████▎ | 46401/56168 [02:53<00:16, 609.07it/s]Running loglikelihood requests:  83%|████████▎ | 46465/56168 [02:53<00:16, 605.68it/s]Running loglikelihood requests:  83%|████████▎ | 46529/56168 [02:53<00:16, 594.61it/s]Running loglikelihood requests:  83%|████████▎ | 46593/56168 [02:53<00:16, 589.77it/s]Running loglikelihood requests:  83%|████████▎ | 46657/56168 [02:53<00:16, 591.35it/s]Running loglikelihood requests:  83%|████████▎ | 46721/56168 [02:53<00:16, 583.33it/s]Running loglikelihood requests:  83%|████████▎ | 46785/56168 [02:53<00:16, 563.37it/s]Running loglikelihood requests:  83%|████████▎ | 46849/56168 [02:53<00:15, 583.08it/s]Running loglikelihood requests:  84%|████████▎ | 46913/56168 [02:54<00:15, 597.75it/s]Running loglikelihood requests:  84%|████████▎ | 46977/56168 [02:54<00:15, 579.65it/s]Running loglikelihood requests:  84%|████████▍ | 47041/56168 [02:54<00:15, 578.77it/s]Running loglikelihood requests:  84%|████████▍ | 47105/56168 [02:54<00:15, 592.65it/s]Running loglikelihood requests:  84%|████████▍ | 47169/56168 [02:54<00:14, 602.02it/s]Running loglikelihood requests:  84%|████████▍ | 47233/56168 [02:54<00:16, 547.75it/s]Running loglikelihood requests:  84%|████████▍ | 47297/56168 [02:54<00:18, 489.73it/s]Running loglikelihood requests:  84%|████████▍ | 47361/56168 [02:54<00:17, 500.91it/s]Running loglikelihood requests:  84%|████████▍ | 47425/56168 [02:54<00:16, 533.40it/s]Running loglikelihood requests:  85%|████████▍ | 47489/56168 [02:55<00:15, 552.85it/s]Running loglikelihood requests:  85%|████████▍ | 47553/56168 [02:55<00:15, 572.16it/s]Running loglikelihood requests:  85%|████████▍ | 47617/56168 [02:55<00:14, 587.54it/s]Running loglikelihood requests:  85%|████████▍ | 47681/56168 [02:55<00:14, 599.81it/s]Running loglikelihood requests:  85%|████████▌ | 47745/56168 [02:55<00:14, 601.41it/s]Running loglikelihood requests:  85%|████████▌ | 47809/56168 [02:55<00:13, 607.07it/s]Running loglikelihood requests:  85%|████████▌ | 47873/56168 [02:55<00:13, 592.97it/s]Running loglikelihood requests:  85%|████████▌ | 47937/56168 [02:55<00:13, 604.41it/s]Running loglikelihood requests:  85%|████████▌ | 48001/56168 [02:55<00:13, 612.60it/s]Running loglikelihood requests:  86%|████████▌ | 48065/56168 [02:56<00:13, 618.25it/s]Running loglikelihood requests:  86%|████████▌ | 48129/56168 [02:56<00:13, 603.31it/s]Running loglikelihood requests:  86%|████████▌ | 48193/56168 [02:56<00:13, 596.70it/s]Running loglikelihood requests:  86%|████████▌ | 48257/56168 [02:56<00:13, 592.20it/s]Running loglikelihood requests:  86%|████████▌ | 48321/56168 [02:56<00:13, 591.55it/s]Running loglikelihood requests:  86%|████████▌ | 48385/56168 [02:56<00:12, 603.35it/s]Running loglikelihood requests:  86%|████████▋ | 48449/56168 [02:56<00:12, 594.37it/s]Running loglikelihood requests:  86%|████████▋ | 48513/56168 [02:56<00:12, 591.92it/s]Running loglikelihood requests:  86%|████████▋ | 48577/56168 [02:56<00:13, 550.06it/s]Running loglikelihood requests:  87%|████████▋ | 48641/56168 [02:57<00:16, 452.30it/s]Running loglikelihood requests:  87%|████████▋ | 48705/56168 [02:57<00:15, 494.46it/s]Running loglikelihood requests:  87%|████████▋ | 48769/56168 [02:57<00:14, 527.66it/s]Running loglikelihood requests:  87%|████████▋ | 48833/56168 [02:57<00:13, 553.41it/s]Running loglikelihood requests:  87%|████████▋ | 48897/56168 [02:57<00:12, 573.23it/s]Running loglikelihood requests:  87%|████████▋ | 48961/56168 [02:57<00:12, 591.21it/s]Running loglikelihood requests:  87%|████████▋ | 49025/56168 [02:57<00:11, 603.97it/s]Running loglikelihood requests:  87%|████████▋ | 49089/56168 [02:57<00:11, 612.37it/s]Running loglikelihood requests:  88%|████████▊ | 49153/56168 [02:57<00:11, 617.90it/s]Running loglikelihood requests:  88%|████████▊ | 49217/56168 [02:58<00:11, 623.18it/s]Running loglikelihood requests:  88%|████████▊ | 49281/56168 [02:58<00:10, 627.02it/s]Running loglikelihood requests:  88%|████████▊ | 49345/56168 [02:58<00:10, 628.14it/s]Running loglikelihood requests:  88%|████████▊ | 49409/56168 [02:58<00:10, 629.82it/s]Running loglikelihood requests:  88%|████████▊ | 49473/56168 [02:58<00:11, 607.34it/s]Running loglikelihood requests:  88%|████████▊ | 49537/56168 [02:58<00:13, 504.22it/s]Running loglikelihood requests:  88%|████████▊ | 49601/56168 [02:58<00:16, 410.11it/s]Running loglikelihood requests:  88%|████████▊ | 49665/56168 [02:59<00:16, 387.95it/s]Running loglikelihood requests:  89%|████████▊ | 49729/56168 [02:59<00:17, 376.05it/s]Running loglikelihood requests:  89%|████████▊ | 49793/56168 [02:59<00:14, 428.02it/s]Running loglikelihood requests:  89%|████████▉ | 49857/56168 [02:59<00:13, 473.48it/s]Running loglikelihood requests:  89%|████████▉ | 49921/56168 [02:59<00:12, 512.06it/s]Running loglikelihood requests:  89%|████████▉ | 49989/56168 [02:59<00:11, 554.56it/s]Running loglikelihood requests:  89%|████████▉ | 50054/56168 [02:59<00:10, 580.01it/s]Running loglikelihood requests:  89%|████████▉ | 50115/56168 [02:59<00:10, 587.73it/s]Running loglikelihood requests:  89%|████████▉ | 50182/56168 [02:59<00:09, 610.91it/s]Running loglikelihood requests:  89%|████████▉ | 50249/56168 [03:00<00:09, 627.54it/s]Running loglikelihood requests:  90%|████████▉ | 50315/56168 [03:00<00:09, 636.76it/s]Running loglikelihood requests:  90%|████████▉ | 50387/56168 [03:00<00:08, 661.00it/s]Running loglikelihood requests:  90%|████████▉ | 50454/56168 [03:00<00:11, 482.89it/s]Running loglikelihood requests:  90%|████████▉ | 50537/56168 [03:00<00:09, 564.31it/s]Running loglikelihood requests:  90%|█████████ | 50608/56168 [03:00<00:09, 600.79it/s]Running loglikelihood requests:  90%|█████████ | 50684/56168 [03:00<00:08, 642.67it/s]Running loglikelihood requests:  90%|█████████ | 50753/56168 [03:00<00:10, 528.86it/s]Running loglikelihood requests:  90%|█████████ | 50824/56168 [03:01<00:09, 572.22it/s]Running loglikelihood requests:  91%|█████████ | 50887/56168 [03:01<00:10, 509.01it/s]Running loglikelihood requests:  91%|█████████ | 50945/56168 [03:01<00:10, 500.42it/s]Running loglikelihood requests:  91%|█████████ | 51009/56168 [03:01<00:09, 522.29it/s]Running loglikelihood requests:  91%|█████████ | 51079/56168 [03:01<00:08, 567.62it/s]Running loglikelihood requests:  91%|█████████ | 51139/56168 [03:01<00:10, 468.47it/s]Running loglikelihood requests:  91%|█████████ | 51201/56168 [03:01<00:10, 467.04it/s]Running loglikelihood requests:  91%|█████████▏| 51274/56168 [03:01<00:09, 529.73it/s]Running loglikelihood requests:  91%|█████████▏| 51343/56168 [03:02<00:08, 570.38it/s]Running loglikelihood requests:  92%|█████████▏| 51410/56168 [03:02<00:07, 596.85it/s]Running loglikelihood requests:  92%|█████████▏| 51484/56168 [03:02<00:07, 636.27it/s]Running loglikelihood requests:  92%|█████████▏| 51557/56168 [03:02<00:06, 662.58it/s]Running loglikelihood requests:  92%|█████████▏| 51633/56168 [03:02<00:06, 690.34it/s]Running loglikelihood requests:  92%|█████████▏| 51709/56168 [03:02<00:06, 710.26it/s]Running loglikelihood requests:  92%|█████████▏| 51782/56168 [03:02<00:07, 568.24it/s]Running loglikelihood requests:  92%|█████████▏| 51845/56168 [03:02<00:07, 552.56it/s]Running loglikelihood requests:  92%|█████████▏| 51905/56168 [03:03<00:09, 446.32it/s]Running loglikelihood requests:  93%|█████████▎| 51969/56168 [03:03<00:09, 444.35it/s]Running loglikelihood requests:  93%|█████████▎| 52041/56168 [03:03<00:08, 505.88it/s]Running loglikelihood requests:  93%|█████████▎| 52113/56168 [03:03<00:07, 557.62it/s]Running loglikelihood requests:  93%|█████████▎| 52174/56168 [03:03<00:07, 536.85it/s]Running loglikelihood requests:  93%|█████████▎| 52259/56168 [03:03<00:06, 617.02it/s]Running loglikelihood requests:  93%|█████████▎| 52339/56168 [03:03<00:05, 665.97it/s]Running loglikelihood requests:  93%|█████████▎| 52409/56168 [03:03<00:05, 629.21it/s]Running loglikelihood requests:  93%|█████████▎| 52481/56168 [03:04<00:06, 531.91it/s]Running loglikelihood requests:  94%|█████████▎| 52549/56168 [03:04<00:06, 566.99it/s]Running loglikelihood requests:  94%|█████████▎| 52610/56168 [03:04<00:06, 526.88it/s]Running loglikelihood requests:  94%|█████████▍| 52673/56168 [03:04<00:06, 536.73it/s]Running loglikelihood requests:  94%|█████████▍| 52737/56168 [03:04<00:06, 546.63it/s]Running loglikelihood requests:  94%|█████████▍| 52801/56168 [03:04<00:07, 475.81it/s]Running loglikelihood requests:  94%|█████████▍| 52865/56168 [03:04<00:06, 487.85it/s]Running loglikelihood requests:  94%|█████████▍| 52935/56168 [03:04<00:05, 539.40it/s]Running loglikelihood requests:  94%|█████████▍| 53020/56168 [03:04<00:05, 619.37it/s]Running loglikelihood requests:  95%|█████████▍| 53103/56168 [03:05<00:04, 676.04it/s]Running loglikelihood requests:  95%|█████████▍| 53185/56168 [03:05<00:05, 575.91it/s]Running loglikelihood requests:  95%|█████████▍| 53258/56168 [03:05<00:04, 613.06it/s]Running loglikelihood requests:  95%|█████████▍| 53335/56168 [03:05<00:04, 653.17it/s]Running loglikelihood requests:  95%|█████████▌| 53412/56168 [03:05<00:04, 684.48it/s]Running loglikelihood requests:  95%|█████████▌| 53496/56168 [03:05<00:03, 727.31it/s]Running loglikelihood requests:  95%|█████████▌| 53572/56168 [03:05<00:05, 499.85it/s]Running loglikelihood requests:  95%|█████████▌| 53634/56168 [03:06<00:04, 525.40it/s]Running loglikelihood requests:  96%|█████████▌| 53713/56168 [03:06<00:04, 587.44it/s]Running loglikelihood requests:  96%|█████████▌| 53801/56168 [03:06<00:03, 660.97it/s]Running loglikelihood requests:  96%|█████████▌| 53875/56168 [03:06<00:03, 681.43it/s]Running loglikelihood requests:  96%|█████████▌| 53953/56168 [03:06<00:03, 601.91it/s]Running loglikelihood requests:  96%|█████████▋| 54081/56168 [03:06<00:03, 642.00it/s]Running loglikelihood requests:  96%|█████████▋| 54149/56168 [03:06<00:03, 631.55it/s]Running loglikelihood requests:  97%|█████████▋| 54257/56168 [03:06<00:02, 739.57it/s]Running loglikelihood requests:  97%|█████████▋| 54335/56168 [03:07<00:02, 749.18it/s]Running loglikelihood requests:  97%|█████████▋| 54413/56168 [03:07<00:02, 617.40it/s]Running loglikelihood requests:  97%|█████████▋| 54481/56168 [03:07<00:02, 624.08it/s]Running loglikelihood requests:  97%|█████████▋| 54548/56168 [03:07<00:02, 625.39it/s]Running loglikelihood requests:  97%|█████████▋| 54614/56168 [03:07<00:02, 597.08it/s]Running loglikelihood requests:  97%|█████████▋| 54721/56168 [03:07<00:02, 607.06it/s]Running loglikelihood requests:  98%|█████████▊| 54833/56168 [03:07<00:01, 728.91it/s]Running loglikelihood requests:  98%|█████████▊| 54910/56168 [03:07<00:01, 688.91it/s]Running loglikelihood requests:  98%|█████████▊| 54982/56168 [03:08<00:02, 485.55it/s]Running loglikelihood requests:  98%|█████████▊| 55105/56168 [03:08<00:01, 557.74it/s]Running loglikelihood requests:  98%|█████████▊| 55169/56168 [03:08<00:01, 551.59it/s]Running loglikelihood requests:  98%|█████████▊| 55233/56168 [03:08<00:01, 559.05it/s]Running loglikelihood requests:  98%|█████████▊| 55297/56168 [03:08<00:01, 512.32it/s]Running loglikelihood requests:  99%|█████████▊| 55351/56168 [03:08<00:01, 506.29it/s]Running loglikelihood requests:  99%|█████████▊| 55404/56168 [03:09<00:01, 464.46it/s]Running loglikelihood requests:  99%|█████████▊| 55452/56168 [03:09<00:01, 397.01it/s]Running loglikelihood requests:  99%|█████████▉| 55494/56168 [03:09<00:02, 305.89it/s]Running loglikelihood requests:  99%|█████████▉| 55553/56168 [03:09<00:01, 343.86it/s]Running loglikelihood requests:  99%|█████████▉| 55617/56168 [03:09<00:01, 301.63it/s]Running loglikelihood requests:  99%|█████████▉| 55681/56168 [03:09<00:01, 334.56it/s]Running loglikelihood requests:  99%|█████████▉| 55745/56168 [03:10<00:01, 290.68it/s]Running loglikelihood requests:  99%|█████████▉| 55809/56168 [03:10<00:01, 328.70it/s]Running loglikelihood requests:  99%|█████████▉| 55873/56168 [03:10<00:00, 305.18it/s]Running loglikelihood requests: 100%|█████████▉| 55937/56168 [03:10<00:00, 318.83it/s]Running loglikelihood requests: 100%|█████████▉| 56001/56168 [03:11<00:00, 288.61it/s]Running loglikelihood requests: 100%|█████████▉| 56065/56168 [03:11<00:00, 319.09it/s]Running loglikelihood requests: 100%|█████████▉| 56129/56168 [03:11<00:00, 315.16it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [03:11<00:00, 293.29it/s]
2025-05-15:01:30:32,705 WARNING  [huggingface.py:1353] Failed to get model SHA for /work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent_kl/checkpoint-490 at revision main. Error: Repo id must be in the form 'repo_name' or 'namespace/repo_name': '/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent_kl/checkpoint-490'. Use `repo_type` argument if needed.
2025-05-15:01:30:38,986 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent_kl/checkpoint-490,tokenizer=meta-llama/Meta-Llama-3-8b-Instruct), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.7885|±  |0.0034|
| - humanities                          |      2|none  |      |acc   |↑  |0.7768|±  |0.0060|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.7619|±  |0.0381|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.8667|±  |0.0265|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.9069|±  |0.0204|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.9156|±  |0.0181|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.8678|±  |0.0309|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.8519|±  |0.0343|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.8589|±  |0.0274|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.7341|±  |0.0238|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.6894|±  |0.0155|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.8167|±  |0.0220|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.8488|±  |0.0199|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.7327|±  |0.0113|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.8947|±  |0.0235|
| - other                               |      2|none  |      |acc   |↑  |0.8143|±  |0.0069|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.8400|±  |0.0368|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.8226|±  |0.0235|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.7283|±  |0.0339|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.7300|±  |0.0446|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.8072|±  |0.0265|
|  - management                         |      1|none  |     0|acc   |↑  |0.8350|±  |0.0368|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8846|±  |0.0209|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.8300|±  |0.0378|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.8557|±  |0.0126|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.8235|±  |0.0218|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.7482|±  |0.0259|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.8566|±  |0.0213|
|  - virology                           |      1|none  |     0|acc   |↑  |0.6446|±  |0.0373|
| - social sciences                     |      2|none  |      |acc   |↑  |0.8265|±  |0.0068|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.6930|±  |0.0434|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7828|±  |0.0294|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.9119|±  |0.0205|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.7897|±  |0.0207|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.8571|±  |0.0227|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.8844|±  |0.0137|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.8092|±  |0.0345|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.8317|±  |0.0151|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.8000|±  |0.0383|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.7469|±  |0.0278|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8458|±  |0.0255|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8300|±  |0.0378|
| - stem                                |      2|none  |      |acc   |↑  |0.7434|±  |0.0077|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.6400|±  |0.0482|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.8222|±  |0.0330|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.7237|±  |0.0364|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.7778|±  |0.0348|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.6500|±  |0.0479|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.7300|±  |0.0446|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.6300|±  |0.0485|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.6667|±  |0.0469|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.8800|±  |0.0327|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.7447|±  |0.0285|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.7724|±  |0.0349|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.7540|±  |0.0222|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.8032|±  |0.0226|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.7685|±  |0.0297|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.8000|±  |0.0402|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.6630|±  |0.0288|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.6887|±  |0.0378|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.7778|±  |0.0284|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.7321|±  |0.0420|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.7885|±  |0.0034|
| - humanities     |      2|none  |      |acc   |↑  |0.7768|±  |0.0060|
| - other          |      2|none  |      |acc   |↑  |0.8143|±  |0.0069|
| - social sciences|      2|none  |      |acc   |↑  |0.8265|±  |0.0068|
| - stem           |      2|none  |      |acc   |↑  |0.7434|±  |0.0077|

2025-05-15:01:30:46,506 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-15:01:30:46,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,714 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,744 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,747 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,759 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,860 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,864 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:46,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:47,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,012 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,034 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,063 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,066 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,082 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,086 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,123 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,161 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,165 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,182 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,192 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,212 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,216 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,229 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,237 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:48,247 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,216 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,228 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,237 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,245 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,259 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,615 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,618 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,662 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,716 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,808 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,812 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,820 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,845 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,853 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,857 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,862 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,866 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,870 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,874 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,887 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,891 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,899 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,909 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,909 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,911 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,911 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:49,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,003 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,008 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,020 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,036 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,041 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,070 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,072 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,075 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,077 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,082 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,085 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,107 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,111 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,113 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,118 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,138 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,146 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,148 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,153 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,156 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,158 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,161 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,163 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,166 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,169 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,171 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,180 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,182 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,190 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,192 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,197 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,202 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,207 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,212 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,219 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:50,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:51,202 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:51,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:51,241 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:51,243 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:51,245 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:51,247 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:51,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:51,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,118 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,123 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,130 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,132 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,135 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,140 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,142 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,144 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,146 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,148 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,153 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,162 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,164 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,165 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,167 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,169 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,170 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,172 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,180 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,182 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,184 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,189 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,190 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,198 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,204 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,206 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,207 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,211 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,212 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,215 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,218 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,224 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,228 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,229 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,232 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,237 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,243 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,245 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,247 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,252 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,256 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,260 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,263 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,267 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,268 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,274 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,277 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,279 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,282 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,284 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,287 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,289 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,293 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,294 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,298 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,301 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,302 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,304 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,311 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,312 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,314 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,319 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,320 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,322 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,327 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,330 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,334 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,337 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,342 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,346 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,349 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,351 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,353 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,365 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,370 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,372 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,373 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,375 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,376 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,378 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,380 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,381 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,386 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,388 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,390 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,395 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,398 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,402 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,405 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,408 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,410 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,411 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,416 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,419 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,424 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,428 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,432 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,435 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,438 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,440 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,441 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,443 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,445 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,448 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,454 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,461 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,467 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,469 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,476 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,478 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,479 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,481 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,482 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,485 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,497 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,522 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,528 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,554 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,574 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,645 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,649 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,658 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,661 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:52,664 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:55,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:55,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:30:55,321 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-15:01:30:55,325 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-15:01:30:55,325 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo/checkpoint-150', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-15:01:30:59,005 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-15:01:30:59,855 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:17<00:53, 17.96s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:35<00:35, 17.56s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:51<00:17, 17.05s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:55<00:00, 11.73s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:55<00:00, 13.82s/it]
2025-05-15:01:32:21,046 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,060 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,060 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,060 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,061 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,061 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,061 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,061 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,062 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,062 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,062 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,062 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,062 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,063 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,063 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,063 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,063 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,063 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,064 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,064 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,064 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,064 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,065 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,065 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,065 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,065 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,065 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,066 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,066 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,066 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,066 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,066 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,067 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,067 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,067 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,067 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,067 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,068 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,068 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,068 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,068 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,069 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,069 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,069 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,069 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,069 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,070 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,070 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,070 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,070 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,070 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,071 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,071 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,071 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,071 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,072 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,072 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:32:21,072 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-15:01:32:21,078 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 61%|██████    | 61/100 [00:00<00:00, 583.11it/s]100%|██████████| 100/100 [00:00<00:00, 566.79it/s]
2025-05-15:01:32:21,260 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 22%|██▏       | 68/310 [00:00<00:00, 672.71it/s] 49%|████▊     | 151/310 [00:00<00:00, 760.05it/s] 75%|███████▍  | 232/310 [00:00<00:00, 782.10it/s]100%|██████████| 310/310 [00:00<00:00, 789.87it/s]
2025-05-15:01:32:21,665 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 877.51it/s]100%|██████████| 100/100 [00:00<00:00, 878.67it/s]
2025-05-15:01:32:21,783 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 61%|██████    | 88/145 [00:00<00:00, 872.24it/s]100%|██████████| 145/145 [00:00<00:00, 863.25it/s]
2025-05-15:01:32:21,956 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 875.60it/s]100%|██████████| 100/100 [00:00<00:00, 875.39it/s]
2025-05-15:01:32:22,074 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 43%|████▎     | 88/203 [00:00<00:00, 870.99it/s] 87%|████████▋ | 176/203 [00:00<00:00, 874.60it/s]100%|██████████| 203/203 [00:00<00:00, 866.56it/s]
2025-05-15:01:32:22,315 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 59%|█████▊    | 89/152 [00:00<00:00, 882.32it/s]100%|██████████| 152/152 [00:00<00:00, 885.29it/s]
2025-05-15:01:32:22,492 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 87%|████████▋ | 89/102 [00:00<00:00, 883.91it/s]100%|██████████| 102/102 [00:00<00:00, 883.16it/s]
2025-05-15:01:32:22,612 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 875.00it/s]100%|██████████| 100/100 [00:00<00:00, 874.83it/s]
2025-05-15:01:32:22,730 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 60%|█████▉    | 86/144 [00:00<00:00, 858.84it/s]100%|██████████| 144/144 [00:00<00:00, 866.20it/s]
2025-05-15:01:32:22,901 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 37%|███▋      | 88/235 [00:00<00:00, 879.34it/s] 75%|███████▌  | 177/235 [00:00<00:00, 880.20it/s]100%|██████████| 235/235 [00:00<00:00, 879.82it/s]
2025-05-15:01:32:23,176 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 77%|███████▋  | 86/112 [00:00<00:00, 859.89it/s]100%|██████████| 112/112 [00:00<00:00, 858.39it/s]
2025-05-15:01:32:23,311 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 33%|███▎      | 88/270 [00:00<00:00, 874.12it/s] 65%|██████▌   | 176/270 [00:00<00:00, 871.79it/s] 98%|█████████▊| 264/270 [00:00<00:00, 875.40it/s]100%|██████████| 270/270 [00:00<00:00, 873.80it/s]
2025-05-15:01:32:23,629 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 866.36it/s]100%|██████████| 100/100 [00:00<00:00, 866.49it/s]
2025-05-15:01:32:23,748 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 880.95it/s]100%|██████████| 100/100 [00:00<00:00, 879.25it/s]
2025-05-15:01:32:23,866 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 66%|██████▌   | 89/135 [00:00<00:00, 880.21it/s]100%|██████████| 135/135 [00:00<00:00, 880.95it/s]
2025-05-15:01:32:24,024 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 24%|██▎       | 89/378 [00:00<00:00, 883.93it/s] 47%|████▋     | 178/378 [00:00<00:00, 884.47it/s] 71%|███████   | 267/378 [00:00<00:00, 876.32it/s] 94%|█████████▍| 355/378 [00:00<00:00, 877.13it/s]100%|██████████| 378/378 [00:00<00:00, 878.60it/s]
2025-05-15:01:32:24,467 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 59%|█████▉    | 89/151 [00:00<00:00, 880.75it/s]100%|██████████| 151/151 [00:00<00:00, 881.29it/s]
2025-05-15:01:32:24,644 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 41%|████      | 88/216 [00:00<00:00, 876.08it/s] 81%|████████▏ | 176/216 [00:00<00:00, 878.17it/s]100%|██████████| 216/216 [00:00<00:00, 869.61it/s]
2025-05-15:01:32:24,900 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 33%|███▎      | 88/265 [00:00<00:00, 873.41it/s] 67%|██████▋   | 177/265 [00:00<00:00, 878.77it/s]100%|██████████| 265/265 [00:00<00:00, 879.61it/s]
2025-05-15:01:32:25,210 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 877.27it/s]100%|██████████| 100/100 [00:00<00:00, 877.67it/s]
2025-05-15:01:32:25,328 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 85%|████████▌ | 88/103 [00:00<00:00, 877.27it/s]100%|██████████| 103/103 [00:00<00:00, 877.26it/s]
2025-05-15:01:32:25,449 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 28%|██▊       | 86/306 [00:00<00:00, 858.45it/s] 57%|█████▋    | 174/306 [00:00<00:00, 871.00it/s] 86%|████████▌ | 263/306 [00:00<00:00, 877.15it/s]100%|██████████| 306/306 [00:00<00:00, 873.70it/s]
2025-05-15:01:32:25,810 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 50%|█████     | 87/173 [00:00<00:00, 863.57it/s]100%|██████████| 173/173 [00:00<00:00, 868.63it/s]
2025-05-15:01:32:26,016 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 53%|█████▎    | 88/166 [00:00<00:00, 874.41it/s]100%|██████████| 166/166 [00:00<00:00, 875.79it/s]
2025-05-15:01:32:26,212 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 32%|███▏      | 86/272 [00:00<00:00, 854.05it/s] 64%|██████▎   | 173/272 [00:00<00:00, 860.36it/s] 96%|█████████▌| 260/272 [00:00<00:00, 862.99it/s]100%|██████████| 272/272 [00:00<00:00, 860.15it/s]
2025-05-15:01:32:26,538 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 11%|█         | 87/783 [00:00<00:00, 861.95it/s] 22%|██▏       | 174/783 [00:00<00:00, 852.67it/s] 33%|███▎      | 260/783 [00:00<00:00, 854.96it/s] 44%|████▍     | 347/783 [00:00<00:00, 858.73it/s] 55%|█████▌    | 433/783 [00:00<00:00, 851.81it/s] 66%|██████▋   | 519/783 [00:00<00:00, 853.32it/s] 77%|███████▋  | 605/783 [00:00<00:00, 854.24it/s] 89%|████████▊ | 693/783 [00:00<00:00, 860.65it/s]100%|█████████▉| 780/783 [00:00<00:00, 859.16it/s]100%|██████████| 783/783 [00:00<00:00, 856.82it/s]
2025-05-15:01:32:27,477 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 86%|████████▌ | 86/100 [00:00<00:00, 856.19it/s]100%|██████████| 100/100 [00:00<00:00, 855.10it/s]
2025-05-15:01:32:27,599 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 84%|████████▍ | 84/100 [00:00<00:00, 838.62it/s]100%|██████████| 100/100 [00:00<00:00, 839.34it/s]
2025-05-15:01:32:27,722 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 30%|███       | 86/282 [00:00<00:00, 859.83it/s] 61%|██████    | 172/282 [00:00<00:00, 855.67it/s] 91%|█████████▏| 258/282 [00:00<00:00, 843.92it/s]100%|██████████| 282/282 [00:00<00:00, 847.07it/s]
2025-05-15:01:32:28,064 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:02, 77.36it/s] 45%|████▍     | 105/234 [00:00<00:00, 364.38it/s] 81%|████████  | 189/234 [00:00<00:00, 527.27it/s]100%|██████████| 234/234 [00:00<00:00, 468.49it/s]
2025-05-15:01:32:28,572 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 38%|███▊      | 84/223 [00:00<00:00, 831.83it/s] 75%|███████▌  | 168/223 [00:00<00:00, 835.63it/s]100%|██████████| 223/223 [00:00<00:00, 822.02it/s]
2025-05-15:01:32:28,852 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 76%|███████▋  | 84/110 [00:00<00:00, 831.94it/s]100%|██████████| 110/110 [00:00<00:00, 831.94it/s]
2025-05-15:01:32:28,989 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 41%|████▏     | 83/201 [00:00<00:00, 828.13it/s] 83%|████████▎ | 167/201 [00:00<00:00, 832.41it/s]100%|██████████| 201/201 [00:00<00:00, 836.19it/s]
2025-05-15:01:32:29,236 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 42%|████▏     | 84/198 [00:00<00:00, 833.94it/s] 85%|████████▍ | 168/198 [00:00<00:00, 836.19it/s]100%|██████████| 198/198 [00:00<00:00, 832.84it/s]
2025-05-15:01:32:29,481 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 34%|███▍      | 84/245 [00:00<00:00, 836.50it/s] 69%|██████▊   | 168/245 [00:00<00:00, 836.19it/s]100%|██████████| 245/245 [00:00<00:00, 838.70it/s]
2025-05-15:01:32:29,783 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 16%|█▌        | 87/545 [00:00<00:00, 867.01it/s] 32%|███▏      | 174/545 [00:00<00:00, 839.56it/s] 48%|████▊     | 259/545 [00:00<00:00, 839.53it/s] 63%|██████▎   | 343/545 [00:00<00:00, 834.04it/s] 78%|███████▊  | 427/545 [00:00<00:00, 835.05it/s] 94%|█████████▍| 511/545 [00:00<00:00, 830.46it/s]100%|██████████| 545/545 [00:00<00:00, 834.45it/s]
2025-05-15:01:32:30,454 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 84%|████████▍ | 84/100 [00:00<00:00, 836.41it/s]100%|██████████| 100/100 [00:00<00:00, 836.91it/s]
2025-05-15:01:32:30,578 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 17%|█▋        | 67/390 [00:00<00:00, 663.43it/s] 38%|███▊      | 150/390 [00:00<00:00, 756.86it/s] 60%|██████    | 234/390 [00:00<00:00, 790.48it/s] 82%|████████▏ | 318/390 [00:00<00:00, 809.50it/s]100%|██████████| 390/390 [00:00<00:00, 793.37it/s]
2025-05-15:01:32:31,084 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 37%|███▋      | 87/238 [00:00<00:00, 861.97it/s] 73%|███████▎  | 174/238 [00:00<00:00, 852.06it/s]100%|██████████| 238/238 [00:00<00:00, 849.28it/s]
2025-05-15:01:32:31,373 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 74%|███████▎  | 84/114 [00:00<00:00, 836.04it/s]100%|██████████| 114/114 [00:00<00:00, 824.57it/s]
2025-05-15:01:32:31,515 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 14%|█▎        | 84/612 [00:00<00:00, 834.67it/s] 28%|██▊       | 169/612 [00:00<00:00, 838.31it/s] 42%|████▏     | 255/612 [00:00<00:00, 847.47it/s] 56%|█████▌    | 342/612 [00:00<00:00, 852.47it/s] 70%|██████▉   | 428/612 [00:00<00:00, 839.03it/s] 84%|████████▎ | 512/612 [00:00<00:00, 834.57it/s] 98%|█████████▊| 597/612 [00:00<00:00, 837.39it/s]100%|██████████| 612/612 [00:00<00:00, 839.24it/s]
2025-05-15:01:32:32,265 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 60%|██████    | 79/131 [00:00<00:00, 783.15it/s]100%|██████████| 131/131 [00:00<00:00, 811.23it/s]
2025-05-15:01:32:32,432 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 45%|████▌     | 87/193 [00:00<00:00, 864.43it/s] 90%|█████████ | 174/193 [00:00<00:00, 856.03it/s]100%|██████████| 193/193 [00:00<00:00, 856.47it/s]
2025-05-15:01:32:32,665 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  9%|▉         | 85/895 [00:00<00:00, 848.04it/s] 19%|█▉        | 170/895 [00:00<00:00, 843.63it/s] 29%|██▊       | 257/895 [00:00<00:00, 855.52it/s] 38%|███▊      | 344/895 [00:00<00:00, 858.27it/s] 48%|████▊     | 430/895 [00:00<00:00, 858.45it/s] 58%|█████▊    | 517/895 [00:00<00:00, 860.05it/s] 67%|██████▋   | 604/895 [00:00<00:00, 857.07it/s] 77%|███████▋  | 690/895 [00:00<00:00, 850.03it/s] 87%|████████▋ | 776/895 [00:00<00:00, 852.07it/s] 96%|█████████▋| 862/895 [00:01<00:00, 852.08it/s]100%|██████████| 895/895 [00:01<00:00, 853.03it/s]
2025-05-15:01:32:33,744 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 34%|███▍      | 81/237 [00:00<00:00, 803.35it/s] 70%|██████▉   | 165/237 [00:00<00:00, 820.47it/s]100%|██████████| 237/237 [00:00<00:00, 819.61it/s]
2025-05-15:01:32:34,042 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 50%|█████     | 83/165 [00:00<00:00, 821.34it/s]100%|██████████| 165/165 [00:00<00:00, 835.38it/s]
2025-05-15:01:32:34,247 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 28%|██▊       | 86/311 [00:00<00:00, 855.29it/s] 55%|█████▌    | 172/311 [00:00<00:00, 852.12it/s] 83%|████████▎ | 258/311 [00:00<00:00, 849.90it/s]100%|██████████| 311/311 [00:00<00:00, 846.14it/s]
2025-05-15:01:32:34,626 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 24%|██▎       | 82/346 [00:00<00:00, 814.68it/s] 48%|████▊     | 166/346 [00:00<00:00, 828.54it/s] 72%|███████▏  | 249/346 [00:00<00:00, 818.29it/s] 96%|█████████▌| 331/346 [00:00<00:00, 809.75it/s]100%|██████████| 346/346 [00:00<00:00, 812.77it/s]
2025-05-15:01:32:35,064 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 42%|████▏     | 85/204 [00:00<00:00, 843.81it/s] 83%|████████▎ | 170/204 [00:00<00:00, 815.99it/s]100%|██████████| 204/204 [00:00<00:00, 816.64it/s]
2025-05-15:01:32:35,324 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 68%|██████▊   | 82/121 [00:00<00:00, 814.54it/s]100%|██████████| 121/121 [00:00<00:00, 803.60it/s]
2025-05-15:01:32:35,480 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  5%|▌         | 84/1534 [00:00<00:01, 838.39it/s] 11%|█         | 171/1534 [00:00<00:01, 854.87it/s] 17%|█▋        | 257/1534 [00:00<00:01, 834.15it/s] 22%|██▏       | 341/1534 [00:00<00:01, 823.75it/s] 28%|██▊       | 424/1534 [00:00<00:01, 799.95it/s] 33%|███▎      | 505/1534 [00:00<00:01, 795.37it/s] 38%|███▊      | 585/1534 [00:00<00:01, 792.75it/s] 43%|████▎     | 667/1534 [00:00<00:01, 799.63it/s] 49%|████▉     | 749/1534 [00:00<00:00, 805.63it/s] 54%|█████▍    | 832/1534 [00:01<00:00, 810.69it/s] 60%|█████▉    | 916/1534 [00:01<00:00, 818.52it/s] 65%|██████▌   | 998/1534 [00:01<00:00, 699.13it/s] 70%|██████▉   | 1071/1534 [00:01<00:00, 669.12it/s] 74%|███████▍  | 1141/1534 [00:01<00:00, 633.94it/s] 79%|███████▊  | 1207/1534 [00:01<00:00, 572.50it/s] 83%|████████▎ | 1271/1534 [00:01<00:00, 584.48it/s] 87%|████████▋ | 1336/1534 [00:01<00:00, 601.47it/s] 91%|█████████ | 1398/1534 [00:01<00:00, 595.98it/s] 96%|█████████▌| 1470/1534 [00:02<00:00, 630.11it/s]100%|██████████| 1534/1534 [00:02<00:00, 704.06it/s]
2025-05-15:01:32:37,712 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 34%|███▍      | 58/171 [00:00<00:00, 579.36it/s] 71%|███████   | 121/171 [00:00<00:00, 593.65it/s]100%|██████████| 171/171 [00:00<00:00, 592.92it/s]
2025-05-15:01:32:38,009 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 50%|█████     | 54/108 [00:00<00:00, 486.40it/s]100%|██████████| 108/108 [00:00<00:00, 618.56it/s]
2025-05-15:01:32:38,188 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 35%|███▍      | 44/126 [00:00<00:00, 437.89it/s] 91%|█████████▏| 115/126 [00:00<00:00, 588.43it/s]100%|██████████| 126/126 [00:00<00:00, 536.33it/s]
2025-05-15:01:32:38,431 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 20%|██        | 65/324 [00:00<00:00, 649.13it/s] 40%|████      | 130/324 [00:00<00:00, 211.98it/s] 63%|██████▎   | 203/324 [00:00<00:00, 323.24it/s] 88%|████████▊ | 284/324 [00:00<00:00, 437.44it/s]100%|██████████| 324/324 [00:00<00:00, 403.74it/s]
2025-05-15:01:32:39,274 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 35%|███▍      | 57/163 [00:00<00:00, 568.21it/s] 78%|███████▊  | 127/163 [00:00<00:00, 617.19it/s]100%|██████████| 163/163 [00:00<00:00, 611.63it/s]
2025-05-15:01:32:39,549 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:03<52:00:45,  3.33s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:04<57:33, 16.25it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:06<36:04, 25.89it/s]Running loglikelihood requests:   0%|          | 152/56168 [00:06<28:41, 32.54it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:07<29:35, 31.53it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:09<25:01, 37.23it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:10<22:56, 40.58it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:11<21:36, 43.03it/s]Running loglikelihood requests:   1%|          | 434/56168 [00:12<16:03, 57.85it/s]Running loglikelihood requests:   1%|          | 453/56168 [00:13<21:41, 42.82it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:14<21:53, 42.38it/s]Running loglikelihood requests:   1%|          | 558/56168 [00:14<16:09, 57.33it/s]Running loglikelihood requests:   1%|          | 579/56168 [00:16<22:34, 41.05it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:17<20:28, 45.20it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:18<17:59, 51.36it/s]Running loglikelihood requests:   1%|▏         | 768/56168 [00:18<12:18, 75.05it/s]Running loglikelihood requests:   1%|▏         | 794/56168 [00:19<16:38, 55.46it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:20<19:18, 47.75it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:21<17:37, 52.28it/s]Running loglikelihood requests:   2%|▏         | 952/56168 [00:21<12:31, 73.48it/s]Running loglikelihood requests:   2%|▏         | 977/56168 [00:22<17:12, 53.43it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:23<17:18, 53.08it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:24<16:32, 55.52it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:25<15:29, 59.22it/s]Running loglikelihood requests:   2%|▏         | 1201/56168 [00:25<11:46, 77.83it/s]Running loglikelihood requests:   2%|▏         | 1223/56168 [00:26<16:12, 56.50it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:27<15:35, 58.66it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:28<15:06, 60.48it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:29<14:58, 60.92it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:30<14:40, 62.10it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:31<14:29, 62.82it/s]Running loglikelihood requests:   3%|▎         | 1553/56168 [00:31<13:36, 66.92it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:32<14:55, 60.96it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:33<14:45, 61.58it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:34<14:30, 62.52it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:35<13:43, 66.02it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:36<13:38, 66.35it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:37<13:37, 66.38it/s]Running loglikelihood requests:   4%|▎         | 1968/56168 [00:37<10:44, 84.14it/s]Running loglikelihood requests:   4%|▎         | 1987/56168 [00:38<14:40, 61.51it/s]Running loglikelihood requests:   4%|▎         | 2036/56168 [00:38<10:38, 84.80it/s]Running loglikelihood requests:   4%|▎         | 2060/56168 [00:39<14:59, 60.12it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:40<14:27, 62.33it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:41<13:42, 65.68it/s]Running loglikelihood requests:   4%|▍         | 2229/56168 [00:41<09:59, 89.96it/s]Running loglikelihood requests:   4%|▍         | 2254/56168 [00:42<13:16, 67.69it/s]Running loglikelihood requests:   4%|▍         | 2302/56168 [00:42<09:35, 93.55it/s]Running loglikelihood requests:   4%|▍         | 2329/56168 [00:42<13:00, 68.97it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:43<14:43, 60.88it/s]Running loglikelihood requests:   4%|▍         | 2418/56168 [00:43<10:14, 87.50it/s]Running loglikelihood requests:   4%|▍         | 2444/56168 [00:44<14:32, 61.55it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:45<14:23, 62.16it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:46<13:16, 67.29it/s]Running loglikelihood requests:   5%|▍         | 2607/56168 [00:46<10:00, 89.17it/s]Running loglikelihood requests:   5%|▍         | 2630/56168 [00:47<13:35, 65.65it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:48<13:25, 66.35it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:49<12:39, 70.36it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:49<11:42, 75.95it/s]Running loglikelihood requests:   5%|▌         | 2877/56168 [00:49<08:27, 104.92it/s]Running loglikelihood requests:   5%|▌         | 2903/56168 [00:50<11:37, 76.40it/s] Running loglikelihood requests:   5%|▌         | 2945/56168 [00:51<12:27, 71.19it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:52<11:39, 76.01it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:53<11:46, 75.14it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:53<11:19, 78.05it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:54<11:17, 78.22it/s]Running loglikelihood requests:   6%|▌         | 3246/56168 [00:54<09:01, 97.76it/s]Running loglikelihood requests:   6%|▌         | 3266/56168 [00:55<11:57, 73.71it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:56<11:16, 78.15it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:56<11:12, 78.43it/s]Running loglikelihood requests:   6%|▌         | 3445/56168 [00:57<08:26, 104.03it/s]Running loglikelihood requests:   6%|▌         | 3469/56168 [00:57<11:22, 77.21it/s] Running loglikelihood requests:   6%|▋         | 3521/56168 [00:58<12:08, 72.31it/s]Running loglikelihood requests:   6%|▋         | 3569/56168 [00:58<08:59, 97.56it/s]Running loglikelihood requests:   6%|▋         | 3594/56168 [00:59<12:29, 70.18it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [01:00<12:24, 70.50it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [01:01<11:47, 74.17it/s]Running loglikelihood requests:   7%|▋         | 3754/56168 [01:01<09:17, 93.96it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [01:01<12:23, 70.51it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [01:02<11:36, 75.15it/s]Running loglikelihood requests:   7%|▋         | 3901/56168 [01:02<08:02, 108.27it/s]Running loglikelihood requests:   7%|▋         | 3928/56168 [01:03<10:27, 83.22it/s] Running loglikelihood requests:   7%|▋         | 3969/56168 [01:04<11:26, 76.08it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [01:04<10:40, 81.43it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [01:05<10:32, 82.36it/s]Running loglikelihood requests:   7%|▋         | 4133/56168 [01:05<08:43, 99.32it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [01:06<10:59, 78.91it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [01:07<10:48, 80.12it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [01:07<10:15, 84.30it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [01:08<09:56, 86.91it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [01:09<09:27, 91.26it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [01:09<09:14, 93.22it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [01:10<09:03, 95.04it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [01:10<08:54, 96.50it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [01:11<08:44, 98.24it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [01:12<08:39, 99.04it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [01:12<08:53, 96.24it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [01:13<08:40, 98.47it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [01:14<08:36, 99.18it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [01:14<08:39, 98.45it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [01:15<09:05, 93.69it/s]Running loglikelihood requests:   9%|▉         | 5114/56168 [01:15<06:59, 121.67it/s]Running loglikelihood requests:   9%|▉         | 5138/56168 [01:16<09:08, 93.04it/s] Running loglikelihood requests:   9%|▉         | 5185/56168 [01:16<09:40, 87.87it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [01:17<09:13, 92.03it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [01:18<09:03, 93.55it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [01:18<09:02, 93.65it/s]Running loglikelihood requests:  10%|▉         | 5425/56168 [01:19<07:09, 118.05it/s]Running loglikelihood requests:  10%|▉         | 5447/56168 [01:19<09:25, 89.61it/s] Running loglikelihood requests:  10%|▉         | 5505/56168 [01:20<08:56, 94.37it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [01:20<08:26, 99.89it/s]Running loglikelihood requests:  10%|█         | 5628/56168 [01:20<06:12, 135.56it/s]Running loglikelihood requests:  10%|█         | 5655/56168 [01:21<08:30, 98.91it/s] Running loglikelihood requests:  10%|█         | 5697/56168 [01:21<08:53, 94.58it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [01:22<08:49, 95.20it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [01:23<08:19, 100.70it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [01:23<07:38, 109.64it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [01:24<07:26, 112.53it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [01:24<07:22, 113.39it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [01:25<07:23, 112.89it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [01:25<07:15, 114.77it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [01:26<07:23, 112.69it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [01:27<07:19, 113.63it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [01:27<07:16, 114.17it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [01:28<07:33, 109.66it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [01:28<07:16, 113.78it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [01:29<06:58, 118.65it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [01:29<06:43, 122.83it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [01:30<07:05, 116.37it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [01:30<07:07, 115.71it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [01:31<06:59, 117.81it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [01:31<06:55, 118.62it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [01:32<06:46, 121.06it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [01:32<06:39, 123.14it/s]Running loglikelihood requests:  12%|█▏        | 6994/56168 [01:33<06:28, 126.46it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [01:33<07:39, 106.99it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [01:34<07:23, 110.62it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [01:34<07:01, 116.20it/s]Running loglikelihood requests:  13%|█▎        | 7207/56168 [01:34<05:58, 136.73it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [01:35<07:14, 112.56it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [01:35<06:28, 125.81it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [01:36<06:39, 122.05it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [01:36<06:33, 123.81it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [01:37<06:23, 127.03it/s]Running loglikelihood requests:  13%|█▎        | 7503/56168 [01:37<06:29, 124.81it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [01:37<06:29, 124.68it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [01:38<05:59, 134.93it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:38<05:56, 135.96it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:38<05:35, 144.51it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:39<05:51, 137.51it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:39<05:33, 145.00it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:40<05:19, 151.08it/s]Running loglikelihood requests:  14%|█▍        | 7983/56168 [01:40<04:35, 175.06it/s]Running loglikelihood requests:  14%|█▍        | 8005/56168 [01:40<05:51, 136.95it/s]Running loglikelihood requests:  14%|█▍        | 8058/56168 [01:40<04:26, 180.86it/s]Running loglikelihood requests:  14%|█▍        | 8086/56168 [01:41<06:10, 129.66it/s]Running loglikelihood requests:  14%|█▍        | 8108/56168 [01:41<05:58, 134.13it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:41<07:40, 104.26it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:42<06:46, 118.08it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:42<06:04, 131.48it/s]Running loglikelihood requests:  15%|█▍        | 8297/56168 [01:42<05:02, 158.40it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:43<06:36, 120.59it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:43<07:01, 113.41it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:44<06:02, 131.51it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:44<05:56, 133.50it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:45<05:30, 143.79it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:45<05:21, 147.74it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:45<05:17, 149.30it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:46<05:06, 154.75it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:46<04:58, 158.41it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:47<05:05, 154.98it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:47<05:13, 150.64it/s]Running loglikelihood requests:  16%|█▌        | 8997/56168 [01:47<04:37, 170.01it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:47<05:28, 143.73it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:48<05:15, 149.32it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:48<04:53, 160.33it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:49<04:39, 168.26it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:49<04:49, 162.07it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:49<04:27, 174.91it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:50<04:40, 166.56it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:50<04:24, 176.77it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:50<04:47, 162.47it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:51<04:41, 165.22it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:51<04:35, 168.58it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:51<04:16, 180.81it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:52<04:17, 180.08it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:52<04:12, 183.18it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:52<04:09, 185.34it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:53<04:20, 177.15it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:53<03:58, 193.78it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:54<04:11, 182.88it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:54<04:06, 186.82it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:54<04:22, 175.04it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:55<04:21, 175.61it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:55<04:37, 165.08it/s]Running loglikelihood requests:  19%|█▊        | 10419/56168 [01:55<03:52, 196.96it/s]Running loglikelihood requests:  19%|█▊        | 10445/56168 [01:56<05:01, 151.73it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:56<05:22, 141.57it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:56<05:11, 146.59it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:57<04:45, 159.50it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:57<04:54, 154.62it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:58<04:56, 153.18it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:58<04:52, 154.95it/s]Running loglikelihood requests:  19%|█▉        | 10834/56168 [01:58<04:52, 155.23it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:59<05:21, 141.02it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:59<05:01, 149.91it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:59<04:51, 154.70it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [02:00<04:27, 168.60it/s]Running loglikelihood requests:  20%|█▉        | 11132/56168 [02:00<03:29, 214.80it/s]Running loglikelihood requests:  20%|█▉        | 11162/56168 [02:00<04:11, 178.72it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [02:00<05:13, 143.60it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [02:01<05:06, 146.58it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [02:01<05:02, 148.22it/s]Running loglikelihood requests:  20%|██        | 11374/56168 [02:01<04:11, 178.37it/s]Running loglikelihood requests:  20%|██        | 11399/56168 [02:02<05:14, 142.29it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [02:02<05:05, 146.35it/s]Running loglikelihood requests:  20%|██        | 11478/56168 [02:02<04:52, 152.91it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [02:03<05:08, 144.96it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [02:03<05:01, 148.08it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [02:03<04:51, 152.95it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [02:04<04:19, 171.33it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [02:04<04:43, 156.80it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [02:04<04:36, 160.52it/s]Running loglikelihood requests:  21%|██        | 11905/56168 [02:05<04:32, 162.17it/s]Running loglikelihood requests:  21%|██▏       | 11969/56168 [02:05<04:25, 166.63it/s]Running loglikelihood requests:  21%|██▏       | 12033/56168 [02:06<04:15, 172.63it/s]Running loglikelihood requests:  21%|██▏       | 12056/56168 [02:06<04:07, 178.38it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [02:06<04:47, 153.17it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [02:06<04:33, 160.94it/s]Running loglikelihood requests:  22%|██▏       | 12215/56168 [02:07<03:36, 203.25it/s]Running loglikelihood requests:  22%|██▏       | 12243/56168 [02:07<04:29, 163.11it/s]Running loglikelihood requests:  22%|██▏       | 12289/56168 [02:07<04:58, 147.14it/s]Running loglikelihood requests:  22%|██▏       | 12353/56168 [02:08<04:31, 161.48it/s]Running loglikelihood requests:  22%|██▏       | 12417/56168 [02:08<04:39, 156.28it/s]Running loglikelihood requests:  22%|██▏       | 12481/56168 [02:08<04:18, 169.21it/s]Running loglikelihood requests:  22%|██▏       | 12545/56168 [02:09<04:15, 170.57it/s]Running loglikelihood requests:  22%|██▏       | 12609/56168 [02:09<04:22, 165.85it/s]Running loglikelihood requests:  23%|██▎       | 12673/56168 [02:09<04:00, 180.57it/s]Running loglikelihood requests:  23%|██▎       | 12737/56168 [02:10<04:11, 172.68it/s]Running loglikelihood requests:  23%|██▎       | 12801/56168 [02:10<04:01, 179.92it/s]Running loglikelihood requests:  23%|██▎       | 12865/56168 [02:10<04:03, 178.17it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [02:11<04:17, 168.19it/s]Running loglikelihood requests:  23%|██▎       | 12993/56168 [02:11<03:53, 184.77it/s]Running loglikelihood requests:  23%|██▎       | 13057/56168 [02:12<04:07, 174.48it/s]Running loglikelihood requests:  23%|██▎       | 13121/56168 [02:12<03:50, 187.12it/s]Running loglikelihood requests:  23%|██▎       | 13185/56168 [02:12<03:53, 184.21it/s]Running loglikelihood requests:  24%|██▎       | 13249/56168 [02:13<03:48, 187.93it/s]Running loglikelihood requests:  24%|██▎       | 13290/56168 [02:13<03:22, 211.81it/s]Running loglikelihood requests:  24%|██▎       | 13316/56168 [02:13<04:26, 160.50it/s]Running loglikelihood requests:  24%|██▍       | 13361/56168 [02:13<03:37, 196.94it/s]Running loglikelihood requests:  24%|██▍       | 13389/56168 [02:13<04:42, 151.24it/s]Running loglikelihood requests:  24%|██▍       | 13441/56168 [02:14<05:03, 140.58it/s]Running loglikelihood requests:  24%|██▍       | 13477/56168 [02:14<04:17, 166.10it/s]Running loglikelihood requests:  24%|██▍       | 13505/56168 [02:14<04:56, 143.70it/s]Running loglikelihood requests:  24%|██▍       | 13562/56168 [02:14<03:30, 202.14it/s]Running loglikelihood requests:  24%|██▍       | 13592/56168 [02:15<04:23, 161.31it/s]Running loglikelihood requests:  24%|██▍       | 13633/56168 [02:15<05:08, 137.98it/s]Running loglikelihood requests:  24%|██▍       | 13697/56168 [02:15<04:39, 152.09it/s]Running loglikelihood requests:  24%|██▍       | 13761/56168 [02:16<04:09, 169.72it/s]Running loglikelihood requests:  25%|██▍       | 13825/56168 [02:16<04:01, 175.05it/s]Running loglikelihood requests:  25%|██▍       | 13878/56168 [02:16<03:16, 215.52it/s]Running loglikelihood requests:  25%|██▍       | 13907/56168 [02:17<03:59, 176.39it/s]Running loglikelihood requests:  25%|██▍       | 13953/56168 [02:17<04:31, 155.31it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [02:17<04:16, 164.08it/s]Running loglikelihood requests:  25%|██▌       | 14081/56168 [02:18<03:55, 178.82it/s]Running loglikelihood requests:  25%|██▌       | 14145/56168 [02:18<04:02, 173.34it/s]Running loglikelihood requests:  25%|██▌       | 14209/56168 [02:18<04:12, 165.88it/s]Running loglikelihood requests:  25%|██▌       | 14273/56168 [02:19<04:03, 171.79it/s]Running loglikelihood requests:  26%|██▌       | 14337/56168 [02:19<04:06, 169.49it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [02:19<03:59, 174.64it/s]Running loglikelihood requests:  26%|██▌       | 14456/56168 [02:20<03:16, 212.31it/s]Running loglikelihood requests:  26%|██▌       | 14484/56168 [02:20<03:51, 180.38it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [02:20<04:18, 161.15it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [02:20<03:37, 191.47it/s]Running loglikelihood requests:  26%|██▌       | 14657/56168 [02:21<04:06, 168.44it/s]Running loglikelihood requests:  26%|██▌       | 14721/56168 [02:21<03:37, 190.29it/s]Running loglikelihood requests:  26%|██▋       | 14785/56168 [02:22<03:58, 173.18it/s]Running loglikelihood requests:  26%|██▋       | 14849/56168 [02:22<03:44, 184.03it/s]Running loglikelihood requests:  27%|██▋       | 14893/56168 [02:22<03:14, 212.44it/s]Running loglikelihood requests:  27%|██▋       | 14920/56168 [02:22<03:42, 184.97it/s]Running loglikelihood requests:  27%|██▋       | 14977/56168 [02:23<04:08, 166.03it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [02:23<03:44, 183.15it/s]Running loglikelihood requests:  27%|██▋       | 15105/56168 [02:23<03:57, 173.24it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [02:24<03:39, 186.59it/s]Running loglikelihood requests:  27%|██▋       | 15230/56168 [02:24<02:53, 235.56it/s]Running loglikelihood requests:  27%|██▋       | 15262/56168 [02:24<03:59, 170.99it/s]Running loglikelihood requests:  27%|██▋       | 15297/56168 [02:24<04:47, 142.23it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [02:25<04:30, 150.72it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [02:25<04:16, 158.68it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [02:25<03:44, 181.26it/s]Running loglikelihood requests:  28%|██▊       | 15510/56168 [02:26<03:46, 179.54it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [02:26<04:15, 158.77it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [02:26<03:55, 172.42it/s]Running loglikelihood requests:  28%|██▊       | 15681/56168 [02:27<03:53, 173.30it/s]Running loglikelihood requests:  28%|██▊       | 15745/56168 [02:27<03:45, 179.00it/s]Running loglikelihood requests:  28%|██▊       | 15766/56168 [02:27<03:42, 181.89it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [02:27<04:16, 157.54it/s]Running loglikelihood requests:  28%|██▊       | 15873/56168 [02:28<04:00, 167.79it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [02:28<04:08, 161.74it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [02:29<04:00, 166.96it/s]Running loglikelihood requests:  29%|██▊       | 16065/56168 [02:29<04:03, 164.76it/s]Running loglikelihood requests:  29%|██▊       | 16118/56168 [02:29<03:17, 202.68it/s]Running loglikelihood requests:  29%|██▊       | 16146/56168 [02:29<04:19, 154.14it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [02:30<04:35, 144.94it/s]Running loglikelihood requests:  29%|██▉       | 16244/56168 [02:30<03:34, 185.70it/s]Running loglikelihood requests:  29%|██▉       | 16272/56168 [02:30<04:39, 142.84it/s]Running loglikelihood requests:  29%|██▉       | 16321/56168 [02:31<04:47, 138.42it/s]Running loglikelihood requests:  29%|██▉       | 16365/56168 [02:31<03:50, 172.95it/s]Running loglikelihood requests:  29%|██▉       | 16391/56168 [02:31<04:42, 140.77it/s]Running loglikelihood requests:  29%|██▉       | 16444/56168 [02:31<03:27, 191.76it/s]Running loglikelihood requests:  29%|██▉       | 16474/56168 [02:32<04:36, 143.65it/s]Running loglikelihood requests:  29%|██▉       | 16513/56168 [02:32<04:24, 149.69it/s]Running loglikelihood requests:  30%|██▉       | 16577/56168 [02:32<04:25, 148.93it/s]Running loglikelihood requests:  30%|██▉       | 16641/56168 [02:33<04:07, 159.60it/s]Running loglikelihood requests:  30%|██▉       | 16690/56168 [02:33<03:20, 197.12it/s]Running loglikelihood requests:  30%|██▉       | 16718/56168 [02:33<04:23, 149.55it/s]Running loglikelihood requests:  30%|██▉       | 16769/56168 [02:33<04:29, 146.08it/s]Running loglikelihood requests:  30%|██▉       | 16816/56168 [02:34<03:33, 184.04it/s]Running loglikelihood requests:  30%|██▉       | 16844/56168 [02:34<04:38, 141.02it/s]Running loglikelihood requests:  30%|███       | 16897/56168 [02:34<04:35, 142.74it/s]Running loglikelihood requests:  30%|███       | 16943/56168 [02:34<03:37, 180.00it/s]Running loglikelihood requests:  30%|███       | 16970/56168 [02:35<04:45, 137.10it/s]Running loglikelihood requests:  30%|███       | 17025/56168 [02:35<04:21, 149.73it/s]Running loglikelihood requests:  30%|███       | 17077/56168 [02:35<03:18, 196.47it/s]Running loglikelihood requests:  30%|███       | 17107/56168 [02:35<03:36, 180.67it/s]Running loglikelihood requests:  31%|███       | 17153/56168 [02:36<03:46, 172.31it/s]Running loglikelihood requests:  31%|███       | 17217/56168 [02:36<03:51, 167.95it/s]Running loglikelihood requests:  31%|███       | 17281/56168 [02:37<03:55, 165.41it/s]Running loglikelihood requests:  31%|███       | 17345/56168 [02:37<03:51, 167.80it/s]Running loglikelihood requests:  31%|███       | 17395/56168 [02:37<03:09, 204.96it/s]Running loglikelihood requests:  31%|███       | 17423/56168 [02:37<04:09, 155.40it/s]Running loglikelihood requests:  31%|███       | 17473/56168 [02:38<04:20, 148.79it/s]Running loglikelihood requests:  31%|███       | 17526/56168 [02:38<03:19, 193.28it/s]Running loglikelihood requests:  31%|███▏      | 17556/56168 [02:38<04:23, 146.66it/s]Running loglikelihood requests:  31%|███▏      | 17601/56168 [02:39<04:36, 139.47it/s]Running loglikelihood requests:  31%|███▏      | 17621/56168 [02:39<04:31, 141.74it/s]Running loglikelihood requests:  31%|███▏      | 17665/56168 [02:39<04:40, 137.29it/s]Running loglikelihood requests:  32%|███▏      | 17729/56168 [02:39<04:20, 147.64it/s]Running loglikelihood requests:  32%|███▏      | 17784/56168 [02:40<03:18, 193.77it/s]Running loglikelihood requests:  32%|███▏      | 17811/56168 [02:40<04:20, 147.20it/s]Running loglikelihood requests:  32%|███▏      | 17857/56168 [02:40<03:59, 160.21it/s]Running loglikelihood requests:  32%|███▏      | 17921/56168 [02:40<03:40, 173.37it/s]Running loglikelihood requests:  32%|███▏      | 17985/56168 [02:41<03:17, 193.43it/s]Running loglikelihood requests:  32%|███▏      | 18041/56168 [02:41<02:37, 242.23it/s]Running loglikelihood requests:  32%|███▏      | 18073/56168 [02:41<03:23, 187.50it/s]Running loglikelihood requests:  32%|███▏      | 18113/56168 [02:41<03:38, 174.45it/s]Running loglikelihood requests:  32%|███▏      | 18164/56168 [02:42<02:51, 221.82it/s]Running loglikelihood requests:  32%|███▏      | 18195/56168 [02:42<03:55, 161.26it/s]Running loglikelihood requests:  32%|███▏      | 18241/56168 [02:42<04:06, 154.12it/s]Running loglikelihood requests:  33%|███▎      | 18305/56168 [02:43<03:43, 169.79it/s]Running loglikelihood requests:  33%|███▎      | 18369/56168 [02:43<03:50, 164.27it/s]Running loglikelihood requests:  33%|███▎      | 18433/56168 [02:43<03:23, 185.84it/s]Running loglikelihood requests:  33%|███▎      | 18485/56168 [02:43<02:46, 226.05it/s]Running loglikelihood requests:  33%|███▎      | 18515/56168 [02:44<03:46, 165.93it/s]Running loglikelihood requests:  33%|███▎      | 18561/56168 [02:44<03:53, 161.39it/s]Running loglikelihood requests:  33%|███▎      | 18582/56168 [02:44<03:45, 166.75it/s]Running loglikelihood requests:  33%|███▎      | 18625/56168 [02:44<04:01, 155.57it/s]Running loglikelihood requests:  33%|███▎      | 18672/56168 [02:45<03:08, 198.79it/s]Running loglikelihood requests:  33%|███▎      | 18699/56168 [02:45<04:13, 147.73it/s]Running loglikelihood requests:  33%|███▎      | 18753/56168 [02:45<03:52, 161.13it/s]Running loglikelihood requests:  33%|███▎      | 18803/56168 [02:45<03:00, 207.56it/s]Running loglikelihood requests:  34%|███▎      | 18832/56168 [02:46<03:59, 156.00it/s]Running loglikelihood requests:  34%|███▎      | 18881/56168 [02:46<03:27, 179.44it/s]Running loglikelihood requests:  34%|███▎      | 18945/56168 [02:46<03:32, 175.44it/s]Running loglikelihood requests:  34%|███▍      | 19009/56168 [02:46<03:08, 197.24it/s]Running loglikelihood requests:  34%|███▍      | 19069/56168 [02:47<02:27, 252.09it/s]Running loglikelihood requests:  34%|███▍      | 19103/56168 [02:47<03:08, 196.47it/s]Running loglikelihood requests:  34%|███▍      | 19137/56168 [02:47<03:16, 188.90it/s]Running loglikelihood requests:  34%|███▍      | 19201/56168 [02:47<03:17, 187.34it/s]Running loglikelihood requests:  34%|███▍      | 19265/56168 [02:48<02:58, 206.71it/s]Running loglikelihood requests:  34%|███▍      | 19329/56168 [02:48<03:16, 187.59it/s]Running loglikelihood requests:  35%|███▍      | 19393/56168 [02:48<02:53, 211.71it/s]Running loglikelihood requests:  35%|███▍      | 19457/56168 [02:49<03:09, 193.77it/s]Running loglikelihood requests:  35%|███▍      | 19521/56168 [02:49<02:51, 213.36it/s]Running loglikelihood requests:  35%|███▍      | 19585/56168 [02:49<03:06, 195.87it/s]Running loglikelihood requests:  35%|███▍      | 19649/56168 [02:50<02:43, 222.99it/s]Running loglikelihood requests:  35%|███▌      | 19713/56168 [02:50<02:55, 207.40it/s]Running loglikelihood requests:  35%|███▌      | 19777/56168 [02:50<02:44, 221.08it/s]Running loglikelihood requests:  35%|███▌      | 19841/56168 [02:50<02:52, 210.38it/s]Running loglikelihood requests:  35%|███▌      | 19905/56168 [02:51<02:41, 224.94it/s]Running loglikelihood requests:  36%|███▌      | 19969/56168 [02:51<02:58, 203.17it/s]Running loglikelihood requests:  36%|███▌      | 20033/56168 [02:51<02:42, 222.49it/s]Running loglikelihood requests:  36%|███▌      | 20097/56168 [02:52<02:44, 219.61it/s]Running loglikelihood requests:  36%|███▌      | 20161/56168 [02:52<02:48, 213.45it/s]Running loglikelihood requests:  36%|███▌      | 20206/56168 [02:52<02:27, 243.02it/s]Running loglikelihood requests:  36%|███▌      | 20235/56168 [02:52<03:22, 177.72it/s]Running loglikelihood requests:  36%|███▌      | 20289/56168 [02:53<03:17, 181.87it/s]Running loglikelihood requests:  36%|███▌      | 20353/56168 [02:53<03:24, 174.83it/s]Running loglikelihood requests:  36%|███▋      | 20417/56168 [02:53<03:09, 189.01it/s]Running loglikelihood requests:  36%|███▋      | 20481/56168 [02:54<03:01, 196.74it/s]Running loglikelihood requests:  37%|███▋      | 20545/56168 [02:54<02:39, 223.21it/s]Running loglikelihood requests:  37%|███▋      | 20609/56168 [02:54<02:42, 219.47it/s]Running loglikelihood requests:  37%|███▋      | 20673/56168 [02:54<02:38, 224.16it/s]Running loglikelihood requests:  37%|███▋      | 20737/56168 [02:55<02:42, 217.98it/s]Running loglikelihood requests:  37%|███▋      | 20801/56168 [02:55<02:41, 219.52it/s]Running loglikelihood requests:  37%|███▋      | 20851/56168 [02:55<02:18, 254.55it/s]Running loglikelihood requests:  37%|███▋      | 20882/56168 [02:55<02:42, 217.05it/s]Running loglikelihood requests:  37%|███▋      | 20929/56168 [02:56<02:58, 197.34it/s]Running loglikelihood requests:  37%|███▋      | 20993/56168 [02:56<02:39, 220.50it/s]Running loglikelihood requests:  37%|███▋      | 21057/56168 [02:56<02:38, 221.69it/s]Running loglikelihood requests:  38%|███▊      | 21121/56168 [02:56<02:40, 217.79it/s]Running loglikelihood requests:  38%|███▊      | 21164/56168 [02:57<02:22, 246.47it/s]Running loglikelihood requests:  38%|███▊      | 21193/56168 [02:57<03:00, 193.74it/s]Running loglikelihood requests:  38%|███▊      | 21249/56168 [02:57<02:35, 223.99it/s]Running loglikelihood requests:  38%|███▊      | 21313/56168 [02:57<02:51, 203.04it/s]Running loglikelihood requests:  38%|███▊      | 21377/56168 [02:58<02:46, 209.56it/s]Running loglikelihood requests:  38%|███▊      | 21422/56168 [02:58<02:24, 240.56it/s]Running loglikelihood requests:  38%|███▊      | 21451/56168 [02:58<03:14, 178.56it/s]Running loglikelihood requests:  38%|███▊      | 21496/56168 [02:58<02:40, 216.23it/s]Running loglikelihood requests:  38%|███▊      | 21526/56168 [02:59<03:11, 180.93it/s]Running loglikelihood requests:  38%|███▊      | 21569/56168 [02:59<03:24, 168.98it/s]Running loglikelihood requests:  39%|███▊      | 21633/56168 [02:59<02:57, 194.52it/s]Running loglikelihood requests:  39%|███▊      | 21697/56168 [02:59<02:51, 200.98it/s]Running loglikelihood requests:  39%|███▊      | 21761/56168 [03:00<02:40, 214.90it/s]Running loglikelihood requests:  39%|███▉      | 21812/56168 [03:00<02:14, 255.29it/s]Running loglikelihood requests:  39%|███▉      | 21843/56168 [03:00<02:41, 212.74it/s]Running loglikelihood requests:  39%|███▉      | 21889/56168 [03:00<03:09, 181.28it/s]Running loglikelihood requests:  39%|███▉      | 21953/56168 [03:01<02:53, 197.74it/s]Running loglikelihood requests:  39%|███▉      | 22017/56168 [03:01<02:48, 202.61it/s]Running loglikelihood requests:  39%|███▉      | 22079/56168 [03:01<02:12, 256.92it/s]Running loglikelihood requests:  39%|███▉      | 22112/56168 [03:01<02:48, 201.52it/s]Running loglikelihood requests:  39%|███▉      | 22145/56168 [03:01<02:59, 189.34it/s]Running loglikelihood requests:  39%|███▉      | 22169/56168 [03:02<02:56, 192.94it/s]Running loglikelihood requests:  40%|███▉      | 22209/56168 [03:02<03:06, 182.23it/s]Running loglikelihood requests:  40%|███▉      | 22273/56168 [03:02<03:08, 179.75it/s]Running loglikelihood requests:  40%|███▉      | 22337/56168 [03:02<02:43, 207.18it/s]Running loglikelihood requests:  40%|███▉      | 22360/56168 [03:03<02:42, 207.60it/s]Running loglikelihood requests:  40%|███▉      | 22401/56168 [03:03<03:02, 184.80it/s]Running loglikelihood requests:  40%|███▉      | 22421/56168 [03:03<03:00, 186.75it/s]Running loglikelihood requests:  40%|███▉      | 22465/56168 [03:03<02:52, 195.66it/s]Running loglikelihood requests:  40%|████      | 22529/56168 [03:03<02:36, 214.68it/s]Running loglikelihood requests:  40%|████      | 22593/56168 [03:04<02:36, 215.11it/s]Running loglikelihood requests:  40%|████      | 22636/56168 [03:04<02:16, 245.71it/s]Running loglikelihood requests:  40%|████      | 22664/56168 [03:04<03:06, 179.90it/s]Running loglikelihood requests:  40%|████      | 22716/56168 [03:04<02:25, 230.43it/s]Running loglikelihood requests:  40%|████      | 22747/56168 [03:05<03:38, 153.22it/s]Running loglikelihood requests:  41%|████      | 22785/56168 [03:05<03:30, 158.73it/s]Running loglikelihood requests:  41%|████      | 22838/56168 [03:05<02:37, 211.30it/s]Running loglikelihood requests:  41%|████      | 22869/56168 [03:05<03:24, 162.77it/s]Running loglikelihood requests:  41%|████      | 22898/56168 [03:05<03:04, 180.67it/s]Running loglikelihood requests:  41%|████      | 22924/56168 [03:06<03:41, 150.24it/s]Running loglikelihood requests:  41%|████      | 22977/56168 [03:06<03:20, 165.52it/s]Running loglikelihood requests:  41%|████      | 23041/56168 [03:06<02:53, 191.10it/s]Running loglikelihood requests:  41%|████      | 23105/56168 [03:07<03:02, 181.50it/s]Running loglikelihood requests:  41%|████      | 23169/56168 [03:07<02:47, 197.46it/s]Running loglikelihood requests:  41%|████▏     | 23210/56168 [03:07<02:26, 224.29it/s]Running loglikelihood requests:  41%|████▏     | 23237/56168 [03:07<03:03, 179.49it/s]Running loglikelihood requests:  41%|████▏     | 23297/56168 [03:08<02:51, 191.72it/s]Running loglikelihood requests:  42%|████▏     | 23361/56168 [03:08<02:45, 198.36it/s]Running loglikelihood requests:  42%|████▏     | 23413/56168 [03:08<02:16, 240.63it/s]Running loglikelihood requests:  42%|████▏     | 23443/56168 [03:08<02:30, 217.22it/s]Running loglikelihood requests:  42%|████▏     | 23489/56168 [03:08<02:45, 197.07it/s]Running loglikelihood requests:  42%|████▏     | 23553/56168 [03:09<02:40, 203.58it/s]Running loglikelihood requests:  42%|████▏     | 23592/56168 [03:09<02:21, 230.33it/s]Running loglikelihood requests:  42%|████▏     | 23620/56168 [03:09<02:43, 199.52it/s]Running loglikelihood requests:  42%|████▏     | 23681/56168 [03:09<02:24, 225.04it/s]Running loglikelihood requests:  42%|████▏     | 23745/56168 [03:10<02:31, 213.76it/s]Running loglikelihood requests:  42%|████▏     | 23809/56168 [03:10<02:13, 243.07it/s]Running loglikelihood requests:  42%|████▏     | 23852/56168 [03:10<01:58, 271.65it/s]Running loglikelihood requests:  43%|████▎     | 23883/56168 [03:10<02:24, 222.75it/s]Running loglikelihood requests:  43%|████▎     | 23937/56168 [03:10<02:29, 215.94it/s]Running loglikelihood requests:  43%|████▎     | 23984/56168 [03:10<02:05, 255.83it/s]Running loglikelihood requests:  43%|████▎     | 24015/56168 [03:11<02:50, 188.49it/s]Running loglikelihood requests:  43%|████▎     | 24065/56168 [03:11<03:01, 177.25it/s]Running loglikelihood requests:  43%|████▎     | 24129/56168 [03:11<02:49, 189.12it/s]Running loglikelihood requests:  43%|████▎     | 24193/56168 [03:12<02:40, 198.74it/s]Running loglikelihood requests:  43%|████▎     | 24237/56168 [03:12<02:18, 231.18it/s]Running loglikelihood requests:  43%|████▎     | 24266/56168 [03:12<02:52, 184.45it/s]Running loglikelihood requests:  43%|████▎     | 24307/56168 [03:12<02:26, 217.65it/s]Running loglikelihood requests:  43%|████▎     | 24336/56168 [03:13<03:13, 164.29it/s]Running loglikelihood requests:  43%|████▎     | 24385/56168 [03:13<03:13, 163.85it/s]Running loglikelihood requests:  43%|████▎     | 24426/56168 [03:13<02:39, 198.76it/s]Running loglikelihood requests:  44%|████▎     | 24453/56168 [03:13<03:20, 157.97it/s]Running loglikelihood requests:  44%|████▎     | 24497/56168 [03:13<02:37, 200.70it/s]Running loglikelihood requests:  44%|████▎     | 24525/56168 [03:14<03:22, 156.12it/s]Running loglikelihood requests:  44%|████▎     | 24569/56168 [03:14<02:38, 199.71it/s]Running loglikelihood requests:  44%|████▍     | 24598/56168 [03:14<03:30, 150.28it/s]Running loglikelihood requests:  44%|████▍     | 24641/56168 [03:14<03:30, 149.55it/s]Running loglikelihood requests:  44%|████▍     | 24683/56168 [03:14<02:46, 188.77it/s]Running loglikelihood requests:  44%|████▍     | 24710/56168 [03:15<03:43, 140.88it/s]Running loglikelihood requests:  44%|████▍     | 24769/56168 [03:15<03:18, 157.86it/s]Running loglikelihood requests:  44%|████▍     | 24807/56168 [03:15<02:47, 187.47it/s]Running loglikelihood requests:  44%|████▍     | 24833/56168 [03:16<03:30, 149.20it/s]Running loglikelihood requests:  44%|████▍     | 24862/56168 [03:16<03:04, 170.10it/s]Running loglikelihood requests:  44%|████▍     | 24897/56168 [03:16<03:00, 172.97it/s]Running loglikelihood requests:  44%|████▍     | 24961/56168 [03:16<02:34, 201.57it/s]Running loglikelihood requests:  44%|████▍     | 24984/56168 [03:16<02:35, 200.57it/s]Running loglikelihood requests:  45%|████▍     | 25025/56168 [03:16<02:37, 197.65it/s]Running loglikelihood requests:  45%|████▍     | 25054/56168 [03:17<02:27, 210.94it/s]Running loglikelihood requests:  45%|████▍     | 25089/56168 [03:17<03:00, 172.38it/s]Running loglikelihood requests:  45%|████▍     | 25153/56168 [03:17<02:46, 186.61it/s]Running loglikelihood requests:  45%|████▍     | 25217/56168 [03:17<02:14, 230.00it/s]Running loglikelihood requests:  45%|████▌     | 25281/56168 [03:18<02:18, 223.54it/s]Running loglikelihood requests:  45%|████▌     | 25345/56168 [03:18<02:15, 226.81it/s]Running loglikelihood requests:  45%|████▌     | 25369/56168 [03:18<02:17, 223.81it/s]Running loglikelihood requests:  45%|████▌     | 25409/56168 [03:18<02:27, 208.25it/s]Running loglikelihood requests:  45%|████▌     | 25470/56168 [03:18<01:52, 272.74it/s]Running loglikelihood requests:  45%|████▌     | 25503/56168 [03:19<02:28, 206.47it/s]Running loglikelihood requests:  45%|████▌     | 25537/56168 [03:19<02:57, 172.56it/s]Running loglikelihood requests:  46%|████▌     | 25601/56168 [03:19<02:29, 204.87it/s]Running loglikelihood requests:  46%|████▌     | 25665/56168 [03:19<02:25, 210.31it/s]Running loglikelihood requests:  46%|████▌     | 25729/56168 [03:20<02:26, 207.72it/s]Running loglikelihood requests:  46%|████▌     | 25770/56168 [03:20<02:09, 235.33it/s]Running loglikelihood requests:  46%|████▌     | 25798/56168 [03:20<02:31, 199.91it/s]Running loglikelihood requests:  46%|████▌     | 25857/56168 [03:20<02:33, 197.87it/s]Running loglikelihood requests:  46%|████▌     | 25921/56168 [03:21<02:26, 205.92it/s]Running loglikelihood requests:  46%|████▌     | 25955/56168 [03:21<02:15, 222.42it/s]Running loglikelihood requests:  46%|████▋     | 25985/56168 [03:21<02:31, 199.84it/s]Running loglikelihood requests:  46%|████▋     | 26049/56168 [03:21<02:27, 203.54it/s]Running loglikelihood requests:  46%|████▋     | 26113/56168 [03:22<02:14, 223.36it/s]Running loglikelihood requests:  47%|████▋     | 26177/56168 [03:22<02:14, 223.05it/s]Running loglikelihood requests:  47%|████▋     | 26241/56168 [03:22<02:11, 226.92it/s]Running loglikelihood requests:  47%|████▋     | 26305/56168 [03:22<02:14, 221.48it/s]Running loglikelihood requests:  47%|████▋     | 26369/56168 [03:23<02:12, 225.50it/s]Running loglikelihood requests:  47%|████▋     | 26392/56168 [03:23<02:12, 225.12it/s]Running loglikelihood requests:  47%|████▋     | 26433/56168 [03:23<02:22, 209.23it/s]Running loglikelihood requests:  47%|████▋     | 26497/56168 [03:23<02:24, 205.14it/s]Running loglikelihood requests:  47%|████▋     | 26561/56168 [03:24<02:01, 243.32it/s]Running loglikelihood requests:  47%|████▋     | 26625/56168 [03:24<01:51, 264.41it/s]Running loglikelihood requests:  48%|████▊     | 26689/56168 [03:24<02:01, 242.48it/s]Running loglikelihood requests:  48%|████▊     | 26753/56168 [03:24<01:55, 254.60it/s]Running loglikelihood requests:  48%|████▊     | 26817/56168 [03:25<01:59, 245.06it/s]Running loglikelihood requests:  48%|████▊     | 26881/56168 [03:25<01:53, 257.75it/s]Running loglikelihood requests:  48%|████▊     | 26945/56168 [03:25<02:02, 239.51it/s]Running loglikelihood requests:  48%|████▊     | 27009/56168 [03:25<01:53, 255.95it/s]Running loglikelihood requests:  48%|████▊     | 27073/56168 [03:25<01:47, 271.00it/s]Running loglikelihood requests:  48%|████▊     | 27137/56168 [03:26<01:57, 246.68it/s]Running loglikelihood requests:  48%|████▊     | 27201/56168 [03:26<01:53, 254.18it/s]Running loglikelihood requests:  49%|████▊     | 27265/56168 [03:26<01:59, 240.97it/s]Running loglikelihood requests:  49%|████▊     | 27329/56168 [03:27<01:57, 246.31it/s]Running loglikelihood requests:  49%|████▉     | 27393/56168 [03:27<01:59, 240.74it/s]Running loglikelihood requests:  49%|████▉     | 27442/56168 [03:27<01:47, 266.42it/s]Running loglikelihood requests:  49%|████▉     | 27471/56168 [03:27<02:00, 237.91it/s]Running loglikelihood requests:  49%|████▉     | 27521/56168 [03:27<02:15, 211.42it/s]Running loglikelihood requests:  49%|████▉     | 27585/56168 [03:28<02:10, 218.86it/s]Running loglikelihood requests:  49%|████▉     | 27608/56168 [03:28<02:20, 203.41it/s]Running loglikelihood requests:  49%|████▉     | 27649/56168 [03:28<02:21, 202.10it/s]Running loglikelihood requests:  49%|████▉     | 27713/56168 [03:28<02:03, 229.56it/s]Running loglikelihood requests:  49%|████▉     | 27777/56168 [03:29<02:04, 227.75it/s]Running loglikelihood requests:  50%|████▉     | 27841/56168 [03:29<01:55, 244.57it/s]Running loglikelihood requests:  50%|████▉     | 27866/56168 [03:29<01:55, 244.84it/s]Running loglikelihood requests:  50%|████▉     | 27905/56168 [03:29<01:59, 235.57it/s]Running loglikelihood requests:  50%|████▉     | 27943/56168 [03:29<01:48, 259.42it/s]Running loglikelihood requests:  50%|████▉     | 27971/56168 [03:29<02:29, 188.28it/s]Running loglikelihood requests:  50%|████▉     | 28033/56168 [03:30<01:57, 238.88it/s]Running loglikelihood requests:  50%|█████     | 28097/56168 [03:30<01:58, 237.08it/s]Running loglikelihood requests:  50%|█████     | 28161/56168 [03:30<01:57, 238.69it/s]Running loglikelihood requests:  50%|█████     | 28225/56168 [03:30<01:41, 274.95it/s]Running loglikelihood requests:  50%|█████     | 28270/56168 [03:30<01:31, 304.02it/s]Running loglikelihood requests:  50%|█████     | 28305/56168 [03:31<02:03, 226.11it/s]Running loglikelihood requests:  50%|█████     | 28353/56168 [03:31<02:03, 225.64it/s]Running loglikelihood requests:  51%|█████     | 28417/56168 [03:31<01:57, 236.83it/s]Running loglikelihood requests:  51%|█████     | 28450/56168 [03:31<01:50, 251.78it/s]Running loglikelihood requests:  51%|█████     | 28481/56168 [03:31<02:00, 229.61it/s]Running loglikelihood requests:  51%|█████     | 28545/56168 [03:32<01:47, 257.08it/s]Running loglikelihood requests:  51%|█████     | 28609/56168 [03:32<01:53, 241.84it/s]Running loglikelihood requests:  51%|█████     | 28673/56168 [03:32<01:46, 259.18it/s]Running loglikelihood requests:  51%|█████     | 28737/56168 [03:32<01:51, 245.25it/s]Running loglikelihood requests:  51%|█████▏    | 28801/56168 [03:33<01:47, 254.54it/s]Running loglikelihood requests:  51%|█████▏    | 28860/56168 [03:33<01:29, 305.70it/s]Running loglikelihood requests:  51%|█████▏    | 28896/56168 [03:33<01:57, 231.64it/s]Running loglikelihood requests:  52%|█████▏    | 28929/56168 [03:33<02:10, 208.36it/s]Running loglikelihood requests:  52%|█████▏    | 28963/56168 [03:33<02:00, 225.33it/s]Running loglikelihood requests:  52%|█████▏    | 28993/56168 [03:34<02:20, 193.05it/s]Running loglikelihood requests:  52%|█████▏    | 29016/56168 [03:34<02:23, 189.83it/s]Running loglikelihood requests:  52%|█████▏    | 29057/56168 [03:34<02:33, 177.15it/s]Running loglikelihood requests:  52%|█████▏    | 29077/56168 [03:34<02:32, 177.61it/s]Running loglikelihood requests:  52%|█████▏    | 29121/56168 [03:34<02:35, 173.66it/s]Running loglikelihood requests:  52%|█████▏    | 29185/56168 [03:35<02:25, 185.21it/s]Running loglikelihood requests:  52%|█████▏    | 29249/56168 [03:35<02:06, 213.01it/s]Running loglikelihood requests:  52%|█████▏    | 29271/56168 [03:35<02:19, 192.54it/s]Running loglikelihood requests:  52%|█████▏    | 29313/56168 [03:35<02:28, 180.76it/s]Running loglikelihood requests:  52%|█████▏    | 29355/56168 [03:36<02:04, 214.86it/s]Running loglikelihood requests:  52%|█████▏    | 29380/56168 [03:36<02:47, 160.00it/s]Running loglikelihood requests:  52%|█████▏    | 29439/56168 [03:36<01:57, 227.61it/s]Running loglikelihood requests:  52%|█████▏    | 29471/56168 [03:36<02:19, 191.20it/s]Running loglikelihood requests:  53%|█████▎    | 29505/56168 [03:36<02:34, 172.65it/s]Running loglikelihood requests:  53%|█████▎    | 29569/56168 [03:37<02:07, 207.96it/s]Running loglikelihood requests:  53%|█████▎    | 29606/56168 [03:37<01:53, 233.54it/s]Running loglikelihood requests:  53%|█████▎    | 29634/56168 [03:37<02:09, 205.55it/s]Running loglikelihood requests:  53%|█████▎    | 29697/56168 [03:37<01:51, 236.74it/s]Running loglikelihood requests:  53%|█████▎    | 29756/56168 [03:37<01:28, 298.01it/s]Running loglikelihood requests:  53%|█████▎    | 29791/56168 [03:38<01:46, 247.03it/s]Running loglikelihood requests:  53%|█████▎    | 29825/56168 [03:38<01:58, 221.42it/s]Running loglikelihood requests:  53%|█████▎    | 29889/56168 [03:38<01:58, 221.11it/s]Running loglikelihood requests:  53%|█████▎    | 29953/56168 [03:38<01:35, 275.14it/s]Running loglikelihood requests:  53%|█████▎    | 30017/56168 [03:38<01:47, 244.26it/s]Running loglikelihood requests:  54%|█████▎    | 30081/56168 [03:39<01:39, 261.34it/s]Running loglikelihood requests:  54%|█████▎    | 30145/56168 [03:39<01:53, 229.91it/s]Running loglikelihood requests:  54%|█████▍    | 30209/56168 [03:39<01:35, 270.81it/s]Running loglikelihood requests:  54%|█████▍    | 30273/56168 [03:39<01:36, 268.16it/s]Running loglikelihood requests:  54%|█████▍    | 30318/56168 [03:40<01:27, 294.84it/s]Running loglikelihood requests:  54%|█████▍    | 30352/56168 [03:40<01:42, 252.36it/s]Running loglikelihood requests:  54%|█████▍    | 30381/56168 [03:40<01:41, 254.52it/s]Running loglikelihood requests:  54%|█████▍    | 30409/56168 [03:40<01:53, 225.97it/s]Running loglikelihood requests:  54%|█████▍    | 30465/56168 [03:40<01:49, 235.11it/s]Running loglikelihood requests:  54%|█████▍    | 30529/56168 [03:40<01:47, 237.43it/s]Running loglikelihood requests:  54%|█████▍    | 30593/56168 [03:41<01:44, 245.13it/s]Running loglikelihood requests:  55%|█████▍    | 30641/56168 [03:41<01:30, 282.00it/s]Running loglikelihood requests:  55%|█████▍    | 30673/56168 [03:41<01:42, 249.14it/s]Running loglikelihood requests:  55%|█████▍    | 30721/56168 [03:41<01:58, 213.90it/s]Running loglikelihood requests:  55%|█████▍    | 30785/56168 [03:42<01:46, 237.40it/s]Running loglikelihood requests:  55%|█████▍    | 30849/56168 [03:42<01:46, 238.32it/s]Running loglikelihood requests:  55%|█████▌    | 30913/56168 [03:42<01:38, 257.43it/s]Running loglikelihood requests:  55%|█████▌    | 30971/56168 [03:42<01:21, 307.56it/s]Running loglikelihood requests:  55%|█████▌    | 31007/56168 [03:42<01:37, 257.35it/s]Running loglikelihood requests:  55%|█████▌    | 31041/56168 [03:43<01:54, 219.78it/s]Running loglikelihood requests:  55%|█████▌    | 31093/56168 [03:43<01:33, 268.71it/s]Running loglikelihood requests:  55%|█████▌    | 31126/56168 [03:43<01:48, 231.50it/s]Running loglikelihood requests:  55%|█████▌    | 31169/56168 [03:43<02:09, 192.52it/s]Running loglikelihood requests:  56%|█████▌    | 31233/56168 [03:43<01:44, 238.71it/s]Running loglikelihood requests:  56%|█████▌    | 31297/56168 [03:44<01:42, 243.27it/s]Running loglikelihood requests:  56%|█████▌    | 31361/56168 [03:44<01:40, 246.50it/s]Running loglikelihood requests:  56%|█████▌    | 31415/56168 [03:44<01:24, 291.87it/s]Running loglikelihood requests:  56%|█████▌    | 31450/56168 [03:44<01:39, 247.24it/s]Running loglikelihood requests:  56%|█████▌    | 31489/56168 [03:44<01:44, 236.65it/s]Running loglikelihood requests:  56%|█████▌    | 31516/56168 [03:45<01:45, 233.90it/s]Running loglikelihood requests:  56%|█████▌    | 31553/56168 [03:45<01:56, 210.92it/s]Running loglikelihood requests:  56%|█████▋    | 31610/56168 [03:45<01:28, 276.82it/s]Running loglikelihood requests:  56%|█████▋    | 31643/56168 [03:45<01:48, 225.74it/s]Running loglikelihood requests:  56%|█████▋    | 31681/56168 [03:45<01:50, 221.27it/s]Running loglikelihood requests:  56%|█████▋    | 31719/56168 [03:45<01:37, 251.32it/s]Running loglikelihood requests:  57%|█████▋    | 31749/56168 [03:46<01:55, 211.15it/s]Running loglikelihood requests:  57%|█████▋    | 31809/56168 [03:46<01:49, 222.66it/s]Running loglikelihood requests:  57%|█████▋    | 31862/56168 [03:46<01:27, 276.54it/s]Running loglikelihood requests:  57%|█████▋    | 31895/56168 [03:46<01:46, 227.56it/s]Running loglikelihood requests:  57%|█████▋    | 31937/56168 [03:46<01:53, 212.89it/s]Running loglikelihood requests:  57%|█████▋    | 32001/56168 [03:47<01:44, 230.81it/s]Running loglikelihood requests:  57%|█████▋    | 32053/56168 [03:47<01:26, 278.53it/s]Running loglikelihood requests:  57%|█████▋    | 32086/56168 [03:47<01:41, 237.26it/s]Running loglikelihood requests:  57%|█████▋    | 32129/56168 [03:47<01:49, 220.01it/s]Running loglikelihood requests:  57%|█████▋    | 32184/56168 [03:47<01:26, 276.95it/s]Running loglikelihood requests:  57%|█████▋    | 32218/56168 [03:47<01:45, 226.99it/s]Running loglikelihood requests:  57%|█████▋    | 32257/56168 [03:48<01:57, 204.28it/s]Running loglikelihood requests:  58%|█████▊    | 32321/56168 [03:48<01:39, 239.94it/s]Running loglikelihood requests:  58%|█████▊    | 32385/56168 [03:48<01:47, 221.07it/s]Running loglikelihood requests:  58%|█████▊    | 32449/56168 [03:48<01:36, 246.04it/s]Running loglikelihood requests:  58%|█████▊    | 32513/56168 [03:49<01:39, 238.22it/s]Running loglikelihood requests:  58%|█████▊    | 32577/56168 [03:49<01:33, 251.77it/s]Running loglikelihood requests:  58%|█████▊    | 32604/56168 [03:49<01:35, 245.99it/s]Running loglikelihood requests:  58%|█████▊    | 32641/56168 [03:49<01:45, 222.56it/s]Running loglikelihood requests:  58%|█████▊    | 32694/56168 [03:49<01:25, 274.00it/s]Running loglikelihood requests:  58%|█████▊    | 32726/56168 [03:50<01:42, 228.22it/s]Running loglikelihood requests:  58%|█████▊    | 32769/56168 [03:50<01:50, 211.43it/s]Running loglikelihood requests:  58%|█████▊    | 32829/56168 [03:50<01:24, 276.47it/s]Running loglikelihood requests:  59%|█████▊    | 32863/56168 [03:50<01:42, 226.80it/s]Running loglikelihood requests:  59%|█████▊    | 32897/56168 [03:50<02:02, 189.60it/s]Running loglikelihood requests:  59%|█████▊    | 32961/56168 [03:51<01:46, 218.29it/s]Running loglikelihood requests:  59%|█████▉    | 33013/56168 [03:51<01:26, 266.52it/s]Running loglikelihood requests:  59%|█████▉    | 33046/56168 [03:51<01:43, 222.49it/s]Running loglikelihood requests:  59%|█████▉    | 33089/56168 [03:51<01:58, 194.82it/s]Running loglikelihood requests:  59%|█████▉    | 33153/56168 [03:52<01:45, 219.17it/s]Running loglikelihood requests:  59%|█████▉    | 33217/56168 [03:52<01:38, 232.73it/s]Running loglikelihood requests:  59%|█████▉    | 33281/56168 [03:52<01:35, 239.27it/s]Running loglikelihood requests:  59%|█████▉    | 33345/56168 [03:52<01:32, 246.18it/s]Running loglikelihood requests:  59%|█████▉    | 33409/56168 [03:53<01:28, 255.95it/s]Running loglikelihood requests:  60%|█████▉    | 33436/56168 [03:53<01:33, 243.47it/s]Running loglikelihood requests:  60%|█████▉    | 33473/56168 [03:53<01:36, 234.05it/s]Running loglikelihood requests:  60%|█████▉    | 33518/56168 [03:53<01:23, 271.44it/s]Running loglikelihood requests:  60%|█████▉    | 33548/56168 [03:53<01:39, 226.55it/s]Running loglikelihood requests:  60%|█████▉    | 33601/56168 [03:53<01:38, 228.36it/s]Running loglikelihood requests:  60%|█████▉    | 33665/56168 [03:54<01:35, 236.26it/s]Running loglikelihood requests:  60%|██████    | 33729/56168 [03:54<01:34, 236.38it/s]Running loglikelihood requests:  60%|██████    | 33793/56168 [03:54<01:33, 238.54it/s]Running loglikelihood requests:  60%|██████    | 33844/56168 [03:54<01:20, 278.70it/s]Running loglikelihood requests:  60%|██████    | 33876/56168 [03:54<01:34, 235.75it/s]Running loglikelihood requests:  60%|██████    | 33921/56168 [03:55<01:35, 232.69it/s]Running loglikelihood requests:  60%|██████    | 33947/56168 [03:55<01:34, 236.19it/s]Running loglikelihood requests:  61%|██████    | 33985/56168 [03:55<01:42, 215.38it/s]Running loglikelihood requests:  61%|██████    | 34049/56168 [03:55<01:47, 206.34it/s]Running loglikelihood requests:  61%|██████    | 34113/56168 [03:56<01:30, 242.68it/s]Running loglikelihood requests:  61%|██████    | 34148/56168 [03:56<01:25, 258.62it/s]Running loglikelihood requests:  61%|██████    | 34177/56168 [03:56<01:37, 224.84it/s]Running loglikelihood requests:  61%|██████    | 34241/56168 [03:56<01:30, 243.31it/s]Running loglikelihood requests:  61%|██████    | 34295/56168 [03:56<01:14, 294.02it/s]Running loglikelihood requests:  61%|██████    | 34329/56168 [03:56<01:30, 240.07it/s]Running loglikelihood requests:  61%|██████    | 34369/56168 [03:57<01:49, 199.35it/s]Running loglikelihood requests:  61%|██████▏   | 34433/56168 [03:57<01:39, 218.95it/s]Running loglikelihood requests:  61%|██████▏   | 34480/56168 [03:57<01:24, 255.38it/s]Running loglikelihood requests:  61%|██████▏   | 34511/56168 [03:57<01:37, 221.73it/s]Running loglikelihood requests:  62%|██████▏   | 34553/56168 [03:57<01:24, 256.15it/s]Running loglikelihood requests:  62%|██████▏   | 34584/56168 [03:58<01:36, 224.22it/s]Running loglikelihood requests:  62%|██████▏   | 34625/56168 [03:58<01:45, 204.73it/s]Running loglikelihood requests:  62%|██████▏   | 34674/56168 [03:58<01:24, 254.99it/s]Running loglikelihood requests:  62%|██████▏   | 34705/56168 [03:58<01:36, 222.34it/s]Running loglikelihood requests:  62%|██████▏   | 34753/56168 [03:58<01:51, 192.57it/s]Running loglikelihood requests:  62%|██████▏   | 34817/56168 [03:59<01:36, 220.24it/s]Running loglikelihood requests:  62%|██████▏   | 34869/56168 [03:59<01:19, 268.04it/s]Running loglikelihood requests:  62%|██████▏   | 34902/56168 [03:59<01:34, 225.13it/s]Running loglikelihood requests:  62%|██████▏   | 34943/56168 [03:59<01:22, 256.98it/s]Running loglikelihood requests:  62%|██████▏   | 34974/56168 [03:59<01:33, 225.66it/s]Running loglikelihood requests:  62%|██████▏   | 35009/56168 [03:59<01:46, 199.52it/s]Running loglikelihood requests:  62%|██████▏   | 35058/56168 [04:00<01:23, 252.42it/s]Running loglikelihood requests:  62%|██████▏   | 35089/56168 [04:00<01:41, 207.35it/s]Running loglikelihood requests:  63%|██████▎   | 35125/56168 [04:00<01:29, 235.57it/s]Running loglikelihood requests:  63%|██████▎   | 35154/56168 [04:00<01:40, 209.55it/s]Running loglikelihood requests:  63%|██████▎   | 35201/56168 [04:00<01:41, 207.19it/s]Running loglikelihood requests:  63%|██████▎   | 35249/56168 [04:00<01:21, 257.09it/s]Running loglikelihood requests:  63%|██████▎   | 35280/56168 [04:01<01:37, 213.29it/s]Running loglikelihood requests:  63%|██████▎   | 35321/56168 [04:01<01:23, 249.86it/s]Running loglikelihood requests:  63%|██████▎   | 35351/56168 [04:01<01:48, 191.21it/s]Running loglikelihood requests:  63%|██████▎   | 35390/56168 [04:01<01:31, 227.35it/s]Running loglikelihood requests:  63%|██████▎   | 35419/56168 [04:01<01:42, 203.21it/s]Running loglikelihood requests:  63%|██████▎   | 35457/56168 [04:02<01:49, 188.97it/s]Running loglikelihood requests:  63%|██████▎   | 35506/56168 [04:02<01:25, 242.45it/s]Running loglikelihood requests:  63%|██████▎   | 35536/56168 [04:02<01:43, 199.43it/s]Running loglikelihood requests:  63%|██████▎   | 35571/56168 [04:02<01:30, 227.55it/s]Running loglikelihood requests:  63%|██████▎   | 35599/56168 [04:02<01:39, 206.52it/s]Running loglikelihood requests:  63%|██████▎   | 35649/56168 [04:02<01:38, 209.32it/s]Running loglikelihood requests:  64%|██████▎   | 35697/56168 [04:02<01:19, 258.30it/s]Running loglikelihood requests:  64%|██████▎   | 35728/56168 [04:03<01:31, 222.46it/s]Running loglikelihood requests:  64%|██████▎   | 35777/56168 [04:03<01:46, 192.16it/s]Running loglikelihood requests:  64%|██████▍   | 35841/56168 [04:03<01:30, 225.43it/s]Running loglikelihood requests:  64%|██████▍   | 35889/56168 [04:03<01:16, 266.63it/s]Running loglikelihood requests:  64%|██████▍   | 35921/56168 [04:04<01:33, 216.86it/s]Running loglikelihood requests:  64%|██████▍   | 35969/56168 [04:04<01:39, 203.61it/s]Running loglikelihood requests:  64%|██████▍   | 36033/56168 [04:04<01:17, 261.32it/s]Running loglikelihood requests:  64%|██████▍   | 36097/56168 [04:04<01:08, 291.28it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [04:04<01:11, 281.46it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [04:05<01:12, 275.45it/s]Running loglikelihood requests:  65%|██████▍   | 36269/56168 [04:05<01:06, 299.21it/s]Running loglikelihood requests:  65%|██████▍   | 36303/56168 [04:05<01:22, 240.57it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [04:05<01:19, 250.76it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [04:05<01:23, 236.77it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [04:06<01:15, 261.28it/s]Running loglikelihood requests:  65%|██████▌   | 36531/56168 [04:06<01:05, 298.34it/s]Running loglikelihood requests:  65%|██████▌   | 36565/56168 [04:06<01:31, 213.74it/s]Running loglikelihood requests:  65%|██████▌   | 36593/56168 [04:06<01:27, 223.90it/s]Running loglikelihood requests:  65%|██████▌   | 36621/56168 [04:06<01:37, 199.52it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [04:07<01:24, 230.15it/s]Running loglikelihood requests:  65%|██████▌   | 36721/56168 [04:07<01:10, 275.79it/s]Running loglikelihood requests:  65%|██████▌   | 36753/56168 [04:07<01:25, 226.80it/s]Running loglikelihood requests:  66%|██████▌   | 36801/56168 [04:07<01:35, 203.76it/s]Running loglikelihood requests:  66%|██████▌   | 36865/56168 [04:07<01:20, 239.59it/s]Running loglikelihood requests:  66%|██████▌   | 36919/56168 [04:07<01:06, 290.37it/s]Running loglikelihood requests:  66%|██████▌   | 36954/56168 [04:08<01:27, 220.53it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [04:08<01:18, 244.68it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [04:08<01:11, 268.15it/s]Running loglikelihood requests:  66%|██████▌   | 37109/56168 [04:08<01:00, 314.92it/s]Running loglikelihood requests:  66%|██████▌   | 37146/56168 [04:08<01:10, 271.42it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [04:08<01:05, 290.01it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [04:09<01:00, 311.24it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [04:09<01:09, 271.14it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [04:09<01:01, 306.79it/s]Running loglikelihood requests:  67%|██████▋   | 37433/56168 [04:09<00:52, 354.01it/s]Running loglikelihood requests:  67%|██████▋   | 37474/56168 [04:09<01:08, 272.64it/s]Running loglikelihood requests:  67%|██████▋   | 37507/56168 [04:10<01:24, 220.85it/s]Running loglikelihood requests:  67%|██████▋   | 37553/56168 [04:10<01:11, 261.29it/s]Running loglikelihood requests:  67%|██████▋   | 37586/56168 [04:10<01:16, 242.32it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [04:10<01:25, 215.87it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [04:10<01:18, 236.44it/s]Running loglikelihood requests:  67%|██████▋   | 37745/56168 [04:11<01:06, 276.43it/s]Running loglikelihood requests:  67%|██████▋   | 37778/56168 [04:11<01:16, 241.19it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [04:11<01:17, 235.35it/s]Running loglikelihood requests:  67%|██████▋   | 37873/56168 [04:11<01:05, 277.52it/s]Running loglikelihood requests:  67%|██████▋   | 37905/56168 [04:11<01:19, 230.48it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [04:12<01:30, 202.32it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [04:12<01:17, 233.02it/s]Running loglikelihood requests:  68%|██████▊   | 38077/56168 [04:12<01:02, 291.62it/s]Running loglikelihood requests:  68%|██████▊   | 38113/56168 [04:12<01:13, 246.39it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [04:12<01:27, 206.55it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [04:13<01:14, 240.58it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [04:13<01:09, 257.68it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [04:13<01:08, 261.38it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [04:13<01:00, 291.96it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [04:13<00:59, 295.57it/s]Running loglikelihood requests:  69%|██████▊   | 38517/56168 [04:14<00:53, 332.97it/s]Running loglikelihood requests:  69%|██████▊   | 38554/56168 [04:14<00:59, 294.18it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [04:14<01:13, 238.22it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [04:14<01:02, 280.53it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [04:14<01:09, 252.47it/s]Running loglikelihood requests:  69%|██████▉   | 38785/56168 [04:15<01:07, 258.62it/s]Running loglikelihood requests:  69%|██████▉   | 38830/56168 [04:15<01:00, 287.71it/s]Running loglikelihood requests:  69%|██████▉   | 38863/56168 [04:15<01:10, 247.08it/s]Running loglikelihood requests:  69%|██████▉   | 38913/56168 [04:15<01:05, 263.93it/s]Running loglikelihood requests:  69%|██████▉   | 38977/56168 [04:15<00:59, 291.03it/s]Running loglikelihood requests:  70%|██████▉   | 39041/56168 [04:16<01:01, 277.67it/s]Running loglikelihood requests:  70%|██████▉   | 39105/56168 [04:16<00:59, 285.10it/s]Running loglikelihood requests:  70%|██████▉   | 39149/56168 [04:16<00:54, 311.01it/s]Running loglikelihood requests:  70%|██████▉   | 39183/56168 [04:16<00:59, 285.17it/s]Running loglikelihood requests:  70%|██████▉   | 39233/56168 [04:16<00:58, 287.22it/s]Running loglikelihood requests:  70%|██████▉   | 39297/56168 [04:16<01:00, 277.79it/s]Running loglikelihood requests:  70%|███████   | 39361/56168 [04:17<00:59, 283.05it/s]Running loglikelihood requests:  70%|███████   | 39425/56168 [04:17<01:05, 257.44it/s]Running loglikelihood requests:  70%|███████   | 39489/56168 [04:17<01:01, 271.92it/s]Running loglikelihood requests:  70%|███████   | 39550/56168 [04:17<00:51, 325.11it/s]Running loglikelihood requests:  70%|███████   | 39588/56168 [04:17<01:00, 276.22it/s]Running loglikelihood requests:  71%|███████   | 39620/56168 [04:18<01:08, 240.22it/s]Running loglikelihood requests:  71%|███████   | 39668/56168 [04:18<00:58, 282.91it/s]Running loglikelihood requests:  71%|███████   | 39702/56168 [04:18<01:07, 244.13it/s]Running loglikelihood requests:  71%|███████   | 39745/56168 [04:18<01:17, 210.98it/s]Running loglikelihood requests:  71%|███████   | 39809/56168 [04:18<01:07, 243.30it/s]Running loglikelihood requests:  71%|███████   | 39873/56168 [04:19<01:11, 226.50it/s]Running loglikelihood requests:  71%|███████   | 39937/56168 [04:19<01:06, 244.04it/s]Running loglikelihood requests:  71%|███████   | 39997/56168 [04:19<00:54, 297.41it/s]Running loglikelihood requests:  71%|███████▏  | 40033/56168 [04:19<01:03, 254.87it/s]Running loglikelihood requests:  71%|███████▏  | 40065/56168 [04:19<01:11, 225.79it/s]Running loglikelihood requests:  71%|███████▏  | 40112/56168 [04:20<00:59, 268.37it/s]Running loglikelihood requests:  71%|███████▏  | 40144/56168 [04:20<01:09, 230.61it/s]Running loglikelihood requests:  72%|███████▏  | 40193/56168 [04:20<01:16, 207.99it/s]Running loglikelihood requests:  72%|███████▏  | 40257/56168 [04:20<01:07, 235.61it/s]Running loglikelihood requests:  72%|███████▏  | 40304/56168 [04:20<00:58, 273.05it/s]Running loglikelihood requests:  72%|███████▏  | 40336/56168 [04:21<01:07, 235.06it/s]Running loglikelihood requests:  72%|███████▏  | 40385/56168 [04:21<01:07, 233.18it/s]Running loglikelihood requests:  72%|███████▏  | 40423/56168 [04:21<01:00, 258.41it/s]Running loglikelihood requests:  72%|███████▏  | 40453/56168 [04:21<01:11, 220.78it/s]Running loglikelihood requests:  72%|███████▏  | 40493/56168 [04:21<01:01, 254.36it/s]Running loglikelihood requests:  72%|███████▏  | 40523/56168 [04:21<01:14, 208.84it/s]Running loglikelihood requests:  72%|███████▏  | 40577/56168 [04:22<01:12, 215.15it/s]Running loglikelihood requests:  72%|███████▏  | 40601/56168 [04:22<01:13, 211.30it/s]Running loglikelihood requests:  72%|███████▏  | 40641/56168 [04:22<01:09, 224.63it/s]Running loglikelihood requests:  72%|███████▏  | 40705/56168 [04:22<01:09, 222.34it/s]Running loglikelihood requests:  73%|███████▎  | 40769/56168 [04:22<01:02, 244.78it/s]Running loglikelihood requests:  73%|███████▎  | 40833/56168 [04:23<01:02, 247.09it/s]Running loglikelihood requests:  73%|███████▎  | 40897/56168 [04:23<00:56, 269.76it/s]Running loglikelihood requests:  73%|███████▎  | 40961/56168 [04:23<00:52, 290.96it/s]Running loglikelihood requests:  73%|███████▎  | 40992/56168 [04:23<00:51, 294.24it/s]Running loglikelihood requests:  73%|███████▎  | 41025/56168 [04:23<00:58, 258.23it/s]Running loglikelihood requests:  73%|███████▎  | 41089/56168 [04:24<00:56, 266.43it/s]Running loglikelihood requests:  73%|███████▎  | 41153/56168 [04:24<00:56, 266.01it/s]Running loglikelihood requests:  73%|███████▎  | 41217/56168 [04:24<00:54, 272.75it/s]Running loglikelihood requests:  73%|███████▎  | 41281/56168 [04:24<00:56, 262.17it/s]Running loglikelihood requests:  74%|███████▎  | 41345/56168 [04:24<00:50, 295.66it/s]Running loglikelihood requests:  74%|███████▎  | 41388/56168 [04:25<00:46, 316.77it/s]Running loglikelihood requests:  74%|███████▎  | 41422/56168 [04:25<01:02, 235.79it/s]Running loglikelihood requests:  74%|███████▍  | 41473/56168 [04:25<00:54, 268.86it/s]Running loglikelihood requests:  74%|███████▍  | 41530/56168 [04:25<00:45, 324.12it/s]Running loglikelihood requests:  74%|███████▍  | 41569/56168 [04:25<00:57, 255.59it/s]Running loglikelihood requests:  74%|███████▍  | 41601/56168 [04:26<01:06, 219.92it/s]Running loglikelihood requests:  74%|███████▍  | 41643/56168 [04:26<00:57, 254.74it/s]Running loglikelihood requests:  74%|███████▍  | 41674/56168 [04:26<01:05, 222.37it/s]Running loglikelihood requests:  74%|███████▍  | 41720/56168 [04:26<00:54, 266.69it/s]Running loglikelihood requests:  74%|███████▍  | 41752/56168 [04:26<01:04, 222.32it/s]Running loglikelihood requests:  74%|███████▍  | 41793/56168 [04:26<01:11, 201.61it/s]Running loglikelihood requests:  74%|███████▍  | 41817/56168 [04:27<01:11, 200.56it/s]Running loglikelihood requests:  75%|███████▍  | 41857/56168 [04:27<01:12, 197.83it/s]Running loglikelihood requests:  75%|███████▍  | 41921/56168 [04:27<01:07, 211.86it/s]Running loglikelihood requests:  75%|███████▍  | 41985/56168 [04:27<00:52, 269.60it/s]Running loglikelihood requests:  75%|███████▍  | 42049/56168 [04:27<00:57, 246.23it/s]Running loglikelihood requests:  75%|███████▍  | 42113/56168 [04:28<00:49, 282.22it/s]Running loglikelihood requests:  75%|███████▌  | 42167/56168 [04:28<00:42, 326.91it/s]Running loglikelihood requests:  75%|███████▌  | 42205/56168 [04:28<00:56, 247.87it/s]Running loglikelihood requests:  75%|███████▌  | 42241/56168 [04:28<00:56, 248.54it/s]Running loglikelihood requests:  75%|███████▌  | 42305/56168 [04:28<00:58, 237.17it/s]Running loglikelihood requests:  75%|███████▌  | 42369/56168 [04:29<00:53, 259.90it/s]Running loglikelihood requests:  76%|███████▌  | 42425/56168 [04:29<00:44, 309.82it/s]Running loglikelihood requests:  76%|███████▌  | 42462/56168 [04:29<00:52, 261.78it/s]Running loglikelihood requests:  76%|███████▌  | 42497/56168 [04:29<00:57, 237.69it/s]Running loglikelihood requests:  76%|███████▌  | 42542/56168 [04:29<00:50, 270.15it/s]Running loglikelihood requests:  76%|███████▌  | 42573/56168 [04:29<00:57, 235.93it/s]Running loglikelihood requests:  76%|███████▌  | 42625/56168 [04:30<01:07, 199.29it/s]Running loglikelihood requests:  76%|███████▌  | 42689/56168 [04:30<00:54, 249.10it/s]Running loglikelihood requests:  76%|███████▌  | 42740/56168 [04:30<00:45, 293.76it/s]Running loglikelihood requests:  76%|███████▌  | 42776/56168 [04:30<00:59, 224.42it/s]Running loglikelihood requests:  76%|███████▌  | 42817/56168 [04:31<00:57, 233.52it/s]Running loglikelihood requests:  76%|███████▋  | 42881/56168 [04:31<00:58, 226.86it/s]Running loglikelihood requests:  76%|███████▋  | 42945/56168 [04:31<00:53, 245.84it/s]Running loglikelihood requests:  77%|███████▋  | 42980/56168 [04:31<00:50, 262.22it/s]Running loglikelihood requests:  77%|███████▋  | 43010/56168 [04:31<00:57, 227.04it/s]Running loglikelihood requests:  77%|███████▋  | 43073/56168 [04:31<00:48, 271.28it/s]Running loglikelihood requests:  77%|███████▋  | 43136/56168 [04:32<00:38, 335.52it/s]Running loglikelihood requests:  77%|███████▋  | 43175/56168 [04:32<00:50, 259.80it/s]Running loglikelihood requests:  77%|███████▋  | 43207/56168 [04:32<00:51, 250.11it/s]Running loglikelihood requests:  77%|███████▋  | 43265/56168 [04:32<00:56, 230.03it/s]Running loglikelihood requests:  77%|███████▋  | 43329/56168 [04:33<00:51, 251.11it/s]Running loglikelihood requests:  77%|███████▋  | 43365/56168 [04:33<00:47, 269.30it/s]Running loglikelihood requests:  77%|███████▋  | 43395/56168 [04:33<00:59, 215.46it/s]Running loglikelihood requests:  77%|███████▋  | 43452/56168 [04:33<00:45, 277.97it/s]Running loglikelihood requests:  77%|███████▋  | 43487/56168 [04:33<01:17, 163.70it/s]Running loglikelihood requests:  77%|███████▋  | 43521/56168 [04:34<01:12, 174.99it/s]Running loglikelihood requests:  78%|███████▊  | 43563/56168 [04:34<00:59, 211.97it/s]Running loglikelihood requests:  78%|███████▊  | 43593/56168 [04:34<01:10, 178.26it/s]Running loglikelihood requests:  78%|███████▊  | 43640/56168 [04:34<00:55, 225.26it/s]Running loglikelihood requests:  78%|███████▊  | 43671/56168 [04:34<01:03, 197.12it/s]Running loglikelihood requests:  78%|███████▊  | 43713/56168 [04:34<01:03, 195.77it/s]Running loglikelihood requests:  78%|███████▊  | 43763/56168 [04:35<00:50, 247.96it/s]Running loglikelihood requests:  78%|███████▊  | 43794/56168 [04:35<00:57, 216.87it/s]Running loglikelihood requests:  78%|███████▊  | 43841/56168 [04:35<00:56, 216.32it/s]Running loglikelihood requests:  78%|███████▊  | 43897/56168 [04:35<00:43, 279.25it/s]Running loglikelihood requests:  78%|███████▊  | 43932/56168 [04:35<00:42, 288.98it/s]Running loglikelihood requests:  78%|███████▊  | 43969/56168 [04:35<00:55, 220.14it/s]Running loglikelihood requests:  78%|███████▊  | 44033/56168 [04:36<00:47, 253.48it/s]Running loglikelihood requests:  79%|███████▊  | 44097/56168 [04:36<00:44, 269.26it/s]Running loglikelihood requests:  79%|███████▊  | 44128/56168 [04:36<00:43, 274.46it/s]Running loglikelihood requests:  79%|███████▊  | 44161/56168 [04:36<00:48, 245.72it/s]Running loglikelihood requests:  79%|███████▊  | 44225/56168 [04:36<00:43, 275.63it/s]Running loglikelihood requests:  79%|███████▉  | 44274/56168 [04:36<00:37, 314.55it/s]Running loglikelihood requests:  79%|███████▉  | 44308/56168 [04:37<00:45, 259.98it/s]Running loglikelihood requests:  79%|███████▉  | 44353/56168 [04:37<00:45, 259.74it/s]Running loglikelihood requests:  79%|███████▉  | 44398/56168 [04:37<00:39, 294.53it/s]Running loglikelihood requests:  79%|███████▉  | 44431/56168 [04:37<00:48, 242.50it/s]Running loglikelihood requests:  79%|███████▉  | 44481/56168 [04:37<00:40, 287.40it/s]Running loglikelihood requests:  79%|███████▉  | 44545/56168 [04:37<00:39, 297.13it/s]Running loglikelihood requests:  79%|███████▉  | 44609/56168 [04:38<00:39, 291.93it/s]Running loglikelihood requests:  79%|███████▉  | 44641/56168 [04:38<00:39, 291.98it/s]Running loglikelihood requests:  80%|███████▉  | 44673/56168 [04:38<00:51, 223.93it/s]Running loglikelihood requests:  80%|███████▉  | 44737/56168 [04:38<00:41, 272.34it/s]Running loglikelihood requests:  80%|███████▉  | 44801/56168 [04:38<00:34, 333.15it/s]Running loglikelihood requests:  80%|███████▉  | 44865/56168 [04:38<00:28, 392.89it/s]Running loglikelihood requests:  80%|███████▉  | 44929/56168 [04:39<00:25, 434.31it/s]Running loglikelihood requests:  80%|████████  | 44993/56168 [04:39<00:23, 470.81it/s]Running loglikelihood requests:  80%|████████  | 45057/56168 [04:39<00:22, 496.84it/s]Running loglikelihood requests:  80%|████████  | 45121/56168 [04:39<00:21, 522.04it/s]Running loglikelihood requests:  80%|████████  | 45185/56168 [04:39<00:20, 532.36it/s]Running loglikelihood requests:  81%|████████  | 45249/56168 [04:39<00:20, 536.83it/s]Running loglikelihood requests:  81%|████████  | 45313/56168 [04:39<00:19, 544.08it/s]Running loglikelihood requests:  81%|████████  | 45377/56168 [04:39<00:19, 558.60it/s]Running loglikelihood requests:  81%|████████  | 45441/56168 [04:39<00:18, 578.09it/s]Running loglikelihood requests:  81%|████████  | 45505/56168 [04:40<00:18, 583.69it/s]Running loglikelihood requests:  81%|████████  | 45569/56168 [04:40<00:18, 568.81it/s]Running loglikelihood requests:  81%|████████  | 45633/56168 [04:40<00:18, 583.41it/s]Running loglikelihood requests:  81%|████████▏ | 45697/56168 [04:40<00:17, 586.07it/s]Running loglikelihood requests:  81%|████████▏ | 45761/56168 [04:40<00:17, 593.35it/s]Running loglikelihood requests:  82%|████████▏ | 45827/56168 [04:40<00:16, 612.20it/s]Running loglikelihood requests:  82%|████████▏ | 45893/56168 [04:40<00:16, 625.92it/s]Running loglikelihood requests:  82%|████████▏ | 45956/56168 [04:40<00:16, 626.35it/s]Running loglikelihood requests:  82%|████████▏ | 46021/56168 [04:40<00:16, 632.94it/s]Running loglikelihood requests:  82%|████████▏ | 46085/56168 [04:41<00:15, 633.56it/s]Running loglikelihood requests:  82%|████████▏ | 46149/56168 [04:41<00:15, 633.88it/s]Running loglikelihood requests:  82%|████████▏ | 46213/56168 [04:41<00:15, 634.13it/s]Running loglikelihood requests:  82%|████████▏ | 46277/56168 [04:41<00:15, 634.03it/s]Running loglikelihood requests:  83%|████████▎ | 46341/56168 [04:41<00:15, 632.25it/s]Running loglikelihood requests:  83%|████████▎ | 46405/56168 [04:41<00:15, 633.36it/s]Running loglikelihood requests:  83%|████████▎ | 46469/56168 [04:41<00:15, 634.01it/s]Running loglikelihood requests:  83%|████████▎ | 46533/56168 [04:41<00:15, 631.08it/s]Running loglikelihood requests:  83%|████████▎ | 46597/56168 [04:41<00:15, 601.08it/s]Running loglikelihood requests:  83%|████████▎ | 46658/56168 [04:41<00:16, 586.26it/s]Running loglikelihood requests:  83%|████████▎ | 46721/56168 [04:42<00:16, 568.17it/s]Running loglikelihood requests:  83%|████████▎ | 46785/56168 [04:42<00:16, 581.51it/s]Running loglikelihood requests:  83%|████████▎ | 46849/56168 [04:42<00:15, 582.89it/s]Running loglikelihood requests:  84%|████████▎ | 46913/56168 [04:42<00:16, 562.28it/s]Running loglikelihood requests:  84%|████████▎ | 46977/56168 [04:42<00:15, 581.17it/s]Running loglikelihood requests:  84%|████████▍ | 47041/56168 [04:42<00:15, 587.86it/s]Running loglikelihood requests:  84%|████████▍ | 47105/56168 [04:42<00:15, 574.28it/s]Running loglikelihood requests:  84%|████████▍ | 47169/56168 [04:42<00:15, 580.71it/s]Running loglikelihood requests:  84%|████████▍ | 47233/56168 [04:42<00:15, 586.59it/s]Running loglikelihood requests:  84%|████████▍ | 47297/56168 [04:43<00:14, 598.96it/s]Running loglikelihood requests:  84%|████████▍ | 47361/56168 [04:43<00:14, 610.44it/s]Running loglikelihood requests:  84%|████████▍ | 47425/56168 [04:43<00:14, 601.53it/s]Running loglikelihood requests:  85%|████████▍ | 47489/56168 [04:43<00:14, 604.48it/s]Running loglikelihood requests:  85%|████████▍ | 47559/56168 [04:43<00:13, 631.96it/s]Running loglikelihood requests:  85%|████████▍ | 47623/56168 [04:43<00:13, 627.32it/s]Running loglikelihood requests:  85%|████████▍ | 47686/56168 [04:43<00:13, 620.01it/s]Running loglikelihood requests:  85%|████████▌ | 47749/56168 [04:43<00:13, 613.18it/s]Running loglikelihood requests:  85%|████████▌ | 47821/56168 [04:43<00:12, 644.06it/s]Running loglikelihood requests:  85%|████████▌ | 47886/56168 [04:43<00:12, 645.65it/s]Running loglikelihood requests:  85%|████████▌ | 47960/56168 [04:44<00:12, 673.39it/s]Running loglikelihood requests:  86%|████████▌ | 48029/56168 [04:44<00:12, 677.93it/s]Running loglikelihood requests:  86%|████████▌ | 48098/56168 [04:44<00:11, 681.44it/s]Running loglikelihood requests:  86%|████████▌ | 48167/56168 [04:44<00:11, 681.68it/s]Running loglikelihood requests:  86%|████████▌ | 48236/56168 [04:44<00:11, 672.07it/s]Running loglikelihood requests:  86%|████████▌ | 48304/56168 [04:44<00:11, 662.20it/s]Running loglikelihood requests:  86%|████████▌ | 48371/56168 [04:44<00:11, 652.60it/s]Running loglikelihood requests:  86%|████████▌ | 48437/56168 [04:44<00:11, 648.38it/s]Running loglikelihood requests:  86%|████████▋ | 48502/56168 [04:44<00:11, 646.96it/s]Running loglikelihood requests:  86%|████████▋ | 48567/56168 [04:45<00:12, 632.64it/s]Running loglikelihood requests:  87%|████████▋ | 48631/56168 [04:45<00:12, 612.31it/s]Running loglikelihood requests:  87%|████████▋ | 48705/56168 [04:45<00:14, 517.16it/s]Running loglikelihood requests:  87%|████████▋ | 48769/56168 [04:45<00:13, 532.36it/s]Running loglikelihood requests:  87%|████████▋ | 48833/56168 [04:45<00:13, 551.52it/s]Running loglikelihood requests:  87%|████████▋ | 48897/56168 [04:45<00:12, 566.04it/s]Running loglikelihood requests:  87%|████████▋ | 48966/56168 [04:45<00:12, 599.54it/s]Running loglikelihood requests:  87%|████████▋ | 49028/56168 [04:45<00:11, 596.42it/s]Running loglikelihood requests:  87%|████████▋ | 49089/56168 [04:45<00:11, 595.36it/s]Running loglikelihood requests:  88%|████████▊ | 49154/56168 [04:46<00:11, 610.89it/s]Running loglikelihood requests:  88%|████████▊ | 49217/56168 [04:46<00:11, 607.38it/s]Running loglikelihood requests:  88%|████████▊ | 49281/56168 [04:46<00:11, 607.04it/s]Running loglikelihood requests:  88%|████████▊ | 49345/56168 [04:46<00:11, 615.35it/s]Running loglikelihood requests:  88%|████████▊ | 49409/56168 [04:46<00:11, 612.91it/s]Running loglikelihood requests:  88%|████████▊ | 49473/56168 [04:46<00:10, 611.93it/s]Running loglikelihood requests:  88%|████████▊ | 49537/56168 [04:46<00:11, 602.42it/s]Running loglikelihood requests:  88%|████████▊ | 49601/56168 [04:46<00:10, 611.59it/s]Running loglikelihood requests:  88%|████████▊ | 49665/56168 [04:46<00:10, 618.29it/s]Running loglikelihood requests:  89%|████████▊ | 49729/56168 [04:46<00:10, 622.70it/s]Running loglikelihood requests:  89%|████████▊ | 49793/56168 [04:47<00:10, 625.63it/s]Running loglikelihood requests:  89%|████████▉ | 49857/56168 [04:47<00:10, 628.12it/s]Running loglikelihood requests:  89%|████████▉ | 49921/56168 [04:47<00:09, 630.62it/s]Running loglikelihood requests:  89%|████████▉ | 49998/56168 [04:47<00:09, 671.73it/s]Running loglikelihood requests:  89%|████████▉ | 50076/56168 [04:47<00:08, 703.72it/s]Running loglikelihood requests:  89%|████████▉ | 50168/56168 [04:47<00:07, 768.09it/s]Running loglikelihood requests:  89%|████████▉ | 50245/56168 [04:47<00:09, 610.11it/s]Running loglikelihood requests:  90%|████████▉ | 50325/56168 [04:47<00:08, 657.98it/s]Running loglikelihood requests:  90%|████████▉ | 50413/56168 [04:47<00:08, 716.66it/s]Running loglikelihood requests:  90%|████████▉ | 50497/56168 [04:48<00:09, 605.86it/s]Running loglikelihood requests:  90%|█████████ | 50584/56168 [04:48<00:08, 669.42it/s]Running loglikelihood requests:  90%|█████████ | 50663/56168 [04:48<00:07, 700.16it/s]Running loglikelihood requests:  90%|█████████ | 50738/56168 [04:48<00:07, 712.84it/s]Running loglikelihood requests:  90%|█████████ | 50817/56168 [04:48<00:09, 591.13it/s]Running loglikelihood requests:  91%|█████████ | 50893/56168 [04:48<00:08, 631.64it/s]Running loglikelihood requests:  91%|█████████ | 50967/56168 [04:48<00:07, 659.40it/s]Running loglikelihood requests:  91%|█████████ | 51037/56168 [04:48<00:07, 669.36it/s]Running loglikelihood requests:  91%|█████████ | 51107/56168 [04:49<00:07, 677.02it/s]Running loglikelihood requests:  91%|█████████ | 51177/56168 [04:49<00:07, 682.86it/s]Running loglikelihood requests:  91%|█████████ | 51251/56168 [04:49<00:07, 699.06it/s]Running loglikelihood requests:  91%|█████████▏| 51329/56168 [04:49<00:08, 575.71it/s]Running loglikelihood requests:  92%|█████████▏| 51409/56168 [04:49<00:07, 631.45it/s]Running loglikelihood requests:  92%|█████████▏| 51488/56168 [04:49<00:06, 672.97it/s]Running loglikelihood requests:  92%|█████████▏| 51560/56168 [04:49<00:06, 685.68it/s]Running loglikelihood requests:  92%|█████████▏| 51632/56168 [04:49<00:06, 694.84it/s]Running loglikelihood requests:  92%|█████████▏| 51705/56168 [04:49<00:06, 704.88it/s]Running loglikelihood requests:  92%|█████████▏| 51777/56168 [04:50<00:07, 567.76it/s]Running loglikelihood requests:  92%|█████████▏| 51856/56168 [04:50<00:06, 623.04it/s]Running loglikelihood requests:  92%|█████████▏| 51931/56168 [04:50<00:06, 656.19it/s]Running loglikelihood requests:  93%|█████████▎| 52003/56168 [04:50<00:06, 673.38it/s]Running loglikelihood requests:  93%|█████████▎| 52078/56168 [04:50<00:05, 694.65it/s]Running loglikelihood requests:  93%|█████████▎| 52157/56168 [04:50<00:05, 721.45it/s]Running loglikelihood requests:  93%|█████████▎| 52231/56168 [04:50<00:06, 582.73it/s]Running loglikelihood requests:  93%|█████████▎| 52303/56168 [04:50<00:06, 616.82it/s]Running loglikelihood requests:  93%|█████████▎| 52381/56168 [04:50<00:05, 659.33it/s]Running loglikelihood requests:  93%|█████████▎| 52459/56168 [04:51<00:05, 692.21it/s]Running loglikelihood requests:  94%|█████████▎| 52540/56168 [04:51<00:05, 724.96it/s]Running loglikelihood requests:  94%|█████████▎| 52615/56168 [04:51<00:06, 588.22it/s]Running loglikelihood requests:  94%|█████████▍| 52685/56168 [04:51<00:05, 615.65it/s]Running loglikelihood requests:  94%|█████████▍| 52760/56168 [04:51<00:05, 650.54it/s]Running loglikelihood requests:  94%|█████████▍| 52838/56168 [04:51<00:04, 685.44it/s]Running loglikelihood requests:  94%|█████████▍| 52927/56168 [04:51<00:04, 742.55it/s]Running loglikelihood requests:  94%|█████████▍| 53004/56168 [04:51<00:05, 605.02it/s]Running loglikelihood requests:  95%|█████████▍| 53089/56168 [04:52<00:04, 665.37it/s]Running loglikelihood requests:  95%|█████████▍| 53175/56168 [04:52<00:04, 716.02it/s]Running loglikelihood requests:  95%|█████████▍| 53252/56168 [04:52<00:04, 595.04it/s]Running loglikelihood requests:  95%|█████████▍| 53329/56168 [04:52<00:04, 636.78it/s]Running loglikelihood requests:  95%|█████████▌| 53412/56168 [04:52<00:04, 685.97it/s]Running loglikelihood requests:  95%|█████████▌| 53498/56168 [04:52<00:03, 732.34it/s]Running loglikelihood requests:  95%|█████████▌| 53576/56168 [04:52<00:04, 603.31it/s]Running loglikelihood requests:  96%|█████████▌| 53651/56168 [04:52<00:03, 638.59it/s]Running loglikelihood requests:  96%|█████████▌| 53733/56168 [04:53<00:03, 685.06it/s]Running loglikelihood requests:  96%|█████████▌| 53822/56168 [04:53<00:03, 740.01it/s]Running loglikelihood requests:  96%|█████████▌| 53900/56168 [04:53<00:03, 622.92it/s]Running loglikelihood requests:  96%|█████████▌| 54017/56168 [04:53<00:03, 647.04it/s]Running loglikelihood requests:  96%|█████████▋| 54145/56168 [04:53<00:02, 679.33it/s]Running loglikelihood requests:  97%|█████████▋| 54273/56168 [04:53<00:02, 701.21it/s]Running loglikelihood requests:  97%|█████████▋| 54401/56168 [04:53<00:02, 713.36it/s]Running loglikelihood requests:  97%|█████████▋| 54529/56168 [04:54<00:02, 724.04it/s]Running loglikelihood requests:  97%|█████████▋| 54657/56168 [04:54<00:02, 730.79it/s]Running loglikelihood requests:  98%|█████████▊| 54785/56168 [04:54<00:01, 737.11it/s]Running loglikelihood requests:  98%|█████████▊| 54913/56168 [04:54<00:01, 740.44it/s]Running loglikelihood requests:  98%|█████████▊| 55041/56168 [04:54<00:01, 744.00it/s]Running loglikelihood requests:  98%|█████████▊| 55169/56168 [04:55<00:01, 746.22it/s]Running loglikelihood requests:  98%|█████████▊| 55297/56168 [04:55<00:01, 747.76it/s]Running loglikelihood requests:  99%|█████████▊| 55425/56168 [04:55<00:00, 750.31it/s]Running loglikelihood requests:  99%|█████████▉| 55544/56168 [04:55<00:00, 838.80it/s]Running loglikelihood requests:  99%|█████████▉| 55633/56168 [04:55<00:00, 721.50it/s]Running loglikelihood requests:  99%|█████████▉| 55745/56168 [04:55<00:00, 693.31it/s]Running loglikelihood requests:  99%|█████████▉| 55833/56168 [04:55<00:00, 730.30it/s]Running loglikelihood requests: 100%|█████████▉| 55937/56168 [04:56<00:00, 694.17it/s]Running loglikelihood requests: 100%|█████████▉| 56065/56168 [04:56<00:00, 712.24it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [04:56<00:00, 189.54it/s]
2025-05-15:01:38:07,861 WARNING  [huggingface.py:1353] Failed to get model SHA for /work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo/checkpoint-150 at revision main. Error: Repo id must be in the form 'repo_name' or 'namespace/repo_name': '/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo/checkpoint-150'. Use `repo_type` argument if needed.
2025-05-15:01:38:14,509 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo/checkpoint-150,tokenizer=meta-llama/Meta-Llama-3-8b-Instruct), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.7872|±  |0.0034|
| - humanities                          |      2|none  |      |acc   |↑  |0.7724|±  |0.0060|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.7540|±  |0.0385|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.8667|±  |0.0265|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.8922|±  |0.0218|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.9198|±  |0.0177|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.8595|±  |0.0317|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.8148|±  |0.0376|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.8589|±  |0.0274|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.7370|±  |0.0237|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.6860|±  |0.0155|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.8135|±  |0.0221|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.8426|±  |0.0203|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.7282|±  |0.0114|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.8889|±  |0.0241|
| - other                               |      2|none  |      |acc   |↑  |0.8136|±  |0.0069|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.8400|±  |0.0368|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.8415|±  |0.0225|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.7399|±  |0.0335|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.7000|±  |0.0461|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.8027|±  |0.0267|
|  - management                         |      1|none  |     0|acc   |↑  |0.8447|±  |0.0359|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8846|±  |0.0209|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.8400|±  |0.0368|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.8519|±  |0.0127|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.8268|±  |0.0217|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.7411|±  |0.0261|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.8493|±  |0.0217|
|  - virology                           |      1|none  |     0|acc   |↑  |0.6386|±  |0.0374|
| - social sciences                     |      2|none  |      |acc   |↑  |0.8281|±  |0.0067|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.6930|±  |0.0434|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7727|±  |0.0299|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8964|±  |0.0220|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.7974|±  |0.0204|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.8697|±  |0.0219|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.8862|±  |0.0136|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.8092|±  |0.0345|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.8333|±  |0.0151|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.8000|±  |0.0383|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.7429|±  |0.0280|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8657|±  |0.0241|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8200|±  |0.0386|
| - stem                                |      2|none  |      |acc   |↑  |0.7434|±  |0.0077|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.6600|±  |0.0476|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.8148|±  |0.0336|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.7303|±  |0.0361|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.7778|±  |0.0348|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.6600|±  |0.0476|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.7100|±  |0.0456|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.6400|±  |0.0482|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.6667|±  |0.0469|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.8700|±  |0.0338|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.7277|±  |0.0291|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.7793|±  |0.0346|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.7487|±  |0.0223|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.8065|±  |0.0225|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.7685|±  |0.0297|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.7800|±  |0.0416|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.6741|±  |0.0286|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.7020|±  |0.0373|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.7778|±  |0.0284|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.7321|±  |0.0420|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.7872|±  |0.0034|
| - humanities     |      2|none  |      |acc   |↑  |0.7724|±  |0.0060|
| - other          |      2|none  |      |acc   |↑  |0.8136|±  |0.0069|
| - social sciences|      2|none  |      |acc   |↑  |0.8281|±  |0.0067|
| - stem           |      2|none  |      |acc   |↑  |0.7434|±  |0.0077|

2025-05-15:01:38:20,494 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-15:01:38:20,669 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,688 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,692 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,716 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,723 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,740 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,759 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,799 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:20,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,723 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:21,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,807 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,822 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:22,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,197 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,202 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,204 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,279 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,287 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,311 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,314 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,333 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,343 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,347 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,371 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,375 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,379 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,405 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,419 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,430 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,438 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,441 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,445 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,476 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,507 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,528 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,658 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,661 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,664 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,673 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,676 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,690 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,723 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,735 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,826 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,831 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,837 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,846 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,861 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,864 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,870 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,881 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,894 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,897 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,899 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,909 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,911 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,917 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,923 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,931 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:23,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:25,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:25,140 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:25,142 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:25,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:25,146 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:25,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:25,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:25,153 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,095 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,099 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,103 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,110 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,112 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,114 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,118 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,135 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,154 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,156 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,158 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,162 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,164 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,166 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,167 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,170 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,172 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,176 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,178 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,181 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,183 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,189 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,197 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,207 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,212 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,216 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,218 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,224 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,227 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,229 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,237 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,259 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,263 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,267 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,269 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,271 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,273 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,274 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,276 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,282 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,284 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,290 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,292 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,294 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,297 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,301 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,305 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,311 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,313 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,320 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,322 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,326 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,328 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,330 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,331 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,333 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,337 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,342 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,346 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,351 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,353 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,357 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,365 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,370 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,372 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,376 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,378 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,380 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,395 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,403 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,406 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,408 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,410 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,411 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,416 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,419 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,424 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,427 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,432 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,440 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,443 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,445 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,452 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,454 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,459 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,467 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,474 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,476 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,479 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,482 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,485 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,492 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,497 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,528 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,538 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,554 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,561 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,582 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,588 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,591 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,605 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,718 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,733 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:26,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:30,016 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:30,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:38:30,021 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-15:01:38:30,024 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-15:01:38:30,024 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo_kl/checkpoint-150', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-15:01:38:31,509 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-15:01:38:32,252 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:18<00:56, 18.69s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:34<00:33, 16.99s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:51<00:16, 16.89s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:55<00:00, 11.78s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:55<00:00, 13.80s/it]
2025-05-15:01:39:51,250 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,251 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,251 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,251 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,251 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,252 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,252 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,252 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,252 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,252 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,252 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,253 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,253 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,253 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,253 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,253 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,254 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,254 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,254 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,254 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,254 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,255 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,255 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,255 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,255 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,262 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,262 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,262 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,262 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,262 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,263 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,263 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,263 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,263 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,263 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,264 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,264 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,264 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,264 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,264 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,265 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,265 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,265 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,265 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,265 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,265 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,266 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,266 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,266 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,266 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,266 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,266 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,267 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,267 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,267 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,267 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,267 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:39:51,268 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-15:01:39:51,273 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 38%|███▊      | 38/100 [00:00<00:00, 375.06it/s] 76%|███████▌  | 76/100 [00:00<00:00, 336.13it/s]100%|██████████| 100/100 [00:00<00:00, 331.25it/s]
2025-05-15:01:39:51,594 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 18%|█▊        | 57/310 [00:00<00:00, 565.61it/s] 40%|███▉      | 123/310 [00:00<00:00, 620.48it/s] 62%|██████▏   | 191/310 [00:00<00:00, 644.86it/s] 86%|████████▌ | 266/310 [00:00<00:00, 683.86it/s]100%|██████████| 310/310 [00:00<00:00, 664.44it/s]
2025-05-15:01:39:52,086 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 53%|█████▎    | 53/100 [00:00<00:00, 522.05it/s]100%|██████████| 100/100 [00:00<00:00, 530.65it/s]
2025-05-15:01:39:52,279 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 45%|████▍     | 65/145 [00:00<00:00, 604.95it/s] 87%|████████▋ | 126/145 [00:00<00:00, 577.59it/s]100%|██████████| 145/145 [00:00<00:00, 490.01it/s]
2025-05-15:01:39:52,586 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 34%|███▍      | 34/100 [00:00<00:00, 336.88it/s] 68%|██████▊   | 68/100 [00:00<00:00, 327.97it/s]100%|██████████| 100/100 [00:00<00:00, 333.07it/s]
2025-05-15:01:39:52,899 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 18%|█▊        | 36/203 [00:00<00:00, 335.08it/s] 34%|███▍      | 70/203 [00:00<00:00, 336.67it/s] 51%|█████     | 104/203 [00:00<00:00, 321.85it/s] 67%|██████▋   | 137/203 [00:00<00:00, 318.22it/s] 84%|████████▎ | 170/203 [00:00<00:00, 316.36it/s]100%|██████████| 203/203 [00:00<00:00, 324.34it/s]
2025-05-15:01:39:53,545 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 17%|█▋        | 26/152 [00:00<00:00, 256.72it/s] 39%|███▉      | 59/152 [00:00<00:00, 298.85it/s] 59%|█████▊    | 89/152 [00:00<00:00, 245.51it/s] 76%|███████▌  | 115/152 [00:00<00:00, 234.33it/s] 91%|█████████▏| 139/152 [00:00<00:00, 231.98it/s]100%|██████████| 152/152 [00:00<00:00, 240.59it/s]
2025-05-15:01:39:54,192 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 19%|█▊        | 19/102 [00:00<00:00, 187.99it/s] 46%|████▌     | 47/102 [00:00<00:00, 240.61it/s] 73%|███████▎  | 74/102 [00:00<00:00, 239.41it/s]100%|██████████| 102/102 [00:00<00:00, 275.81it/s]
2025-05-15:01:39:54,577 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 53%|█████▎    | 53/100 [00:00<00:00, 526.07it/s]100%|██████████| 100/100 [00:00<00:00, 493.72it/s]
2025-05-15:01:39:54,792 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 22%|██▏       | 32/144 [00:00<00:00, 311.76it/s] 44%|████▍     | 64/144 [00:00<00:00, 307.84it/s] 66%|██████▌   | 95/144 [00:00<00:00, 300.13it/s] 89%|████████▉ | 128/144 [00:00<00:00, 301.24it/s]100%|██████████| 144/144 [00:00<00:00, 301.19it/s]
2025-05-15:01:39:55,287 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 15%|█▍        | 35/235 [00:00<00:00, 349.91it/s] 30%|██▉       | 70/235 [00:00<00:00, 331.98it/s] 53%|█████▎    | 124/235 [00:00<00:00, 422.90it/s] 83%|████████▎ | 196/235 [00:00<00:00, 535.00it/s]100%|██████████| 235/235 [00:00<00:00, 491.61it/s]
2025-05-15:01:39:55,791 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 29%|██▉       | 33/112 [00:00<00:00, 291.16it/s] 61%|██████    | 68/112 [00:00<00:00, 322.45it/s] 90%|█████████ | 101/112 [00:00<00:00, 315.76it/s]100%|██████████| 112/112 [00:00<00:00, 297.70it/s]
2025-05-15:01:39:56,183 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 13%|█▎        | 36/270 [00:00<00:00, 341.95it/s] 26%|██▋       | 71/270 [00:00<00:00, 345.81it/s] 39%|███▉      | 106/270 [00:00<00:00, 305.28it/s] 52%|█████▏    | 141/270 [00:00<00:00, 321.31it/s] 64%|██████▍   | 174/270 [00:00<00:00, 314.58it/s] 76%|███████▋  | 206/270 [00:00<00:00, 304.92it/s] 90%|████████▉ | 242/270 [00:00<00:00, 320.44it/s]100%|██████████| 270/270 [00:00<00:00, 336.01it/s]
2025-05-15:01:39:57,022 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 56%|█████▌    | 56/100 [00:00<00:00, 558.40it/s]100%|██████████| 100/100 [00:00<00:00, 608.27it/s]
2025-05-15:01:39:57,192 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 58%|█████▊    | 58/100 [00:00<00:00, 577.92it/s]100%|██████████| 100/100 [00:00<00:00, 522.68it/s]
2025-05-15:01:39:57,402 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 17%|█▋        | 23/135 [00:00<00:00, 185.51it/s] 37%|███▋      | 50/135 [00:00<00:00, 222.70it/s] 59%|█████▊    | 79/135 [00:00<00:00, 245.51it/s] 83%|████████▎ | 112/135 [00:00<00:00, 276.76it/s]100%|██████████| 135/135 [00:00<00:00, 271.00it/s]
2025-05-15:01:39:57,914 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 13%|█▎        | 49/378 [00:00<00:00, 488.85it/s] 31%|███       | 117/378 [00:00<00:00, 599.57it/s] 49%|████▉     | 185/378 [00:00<00:00, 634.39it/s] 67%|██████▋   | 252/378 [00:00<00:00, 645.94it/s] 84%|████████▍ | 317/378 [00:00<00:00, 617.61it/s]100%|██████████| 378/378 [00:00<00:00, 612.95it/s]
2025-05-15:01:39:58,568 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 40%|███▉      | 60/151 [00:00<00:00, 555.75it/s] 85%|████████▌ | 129/151 [00:00<00:00, 627.94it/s]100%|██████████| 151/151 [00:00<00:00, 626.63it/s]
2025-05-15:01:39:58,817 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 31%|███       | 66/216 [00:00<00:00, 658.25it/s] 61%|██████    | 132/216 [00:00<00:00, 527.35it/s] 95%|█████████▍| 205/216 [00:00<00:00, 606.88it/s]100%|██████████| 216/216 [00:00<00:00, 600.97it/s]
2025-05-15:01:39:59,186 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 17%|█▋        | 45/265 [00:00<00:00, 381.14it/s] 38%|███▊      | 102/265 [00:00<00:00, 483.62it/s] 67%|██████▋   | 178/265 [00:00<00:00, 601.64it/s] 92%|█████████▏| 244/265 [00:00<00:00, 622.37it/s]100%|██████████| 265/265 [00:00<00:00, 518.07it/s]
2025-05-15:01:39:59,709 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 40%|████      | 40/100 [00:00<00:00, 335.54it/s] 75%|███████▌  | 75/100 [00:00<00:00, 342.31it/s]100%|██████████| 100/100 [00:00<00:00, 342.08it/s]
2025-05-15:01:40:00,009 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 31%|███       | 32/103 [00:00<00:00, 318.64it/s] 69%|██████▉   | 71/103 [00:00<00:00, 350.71it/s]100%|██████████| 103/103 [00:00<00:00, 400.99it/s]
2025-05-15:01:40:00,274 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 25%|██▍       | 76/306 [00:00<00:00, 757.21it/s] 50%|████▉     | 152/306 [00:00<00:00, 717.25it/s] 74%|███████▍  | 227/306 [00:00<00:00, 729.24it/s] 98%|█████████▊| 301/306 [00:00<00:00, 677.98it/s]100%|██████████| 306/306 [00:00<00:00, 697.10it/s]
2025-05-15:01:40:00,725 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 41%|████      | 71/173 [00:00<00:00, 708.25it/s] 82%|████████▏ | 142/173 [00:00<00:00, 545.58it/s]100%|██████████| 173/173 [00:00<00:00, 526.30it/s]
2025-05-15:01:40:01,074 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 13%|█▎        | 21/166 [00:00<00:00, 208.88it/s] 38%|███▊      | 63/166 [00:00<00:00, 306.16it/s] 59%|█████▉    | 98/166 [00:00<00:00, 303.34it/s] 87%|████████▋ | 144/166 [00:00<00:00, 340.74it/s]100%|██████████| 166/166 [00:00<00:00, 325.01it/s]
2025-05-15:01:40:01,647 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 13%|█▎        | 35/272 [00:00<00:00, 344.85it/s] 26%|██▌       | 70/272 [00:00<00:00, 328.27it/s] 39%|███▉      | 106/272 [00:00<00:00, 342.22it/s] 52%|█████▏    | 141/272 [00:00<00:00, 299.95it/s] 64%|██████▍   | 175/272 [00:00<00:00, 312.78it/s] 83%|████████▎ | 226/272 [00:00<00:00, 373.96it/s]100%|██████████| 272/272 [00:00<00:00, 378.52it/s]
2025-05-15:01:40:02,394 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s]  9%|▉         | 70/783 [00:00<00:01, 697.36it/s] 18%|█▊        | 140/783 [00:00<00:00, 681.62it/s] 27%|██▋       | 209/783 [00:00<00:00, 683.14it/s] 36%|███▌      | 278/783 [00:00<00:00, 670.08it/s] 44%|████▍     | 348/783 [00:00<00:00, 677.85it/s] 53%|█████▎    | 416/783 [00:00<00:00, 676.36it/s] 62%|██████▏   | 484/783 [00:00<00:00, 675.51it/s] 70%|███████   | 552/783 [00:00<00:00, 673.83it/s] 79%|███████▉  | 622/783 [00:00<00:00, 681.40it/s] 88%|████████▊ | 691/783 [00:01<00:00, 677.43it/s] 97%|█████████▋| 760/783 [00:01<00:00, 680.44it/s]100%|██████████| 783/783 [00:01<00:00, 678.36it/s]
2025-05-15:01:40:03,580 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 69%|██████▉   | 69/100 [00:00<00:00, 686.34it/s]100%|██████████| 100/100 [00:00<00:00, 687.22it/s]
2025-05-15:01:40:03,732 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 59%|█████▉    | 59/100 [00:00<00:00, 582.17it/s]100%|██████████| 100/100 [00:00<00:00, 545.04it/s]
2025-05-15:01:40:03,920 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 24%|██▍       | 68/282 [00:00<00:00, 676.88it/s] 48%|████▊     | 136/282 [00:00<00:00, 578.98it/s] 73%|███████▎  | 206/282 [00:00<00:00, 627.98it/s] 98%|█████████▊| 275/282 [00:00<00:00, 648.12it/s]100%|██████████| 282/282 [00:00<00:00, 637.80it/s]
2025-05-15:01:40:04,383 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:03, 71.41it/s] 35%|███▌      | 82/234 [00:00<00:00, 266.54it/s] 64%|██████▎   | 149/234 [00:00<00:00, 399.68it/s] 94%|█████████▍| 221/234 [00:00<00:00, 500.65it/s]100%|██████████| 234/234 [00:00<00:00, 398.83it/s]
2025-05-15:01:40:04,980 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 33%|███▎      | 73/223 [00:00<00:00, 720.58it/s] 65%|██████▌   | 146/223 [00:00<00:00, 723.09it/s] 98%|█████████▊| 219/223 [00:00<00:00, 725.63it/s]100%|██████████| 223/223 [00:00<00:00, 724.62it/s]
2025-05-15:01:40:05,299 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 50%|█████     | 55/110 [00:00<00:00, 545.89it/s]100%|██████████| 110/110 [00:00<00:00, 613.49it/s]
2025-05-15:01:40:05,483 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 32%|███▏      | 65/201 [00:00<00:00, 646.75it/s] 73%|███████▎  | 147/201 [00:00<00:00, 745.01it/s]100%|██████████| 201/201 [00:00<00:00, 736.47it/s]
2025-05-15:01:40:05,764 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 43%|████▎     | 85/198 [00:00<00:00, 849.55it/s] 86%|████████▋ | 171/198 [00:00<00:00, 850.67it/s]100%|██████████| 198/198 [00:00<00:00, 852.69it/s]
2025-05-15:01:40:06,004 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 35%|███▍      | 85/245 [00:00<00:00, 840.98it/s] 70%|██████▉   | 171/245 [00:00<00:00, 848.19it/s]100%|██████████| 245/245 [00:00<00:00, 849.08it/s]
2025-05-15:01:40:06,303 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 16%|█▌        | 87/545 [00:00<00:00, 866.86it/s] 32%|███▏      | 175/545 [00:00<00:00, 872.40it/s] 48%|████▊     | 264/545 [00:00<00:00, 876.89it/s] 65%|██████▍   | 352/545 [00:00<00:00, 874.47it/s] 81%|████████  | 440/545 [00:00<00:00, 874.74it/s] 97%|█████████▋| 528/545 [00:00<00:00, 873.09it/s]100%|██████████| 545/545 [00:00<00:00, 873.54it/s]
2025-05-15:01:40:06,944 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 868.07it/s]100%|██████████| 100/100 [00:00<00:00, 867.47it/s]
2025-05-15:01:40:07,063 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 23%|██▎       | 88/390 [00:00<00:00, 872.37it/s] 45%|████▌     | 176/390 [00:00<00:00, 859.14it/s] 67%|██████▋   | 263/390 [00:00<00:00, 862.96it/s] 90%|████████▉ | 350/390 [00:00<00:00, 862.35it/s]100%|██████████| 390/390 [00:00<00:00, 862.54it/s]
2025-05-15:01:40:07,528 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 37%|███▋      | 87/238 [00:00<00:00, 869.10it/s] 73%|███████▎  | 174/238 [00:00<00:00, 867.66it/s]100%|██████████| 238/238 [00:00<00:00, 867.37it/s]
2025-05-15:01:40:07,810 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 77%|███████▋  | 88/114 [00:00<00:00, 872.79it/s]100%|██████████| 114/114 [00:00<00:00, 869.18it/s]
2025-05-15:01:40:07,945 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 14%|█▍        | 86/612 [00:00<00:00, 854.09it/s] 28%|██▊       | 173/612 [00:00<00:00, 859.00it/s] 42%|████▏     | 260/612 [00:00<00:00, 863.52it/s] 57%|█████▋    | 347/612 [00:00<00:00, 836.63it/s] 70%|███████   | 431/612 [00:00<00:00, 798.68it/s] 84%|████████▎ | 512/612 [00:00<00:00, 776.27it/s] 96%|█████████▋| 590/612 [00:00<00:00, 763.52it/s]100%|██████████| 612/612 [00:00<00:00, 794.62it/s]
2025-05-15:01:40:08,736 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 48%|████▊     | 63/131 [00:00<00:00, 627.82it/s]100%|██████████| 131/131 [00:00<00:00, 680.31it/s]
2025-05-15:01:40:08,934 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 39%|███▉      | 76/193 [00:00<00:00, 755.14it/s] 79%|███████▉  | 152/193 [00:00<00:00, 752.80it/s]100%|██████████| 193/193 [00:00<00:00, 753.59it/s]
2025-05-15:01:40:09,200 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  8%|▊         | 76/895 [00:00<00:01, 750.22it/s] 17%|█▋        | 152/895 [00:00<00:00, 748.29it/s] 25%|██▌       | 228/895 [00:00<00:00, 749.06it/s] 34%|███▍      | 303/895 [00:00<00:00, 743.45it/s] 42%|████▏     | 379/895 [00:00<00:00, 746.25it/s] 51%|█████     | 454/895 [00:00<00:00, 745.12it/s] 59%|█████▉    | 529/895 [00:00<00:00, 740.96it/s] 67%|██████▋   | 604/895 [00:00<00:00, 739.44it/s] 76%|███████▌  | 678/895 [00:00<00:00, 727.40it/s] 84%|████████▍ | 751/895 [00:01<00:00, 612.97it/s] 91%|█████████ | 816/895 [00:01<00:00, 561.28it/s] 99%|█████████▉| 884/895 [00:01<00:00, 590.69it/s]100%|██████████| 895/895 [00:01<00:00, 665.45it/s]
2025-05-15:01:40:10,578 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 25%|██▍       | 59/237 [00:00<00:00, 586.03it/s] 51%|█████▏    | 122/237 [00:00<00:00, 591.97it/s] 77%|███████▋  | 182/237 [00:00<00:00, 584.03it/s]100%|██████████| 237/237 [00:00<00:00, 572.19it/s]
2025-05-15:01:40:11,011 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 38%|███▊      | 63/165 [00:00<00:00, 628.40it/s] 76%|███████▋  | 126/165 [00:00<00:00, 568.00it/s]100%|██████████| 165/165 [00:00<00:00, 592.42it/s]
2025-05-15:01:40:11,300 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 18%|█▊        | 56/311 [00:00<00:00, 539.44it/s] 39%|███▉      | 121/311 [00:00<00:00, 600.96it/s] 59%|█████▊    | 182/311 [00:00<00:00, 560.75it/s] 80%|████████  | 250/311 [00:00<00:00, 603.06it/s]100%|██████████| 311/311 [00:00<00:00, 573.03it/s]100%|██████████| 311/311 [00:00<00:00, 576.14it/s]
2025-05-15:01:40:11,855 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 18%|█▊        | 64/346 [00:00<00:00, 638.81it/s] 37%|███▋      | 128/346 [00:00<00:00, 600.22it/s] 55%|█████▍    | 189/346 [00:00<00:00, 594.73it/s] 72%|███████▏  | 249/346 [00:00<00:00, 575.87it/s] 89%|████████▉ | 308/346 [00:00<00:00, 578.43it/s]100%|██████████| 346/346 [00:00<00:00, 577.66it/s]
2025-05-15:01:40:12,470 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 29%|██▉       | 59/204 [00:00<00:00, 567.79it/s] 57%|█████▋    | 117/204 [00:00<00:00, 571.41it/s] 90%|████████▉ | 183/204 [00:00<00:00, 594.39it/s]100%|██████████| 204/204 [00:00<00:00, 582.73it/s]
2025-05-15:01:40:12,831 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 55%|█████▍    | 66/121 [00:00<00:00, 653.03it/s]100%|██████████| 121/121 [00:00<00:00, 627.91it/s]
2025-05-15:01:40:13,038 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  4%|▍         | 67/1534 [00:00<00:02, 669.56it/s]  9%|▊         | 134/1534 [00:00<00:02, 657.18it/s] 13%|█▎        | 206/1534 [00:00<00:01, 683.35it/s] 18%|█▊        | 276/1534 [00:00<00:01, 687.89it/s] 22%|██▏       | 345/1534 [00:00<00:01, 666.65it/s] 28%|██▊       | 430/1534 [00:00<00:01, 726.90it/s] 34%|███▎      | 517/1534 [00:00<00:01, 771.68it/s] 39%|███▉      | 604/1534 [00:00<00:01, 801.53it/s] 45%|████▌     | 691/1534 [00:00<00:01, 820.23it/s] 51%|█████     | 778/1534 [00:01<00:00, 832.71it/s] 56%|█████▋    | 865/1534 [00:01<00:00, 841.22it/s] 62%|██████▏   | 952/1534 [00:01<00:00, 848.76it/s] 68%|██████▊   | 1039/1534 [00:01<00:00, 854.19it/s] 73%|███████▎  | 1127/1534 [00:01<00:00, 859.49it/s] 79%|███████▉  | 1214/1534 [00:01<00:00, 861.72it/s] 85%|████████▍ | 1301/1534 [00:01<00:00, 819.10it/s] 90%|█████████ | 1384/1534 [00:01<00:00, 802.80it/s] 96%|█████████▌| 1467/1534 [00:01<00:00, 809.42it/s]100%|██████████| 1534/1534 [00:01<00:00, 793.54it/s]
2025-05-15:01:40:15,046 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 51%|█████     | 87/171 [00:00<00:00, 866.37it/s]100%|██████████| 171/171 [00:00<00:00, 858.26it/s]
2025-05-15:01:40:15,252 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 81%|████████  | 87/108 [00:00<00:00, 864.66it/s]100%|██████████| 108/108 [00:00<00:00, 867.97it/s]
2025-05-15:01:40:15,381 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 46%|████▌     | 58/126 [00:00<00:00, 573.14it/s] 92%|█████████▏| 116/126 [00:00<00:00, 526.86it/s]100%|██████████| 126/126 [00:00<00:00, 539.66it/s]
2025-05-15:01:40:15,620 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 10%|▉         | 31/324 [00:00<00:00, 309.76it/s] 27%|██▋       | 88/324 [00:00<00:01, 134.72it/s] 36%|███▌      | 117/324 [00:00<00:01, 164.85it/s] 57%|█████▋    | 184/324 [00:00<00:00, 266.56it/s] 69%|██████▊   | 222/324 [00:00<00:00, 290.42it/s] 86%|████████▋ | 280/324 [00:01<00:00, 360.55it/s]100%|██████████| 324/324 [00:01<00:00, 376.53it/s]100%|██████████| 324/324 [00:01<00:00, 283.88it/s]
2025-05-15:01:40:16,776 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 32%|███▏      | 52/163 [00:00<00:00, 491.07it/s] 63%|██████▎   | 102/163 [00:00<00:00, 488.29it/s] 93%|█████████▎| 151/163 [00:00<00:00, 485.82it/s]100%|██████████| 163/163 [00:00<00:00, 457.59it/s]
2025-05-15:01:40:17,141 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:04<64:13:07,  4.12s/it]Running loglikelihood requests:   0%|          | 22/56168 [00:04<2:08:59,  7.25it/s]Running loglikelihood requests:   0%|          | 40/56168 [00:04<1:01:55, 15.11it/s]Running loglikelihood requests:   0%|          | 58/56168 [00:04<37:24, 25.00it/s]  Running loglikelihood requests:   0%|          | 73/56168 [00:06<1:07:20, 13.88it/s]Running loglikelihood requests:   0%|          | 93/56168 [00:06<42:41, 21.90it/s]  Running loglikelihood requests:   0%|          | 113/56168 [00:06<29:01, 32.20it/s]Running loglikelihood requests:   0%|          | 129/56168 [00:08<52:20, 17.84it/s]Running loglikelihood requests:   0%|          | 151/56168 [00:08<34:51, 26.78it/s]Running loglikelihood requests:   0%|          | 171/56168 [00:08<25:12, 37.02it/s]Running loglikelihood requests:   0%|          | 191/56168 [00:08<18:55, 49.29it/s]Running loglikelihood requests:   0%|          | 208/56168 [00:10<39:38, 23.53it/s]Running loglikelihood requests:   0%|          | 230/56168 [00:10<27:43, 33.63it/s]Running loglikelihood requests:   0%|          | 250/56168 [00:10<20:44, 44.92it/s]Running loglikelihood requests:   0%|          | 266/56168 [00:12<40:44, 22.87it/s]Running loglikelihood requests:   1%|          | 285/56168 [00:12<29:50, 31.22it/s]Running loglikelihood requests:   1%|          | 304/56168 [00:12<22:16, 41.80it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:14<41:35, 22.38it/s]Running loglikelihood requests:   1%|          | 338/56168 [00:14<31:26, 29.59it/s]Running loglikelihood requests:   1%|          | 356/56168 [00:14<23:31, 39.55it/s]Running loglikelihood requests:   1%|          | 371/56168 [00:14<18:59, 48.95it/s]Running loglikelihood requests:   1%|          | 386/56168 [00:16<42:05, 22.09it/s]Running loglikelihood requests:   1%|          | 406/56168 [00:16<29:18, 31.71it/s]Running loglikelihood requests:   1%|          | 427/56168 [00:16<20:51, 44.54it/s]Running loglikelihood requests:   1%|          | 446/56168 [00:16<15:58, 58.11it/s]Running loglikelihood requests:   1%|          | 463/56168 [00:18<36:18, 25.57it/s]Running loglikelihood requests:   1%|          | 479/56168 [00:18<28:01, 33.13it/s]Running loglikelihood requests:   1%|          | 500/56168 [00:18<20:03, 46.26it/s]Running loglikelihood requests:   1%|          | 516/56168 [00:19<39:00, 23.77it/s]Running loglikelihood requests:   1%|          | 527/56168 [00:20<32:55, 28.17it/s]Running loglikelihood requests:   1%|          | 541/56168 [00:20<25:40, 36.11it/s]Running loglikelihood requests:   1%|          | 555/56168 [00:20<20:20, 45.55it/s]Running loglikelihood requests:   1%|          | 569/56168 [00:20<16:24, 56.47it/s]Running loglikelihood requests:   1%|          | 582/56168 [00:21<42:31, 21.79it/s]Running loglikelihood requests:   1%|          | 599/56168 [00:22<29:55, 30.95it/s]Running loglikelihood requests:   1%|          | 615/56168 [00:22<22:30, 41.15it/s]Running loglikelihood requests:   1%|          | 628/56168 [00:22<18:56, 48.86it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:23<41:05, 22.52it/s]Running loglikelihood requests:   1%|          | 656/56168 [00:23<30:18, 30.53it/s]Running loglikelihood requests:   1%|          | 673/56168 [00:23<21:59, 42.07it/s]Running loglikelihood requests:   1%|          | 688/56168 [00:24<17:19, 53.39it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:25<37:25, 24.70it/s]Running loglikelihood requests:   1%|▏         | 729/56168 [00:25<24:08, 38.28it/s]Running loglikelihood requests:   1%|▏         | 749/56168 [00:25<17:54, 51.57it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:27<32:57, 28.01it/s]Running loglikelihood requests:   1%|▏         | 789/56168 [00:27<24:17, 37.99it/s]Running loglikelihood requests:   1%|▏         | 803/56168 [00:27<20:15, 45.53it/s]Running loglikelihood requests:   1%|▏         | 817/56168 [00:27<17:07, 53.89it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:28<35:23, 26.06it/s]Running loglikelihood requests:   2%|▏         | 853/56168 [00:28<24:53, 37.03it/s]Running loglikelihood requests:   2%|▏         | 873/56168 [00:29<18:16, 50.41it/s]Running loglikelihood requests:   2%|▏         | 894/56168 [00:29<13:41, 67.24it/s]Running loglikelihood requests:   2%|▏         | 911/56168 [00:30<30:48, 29.89it/s]Running loglikelihood requests:   2%|▏         | 924/56168 [00:30<25:26, 36.18it/s]Running loglikelihood requests:   2%|▏         | 940/56168 [00:30<19:47, 46.52it/s]Running loglikelihood requests:   2%|▏         | 960/56168 [00:30<14:39, 62.74it/s]Running loglikelihood requests:   2%|▏         | 975/56168 [00:32<32:36, 28.21it/s]Running loglikelihood requests:   2%|▏         | 996/56168 [00:32<22:47, 40.33it/s]Running loglikelihood requests:   2%|▏         | 1011/56168 [00:32<18:25, 49.87it/s]Running loglikelihood requests:   2%|▏         | 1026/56168 [00:33<35:47, 25.68it/s]Running loglikelihood requests:   2%|▏         | 1043/56168 [00:33<26:28, 34.69it/s]Running loglikelihood requests:   2%|▏         | 1057/56168 [00:33<21:19, 43.08it/s]Running loglikelihood requests:   2%|▏         | 1071/56168 [00:34<17:16, 53.15it/s]Running loglikelihood requests:   2%|▏         | 1086/56168 [00:34<14:00, 65.57it/s]Running loglikelihood requests:   2%|▏         | 1100/56168 [00:35<34:41, 26.45it/s]Running loglikelihood requests:   2%|▏         | 1120/56168 [00:35<23:44, 38.66it/s]Running loglikelihood requests:   2%|▏         | 1148/56168 [00:35<15:08, 60.58it/s]Running loglikelihood requests:   2%|▏         | 1165/56168 [00:36<29:27, 31.12it/s]Running loglikelihood requests:   2%|▏         | 1185/56168 [00:37<21:45, 42.12it/s]Running loglikelihood requests:   2%|▏         | 1204/56168 [00:37<16:46, 54.59it/s]Running loglikelihood requests:   2%|▏         | 1220/56168 [00:38<32:08, 28.50it/s]Running loglikelihood requests:   2%|▏         | 1240/56168 [00:38<23:21, 39.19it/s]Running loglikelihood requests:   2%|▏         | 1264/56168 [00:38<16:26, 55.63it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:39<30:19, 30.17it/s]Running loglikelihood requests:   2%|▏         | 1301/56168 [00:40<22:30, 40.62it/s]Running loglikelihood requests:   2%|▏         | 1318/56168 [00:40<17:53, 51.11it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:41<25:35, 35.71it/s]Running loglikelihood requests:   2%|▏         | 1367/56168 [00:41<19:02, 47.96it/s]Running loglikelihood requests:   2%|▏         | 1387/56168 [00:41<14:57, 61.06it/s]Running loglikelihood requests:   3%|▎         | 1407/56168 [00:41<11:59, 76.10it/s]Running loglikelihood requests:   3%|▎         | 1424/56168 [00:42<26:32, 34.38it/s]Running loglikelihood requests:   3%|▎         | 1446/56168 [00:42<19:18, 47.23it/s]Running loglikelihood requests:   3%|▎         | 1466/56168 [00:43<14:58, 60.87it/s]Running loglikelihood requests:   3%|▎         | 1483/56168 [00:44<28:22, 32.12it/s]Running loglikelihood requests:   3%|▎         | 1517/56168 [00:44<17:17, 52.66it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:45<27:14, 33.42it/s]Running loglikelihood requests:   3%|▎         | 1553/56168 [00:45<22:14, 40.91it/s]Running loglikelihood requests:   3%|▎         | 1569/56168 [00:45<18:14, 49.88it/s]Running loglikelihood requests:   3%|▎         | 1584/56168 [00:45<15:21, 59.27it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:47<29:27, 30.87it/s]Running loglikelihood requests:   3%|▎         | 1621/56168 [00:47<21:22, 42.52it/s]Running loglikelihood requests:   3%|▎         | 1640/56168 [00:47<16:19, 55.67it/s]Running loglikelihood requests:   3%|▎         | 1657/56168 [00:47<13:17, 68.31it/s]Running loglikelihood requests:   3%|▎         | 1673/56168 [00:48<28:45, 31.59it/s]Running loglikelihood requests:   3%|▎         | 1691/56168 [00:48<21:30, 42.22it/s]Running loglikelihood requests:   3%|▎         | 1711/56168 [00:48<15:57, 56.87it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:50<28:41, 31.63it/s]Running loglikelihood requests:   3%|▎         | 1749/56168 [00:50<21:01, 43.15it/s]Running loglikelihood requests:   3%|▎         | 1769/56168 [00:50<15:52, 57.10it/s]Running loglikelihood requests:   3%|▎         | 1789/56168 [00:50<12:25, 72.98it/s]Running loglikelihood requests:   3%|▎         | 1806/56168 [00:51<26:13, 34.54it/s]Running loglikelihood requests:   3%|▎         | 1841/56168 [00:51<15:44, 57.52it/s]Running loglikelihood requests:   3%|▎         | 1860/56168 [00:52<26:02, 34.75it/s]Running loglikelihood requests:   3%|▎         | 1880/56168 [00:52<20:06, 45.01it/s]Running loglikelihood requests:   3%|▎         | 1900/56168 [00:53<15:43, 57.53it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:54<26:08, 34.59it/s]Running loglikelihood requests:   3%|▎         | 1933/56168 [00:54<22:44, 39.76it/s]Running loglikelihood requests:   3%|▎         | 1947/56168 [00:54<18:45, 48.18it/s]Running loglikelihood requests:   3%|▎         | 1962/56168 [00:54<15:26, 58.51it/s]Running loglikelihood requests:   4%|▎         | 1977/56168 [00:54<12:54, 69.95it/s]Running loglikelihood requests:   4%|▎         | 1990/56168 [00:55<30:36, 29.49it/s]Running loglikelihood requests:   4%|▎         | 2010/56168 [00:55<21:11, 42.59it/s]Running loglikelihood requests:   4%|▎         | 2032/56168 [00:55<15:00, 60.12it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:57<28:24, 31.76it/s]Running loglikelihood requests:   4%|▎         | 2069/56168 [00:57<20:41, 43.57it/s]Running loglikelihood requests:   4%|▎         | 2089/56168 [00:57<15:35, 57.81it/s]Running loglikelihood requests:   4%|▎         | 2106/56168 [00:57<12:46, 70.54it/s]Running loglikelihood requests:   4%|▍         | 2122/56168 [00:58<27:01, 33.32it/s]Running loglikelihood requests:   4%|▍         | 2142/56168 [00:58<19:41, 45.73it/s]Running loglikelihood requests:   4%|▍         | 2162/56168 [00:58<14:53, 60.44it/s]Running loglikelihood requests:   4%|▍         | 2178/56168 [00:59<26:59, 33.34it/s]Running loglikelihood requests:   4%|▍         | 2200/56168 [00:59<19:07, 47.04it/s]Running loglikelihood requests:   4%|▍         | 2220/56168 [01:00<14:39, 61.37it/s]Running loglikelihood requests:   4%|▍         | 2240/56168 [01:00<11:34, 77.66it/s]Running loglikelihood requests:   4%|▍         | 2258/56168 [01:01<23:59, 37.46it/s]Running loglikelihood requests:   4%|▍         | 2278/56168 [01:01<17:59, 49.90it/s]Running loglikelihood requests:   4%|▍         | 2301/56168 [01:01<13:15, 67.75it/s]Running loglikelihood requests:   4%|▍         | 2318/56168 [01:02<23:46, 37.76it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [01:03<20:50, 43.01it/s]Running loglikelihood requests:   4%|▍         | 2389/56168 [01:03<17:07, 52.33it/s]Running loglikelihood requests:   4%|▍         | 2416/56168 [01:03<12:55, 69.28it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [01:04<22:36, 39.62it/s]Running loglikelihood requests:   4%|▍         | 2453/56168 [01:04<17:48, 50.28it/s]Running loglikelihood requests:   4%|▍         | 2473/56168 [01:05<14:09, 63.20it/s]Running loglikelihood requests:   4%|▍         | 2495/56168 [01:05<11:07, 80.37it/s]Running loglikelihood requests:   4%|▍         | 2513/56168 [01:06<22:33, 39.64it/s]Running loglikelihood requests:   4%|▍         | 2527/56168 [01:06<18:55, 47.24it/s]Running loglikelihood requests:   5%|▍         | 2547/56168 [01:06<14:24, 62.03it/s]Running loglikelihood requests:   5%|▍         | 2563/56168 [01:07<26:14, 34.06it/s]Running loglikelihood requests:   5%|▍         | 2583/56168 [01:07<19:18, 46.27it/s]Running loglikelihood requests:   5%|▍         | 2605/56168 [01:07<14:13, 62.72it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [01:08<24:47, 36.01it/s]Running loglikelihood requests:   5%|▍         | 2645/56168 [01:08<18:41, 47.74it/s]Running loglikelihood requests:   5%|▍         | 2665/56168 [01:09<14:26, 61.76it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [01:10<21:41, 41.09it/s]Running loglikelihood requests:   5%|▍         | 2709/56168 [01:10<16:45, 53.18it/s]Running loglikelihood requests:   5%|▍         | 2729/56168 [01:10<13:11, 67.50it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [01:11<22:11, 40.11it/s]Running loglikelihood requests:   5%|▍         | 2773/56168 [01:11<17:09, 51.86it/s]Running loglikelihood requests:   5%|▍         | 2789/56168 [01:11<14:19, 62.12it/s]Running loglikelihood requests:   5%|▌         | 2809/56168 [01:11<11:22, 78.20it/s]Running loglikelihood requests:   5%|▌         | 2825/56168 [01:12<23:37, 37.64it/s]Running loglikelihood requests:   5%|▌         | 2848/56168 [01:12<16:47, 52.93it/s]Running loglikelihood requests:   5%|▌         | 2863/56168 [01:12<14:15, 62.33it/s]Running loglikelihood requests:   5%|▌         | 2878/56168 [01:12<12:12, 72.77it/s]Running loglikelihood requests:   5%|▌         | 2893/56168 [01:14<26:01, 34.12it/s]Running loglikelihood requests:   5%|▌         | 2915/56168 [01:14<18:07, 48.96it/s]Running loglikelihood requests:   5%|▌         | 2935/56168 [01:14<13:47, 64.31it/s]Running loglikelihood requests:   5%|▌         | 2951/56168 [01:15<25:43, 34.49it/s]Running loglikelihood requests:   5%|▌         | 2971/56168 [01:15<18:52, 46.97it/s]Running loglikelihood requests:   5%|▌         | 2991/56168 [01:15<14:21, 61.73it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [01:16<24:41, 35.88it/s]Running loglikelihood requests:   5%|▌         | 3023/56168 [01:16<20:14, 43.77it/s]Running loglikelihood requests:   5%|▌         | 3044/56168 [01:16<14:46, 59.90it/s]Running loglikelihood requests:   5%|▌         | 3064/56168 [01:16<11:31, 76.74it/s]Running loglikelihood requests:   5%|▌         | 3081/56168 [01:17<23:24, 37.79it/s]Running loglikelihood requests:   6%|▌         | 3098/56168 [01:18<18:15, 48.42it/s]Running loglikelihood requests:   6%|▌         | 3122/56168 [01:18<12:56, 68.28it/s]Running loglikelihood requests:   6%|▌         | 3139/56168 [01:19<24:01, 36.78it/s]Running loglikelihood requests:   6%|▌         | 3159/56168 [01:19<17:57, 49.19it/s]Running loglikelihood requests:   6%|▌         | 3175/56168 [01:19<14:42, 60.03it/s]Running loglikelihood requests:   6%|▌         | 3190/56168 [01:19<12:29, 70.69it/s]Running loglikelihood requests:   6%|▌         | 3205/56168 [01:20<25:50, 34.15it/s]Running loglikelihood requests:   6%|▌         | 3226/56168 [01:20<18:15, 48.33it/s]Running loglikelihood requests:   6%|▌         | 3241/56168 [01:20<15:02, 58.67it/s]Running loglikelihood requests:   6%|▌         | 3261/56168 [01:20<11:31, 76.50it/s]Running loglikelihood requests:   6%|▌         | 3277/56168 [01:21<23:41, 37.20it/s]Running loglikelihood requests:   6%|▌         | 3297/56168 [01:21<17:22, 50.72it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [01:22<20:55, 42.08it/s]Running loglikelihood requests:   6%|▌         | 3349/56168 [01:22<16:22, 53.76it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [01:23<17:52, 49.20it/s]Running loglikelihood requests:   6%|▌         | 3408/56168 [01:24<15:42, 56.00it/s]Running loglikelihood requests:   6%|▌         | 3426/56168 [01:24<13:12, 66.57it/s]Running loglikelihood requests:   6%|▌         | 3441/56168 [01:24<11:34, 75.91it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [01:25<23:24, 37.52it/s]Running loglikelihood requests:   6%|▌         | 3472/56168 [01:25<19:04, 46.03it/s]Running loglikelihood requests:   6%|▌         | 3496/56168 [01:25<13:27, 65.19it/s]Running loglikelihood requests:   6%|▋         | 3516/56168 [01:25<10:45, 81.58it/s]Running loglikelihood requests:   6%|▋         | 3533/56168 [01:26<22:07, 39.66it/s]Running loglikelihood requests:   6%|▋         | 3548/56168 [01:26<17:59, 48.75it/s]Running loglikelihood requests:   6%|▋         | 3563/56168 [01:26<14:47, 59.28it/s]Running loglikelihood requests:   6%|▋         | 3581/56168 [01:26<11:48, 74.22it/s]Running loglikelihood requests:   6%|▋         | 3596/56168 [01:27<24:09, 36.28it/s]Running loglikelihood requests:   6%|▋         | 3646/56168 [01:28<11:33, 75.72it/s]Running loglikelihood requests:   7%|▋         | 3668/56168 [01:28<18:03, 48.47it/s]Running loglikelihood requests:   7%|▋         | 3690/56168 [01:29<14:14, 61.40it/s]Running loglikelihood requests:   7%|▋         | 3710/56168 [01:29<11:43, 74.58it/s]Running loglikelihood requests:   7%|▋         | 3728/56168 [01:30<20:49, 41.98it/s]Running loglikelihood requests:   7%|▋         | 3748/56168 [01:30<16:09, 54.08it/s]Running loglikelihood requests:   7%|▋         | 3768/56168 [01:30<12:46, 68.39it/s]Running loglikelihood requests:   7%|▋         | 3785/56168 [01:31<22:11, 39.33it/s]Running loglikelihood requests:   7%|▋         | 3805/56168 [01:31<16:49, 51.89it/s]Running loglikelihood requests:   7%|▋         | 3827/56168 [01:31<12:42, 68.65it/s]Running loglikelihood requests:   7%|▋         | 3844/56168 [01:32<22:12, 39.27it/s]Running loglikelihood requests:   7%|▋         | 3895/56168 [01:32<11:21, 76.67it/s]Running loglikelihood requests:   7%|▋         | 3919/56168 [01:33<17:52, 48.71it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [01:34<17:17, 50.31it/s]Running loglikelihood requests:   7%|▋         | 3984/56168 [01:34<15:31, 56.00it/s]Running loglikelihood requests:   7%|▋         | 3999/56168 [01:34<13:44, 63.29it/s]Running loglikelihood requests:   7%|▋         | 4014/56168 [01:34<12:17, 70.76it/s]Running loglikelihood requests:   7%|▋         | 4030/56168 [01:34<10:41, 81.28it/s]Running loglikelihood requests:   7%|▋         | 4045/56168 [01:35<22:04, 39.34it/s]Running loglikelihood requests:   7%|▋         | 4056/56168 [01:36<19:13, 45.16it/s]Running loglikelihood requests:   7%|▋         | 4067/56168 [01:36<16:41, 52.00it/s]Running loglikelihood requests:   7%|▋         | 4080/56168 [01:36<13:59, 62.01it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [01:37<25:49, 33.60it/s]Running loglikelihood requests:   7%|▋         | 4116/56168 [01:37<18:23, 47.17it/s]Running loglikelihood requests:   7%|▋         | 4130/56168 [01:37<15:06, 57.40it/s]Running loglikelihood requests:   7%|▋         | 4145/56168 [01:37<12:29, 69.39it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [01:38<24:16, 35.71it/s]Running loglikelihood requests:   7%|▋         | 4177/56168 [01:38<18:40, 46.39it/s]Running loglikelihood requests:   7%|▋         | 4194/56168 [01:38<14:30, 59.68it/s]Running loglikelihood requests:   7%|▋         | 4208/56168 [01:38<12:21, 70.07it/s]Running loglikelihood requests:   8%|▊         | 4223/56168 [01:38<10:32, 82.07it/s]Running loglikelihood requests:   8%|▊         | 4236/56168 [01:39<23:32, 36.77it/s]Running loglikelihood requests:   8%|▊         | 4256/56168 [01:39<16:28, 52.52it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [01:40<19:20, 44.72it/s]Running loglikelihood requests:   8%|▊         | 4303/56168 [01:40<16:28, 52.48it/s]Running loglikelihood requests:   8%|▊         | 4317/56168 [01:40<14:06, 61.25it/s]Running loglikelihood requests:   8%|▊         | 4331/56168 [01:41<12:12, 70.80it/s]Running loglikelihood requests:   8%|▊         | 4347/56168 [01:41<10:15, 84.20it/s]Running loglikelihood requests:   8%|▊         | 4361/56168 [01:42<22:58, 37.58it/s]Running loglikelihood requests:   8%|▊         | 4375/56168 [01:42<18:21, 47.00it/s]Running loglikelihood requests:   8%|▊         | 4391/56168 [01:42<14:25, 59.80it/s]Running loglikelihood requests:   8%|▊         | 4405/56168 [01:42<12:11, 70.72it/s]Running loglikelihood requests:   8%|▊         | 4418/56168 [01:43<25:26, 33.90it/s]Running loglikelihood requests:   8%|▊         | 4432/56168 [01:43<19:51, 43.40it/s]Running loglikelihood requests:   8%|▊         | 4449/56168 [01:43<14:51, 58.00it/s]Running loglikelihood requests:   8%|▊         | 4470/56168 [01:43<10:50, 79.44it/s]Running loglikelihood requests:   8%|▊         | 4485/56168 [01:44<21:57, 39.22it/s]Running loglikelihood requests:   8%|▊         | 4505/56168 [01:44<15:55, 54.07it/s]Running loglikelihood requests:   8%|▊         | 4527/56168 [01:44<11:44, 73.33it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [01:45<21:04, 40.84it/s]Running loglikelihood requests:   8%|▊         | 4566/56168 [01:45<15:33, 55.28it/s]Running loglikelihood requests:   8%|▊         | 4586/56168 [01:45<12:08, 70.85it/s]Running loglikelihood requests:   8%|▊         | 4606/56168 [01:45<09:46, 87.85it/s]Running loglikelihood requests:   8%|▊         | 4623/56168 [01:46<19:27, 44.15it/s]Running loglikelihood requests:   8%|▊         | 4637/56168 [01:46<16:23, 52.38it/s]Running loglikelihood requests:   8%|▊         | 4655/56168 [01:47<12:54, 66.52it/s]Running loglikelihood requests:   8%|▊         | 4670/56168 [01:47<11:03, 77.57it/s]Running loglikelihood requests:   8%|▊         | 4684/56168 [01:48<21:46, 39.42it/s]Running loglikelihood requests:   8%|▊         | 4735/56168 [01:48<10:10, 84.31it/s]Running loglikelihood requests:   8%|▊         | 4758/56168 [01:49<16:39, 51.42it/s]Running loglikelihood requests:   9%|▊         | 4775/56168 [01:49<14:18, 59.85it/s]Running loglikelihood requests:   9%|▊         | 4791/56168 [01:49<12:29, 68.57it/s]Running loglikelihood requests:   9%|▊         | 4806/56168 [01:50<21:52, 39.13it/s]Running loglikelihood requests:   9%|▊         | 4820/56168 [01:50<18:11, 47.05it/s]Running loglikelihood requests:   9%|▊         | 4843/56168 [01:50<13:04, 65.43it/s]Running loglikelihood requests:   9%|▊         | 4860/56168 [01:50<10:55, 78.29it/s]Running loglikelihood requests:   9%|▊         | 4876/56168 [01:51<21:12, 40.30it/s]Running loglikelihood requests:   9%|▊         | 4890/56168 [01:51<17:27, 48.96it/s]Running loglikelihood requests:   9%|▊         | 4905/56168 [01:51<14:11, 60.20it/s]Running loglikelihood requests:   9%|▉         | 4920/56168 [01:51<11:47, 72.45it/s]Running loglikelihood requests:   9%|▉         | 4934/56168 [01:52<23:30, 36.32it/s]Running loglikelihood requests:   9%|▉         | 4948/56168 [01:52<18:38, 45.80it/s]Running loglikelihood requests:   9%|▉         | 4961/56168 [01:52<15:31, 54.99it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [01:53<18:01, 47.31it/s]Running loglikelihood requests:   9%|▉         | 5013/56168 [01:53<13:54, 61.32it/s]Running loglikelihood requests:   9%|▉         | 5033/56168 [01:53<10:59, 77.50it/s]Running loglikelihood requests:   9%|▉         | 5053/56168 [01:53<09:00, 94.58it/s]Running loglikelihood requests:   9%|▉         | 5069/56168 [01:54<17:54, 47.57it/s]Running loglikelihood requests:   9%|▉         | 5083/56168 [01:54<15:02, 56.58it/s]Running loglikelihood requests:   9%|▉         | 5104/56168 [01:54<11:23, 74.66it/s]Running loglikelihood requests:   9%|▉         | 5119/56168 [01:55<09:59, 85.15it/s]Running loglikelihood requests:   9%|▉         | 5134/56168 [01:55<21:07, 40.28it/s]Running loglikelihood requests:   9%|▉         | 5149/56168 [01:56<16:50, 50.48it/s]Running loglikelihood requests:   9%|▉         | 5163/56168 [01:56<13:59, 60.74it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [01:57<21:32, 39.44it/s]Running loglikelihood requests:   9%|▉         | 5205/56168 [01:57<15:52, 53.48it/s]Running loglikelihood requests:   9%|▉         | 5225/56168 [01:57<12:09, 69.81it/s]Running loglikelihood requests:   9%|▉         | 5247/56168 [01:57<09:23, 90.41it/s]Running loglikelihood requests:   9%|▉         | 5264/56168 [01:58<18:53, 44.91it/s]Running loglikelihood requests:   9%|▉         | 5283/56168 [01:58<14:33, 58.23it/s]Running loglikelihood requests:   9%|▉         | 5298/56168 [01:58<12:30, 67.82it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [01:59<22:06, 38.33it/s]Running loglikelihood requests:   9%|▉         | 5327/56168 [01:59<18:01, 47.00it/s]Running loglikelihood requests:  10%|▉         | 5342/56168 [01:59<14:32, 58.25it/s]Running loglikelihood requests:  10%|▉         | 5361/56168 [01:59<11:07, 76.08it/s]Running loglikelihood requests:  10%|▉         | 5376/56168 [01:59<09:41, 87.40it/s]Running loglikelihood requests:  10%|▉         | 5391/56168 [02:00<19:50, 42.65it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [02:01<17:04, 49.50it/s]Running loglikelihood requests:  10%|▉         | 5456/56168 [02:01<14:49, 56.98it/s]Running loglikelihood requests:  10%|▉         | 5472/56168 [02:01<12:38, 66.88it/s]Running loglikelihood requests:  10%|▉         | 5487/56168 [02:01<11:01, 76.66it/s]Running loglikelihood requests:  10%|▉         | 5503/56168 [02:01<09:34, 88.15it/s]Running loglikelihood requests:  10%|▉         | 5517/56168 [02:02<20:02, 42.11it/s]Running loglikelihood requests:  10%|▉         | 5533/56168 [02:02<15:48, 53.41it/s]Running loglikelihood requests:  10%|▉         | 5553/56168 [02:02<11:53, 70.98it/s]Running loglikelihood requests:  10%|▉         | 5568/56168 [02:03<10:14, 82.36it/s]Running loglikelihood requests:  10%|▉         | 5583/56168 [02:03<20:40, 40.76it/s]Running loglikelihood requests:  10%|▉         | 5597/56168 [02:04<16:45, 50.28it/s]Running loglikelihood requests:  10%|▉         | 5611/56168 [02:04<13:47, 61.09it/s]Running loglikelihood requests:  10%|█         | 5629/56168 [02:04<10:49, 77.86it/s]Running loglikelihood requests:  10%|█         | 5643/56168 [02:05<21:54, 38.44it/s]Running loglikelihood requests:  10%|█         | 5659/56168 [02:05<16:49, 50.04it/s]Running loglikelihood requests:  10%|█         | 5675/56168 [02:05<13:21, 62.99it/s]Running loglikelihood requests:  10%|█         | 5689/56168 [02:05<11:21, 74.12it/s]Running loglikelihood requests:  10%|█         | 5703/56168 [02:06<22:38, 37.15it/s]Running loglikelihood requests:  10%|█         | 5717/56168 [02:06<17:50, 47.11it/s]Running loglikelihood requests:  10%|█         | 5735/56168 [02:06<13:19, 63.05it/s]Running loglikelihood requests:  10%|█         | 5748/56168 [02:06<11:36, 72.39it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [02:07<23:42, 35.43it/s]Running loglikelihood requests:  10%|█         | 5781/56168 [02:07<16:26, 51.06it/s]Running loglikelihood requests:  10%|█         | 5801/56168 [02:07<12:12, 68.79it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [02:08<17:47, 47.17it/s]Running loglikelihood requests:  10%|█         | 5838/56168 [02:08<15:15, 54.95it/s]Running loglikelihood requests:  10%|█         | 5851/56168 [02:08<13:09, 63.74it/s]Running loglikelihood requests:  10%|█         | 5871/56168 [02:08<10:05, 83.05it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [02:09<18:16, 45.85it/s]Running loglikelihood requests:  11%|█         | 5909/56168 [02:09<13:40, 61.22it/s]Running loglikelihood requests:  11%|█         | 5929/56168 [02:09<10:40, 78.45it/s]Running loglikelihood requests:  11%|█         | 5949/56168 [02:09<08:40, 96.46it/s]Running loglikelihood requests:  11%|█         | 5966/56168 [02:10<16:48, 49.80it/s]Running loglikelihood requests:  11%|█         | 5989/56168 [02:10<12:15, 68.19it/s]Running loglikelihood requests:  11%|█         | 6009/56168 [02:10<09:51, 84.75it/s]Running loglikelihood requests:  11%|█         | 6026/56168 [02:11<17:26, 47.91it/s]Running loglikelihood requests:  11%|█         | 6051/56168 [02:11<12:24, 67.30it/s]Running loglikelihood requests:  11%|█         | 6071/56168 [02:11<10:03, 83.03it/s]Running loglikelihood requests:  11%|█         | 6088/56168 [02:12<17:15, 48.34it/s]Running loglikelihood requests:  11%|█         | 6109/56168 [02:12<13:05, 63.72it/s]Running loglikelihood requests:  11%|█         | 6127/56168 [02:12<10:45, 77.48it/s]Running loglikelihood requests:  11%|█         | 6144/56168 [02:12<09:13, 90.42it/s]Running loglikelihood requests:  11%|█         | 6160/56168 [02:13<17:42, 47.05it/s]Running loglikelihood requests:  11%|█         | 6180/56168 [02:13<13:20, 62.42it/s]Running loglikelihood requests:  11%|█         | 6204/56168 [02:13<09:49, 84.81it/s]Running loglikelihood requests:  11%|█         | 6222/56168 [02:14<17:29, 47.58it/s]Running loglikelihood requests:  11%|█         | 6239/56168 [02:14<14:05, 59.07it/s]Running loglikelihood requests:  11%|█         | 6254/56168 [02:14<11:57, 69.60it/s]Running loglikelihood requests:  11%|█         | 6269/56168 [02:14<10:25, 79.76it/s]Running loglikelihood requests:  11%|█         | 6283/56168 [02:15<19:30, 42.61it/s]Running loglikelihood requests:  11%|█         | 6303/56168 [02:15<14:11, 58.54it/s]Running loglikelihood requests:  11%|█▏        | 6323/56168 [02:15<10:53, 76.25it/s]Running loglikelihood requests:  11%|█▏        | 6338/56168 [02:16<18:48, 44.17it/s]Running loglikelihood requests:  11%|█▏        | 6357/56168 [02:16<14:09, 58.63it/s]Running loglikelihood requests:  11%|█▏        | 6375/56168 [02:16<11:16, 73.59it/s]Running loglikelihood requests:  11%|█▏        | 6391/56168 [02:16<09:36, 86.36it/s]Running loglikelihood requests:  11%|█▏        | 6406/56168 [02:17<16:24, 50.53it/s]Running loglikelihood requests:  11%|█▏        | 6428/56168 [02:17<11:51, 69.92it/s]Running loglikelihood requests:  11%|█▏        | 6448/56168 [02:17<09:26, 87.80it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [02:18<17:13, 48.09it/s]Running loglikelihood requests:  12%|█▏        | 6487/56168 [02:18<12:41, 65.23it/s]Running loglikelihood requests:  12%|█▏        | 6507/56168 [02:18<10:05, 81.99it/s]Running loglikelihood requests:  12%|█▏        | 6527/56168 [02:18<08:19, 99.45it/s]Running loglikelihood requests:  12%|█▏        | 6544/56168 [02:19<15:59, 51.75it/s]Running loglikelihood requests:  12%|█▏        | 6564/56168 [02:19<12:18, 67.18it/s]Running loglikelihood requests:  12%|█▏        | 6584/56168 [02:19<09:50, 83.97it/s]Running loglikelihood requests:  12%|█▏        | 6601/56168 [02:20<16:56, 48.77it/s]Running loglikelihood requests:  12%|█▏        | 6621/56168 [02:20<12:56, 63.80it/s]Running loglikelihood requests:  12%|█▏        | 6641/56168 [02:20<10:14, 80.53it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [02:21<17:40, 46.70it/s]Running loglikelihood requests:  12%|█▏        | 6677/56168 [02:21<13:23, 61.56it/s]Running loglikelihood requests:  12%|█▏        | 6697/56168 [02:21<10:33, 78.15it/s]Running loglikelihood requests:  12%|█▏        | 6719/56168 [02:21<08:21, 98.62it/s]Running loglikelihood requests:  12%|█▏        | 6737/56168 [02:22<15:57, 51.65it/s]Running loglikelihood requests:  12%|█▏        | 6757/56168 [02:22<12:22, 66.51it/s]Running loglikelihood requests:  12%|█▏        | 6772/56168 [02:22<10:52, 75.72it/s]Running loglikelihood requests:  12%|█▏        | 6787/56168 [02:23<19:10, 42.91it/s]Running loglikelihood requests:  12%|█▏        | 6808/56168 [02:23<14:00, 58.76it/s]Running loglikelihood requests:  12%|█▏        | 6828/56168 [02:23<10:54, 75.41it/s]Running loglikelihood requests:  12%|█▏        | 6848/56168 [02:23<08:49, 93.22it/s]Running loglikelihood requests:  12%|█▏        | 6865/56168 [02:24<16:09, 50.84it/s]Running loglikelihood requests:  12%|█▏        | 6885/56168 [02:24<12:24, 66.19it/s]Running loglikelihood requests:  12%|█▏        | 6905/56168 [02:24<09:52, 83.16it/s]Running loglikelihood requests:  12%|█▏        | 6921/56168 [02:25<17:05, 48.01it/s]Running loglikelihood requests:  12%|█▏        | 6941/56168 [02:25<12:58, 63.21it/s]Running loglikelihood requests:  12%|█▏        | 6961/56168 [02:25<10:13, 80.25it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [02:26<17:30, 46.85it/s]Running loglikelihood requests:  12%|█▏        | 6997/56168 [02:26<13:15, 61.77it/s]Running loglikelihood requests:  12%|█▏        | 7017/56168 [02:26<10:25, 78.53it/s]Running loglikelihood requests:  13%|█▎        | 7037/56168 [02:26<08:28, 96.55it/s]Running loglikelihood requests:  13%|█▎        | 7054/56168 [02:27<16:09, 50.63it/s]Running loglikelihood requests:  13%|█▎        | 7069/56168 [02:27<13:25, 60.93it/s]Running loglikelihood requests:  13%|█▎        | 7085/56168 [02:27<11:09, 73.35it/s]Running loglikelihood requests:  13%|█▎        | 7100/56168 [02:27<09:42, 84.30it/s]Running loglikelihood requests:  13%|█▎        | 7114/56168 [02:28<18:25, 44.37it/s]Running loglikelihood requests:  13%|█▎        | 7134/56168 [02:28<13:25, 60.85it/s]Running loglikelihood requests:  13%|█▎        | 7152/56168 [02:28<10:39, 76.61it/s]Running loglikelihood requests:  13%|█▎        | 7168/56168 [02:28<09:06, 89.68it/s]Running loglikelihood requests:  13%|█▎        | 7183/56168 [02:29<17:56, 45.51it/s]Running loglikelihood requests:  13%|█▎        | 7200/56168 [02:29<13:59, 58.32it/s]Running loglikelihood requests:  13%|█▎        | 7222/56168 [02:29<10:19, 79.04it/s]Running loglikelihood requests:  13%|█▎        | 7237/56168 [02:30<17:52, 45.63it/s]Running loglikelihood requests:  13%|█▎        | 7252/56168 [02:30<14:35, 55.89it/s]Running loglikelihood requests:  13%|█▎        | 7273/56168 [02:30<10:50, 75.16it/s]Running loglikelihood requests:  13%|█▎        | 7288/56168 [02:30<09:47, 83.21it/s]Running loglikelihood requests:  13%|█▎        | 7302/56168 [02:31<18:36, 43.78it/s]Running loglikelihood requests:  13%|█▎        | 7325/56168 [02:31<12:55, 62.96it/s]Running loglikelihood requests:  13%|█▎        | 7345/56168 [02:31<10:07, 80.31it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [02:32<17:24, 46.71it/s]Running loglikelihood requests:  13%|█▎        | 7381/56168 [02:32<13:08, 61.91it/s]Running loglikelihood requests:  13%|█▎        | 7401/56168 [02:32<10:18, 78.91it/s]Running loglikelihood requests:  13%|█▎        | 7417/56168 [02:32<08:56, 90.84it/s]Running loglikelihood requests:  13%|█▎        | 7433/56168 [02:33<16:43, 48.55it/s]Running loglikelihood requests:  13%|█▎        | 7453/56168 [02:33<12:35, 64.44it/s]Running loglikelihood requests:  13%|█▎        | 7475/56168 [02:33<09:35, 84.64it/s]Running loglikelihood requests:  13%|█▎        | 7492/56168 [02:34<16:25, 49.40it/s]Running loglikelihood requests:  13%|█▎        | 7512/56168 [02:34<12:34, 64.48it/s]Running loglikelihood requests:  13%|█▎        | 7532/56168 [02:34<09:58, 81.27it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [02:35<15:33, 52.06it/s]Running loglikelihood requests:  13%|█▎        | 7568/56168 [02:35<13:06, 61.81it/s]Running loglikelihood requests:  13%|█▎        | 7582/56168 [02:35<11:20, 71.38it/s]Running loglikelihood requests:  14%|█▎        | 7598/56168 [02:35<09:32, 84.82it/s]Running loglikelihood requests:  14%|█▎        | 7612/56168 [02:35<08:49, 91.78it/s]Running loglikelihood requests:  14%|█▎        | 7626/56168 [02:36<17:35, 46.00it/s]Running loglikelihood requests:  14%|█▎        | 7643/56168 [02:36<13:29, 59.98it/s]Running loglikelihood requests:  14%|█▎        | 7656/56168 [02:36<11:40, 69.29it/s]Running loglikelihood requests:  14%|█▎        | 7677/56168 [02:37<08:46, 92.17it/s]Running loglikelihood requests:  14%|█▎        | 7692/56168 [02:37<17:16, 46.78it/s]Running loglikelihood requests:  14%|█▎        | 7705/56168 [02:37<14:29, 55.74it/s]Running loglikelihood requests:  14%|█▍        | 7743/56168 [02:37<08:06, 99.52it/s]Running loglikelihood requests:  14%|█▍        | 7763/56168 [02:38<15:18, 52.67it/s]Running loglikelihood requests:  14%|█▍        | 7781/56168 [02:38<12:29, 64.56it/s]Running loglikelihood requests:  14%|█▍        | 7798/56168 [02:38<10:27, 77.06it/s]Running loglikelihood requests:  14%|█▍        | 7814/56168 [02:39<16:59, 47.42it/s]Running loglikelihood requests:  14%|█▍        | 7831/56168 [02:39<13:32, 59.47it/s]Running loglikelihood requests:  14%|█▍        | 7848/56168 [02:39<11:03, 72.84it/s]Running loglikelihood requests:  14%|█▍        | 7864/56168 [02:40<09:25, 85.38it/s]Running loglikelihood requests:  14%|█▍        | 7879/56168 [02:40<16:30, 48.73it/s]Running loglikelihood requests:  14%|█▍        | 7895/56168 [02:40<13:10, 61.08it/s]Running loglikelihood requests:  14%|█▍        | 7911/56168 [02:40<10:52, 73.96it/s]Running loglikelihood requests:  14%|█▍        | 7928/56168 [02:40<08:59, 89.47it/s]Running loglikelihood requests:  14%|█▍        | 7943/56168 [02:41<17:24, 46.17it/s]Running loglikelihood requests:  14%|█▍        | 7958/56168 [02:41<14:04, 57.10it/s]Running loglikelihood requests:  14%|█▍        | 7973/56168 [02:41<11:39, 68.95it/s]Running loglikelihood requests:  14%|█▍        | 7988/56168 [02:42<09:48, 81.80it/s]Running loglikelihood requests:  14%|█▍        | 8002/56168 [02:42<18:34, 43.21it/s]Running loglikelihood requests:  14%|█▍        | 8013/56168 [02:42<15:52, 50.55it/s]Running loglikelihood requests:  14%|█▍        | 8031/56168 [02:42<11:46, 68.10it/s]Running loglikelihood requests:  14%|█▍        | 8048/56168 [02:43<09:31, 84.19it/s]Running loglikelihood requests:  14%|█▍        | 8062/56168 [02:43<08:28, 94.57it/s]Running loglikelihood requests:  14%|█▍        | 8076/56168 [02:43<17:58, 44.59it/s]Running loglikelihood requests:  14%|█▍        | 8091/56168 [02:43<14:15, 56.19it/s]Running loglikelihood requests:  14%|█▍        | 8107/56168 [02:44<11:28, 69.80it/s]Running loglikelihood requests:  14%|█▍        | 8123/56168 [02:44<09:31, 84.04it/s]Running loglikelihood requests:  14%|█▍        | 8137/56168 [02:44<17:47, 44.98it/s]Running loglikelihood requests:  15%|█▍        | 8153/56168 [02:44<13:47, 58.02it/s]Running loglikelihood requests:  15%|█▍        | 8168/56168 [02:45<11:26, 69.95it/s]Running loglikelihood requests:  15%|█▍        | 8186/56168 [02:45<09:09, 87.31it/s]Running loglikelihood requests:  15%|█▍        | 8200/56168 [02:45<18:18, 43.65it/s]Running loglikelihood requests:  15%|█▍        | 8215/56168 [02:46<14:34, 54.81it/s]Running loglikelihood requests:  15%|█▍        | 8230/56168 [02:46<11:59, 66.66it/s]Running loglikelihood requests:  15%|█▍        | 8245/56168 [02:46<10:03, 79.37it/s]Running loglikelihood requests:  15%|█▍        | 8258/56168 [02:46<18:57, 42.11it/s]Running loglikelihood requests:  15%|█▍        | 8278/56168 [02:47<13:27, 59.32it/s]Running loglikelihood requests:  15%|█▍        | 8298/56168 [02:47<10:14, 77.85it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [02:47<14:29, 55.02it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [02:48<11:03, 71.98it/s]Running loglikelihood requests:  15%|█▍        | 8399/56168 [02:48<10:16, 77.55it/s]Running loglikelihood requests:  15%|█▍        | 8411/56168 [02:48<09:51, 80.76it/s]Running loglikelihood requests:  15%|█▍        | 8423/56168 [02:48<09:41, 82.05it/s]Running loglikelihood requests:  15%|█▌        | 8437/56168 [02:48<08:47, 90.49it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [02:49<16:55, 46.98it/s]Running loglikelihood requests:  15%|█▌        | 8469/56168 [02:49<12:28, 63.70it/s]Running loglikelihood requests:  15%|█▌        | 8489/56168 [02:49<09:41, 81.99it/s]Running loglikelihood requests:  15%|█▌        | 8511/56168 [02:49<07:39, 103.76it/s]Running loglikelihood requests:  15%|█▌        | 8528/56168 [02:50<14:13, 55.80it/s] Running loglikelihood requests:  15%|█▌        | 8548/56168 [02:50<11:01, 72.03it/s]Running loglikelihood requests:  15%|█▌        | 8568/56168 [02:50<08:51, 89.62it/s]Running loglikelihood requests:  15%|█▌        | 8584/56168 [02:51<15:12, 52.17it/s]Running loglikelihood requests:  15%|█▌        | 8597/56168 [02:51<13:10, 60.17it/s]Running loglikelihood requests:  15%|█▌        | 8610/56168 [02:51<11:26, 69.24it/s]Running loglikelihood requests:  15%|█▌        | 8626/56168 [02:51<09:30, 83.31it/s]Running loglikelihood requests:  15%|█▌        | 8640/56168 [02:51<08:44, 90.63it/s]Running loglikelihood requests:  15%|█▌        | 8653/56168 [02:52<17:50, 44.37it/s]Running loglikelihood requests:  15%|█▌        | 8667/56168 [02:52<14:20, 55.17it/s]Running loglikelihood requests:  15%|█▌        | 8682/56168 [02:52<11:33, 68.51it/s]Running loglikelihood requests:  15%|█▌        | 8696/56168 [02:52<09:55, 79.72it/s]Running loglikelihood requests:  16%|█▌        | 8709/56168 [02:53<18:45, 42.16it/s]Running loglikelihood requests:  16%|█▌        | 8723/56168 [02:53<14:50, 53.29it/s]Running loglikelihood requests:  16%|█▌        | 8737/56168 [02:53<12:04, 65.44it/s]Running loglikelihood requests:  16%|█▌        | 8753/56168 [02:53<09:45, 80.99it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [02:54<16:56, 46.63it/s]Running loglikelihood requests:  16%|█▌        | 8784/56168 [02:54<13:33, 58.22it/s]Running loglikelihood requests:  16%|█▌        | 8800/56168 [02:54<10:59, 71.86it/s]Running loglikelihood requests:  16%|█▌        | 8813/56168 [02:54<09:42, 81.27it/s]Running loglikelihood requests:  16%|█▌        | 8826/56168 [02:55<08:46, 89.91it/s]Running loglikelihood requests:  16%|█▌        | 8839/56168 [02:55<18:08, 43.49it/s]Running loglikelihood requests:  16%|█▌        | 8853/56168 [02:55<14:21, 54.94it/s]Running loglikelihood requests:  16%|█▌        | 8869/56168 [02:55<11:20, 69.47it/s]Running loglikelihood requests:  16%|█▌        | 8882/56168 [02:56<09:53, 79.66it/s]Running loglikelihood requests:  16%|█▌        | 8896/56168 [02:56<08:42, 90.42it/s]Running loglikelihood requests:  16%|█▌        | 8909/56168 [02:56<17:18, 45.52it/s]Running loglikelihood requests:  16%|█▌        | 8922/56168 [02:56<14:05, 55.90it/s]Running loglikelihood requests:  16%|█▌        | 8938/56168 [02:56<11:02, 71.33it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [02:57<15:30, 50.75it/s]Running loglikelihood requests:  16%|█▌        | 8977/56168 [02:57<12:30, 62.86it/s]Running loglikelihood requests:  16%|█▌        | 8992/56168 [02:57<10:36, 74.17it/s]Running loglikelihood requests:  16%|█▌        | 9004/56168 [02:57<09:38, 81.54it/s]Running loglikelihood requests:  16%|█▌        | 9019/56168 [02:58<08:26, 93.02it/s]Running loglikelihood requests:  16%|█▌        | 9032/56168 [02:58<16:44, 46.90it/s]Running loglikelihood requests:  16%|█▌        | 9049/56168 [02:58<12:39, 62.02it/s]Running loglikelihood requests:  16%|█▌        | 9064/56168 [02:58<10:28, 74.97it/s]Running loglikelihood requests:  16%|█▌        | 9077/56168 [02:58<09:17, 84.43it/s]Running loglikelihood requests:  16%|█▌        | 9090/56168 [02:59<17:30, 44.81it/s]Running loglikelihood requests:  16%|█▌        | 9110/56168 [02:59<12:27, 62.95it/s]Running loglikelihood requests:  16%|█▋        | 9129/56168 [02:59<09:39, 81.16it/s]Running loglikelihood requests:  16%|█▋        | 9149/56168 [02:59<07:45, 100.92it/s]Running loglikelihood requests:  16%|█▋        | 9165/56168 [03:00<13:46, 56.87it/s] Running loglikelihood requests:  16%|█▋        | 9184/56168 [03:00<10:43, 72.98it/s]Running loglikelihood requests:  16%|█▋        | 9204/56168 [03:00<08:32, 91.57it/s]Running loglikelihood requests:  16%|█▋        | 9220/56168 [03:01<14:19, 54.64it/s]Running loglikelihood requests:  16%|█▋        | 9242/56168 [03:01<10:36, 73.67it/s]Running loglikelihood requests:  16%|█▋        | 9262/56168 [03:01<08:33, 91.38it/s]Running loglikelihood requests:  17%|█▋        | 9280/56168 [03:01<07:23, 105.68it/s]Running loglikelihood requests:  17%|█▋        | 9297/56168 [03:02<13:12, 59.13it/s] Running loglikelihood requests:  17%|█▋        | 9316/56168 [03:02<10:24, 75.01it/s]Running loglikelihood requests:  17%|█▋        | 9335/56168 [03:02<08:32, 91.32it/s]Running loglikelihood requests:  17%|█▋        | 9351/56168 [03:03<13:08, 59.40it/s]Running loglikelihood requests:  17%|█▋        | 9371/56168 [03:03<10:11, 76.55it/s]Running loglikelihood requests:  17%|█▋        | 9385/56168 [03:03<09:03, 86.04it/s]Running loglikelihood requests:  17%|█▋        | 9403/56168 [03:03<07:38, 102.05it/s]Running loglikelihood requests:  17%|█▋        | 9418/56168 [03:03<13:52, 56.17it/s] Running loglikelihood requests:  17%|█▋        | 9438/56168 [03:04<10:31, 73.97it/s]Running loglikelihood requests:  17%|█▋        | 9460/56168 [03:04<08:08, 95.52it/s]Running loglikelihood requests:  17%|█▋        | 9476/56168 [03:04<13:41, 56.85it/s]Running loglikelihood requests:  17%|█▋        | 9496/56168 [03:04<10:35, 73.49it/s]Running loglikelihood requests:  17%|█▋        | 9520/56168 [03:04<08:00, 97.04it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [03:05<13:23, 58.06it/s]Running loglikelihood requests:  17%|█▋        | 9554/56168 [03:05<11:00, 70.58it/s]Running loglikelihood requests:  17%|█▋        | 9570/56168 [03:05<09:22, 82.86it/s]Running loglikelihood requests:  17%|█▋        | 9588/56168 [03:05<07:50, 98.97it/s]Running loglikelihood requests:  17%|█▋        | 9604/56168 [03:06<13:58, 55.50it/s]Running loglikelihood requests:  17%|█▋        | 9621/56168 [03:06<11:11, 69.32it/s]Running loglikelihood requests:  17%|█▋        | 9642/56168 [03:06<08:36, 90.01it/s]Running loglikelihood requests:  17%|█▋        | 9658/56168 [03:06<07:45, 99.93it/s]Running loglikelihood requests:  17%|█▋        | 9674/56168 [03:07<14:03, 55.10it/s]Running loglikelihood requests:  17%|█▋        | 9696/56168 [03:07<10:21, 74.78it/s]Running loglikelihood requests:  17%|█▋        | 9711/56168 [03:07<09:07, 84.86it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [03:08<14:30, 53.36it/s]Running loglikelihood requests:  17%|█▋        | 9745/56168 [03:08<11:51, 65.20it/s]Running loglikelihood requests:  17%|█▋        | 9764/56168 [03:08<09:23, 82.41it/s]Running loglikelihood requests:  17%|█▋        | 9780/56168 [03:08<08:09, 94.68it/s]Running loglikelihood requests:  17%|█▋        | 9795/56168 [03:09<14:16, 54.17it/s]Running loglikelihood requests:  17%|█▋        | 9814/56168 [03:09<10:56, 70.60it/s]Running loglikelihood requests:  18%|█▊        | 9831/56168 [03:09<09:02, 85.34it/s]Running loglikelihood requests:  18%|█▊        | 9846/56168 [03:09<08:03, 95.90it/s]Running loglikelihood requests:  18%|█▊        | 9861/56168 [03:10<14:18, 53.94it/s]Running loglikelihood requests:  18%|█▊        | 9886/56168 [03:10<09:50, 78.36it/s]Running loglikelihood requests:  18%|█▊        | 9906/56168 [03:10<07:59, 96.38it/s]Running loglikelihood requests:  18%|█▊        | 9923/56168 [03:10<13:33, 56.88it/s]Running loglikelihood requests:  18%|█▊        | 9942/56168 [03:10<10:40, 72.16it/s]Running loglikelihood requests:  18%|█▊        | 9957/56168 [03:11<09:21, 82.26it/s]Running loglikelihood requests:  18%|█▊        | 9975/56168 [03:11<07:50, 98.22it/s]Running loglikelihood requests:  18%|█▊        | 9991/56168 [03:11<13:32, 56.82it/s]Running loglikelihood requests:  18%|█▊        | 10010/56168 [03:11<10:32, 73.03it/s]Running loglikelihood requests:  18%|█▊        | 10026/56168 [03:11<09:01, 85.24it/s]Running loglikelihood requests:  18%|█▊        | 10046/56168 [03:12<07:23, 103.97it/s]Running loglikelihood requests:  18%|█▊        | 10062/56168 [03:12<13:13, 58.07it/s] Running loglikelihood requests:  18%|█▊        | 10076/56168 [03:12<11:15, 68.23it/s]Running loglikelihood requests:  18%|█▊        | 10094/56168 [03:12<09:04, 84.58it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [03:13<14:10, 54.13it/s]Running loglikelihood requests:  18%|█▊        | 10132/56168 [03:13<11:02, 69.47it/s]Running loglikelihood requests:  18%|█▊        | 10147/56168 [03:13<09:31, 80.56it/s]Running loglikelihood requests:  18%|█▊        | 10164/56168 [03:13<08:05, 94.81it/s]Running loglikelihood requests:  18%|█▊        | 10179/56168 [03:14<13:48, 55.53it/s]Running loglikelihood requests:  18%|█▊        | 10199/56168 [03:14<10:24, 73.61it/s]Running loglikelihood requests:  18%|█▊        | 10219/56168 [03:14<08:17, 92.42it/s]Running loglikelihood requests:  18%|█▊        | 10239/56168 [03:14<06:54, 110.91it/s]Running loglikelihood requests:  18%|█▊        | 10256/56168 [03:15<12:02, 63.55it/s] Running loglikelihood requests:  18%|█▊        | 10288/56168 [03:15<07:54, 96.66it/s]Running loglikelihood requests:  18%|█▊        | 10307/56168 [03:15<12:20, 61.94it/s]Running loglikelihood requests:  18%|█▊        | 10325/56168 [03:16<10:13, 74.73it/s]Running loglikelihood requests:  18%|█▊        | 10345/56168 [03:16<08:21, 91.32it/s]Running loglikelihood requests:  18%|█▊        | 10362/56168 [03:16<07:42, 99.02it/s]Running loglikelihood requests:  18%|█▊        | 10378/56168 [03:16<13:15, 57.53it/s]Running loglikelihood requests:  19%|█▊        | 10398/56168 [03:17<10:18, 73.96it/s]Running loglikelihood requests:  19%|█▊        | 10414/56168 [03:17<08:51, 86.03it/s]Running loglikelihood requests:  19%|█▊        | 10431/56168 [03:17<07:39, 99.56it/s]Running loglikelihood requests:  19%|█▊        | 10446/56168 [03:17<13:31, 56.31it/s]Running loglikelihood requests:  19%|█▊        | 10466/56168 [03:17<10:20, 73.64it/s]Running loglikelihood requests:  19%|█▊        | 10482/56168 [03:18<08:48, 86.42it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [03:18<14:02, 54.19it/s]Running loglikelihood requests:  19%|█▊        | 10517/56168 [03:18<10:36, 71.71it/s]Running loglikelihood requests:  19%|█▉        | 10539/56168 [03:18<08:09, 93.13it/s]Running loglikelihood requests:  19%|█▉        | 10559/56168 [03:18<06:50, 111.01it/s]Running loglikelihood requests:  19%|█▉        | 10576/56168 [03:19<11:53, 63.88it/s] Running loglikelihood requests:  19%|█▉        | 10596/56168 [03:19<09:22, 81.06it/s]Running loglikelihood requests:  19%|█▉        | 10618/56168 [03:19<07:27, 101.82it/s]Running loglikelihood requests:  19%|█▉        | 10635/56168 [03:20<12:13, 62.10it/s] Running loglikelihood requests:  19%|█▉        | 10655/56168 [03:20<09:37, 78.77it/s]Running loglikelihood requests:  19%|█▉        | 10681/56168 [03:20<07:11, 105.46it/s]Running loglikelihood requests:  19%|█▉        | 10699/56168 [03:20<11:07, 68.09it/s] Running loglikelihood requests:  19%|█▉        | 10726/56168 [03:21<08:07, 93.16it/s]Running loglikelihood requests:  19%|█▉        | 10746/56168 [03:21<06:56, 109.06it/s]Running loglikelihood requests:  19%|█▉        | 10765/56168 [03:21<11:41, 64.71it/s] Running loglikelihood requests:  19%|█▉        | 10779/56168 [03:21<10:59, 68.78it/s]Running loglikelihood requests:  19%|█▉        | 10796/56168 [03:22<09:15, 81.64it/s]Running loglikelihood requests:  19%|█▉        | 10812/56168 [03:22<08:06, 93.31it/s]Running loglikelihood requests:  19%|█▉        | 10826/56168 [03:22<13:56, 54.20it/s]Running loglikelihood requests:  19%|█▉        | 10843/56168 [03:22<11:05, 68.12it/s]Running loglikelihood requests:  19%|█▉        | 10862/56168 [03:22<08:48, 85.75it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [03:23<11:38, 64.85it/s]Running loglikelihood requests:  19%|█▉        | 10904/56168 [03:23<08:42, 86.67it/s]Running loglikelihood requests:  19%|█▉        | 10924/56168 [03:23<07:14, 104.18it/s]Running loglikelihood requests:  19%|█▉        | 10944/56168 [03:23<06:12, 121.26it/s]Running loglikelihood requests:  20%|█▉        | 10961/56168 [03:24<11:12, 67.27it/s] Running loglikelihood requests:  20%|█▉        | 10985/56168 [03:24<08:23, 89.69it/s]Running loglikelihood requests:  20%|█▉        | 11005/56168 [03:24<07:03, 106.58it/s]Running loglikelihood requests:  20%|█▉        | 11022/56168 [03:24<11:44, 64.12it/s] Running loglikelihood requests:  20%|█▉        | 11040/56168 [03:25<09:35, 78.48it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [03:25<09:53, 75.94it/s]Running loglikelihood requests:  20%|█▉        | 11093/56168 [03:25<08:16, 90.72it/s]Running loglikelihood requests:  20%|█▉        | 11114/56168 [03:25<06:57, 107.97it/s]Running loglikelihood requests:  20%|█▉        | 11131/56168 [03:25<06:30, 115.27it/s]Running loglikelihood requests:  20%|█▉        | 11147/56168 [03:26<12:22, 60.63it/s] Running loglikelihood requests:  20%|█▉        | 11170/56168 [03:26<09:18, 80.63it/s]Running loglikelihood requests:  20%|█▉        | 11190/56168 [03:26<07:40, 97.69it/s]Running loglikelihood requests:  20%|█▉        | 11207/56168 [03:27<12:16, 61.03it/s]Running loglikelihood requests:  20%|██        | 11264/56168 [03:27<06:11, 121.00it/s]Running loglikelihood requests:  20%|██        | 11289/56168 [03:27<08:57, 83.47it/s] Running loglikelihood requests:  20%|██        | 11309/56168 [03:28<07:47, 96.02it/s]Running loglikelihood requests:  20%|██        | 11328/56168 [03:28<07:07, 104.85it/s]Running loglikelihood requests:  20%|██        | 11346/56168 [03:28<10:54, 68.49it/s] Running loglikelihood requests:  20%|██        | 11368/56168 [03:28<08:43, 85.65it/s]Running loglikelihood requests:  20%|██        | 11387/56168 [03:28<07:27, 99.96it/s]Running loglikelihood requests:  20%|██        | 11404/56168 [03:29<11:36, 64.24it/s]Running loglikelihood requests:  20%|██        | 11424/56168 [03:29<09:17, 80.25it/s]Running loglikelihood requests:  20%|██        | 11446/56168 [03:29<07:25, 100.49it/s]Running loglikelihood requests:  20%|██        | 11463/56168 [03:30<11:44, 63.48it/s] Running loglikelihood requests:  20%|██        | 11477/56168 [03:30<10:13, 72.84it/s]Running loglikelihood requests:  20%|██        | 11495/56168 [03:30<08:23, 88.75it/s]Running loglikelihood requests:  20%|██        | 11512/56168 [03:30<07:16, 102.27it/s]Running loglikelihood requests:  21%|██        | 11528/56168 [03:31<12:32, 59.36it/s] Running loglikelihood requests:  21%|██        | 11547/56168 [03:31<09:46, 76.06it/s]Running loglikelihood requests:  21%|██        | 11569/56168 [03:31<07:36, 97.76it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [03:31<12:11, 60.94it/s]Running loglikelihood requests:  21%|██        | 11604/56168 [03:31<09:37, 77.17it/s]Running loglikelihood requests:  21%|██        | 11624/56168 [03:32<07:45, 95.68it/s]Running loglikelihood requests:  21%|██        | 11646/56168 [03:32<06:19, 117.20it/s]Running loglikelihood requests:  21%|██        | 11664/56168 [03:32<10:46, 68.86it/s] Running loglikelihood requests:  21%|██        | 11684/56168 [03:32<08:37, 85.95it/s]Running loglikelihood requests:  21%|██        | 11704/56168 [03:32<07:09, 103.51it/s]Running loglikelihood requests:  21%|██        | 11721/56168 [03:33<11:30, 64.33it/s] Running loglikelihood requests:  21%|██        | 11743/56168 [03:33<08:49, 83.94it/s]Running loglikelihood requests:  21%|██        | 11763/56168 [03:33<07:18, 101.27it/s]Running loglikelihood requests:  21%|██        | 11780/56168 [03:34<11:35, 63.78it/s] Running loglikelihood requests:  21%|██        | 11800/56168 [03:34<09:10, 80.55it/s]Running loglikelihood requests:  21%|██        | 11822/56168 [03:34<07:17, 101.41it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [03:34<11:19, 65.26it/s] Running loglikelihood requests:  21%|██        | 11860/56168 [03:35<09:09, 80.70it/s]Running loglikelihood requests:  21%|██        | 11880/56168 [03:35<07:31, 98.03it/s]Running loglikelihood requests:  21%|██        | 11903/56168 [03:35<06:07, 120.57it/s]Running loglikelihood requests:  21%|██        | 11921/56168 [03:35<10:15, 71.88it/s] Running loglikelihood requests:  21%|██▏       | 11941/56168 [03:35<08:19, 88.56it/s]Running loglikelihood requests:  21%|██▏       | 11961/56168 [03:35<06:57, 105.78it/s]Running loglikelihood requests:  21%|██▏       | 11978/56168 [03:36<11:15, 65.44it/s] Running loglikelihood requests:  21%|██▏       | 12002/56168 [03:36<08:23, 87.75it/s]Running loglikelihood requests:  21%|██▏       | 12022/56168 [03:36<07:02, 104.42it/s]Running loglikelihood requests:  21%|██▏       | 12039/56168 [03:37<11:14, 65.41it/s] Running loglikelihood requests:  21%|██▏       | 12059/56168 [03:37<08:56, 82.16it/s]Running loglikelihood requests:  22%|██▏       | 12080/56168 [03:37<07:14, 101.56it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [03:37<11:27, 64.09it/s] Running loglikelihood requests:  22%|██▏       | 12117/56168 [03:38<09:05, 80.74it/s]Running loglikelihood requests:  22%|██▏       | 12137/56168 [03:38<07:28, 98.13it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [03:38<10:44, 68.28it/s]Running loglikelihood requests:  22%|██▏       | 12185/56168 [03:38<08:14, 88.96it/s]Running loglikelihood requests:  22%|██▏       | 12205/56168 [03:38<06:57, 105.25it/s]Running loglikelihood requests:  22%|██▏       | 12225/56168 [03:39<10:38, 68.82it/s] Running loglikelihood requests:  22%|██▏       | 12245/56168 [03:39<08:38, 84.73it/s]Running loglikelihood requests:  22%|██▏       | 12267/56168 [03:39<07:00, 104.48it/s]Running loglikelihood requests:  22%|██▏       | 12287/56168 [03:39<06:03, 120.72it/s]Running loglikelihood requests:  22%|██▏       | 12305/56168 [03:40<10:22, 70.51it/s] Running loglikelihood requests:  22%|██▏       | 12325/56168 [03:40<08:22, 87.20it/s]Running loglikelihood requests:  22%|██▏       | 12350/56168 [03:40<06:29, 112.35it/s]Running loglikelihood requests:  22%|██▏       | 12368/56168 [03:41<10:34, 69.00it/s] Running loglikelihood requests:  22%|██▏       | 12388/56168 [03:41<08:33, 85.29it/s]Running loglikelihood requests:  22%|██▏       | 12408/56168 [03:41<07:07, 102.31it/s]Running loglikelihood requests:  22%|██▏       | 12425/56168 [03:41<11:07, 65.53it/s] Running loglikelihood requests:  22%|██▏       | 12446/56168 [03:41<08:41, 83.76it/s]Running loglikelihood requests:  22%|██▏       | 12466/56168 [03:41<07:12, 101.04it/s]Running loglikelihood requests:  22%|██▏       | 12483/56168 [03:42<11:26, 63.63it/s] Running loglikelihood requests:  22%|██▏       | 12503/56168 [03:42<09:03, 80.28it/s]Running loglikelihood requests:  22%|██▏       | 12529/56168 [03:42<06:48, 106.81it/s]Running loglikelihood requests:  22%|██▏       | 12547/56168 [03:43<10:46, 67.44it/s] Running loglikelihood requests:  22%|██▏       | 12567/56168 [03:43<08:41, 83.61it/s]Running loglikelihood requests:  22%|██▏       | 12587/56168 [03:43<07:11, 100.95it/s]Running loglikelihood requests:  22%|██▏       | 12608/56168 [03:43<06:03, 119.82it/s]Running loglikelihood requests:  22%|██▏       | 12626/56168 [03:44<10:22, 69.92it/s] Running loglikelihood requests:  23%|██▎       | 12644/56168 [03:44<08:38, 83.91it/s]Running loglikelihood requests:  23%|██▎       | 12662/56168 [03:44<07:23, 98.16it/s]Running loglikelihood requests:  23%|██▎       | 12678/56168 [03:44<11:49, 61.33it/s]Running loglikelihood requests:  23%|██▎       | 12696/56168 [03:44<09:31, 76.07it/s]Running loglikelihood requests:  23%|██▎       | 12712/56168 [03:45<08:09, 88.82it/s]Running loglikelihood requests:  23%|██▎       | 12731/56168 [03:45<06:50, 105.89it/s]Running loglikelihood requests:  23%|██▎       | 12747/56168 [03:45<11:11, 64.64it/s] Running loglikelihood requests:  23%|██▎       | 12767/56168 [03:45<08:41, 83.20it/s]Running loglikelihood requests:  23%|██▎       | 12787/56168 [03:45<07:04, 102.11it/s]Running loglikelihood requests:  23%|██▎       | 12803/56168 [03:46<11:17, 64.00it/s] Running loglikelihood requests:  23%|██▎       | 12829/56168 [03:46<08:01, 90.03it/s]Running loglikelihood requests:  23%|██▎       | 12849/56168 [03:46<06:44, 107.08it/s]Running loglikelihood requests:  23%|██▎       | 12867/56168 [03:47<10:40, 67.63it/s] Running loglikelihood requests:  23%|██▎       | 12887/56168 [03:47<08:34, 84.19it/s]Running loglikelihood requests:  23%|██▎       | 12907/56168 [03:47<07:05, 101.57it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [03:47<10:00, 71.97it/s] Running loglikelihood requests:  23%|██▎       | 12993/56168 [03:48<06:49, 105.42it/s]Running loglikelihood requests:  23%|██▎       | 13013/56168 [03:48<06:11, 116.24it/s]Running loglikelihood requests:  23%|██▎       | 13035/56168 [03:48<05:30, 130.58it/s]Running loglikelihood requests:  23%|██▎       | 13055/56168 [03:48<05:04, 141.75it/s]Running loglikelihood requests:  23%|██▎       | 13073/56168 [03:49<09:28, 75.86it/s] Running loglikelihood requests:  23%|██▎       | 13095/56168 [03:49<07:43, 92.92it/s]Running loglikelihood requests:  23%|██▎       | 13115/56168 [03:49<06:36, 108.58it/s]Running loglikelihood requests:  23%|██▎       | 13132/56168 [03:49<10:25, 68.78it/s] Running loglikelihood requests:  23%|██▎       | 13152/56168 [03:49<08:26, 84.95it/s]Running loglikelihood requests:  23%|██▎       | 13177/56168 [03:50<06:33, 109.27it/s]Running loglikelihood requests:  23%|██▎       | 13195/56168 [03:50<09:46, 73.28it/s] Running loglikelihood requests:  24%|██▎       | 13215/56168 [03:50<07:59, 89.66it/s]Running loglikelihood requests:  24%|██▎       | 13235/56168 [03:50<06:42, 106.61it/s]Running loglikelihood requests:  24%|██▎       | 13252/56168 [03:51<10:43, 66.74it/s] Running loglikelihood requests:  24%|██▎       | 13270/56168 [03:51<08:50, 80.91it/s]Running loglikelihood requests:  24%|██▎       | 13313/56168 [03:51<07:44, 92.25it/s]Running loglikelihood requests:  24%|██▎       | 13333/56168 [03:51<06:44, 105.90it/s]Running loglikelihood requests:  24%|██▍       | 13358/56168 [03:51<05:34, 127.80it/s]Running loglikelihood requests:  24%|██▍       | 13377/56168 [03:52<09:02, 78.82it/s] Running loglikelihood requests:  24%|██▍       | 13391/56168 [03:52<09:01, 79.06it/s]Running loglikelihood requests:  24%|██▍       | 13412/56168 [03:52<07:17, 97.70it/s]Running loglikelihood requests:  24%|██▍       | 13427/56168 [03:52<06:49, 104.45it/s]Running loglikelihood requests:  24%|██▍       | 13442/56168 [03:53<11:38, 61.21it/s] Running loglikelihood requests:  24%|██▍       | 13458/56168 [03:53<09:45, 72.95it/s]Running loglikelihood requests:  24%|██▍       | 13471/56168 [03:53<08:48, 80.81it/s]Running loglikelihood requests:  24%|██▍       | 13483/56168 [03:53<08:13, 86.48it/s]Running loglikelihood requests:  24%|██▍       | 13497/56168 [03:53<07:20, 96.89it/s]Running loglikelihood requests:  24%|██▍       | 13510/56168 [03:54<12:36, 56.37it/s]Running loglikelihood requests:  24%|██▍       | 13525/56168 [03:54<10:11, 69.77it/s]Running loglikelihood requests:  24%|██▍       | 13543/56168 [03:54<08:00, 88.64it/s]Running loglikelihood requests:  24%|██▍       | 13565/56168 [03:54<06:13, 113.93it/s]Running loglikelihood requests:  24%|██▍       | 13581/56168 [03:55<11:28, 61.85it/s] Running loglikelihood requests:  24%|██▍       | 13598/56168 [03:55<09:20, 76.00it/s]Running loglikelihood requests:  24%|██▍       | 13614/56168 [03:55<08:01, 88.43it/s]Running loglikelihood requests:  24%|██▍       | 13632/56168 [03:55<06:44, 105.15it/s]Running loglikelihood requests:  24%|██▍       | 13647/56168 [03:56<11:30, 61.56it/s] Running loglikelihood requests:  24%|██▍       | 13664/56168 [03:56<09:18, 76.09it/s]Running loglikelihood requests:  24%|██▍       | 13683/56168 [03:56<07:34, 93.50it/s]Running loglikelihood requests:  24%|██▍       | 13698/56168 [03:56<12:14, 57.85it/s]Running loglikelihood requests:  24%|██▍       | 13713/56168 [03:56<10:10, 69.55it/s]Running loglikelihood requests:  24%|██▍       | 13730/56168 [03:56<08:18, 85.08it/s]Running loglikelihood requests:  24%|██▍       | 13744/56168 [03:57<07:26, 95.05it/s]Running loglikelihood requests:  24%|██▍       | 13759/56168 [03:57<06:46, 104.44it/s]Running loglikelihood requests:  25%|██▍       | 13773/56168 [03:57<12:11, 57.99it/s] Running loglikelihood requests:  25%|██▍       | 13791/56168 [03:57<09:26, 74.77it/s]Running loglikelihood requests:  25%|██▍       | 13808/56168 [03:57<07:46, 90.72it/s]Running loglikelihood requests:  25%|██▍       | 13824/56168 [03:57<06:48, 103.59it/s]Running loglikelihood requests:  25%|██▍       | 13839/56168 [03:58<11:54, 59.22it/s] Running loglikelihood requests:  25%|██▍       | 13854/56168 [03:58<09:53, 71.31it/s]Running loglikelihood requests:  25%|██▍       | 13878/56168 [03:58<07:07, 98.92it/s]Running loglikelihood requests:  25%|██▍       | 13894/56168 [03:59<11:37, 60.60it/s]Running loglikelihood requests:  25%|██▍       | 13914/56168 [03:59<08:59, 78.37it/s]Running loglikelihood requests:  25%|██▍       | 13929/56168 [03:59<07:54, 89.05it/s]Running loglikelihood requests:  25%|██▍       | 13951/56168 [03:59<06:18, 111.50it/s]Running loglikelihood requests:  25%|██▍       | 13968/56168 [04:00<10:43, 65.57it/s] Running loglikelihood requests:  25%|██▍       | 13983/56168 [04:00<09:08, 76.85it/s]Running loglikelihood requests:  25%|██▍       | 13999/56168 [04:00<07:47, 90.17it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [04:00<11:37, 60.43it/s]Running loglikelihood requests:  25%|██▍       | 14035/56168 [04:00<09:15, 75.81it/s]Running loglikelihood requests:  25%|██▌       | 14054/56168 [04:01<07:35, 92.43it/s]Running loglikelihood requests:  25%|██▌       | 14071/56168 [04:01<06:35, 106.47it/s]Running loglikelihood requests:  25%|██▌       | 14087/56168 [04:01<10:58, 63.86it/s] Running loglikelihood requests:  25%|██▌       | 14103/56168 [04:01<09:05, 77.09it/s]Running loglikelihood requests:  25%|██▌       | 14120/56168 [04:01<07:40, 91.33it/s]Running loglikelihood requests:  25%|██▌       | 14135/56168 [04:01<06:52, 102.00it/s]Running loglikelihood requests:  25%|██▌       | 14150/56168 [04:02<11:42, 59.83it/s] Running loglikelihood requests:  25%|██▌       | 14166/56168 [04:02<09:35, 72.97it/s]Running loglikelihood requests:  25%|██▌       | 14184/56168 [04:02<07:44, 90.31it/s]Running loglikelihood requests:  25%|██▌       | 14203/56168 [04:02<06:29, 107.80it/s]Running loglikelihood requests:  25%|██▌       | 14218/56168 [04:03<10:50, 64.44it/s] Running loglikelihood requests:  25%|██▌       | 14240/56168 [04:03<08:04, 86.51it/s]Running loglikelihood requests:  25%|██▌       | 14259/56168 [04:03<06:47, 102.80it/s]Running loglikelihood requests:  25%|██▌       | 14275/56168 [04:03<11:16, 61.94it/s] Running loglikelihood requests:  25%|██▌       | 14297/56168 [04:04<08:29, 82.13it/s]Running loglikelihood requests:  25%|██▌       | 14312/56168 [04:04<07:33, 92.35it/s]Running loglikelihood requests:  26%|██▌       | 14329/56168 [04:04<06:34, 106.03it/s]Running loglikelihood requests:  26%|██▌       | 14345/56168 [04:04<11:04, 62.98it/s] Running loglikelihood requests:  26%|██▌       | 14367/56168 [04:04<08:18, 83.88it/s]Running loglikelihood requests:  26%|██▌       | 14382/56168 [04:05<07:29, 92.87it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [04:05<11:18, 61.52it/s]Running loglikelihood requests:  26%|██▌       | 14421/56168 [04:05<08:50, 78.75it/s]Running loglikelihood requests:  26%|██▌       | 14445/56168 [04:05<06:43, 103.41it/s]Running loglikelihood requests:  26%|██▌       | 14465/56168 [04:06<10:10, 68.36it/s] Running loglikelihood requests:  26%|██▌       | 14485/56168 [04:06<08:11, 84.82it/s]Running loglikelihood requests:  26%|██▌       | 14505/56168 [04:06<06:48, 101.87it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [04:07<09:37, 72.15it/s] Running loglikelihood requests:  26%|██▌       | 14553/56168 [04:07<07:26, 93.17it/s]Running loglikelihood requests:  26%|██▌       | 14573/56168 [04:07<06:21, 109.14it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [04:07<09:37, 71.95it/s] Running loglikelihood requests:  26%|██▌       | 14613/56168 [04:07<07:52, 87.87it/s]Running loglikelihood requests:  26%|██▌       | 14634/56168 [04:07<06:32, 105.85it/s]Running loglikelihood requests:  26%|██▌       | 14651/56168 [04:08<06:17, 110.07it/s]Running loglikelihood requests:  26%|██▌       | 14667/56168 [04:08<10:32, 65.59it/s] Running loglikelihood requests:  26%|██▌       | 14680/56168 [04:08<09:29, 72.86it/s]Running loglikelihood requests:  26%|██▌       | 14692/56168 [04:08<08:38, 80.03it/s]Running loglikelihood requests:  26%|██▌       | 14712/56168 [04:08<06:49, 101.12it/s]Running loglikelihood requests:  26%|██▌       | 14726/56168 [04:09<11:39, 59.22it/s] Running loglikelihood requests:  26%|██▋       | 14785/56168 [04:09<06:35, 104.71it/s]Running loglikelihood requests:  26%|██▋       | 14802/56168 [04:09<06:06, 112.89it/s]Running loglikelihood requests:  26%|██▋       | 14819/56168 [04:09<05:40, 121.59it/s]Running loglikelihood requests:  26%|██▋       | 14838/56168 [04:10<05:09, 133.43it/s]Running loglikelihood requests:  26%|██▋       | 14855/56168 [04:10<09:12, 74.76it/s] Running loglikelihood requests:  26%|██▋       | 14872/56168 [04:10<07:51, 87.64it/s]Running loglikelihood requests:  27%|██▋       | 14890/56168 [04:10<06:43, 102.30it/s]Running loglikelihood requests:  27%|██▋       | 14909/56168 [04:10<05:48, 118.24it/s]Running loglikelihood requests:  27%|██▋       | 14925/56168 [04:11<09:28, 72.58it/s] Running loglikelihood requests:  27%|██▋       | 14977/56168 [04:11<06:53, 99.56it/s]Running loglikelihood requests:  27%|██▋       | 14995/56168 [04:11<06:18, 108.69it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [04:12<06:23, 107.11it/s]Running loglikelihood requests:  27%|██▋       | 15054/56168 [04:12<06:14, 109.81it/s]Running loglikelihood requests:  27%|██▋       | 15077/56168 [04:12<05:21, 127.67it/s]Running loglikelihood requests:  27%|██▋       | 15093/56168 [04:12<05:09, 132.62it/s]Running loglikelihood requests:  27%|██▋       | 15109/56168 [04:13<09:04, 75.40it/s] Running loglikelihood requests:  27%|██▋       | 15127/56168 [04:13<07:38, 89.42it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [04:13<06:53, 99.25it/s]Running loglikelihood requests:  27%|██▋       | 15182/56168 [04:13<06:44, 101.45it/s]Running loglikelihood requests:  27%|██▋       | 15195/56168 [04:13<06:33, 104.10it/s]Running loglikelihood requests:  27%|██▋       | 15211/56168 [04:13<06:05, 111.96it/s]Running loglikelihood requests:  27%|██▋       | 15225/56168 [04:13<05:55, 115.28it/s]Running loglikelihood requests:  27%|██▋       | 15238/56168 [04:14<11:22, 59.97it/s] Running loglikelihood requests:  27%|██▋       | 15249/56168 [04:14<10:21, 65.85it/s]Running loglikelihood requests:  27%|██▋       | 15259/56168 [04:14<09:37, 70.80it/s]Running loglikelihood requests:  27%|██▋       | 15281/56168 [04:14<06:57, 97.86it/s]Running loglikelihood requests:  27%|██▋       | 15295/56168 [04:14<06:57, 97.97it/s]Running loglikelihood requests:  27%|██▋       | 15308/56168 [04:15<11:24, 59.66it/s]Running loglikelihood requests:  27%|██▋       | 15324/56168 [04:15<09:12, 73.96it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [04:15<08:16, 82.25it/s]Running loglikelihood requests:  27%|██▋       | 15372/56168 [04:16<08:29, 80.01it/s]Running loglikelihood requests:  27%|██▋       | 15388/56168 [04:16<07:22, 92.06it/s]Running loglikelihood requests:  27%|██▋       | 15402/56168 [04:16<06:52, 98.76it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [04:16<08:47, 77.24it/s]Running loglikelihood requests:  27%|██▋       | 15436/56168 [04:16<08:22, 81.09it/s]Running loglikelihood requests:  28%|██▊       | 15455/56168 [04:16<06:49, 99.37it/s]Running loglikelihood requests:  28%|██▊       | 15473/56168 [04:17<05:54, 114.92it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [04:17<10:16, 65.99it/s] Running loglikelihood requests:  28%|██▊       | 15503/56168 [04:17<08:53, 76.17it/s]Running loglikelihood requests:  28%|██▊       | 15521/56168 [04:17<07:25, 91.29it/s]Running loglikelihood requests:  28%|██▊       | 15536/56168 [04:17<06:39, 101.66it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [04:18<10:41, 63.35it/s] Running loglikelihood requests:  28%|██▊       | 15565/56168 [04:18<09:33, 70.81it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [04:18<06:55, 97.56it/s]Running loglikelihood requests:  28%|██▊       | 15635/56168 [04:18<06:16, 107.64it/s]Running loglikelihood requests:  28%|██▊       | 15676/56168 [04:19<04:19, 156.08it/s]Running loglikelihood requests:  28%|██▊       | 15697/56168 [04:19<07:53, 85.46it/s] Running loglikelihood requests:  28%|██▊       | 15713/56168 [04:19<07:45, 86.85it/s]Running loglikelihood requests:  28%|██▊       | 15727/56168 [04:19<07:24, 90.98it/s]Running loglikelihood requests:  28%|██▊       | 15744/56168 [04:20<06:30, 103.48it/s]Running loglikelihood requests:  28%|██▊       | 15759/56168 [04:20<12:33, 53.64it/s] Running loglikelihood requests:  28%|██▊       | 15774/56168 [04:20<10:34, 63.65it/s]Running loglikelihood requests:  28%|██▊       | 15786/56168 [04:21<10:48, 62.30it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [04:21<11:41, 57.54it/s]Running loglikelihood requests:  28%|██▊       | 15821/56168 [04:21<10:28, 64.24it/s]Running loglikelihood requests:  28%|██▊       | 15838/56168 [04:21<08:28, 79.38it/s]Running loglikelihood requests:  28%|██▊       | 15852/56168 [04:21<07:30, 89.43it/s]Running loglikelihood requests:  28%|██▊       | 15868/56168 [04:21<06:32, 102.71it/s]Running loglikelihood requests:  28%|██▊       | 15882/56168 [04:22<11:10, 60.06it/s] Running loglikelihood requests:  28%|██▊       | 15895/56168 [04:22<09:35, 69.94it/s]Running loglikelihood requests:  28%|██▊       | 15911/56168 [04:22<07:54, 84.87it/s]Running loglikelihood requests:  28%|██▊       | 15924/56168 [04:22<07:25, 90.37it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [04:23<11:09, 60.09it/s]Running loglikelihood requests:  28%|██▊       | 15950/56168 [04:23<09:29, 70.61it/s]Running loglikelihood requests:  28%|██▊       | 15970/56168 [04:23<07:10, 93.35it/s]Running loglikelihood requests:  28%|██▊       | 15987/56168 [04:23<06:11, 108.07it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [04:23<11:04, 60.47it/s] Running loglikelihood requests:  29%|██▊       | 16018/56168 [04:24<08:50, 75.72it/s]Running loglikelihood requests:  29%|██▊       | 16031/56168 [04:24<08:20, 80.27it/s]Running loglikelihood requests:  29%|██▊       | 16043/56168 [04:24<07:47, 85.79it/s]Running loglikelihood requests:  29%|██▊       | 16055/56168 [04:24<07:14, 92.31it/s]Running loglikelihood requests:  29%|██▊       | 16067/56168 [04:24<13:17, 50.28it/s]Running loglikelihood requests:  29%|██▊       | 16085/56168 [04:25<09:44, 68.55it/s]Running loglikelihood requests:  29%|██▊       | 16100/56168 [04:25<08:08, 82.01it/s]Running loglikelihood requests:  29%|██▊       | 16119/56168 [04:25<06:29, 102.83it/s]Running loglikelihood requests:  29%|██▊       | 16134/56168 [04:25<10:55, 61.05it/s] Running loglikelihood requests:  29%|██▉       | 16154/56168 [04:25<08:17, 80.49it/s]Running loglikelihood requests:  29%|██▉       | 16174/56168 [04:25<06:38, 100.32it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [04:26<10:01, 66.49it/s] Running loglikelihood requests:  29%|██▉       | 16219/56168 [04:26<07:12, 92.30it/s]Running loglikelihood requests:  29%|██▉       | 16239/56168 [04:26<06:05, 109.11it/s]Running loglikelihood requests:  29%|██▉       | 16257/56168 [04:27<09:32, 69.76it/s] Running loglikelihood requests:  29%|██▉       | 16277/56168 [04:27<07:41, 86.38it/s]Running loglikelihood requests:  29%|██▉       | 16299/56168 [04:27<06:11, 107.31it/s]Running loglikelihood requests:  29%|██▉       | 16319/56168 [04:27<05:21, 123.77it/s]Running loglikelihood requests:  29%|██▉       | 16337/56168 [04:27<09:02, 73.36it/s] Running loglikelihood requests:  29%|██▉       | 16357/56168 [04:28<07:19, 90.55it/s]Running loglikelihood requests:  29%|██▉       | 16379/56168 [04:28<05:57, 111.34it/s]Running loglikelihood requests:  29%|██▉       | 16397/56168 [04:28<09:17, 71.29it/s] Running loglikelihood requests:  29%|██▉       | 16417/56168 [04:28<07:30, 88.32it/s]Running loglikelihood requests:  29%|██▉       | 16437/56168 [04:28<06:15, 105.75it/s]Running loglikelihood requests:  29%|██▉       | 16454/56168 [04:29<09:53, 66.93it/s] Running loglikelihood requests:  29%|██▉       | 16470/56168 [04:29<08:27, 78.25it/s]Running loglikelihood requests:  29%|██▉       | 16485/56168 [04:29<07:25, 89.14it/s]Running loglikelihood requests:  29%|██▉       | 16504/56168 [04:29<06:11, 106.84it/s]Running loglikelihood requests:  29%|██▉       | 16520/56168 [04:30<10:41, 61.82it/s] Running loglikelihood requests:  29%|██▉       | 16539/56168 [04:30<08:24, 78.54it/s]Running loglikelihood requests:  29%|██▉       | 16556/56168 [04:30<07:06, 92.87it/s]Running loglikelihood requests:  30%|██▉       | 16573/56168 [04:30<06:10, 106.84it/s]Running loglikelihood requests:  30%|██▉       | 16589/56168 [04:31<10:49, 60.93it/s] Running loglikelihood requests:  30%|██▉       | 16641/56168 [04:31<07:18, 90.04it/s]Running loglikelihood requests:  30%|██▉       | 16658/56168 [04:31<06:35, 99.82it/s]Running loglikelihood requests:  30%|██▉       | 16675/56168 [04:31<05:58, 110.27it/s]Running loglikelihood requests:  30%|██▉       | 16693/56168 [04:31<05:27, 120.68it/s]Running loglikelihood requests:  30%|██▉       | 16709/56168 [04:32<09:28, 69.38it/s] Running loglikelihood requests:  30%|██▉       | 16726/56168 [04:32<07:58, 82.42it/s]Running loglikelihood requests:  30%|██▉       | 16746/56168 [04:32<06:33, 100.31it/s]Running loglikelihood requests:  30%|██▉       | 16763/56168 [04:32<05:51, 112.24it/s]Running loglikelihood requests:  30%|██▉       | 16779/56168 [04:33<09:56, 66.03it/s] Running loglikelihood requests:  30%|██▉       | 16798/56168 [04:33<07:54, 83.02it/s]Running loglikelihood requests:  30%|██▉       | 16823/56168 [04:33<05:56, 110.28it/s]Running loglikelihood requests:  30%|██▉       | 16841/56168 [04:33<09:21, 70.01it/s] Running loglikelihood requests:  30%|███       | 16857/56168 [04:33<08:04, 81.20it/s]Running loglikelihood requests:  30%|███       | 16872/56168 [04:34<07:07, 91.96it/s]Running loglikelihood requests:  30%|███       | 16893/56168 [04:34<05:46, 113.22it/s]Running loglikelihood requests:  30%|███       | 16909/56168 [04:34<10:01, 65.28it/s] Running loglikelihood requests:  30%|███       | 16924/56168 [04:34<08:31, 76.72it/s]Running loglikelihood requests:  30%|███       | 16940/56168 [04:34<07:17, 89.67it/s]Running loglikelihood requests:  30%|███       | 16959/56168 [04:34<06:03, 107.95it/s]Running loglikelihood requests:  30%|███       | 16975/56168 [04:35<10:15, 63.70it/s] Running loglikelihood requests:  30%|███       | 16991/56168 [04:35<08:33, 76.35it/s]Running loglikelihood requests:  30%|███       | 17010/56168 [04:35<06:54, 94.57it/s]Running loglikelihood requests:  30%|███       | 17025/56168 [04:36<10:50, 60.17it/s]Running loglikelihood requests:  30%|███       | 17044/56168 [04:36<08:27, 77.07it/s]Running loglikelihood requests:  30%|███       | 17062/56168 [04:36<06:59, 93.18it/s]Running loglikelihood requests:  30%|███       | 17077/56168 [04:36<06:19, 103.01it/s]Running loglikelihood requests:  30%|███       | 17092/56168 [04:37<10:37, 61.30it/s] Running loglikelihood requests:  30%|███       | 17109/56168 [04:37<08:33, 76.13it/s]Running loglikelihood requests:  30%|███       | 17127/56168 [04:37<06:59, 93.14it/s]Running loglikelihood requests:  31%|███       | 17142/56168 [04:37<06:19, 102.81it/s]Running loglikelihood requests:  31%|███       | 17157/56168 [04:37<10:39, 61.04it/s] Running loglikelihood requests:  31%|███       | 17176/56168 [04:37<08:15, 78.63it/s]Running loglikelihood requests:  31%|███       | 17194/56168 [04:38<06:52, 94.60it/s]Running loglikelihood requests:  31%|███       | 17210/56168 [04:38<06:05, 106.53it/s]Running loglikelihood requests:  31%|███       | 17225/56168 [04:38<10:30, 61.72it/s] Running loglikelihood requests:  31%|███       | 17241/56168 [04:38<08:38, 75.02it/s]Running loglikelihood requests:  31%|███       | 17258/56168 [04:38<07:09, 90.57it/s]Running loglikelihood requests:  31%|███       | 17278/56168 [04:38<05:50, 110.90it/s]Running loglikelihood requests:  31%|███       | 17294/56168 [04:39<10:05, 64.15it/s] Running loglikelihood requests:  31%|███       | 17314/56168 [04:39<07:49, 82.74it/s]Running loglikelihood requests:  31%|███       | 17334/56168 [04:39<06:22, 101.63it/s]Running loglikelihood requests:  31%|███       | 17350/56168 [04:40<09:41, 66.72it/s] Running loglikelihood requests:  31%|███       | 17370/56168 [04:40<07:37, 84.73it/s]Running loglikelihood requests:  31%|███       | 17409/56168 [04:40<07:09, 90.23it/s]Running loglikelihood requests:  31%|███       | 17422/56168 [04:40<06:54, 93.56it/s]Running loglikelihood requests:  31%|███       | 17442/56168 [04:40<05:51, 110.05it/s]Running loglikelihood requests:  31%|███       | 17457/56168 [04:41<06:01, 106.95it/s]Running loglikelihood requests:  31%|███       | 17473/56168 [04:41<09:47, 65.84it/s] Running loglikelihood requests:  31%|███       | 17495/56168 [04:41<07:29, 86.05it/s]Running loglikelihood requests:  31%|███       | 17515/56168 [04:41<06:12, 103.89it/s]Running loglikelihood requests:  31%|███       | 17535/56168 [04:41<05:19, 120.89it/s]Running loglikelihood requests:  31%|███       | 17552/56168 [04:42<09:08, 70.46it/s] Running loglikelihood requests:  31%|███▏      | 17574/56168 [04:42<07:05, 90.64it/s]Running loglikelihood requests:  31%|███▏      | 17594/56168 [04:42<05:56, 108.21it/s]Running loglikelihood requests:  31%|███▏      | 17611/56168 [04:43<09:22, 68.59it/s] Running loglikelihood requests:  31%|███▏      | 17631/56168 [04:43<07:29, 85.70it/s]Running loglikelihood requests:  31%|███▏      | 17665/56168 [04:43<07:51, 81.59it/s]Running loglikelihood requests:  31%|███▏      | 17678/56168 [04:43<07:42, 83.15it/s]Running loglikelihood requests:  32%|███▏      | 17694/56168 [04:43<06:50, 93.73it/s]Running loglikelihood requests:  32%|███▏      | 17707/56168 [04:43<06:37, 96.87it/s]Running loglikelihood requests:  32%|███▏      | 17720/56168 [04:44<06:15, 102.30it/s]Running loglikelihood requests:  32%|███▏      | 17733/56168 [04:44<11:19, 56.59it/s] Running loglikelihood requests:  32%|███▏      | 17750/56168 [04:44<08:53, 71.97it/s]Running loglikelihood requests:  32%|███▏      | 17765/56168 [04:44<07:34, 84.49it/s]Running loglikelihood requests:  32%|███▏      | 17788/56168 [04:44<05:43, 111.60it/s]Running loglikelihood requests:  32%|███▏      | 17804/56168 [04:45<09:44, 65.67it/s] Running loglikelihood requests:  32%|███▏      | 17822/56168 [04:45<07:51, 81.39it/s]Running loglikelihood requests:  32%|███▏      | 17838/56168 [04:45<06:47, 94.04it/s]Running loglikelihood requests:  32%|███▏      | 17855/56168 [04:45<05:55, 107.62it/s]Running loglikelihood requests:  32%|███▏      | 17870/56168 [04:46<09:58, 64.03it/s] Running loglikelihood requests:  32%|███▏      | 17885/56168 [04:46<08:25, 75.78it/s]Running loglikelihood requests:  32%|███▏      | 17904/56168 [04:46<06:43, 94.72it/s]Running loglikelihood requests:  32%|███▏      | 17919/56168 [04:46<06:04, 104.83it/s]Running loglikelihood requests:  32%|███▏      | 17934/56168 [04:47<10:10, 62.59it/s] Running loglikelihood requests:  32%|███▏      | 17949/56168 [04:47<08:29, 74.94it/s]Running loglikelihood requests:  32%|███▏      | 17971/56168 [04:47<06:24, 99.36it/s]Running loglikelihood requests:  32%|███▏      | 17986/56168 [04:47<09:49, 64.80it/s]Running loglikelihood requests:  32%|███▏      | 18008/56168 [04:47<07:21, 86.35it/s]Running loglikelihood requests:  32%|███▏      | 18028/56168 [04:47<06:03, 104.92it/s]Running loglikelihood requests:  32%|███▏      | 18044/56168 [04:47<05:32, 114.63it/s]Running loglikelihood requests:  32%|███▏      | 18060/56168 [04:48<09:10, 69.21it/s] Running loglikelihood requests:  32%|███▏      | 18085/56168 [04:48<06:40, 95.19it/s]Running loglikelihood requests:  32%|███▏      | 18101/56168 [04:48<06:05, 104.05it/s]Running loglikelihood requests:  32%|███▏      | 18117/56168 [04:49<09:27, 67.10it/s] Running loglikelihood requests:  32%|███▏      | 18134/56168 [04:49<07:49, 81.02it/s]Running loglikelihood requests:  32%|███▏      | 18149/56168 [04:49<06:55, 91.57it/s]Running loglikelihood requests:  32%|███▏      | 18164/56168 [04:49<06:11, 102.21it/s]Running loglikelihood requests:  32%|███▏      | 18178/56168 [04:49<10:04, 62.89it/s] Running loglikelihood requests:  32%|███▏      | 18196/56168 [04:49<07:55, 79.81it/s]Running loglikelihood requests:  32%|███▏      | 18215/56168 [04:50<06:24, 98.60it/s]Running loglikelihood requests:  32%|███▏      | 18232/56168 [04:50<05:39, 111.72it/s]Running loglikelihood requests:  32%|███▏      | 18247/56168 [04:50<09:23, 67.30it/s] Running loglikelihood requests:  33%|███▎      | 18266/56168 [04:50<07:23, 85.41it/s]Running loglikelihood requests:  33%|███▎      | 18284/56168 [04:50<06:13, 101.53it/s]Running loglikelihood requests:  33%|███▎      | 18304/56168 [04:50<05:13, 120.68it/s]Running loglikelihood requests:  33%|███▎      | 18321/56168 [04:51<08:50, 71.38it/s] Running loglikelihood requests:  33%|███▎      | 18336/56168 [04:51<07:43, 81.61it/s]Running loglikelihood requests:  33%|███▎      | 18355/56168 [04:51<06:20, 99.29it/s]Running loglikelihood requests:  33%|███▎      | 18370/56168 [04:52<10:07, 62.24it/s]Running loglikelihood requests:  33%|███▎      | 18388/56168 [04:52<08:04, 77.91it/s]Running loglikelihood requests:  33%|███▎      | 18406/56168 [04:52<06:40, 94.22it/s]Running loglikelihood requests:  33%|███▎      | 18433/56168 [04:52<06:28, 97.17it/s]Running loglikelihood requests:  33%|███▎      | 18453/56168 [04:52<05:31, 113.82it/s]Running loglikelihood requests:  33%|███▎      | 18473/56168 [04:52<04:50, 129.76it/s]Running loglikelihood requests:  33%|███▎      | 18494/56168 [04:52<04:16, 146.69it/s]Running loglikelihood requests:  33%|███▎      | 18512/56168 [04:53<07:19, 85.74it/s] Running loglikelihood requests:  33%|███▎      | 18533/56168 [04:53<05:59, 104.64it/s]Running loglikelihood requests:  33%|███▎      | 18553/56168 [04:53<05:09, 121.54it/s]Running loglikelihood requests:  33%|███▎      | 18570/56168 [04:54<08:10, 76.65it/s] Running loglikelihood requests:  33%|███▎      | 18590/56168 [04:54<06:39, 94.12it/s]Running loglikelihood requests:  33%|███▎      | 18613/56168 [04:54<05:22, 116.46it/s]Running loglikelihood requests:  33%|███▎      | 18630/56168 [04:54<08:20, 75.03it/s] Running loglikelihood requests:  33%|███▎      | 18650/56168 [04:54<06:45, 92.47it/s]Running loglikelihood requests:  33%|███▎      | 18670/56168 [04:54<05:41, 109.68it/s]Running loglikelihood requests:  33%|███▎      | 18689/56168 [04:55<08:20, 74.82it/s] Running loglikelihood requests:  33%|███▎      | 18704/56168 [04:55<07:18, 85.34it/s]Running loglikelihood requests:  33%|███▎      | 18722/56168 [04:55<06:10, 101.05it/s]Running loglikelihood requests:  33%|███▎      | 18742/56168 [04:55<05:13, 119.51it/s]Running loglikelihood requests:  33%|███▎      | 18759/56168 [04:56<08:21, 74.62it/s] Running loglikelihood requests:  33%|███▎      | 18779/56168 [04:56<06:43, 92.76it/s]Running loglikelihood requests:  33%|███▎      | 18800/56168 [04:56<05:30, 113.04it/s]Running loglikelihood requests:  34%|███▎      | 18817/56168 [04:56<08:26, 73.67it/s] Running loglikelihood requests:  34%|███▎      | 18837/56168 [04:56<06:47, 91.52it/s]Running loglikelihood requests:  34%|███▎      | 18857/56168 [04:56<05:40, 109.44it/s]Running loglikelihood requests:  34%|███▎      | 18877/56168 [04:57<04:53, 127.08it/s]Running loglikelihood requests:  34%|███▎      | 18895/56168 [04:57<07:53, 78.79it/s] Running loglikelihood requests:  34%|███▎      | 18917/56168 [04:57<06:13, 99.61it/s]Running loglikelihood requests:  34%|███▎      | 18937/56168 [04:57<05:19, 116.67it/s]Running loglikelihood requests:  34%|███▎      | 18954/56168 [04:58<08:15, 75.11it/s] Running loglikelihood requests:  34%|███▍      | 18974/56168 [04:58<06:41, 92.74it/s]Running loglikelihood requests:  34%|███▍      | 18996/56168 [04:58<05:27, 113.45it/s]Running loglikelihood requests:  34%|███▍      | 19013/56168 [04:58<08:21, 74.10it/s] Running loglikelihood requests:  34%|███▍      | 19035/56168 [04:58<06:33, 94.43it/s]Running loglikelihood requests:  34%|███▍      | 19055/56168 [04:59<05:32, 111.69it/s]Running loglikelihood requests:  34%|███▍      | 19073/56168 [04:59<08:13, 75.20it/s] Running loglikelihood requests:  34%|███▍      | 19092/56168 [04:59<06:46, 91.19it/s]Running loglikelihood requests:  34%|███▍      | 19116/56168 [04:59<05:20, 115.72it/s]Running loglikelihood requests:  34%|███▍      | 19136/56168 [04:59<04:43, 130.83it/s]Running loglikelihood requests:  34%|███▍      | 19154/56168 [05:00<07:45, 79.50it/s] Running loglikelihood requests:  34%|███▍      | 19174/56168 [05:00<06:22, 96.81it/s]Running loglikelihood requests:  34%|███▍      | 19199/56168 [05:00<05:08, 119.92it/s]Running loglikelihood requests:  34%|███▍      | 19217/56168 [05:00<07:59, 76.99it/s] Running loglikelihood requests:  34%|███▍      | 19236/56168 [05:01<06:39, 92.36it/s]Running loglikelihood requests:  34%|███▍      | 19255/56168 [05:01<05:40, 108.28it/s]Running loglikelihood requests:  34%|███▍      | 19271/56168 [05:01<08:35, 71.56it/s] Running loglikelihood requests:  34%|███▍      | 19291/56168 [05:01<06:52, 89.38it/s]Running loglikelihood requests:  34%|███▍      | 19329/56168 [05:02<06:24, 95.75it/s]Running loglikelihood requests:  34%|███▍      | 19349/56168 [05:02<05:34, 109.95it/s]Running loglikelihood requests:  35%|███▍      | 19393/56168 [05:02<05:20, 114.74it/s]Running loglikelihood requests:  35%|███▍      | 19413/56168 [05:02<04:51, 126.24it/s]Running loglikelihood requests:  35%|███▍      | 19437/56168 [05:02<04:13, 144.76it/s]Running loglikelihood requests:  35%|███▍      | 19457/56168 [05:03<06:39, 91.86it/s] Running loglikelihood requests:  35%|███▍      | 19477/56168 [05:03<05:44, 106.45it/s]Running loglikelihood requests:  35%|███▍      | 19497/56168 [05:03<05:02, 121.36it/s]Running loglikelihood requests:  35%|███▍      | 19517/56168 [05:03<04:30, 135.39it/s]Running loglikelihood requests:  35%|███▍      | 19535/56168 [05:03<07:10, 85.19it/s] Running loglikelihood requests:  35%|███▍      | 19558/56168 [05:03<05:42, 106.80it/s]Running loglikelihood requests:  35%|███▍      | 19578/56168 [05:04<04:58, 122.74it/s]Running loglikelihood requests:  35%|███▍      | 19596/56168 [05:04<07:42, 79.07it/s] Running loglikelihood requests:  35%|███▍      | 19616/56168 [05:04<06:19, 96.27it/s]Running loglikelihood requests:  35%|███▍      | 19638/56168 [05:04<05:13, 116.63it/s]Running loglikelihood requests:  35%|███▍      | 19655/56168 [05:05<08:09, 74.64it/s] Running loglikelihood requests:  35%|███▌      | 19672/56168 [05:05<06:59, 86.98it/s]Running loglikelihood requests:  35%|███▌      | 19686/56168 [05:05<06:29, 93.77it/s]Running loglikelihood requests:  35%|███▌      | 19705/56168 [05:05<05:28, 111.12it/s]Running loglikelihood requests:  35%|███▌      | 19720/56168 [05:06<09:07, 66.54it/s] Running loglikelihood requests:  35%|███▌      | 19734/56168 [05:06<07:56, 76.52it/s]Running loglikelihood requests:  35%|███▌      | 19754/56168 [05:06<06:13, 97.42it/s]Running loglikelihood requests:  35%|███▌      | 19776/56168 [05:06<05:02, 120.47it/s]Running loglikelihood requests:  35%|███▌      | 19793/56168 [05:06<08:01, 75.47it/s] Running loglikelihood requests:  35%|███▌      | 19815/56168 [05:06<06:15, 96.69it/s]Running loglikelihood requests:  35%|███▌      | 19835/56168 [05:06<05:17, 114.43it/s]Running loglikelihood requests:  35%|███▌      | 19852/56168 [05:07<08:06, 74.72it/s] Running loglikelihood requests:  35%|███▌      | 19872/56168 [05:07<06:32, 92.59it/s]Running loglikelihood requests:  35%|███▌      | 19896/56168 [05:07<05:09, 117.07it/s]Running loglikelihood requests:  35%|███▌      | 19914/56168 [05:08<07:44, 78.05it/s] Running loglikelihood requests:  35%|███▌      | 19934/56168 [05:08<06:20, 95.27it/s]Running loglikelihood requests:  36%|███▌      | 19953/56168 [05:08<05:30, 109.45it/s]Running loglikelihood requests:  36%|███▌      | 19969/56168 [05:08<08:10, 73.73it/s] Running loglikelihood requests:  36%|███▌      | 19985/56168 [05:08<07:02, 85.67it/s]Running loglikelihood requests:  36%|███▌      | 20003/56168 [05:08<06:03, 99.39it/s]Running loglikelihood requests:  36%|███▌      | 20017/56168 [05:09<05:39, 106.35it/s]Running loglikelihood requests:  36%|███▌      | 20032/56168 [05:09<05:12, 115.48it/s]Running loglikelihood requests:  36%|███▌      | 20047/56168 [05:09<08:39, 69.57it/s] Running loglikelihood requests:  36%|███▌      | 20063/56168 [05:09<07:18, 82.42it/s]Running loglikelihood requests:  36%|███▌      | 20079/56168 [05:09<06:15, 95.99it/s]Running loglikelihood requests:  36%|███▌      | 20094/56168 [05:09<05:40, 106.05it/s]Running loglikelihood requests:  36%|███▌      | 20108/56168 [05:10<09:06, 65.95it/s] Running loglikelihood requests:  36%|███▌      | 20128/56168 [05:10<06:55, 86.67it/s]Running loglikelihood requests:  36%|███▌      | 20150/56168 [05:10<05:26, 110.26it/s]Running loglikelihood requests:  36%|███▌      | 20166/56168 [05:10<08:25, 71.16it/s] Running loglikelihood requests:  36%|███▌      | 20186/56168 [05:11<06:40, 89.88it/s]Running loglikelihood requests:  36%|███▌      | 20206/56168 [05:11<05:31, 108.40it/s]Running loglikelihood requests:  36%|███▌      | 20225/56168 [05:11<07:27, 80.26it/s] Running loglikelihood requests:  36%|███▌      | 20243/56168 [05:11<06:16, 95.46it/s]Running loglikelihood requests:  36%|███▌      | 20266/56168 [05:11<05:04, 118.10it/s]Running loglikelihood requests:  36%|███▌      | 20283/56168 [05:11<04:40, 128.15it/s]Running loglikelihood requests:  36%|███▌      | 20300/56168 [05:12<07:47, 76.65it/s] Running loglikelihood requests:  36%|███▌      | 20317/56168 [05:12<06:35, 90.63it/s]Running loglikelihood requests:  36%|███▌      | 20338/56168 [05:12<05:22, 111.21it/s]Running loglikelihood requests:  36%|███▌      | 20354/56168 [05:12<08:22, 71.21it/s] Running loglikelihood requests:  36%|███▋      | 20370/56168 [05:13<07:05, 84.04it/s]Running loglikelihood requests:  36%|███▋      | 20388/56168 [05:13<05:56, 100.25it/s]Running loglikelihood requests:  36%|███▋      | 20408/56168 [05:13<04:59, 119.34it/s]Running loglikelihood requests:  36%|███▋      | 20425/56168 [05:13<08:07, 73.32it/s] Running loglikelihood requests:  36%|███▋      | 20444/56168 [05:13<06:33, 90.69it/s]Running loglikelihood requests:  36%|███▋      | 20459/56168 [05:13<06:05, 97.78it/s]Running loglikelihood requests:  36%|███▋      | 20481/56168 [05:14<07:09, 83.14it/s]Running loglikelihood requests:  36%|███▋      | 20495/56168 [05:14<06:30, 91.33it/s]Running loglikelihood requests:  37%|███▋      | 20509/56168 [05:14<06:01, 98.69it/s]Running loglikelihood requests:  37%|███▋      | 20525/56168 [05:14<05:22, 110.51it/s]Running loglikelihood requests:  37%|███▋      | 20541/56168 [05:14<04:55, 120.62it/s]Running loglikelihood requests:  37%|███▋      | 20555/56168 [05:15<08:42, 68.19it/s] Running loglikelihood requests:  37%|███▋      | 20573/56168 [05:15<06:56, 85.54it/s]Running loglikelihood requests:  37%|███▋      | 20595/56168 [05:15<05:24, 109.51it/s]Running loglikelihood requests:  37%|███▋      | 20611/56168 [05:15<08:38, 68.59it/s] Running loglikelihood requests:  37%|███▋      | 20630/56168 [05:15<06:55, 85.57it/s]Running loglikelihood requests:  37%|███▋      | 20650/56168 [05:15<05:40, 104.40it/s]Running loglikelihood requests:  37%|███▋      | 20672/56168 [05:16<04:39, 126.80it/s]Running loglikelihood requests:  37%|███▋      | 20690/56168 [05:16<07:45, 76.15it/s] Running loglikelihood requests:  37%|███▋      | 20704/56168 [05:16<07:05, 83.42it/s]Running loglikelihood requests:  37%|███▋      | 20717/56168 [05:16<06:43, 87.85it/s]Running loglikelihood requests:  37%|███▋      | 20730/56168 [05:16<06:16, 94.01it/s]Running loglikelihood requests:  37%|███▋      | 20743/56168 [05:17<10:21, 56.99it/s]Running loglikelihood requests:  37%|███▋      | 20757/56168 [05:17<08:34, 68.85it/s]Running loglikelihood requests:  37%|███▋      | 20771/56168 [05:17<07:18, 80.71it/s]Running loglikelihood requests:  37%|███▋      | 20786/56168 [05:17<06:19, 93.29it/s]Running loglikelihood requests:  37%|███▋      | 20801/56168 [05:18<09:52, 59.72it/s]Running loglikelihood requests:  37%|███▋      | 20816/56168 [05:18<08:04, 72.91it/s]Running loglikelihood requests:  37%|███▋      | 20836/56168 [05:18<06:16, 93.78it/s]Running loglikelihood requests:  37%|███▋      | 20852/56168 [05:18<05:31, 106.49it/s]Running loglikelihood requests:  37%|███▋      | 20867/56168 [05:18<08:54, 66.08it/s] Running loglikelihood requests:  37%|███▋      | 20887/56168 [05:19<06:50, 85.97it/s]Running loglikelihood requests:  37%|███▋      | 20929/56168 [05:19<06:04, 96.58it/s]Running loglikelihood requests:  37%|███▋      | 20949/56168 [05:19<05:17, 110.97it/s]Running loglikelihood requests:  37%|███▋      | 20971/56168 [05:19<04:31, 129.47it/s]Running loglikelihood requests:  37%|███▋      | 20991/56168 [05:19<04:06, 142.46it/s]Running loglikelihood requests:  37%|███▋      | 21009/56168 [05:20<06:46, 86.53it/s] Running loglikelihood requests:  37%|███▋      | 21029/56168 [05:20<05:40, 103.12it/s]Running loglikelihood requests:  37%|███▋      | 21049/56168 [05:20<04:54, 119.43it/s]Running loglikelihood requests:  38%|███▊      | 21066/56168 [05:20<07:30, 77.94it/s] Running loglikelihood requests:  38%|███▊      | 21088/56168 [05:20<05:55, 98.70it/s]Running loglikelihood requests:  38%|███▊      | 21108/56168 [05:20<05:03, 115.40it/s]Running loglikelihood requests:  38%|███▊      | 21125/56168 [05:21<07:39, 76.32it/s] Running loglikelihood requests:  38%|███▊      | 21145/56168 [05:21<06:12, 93.91it/s]Running loglikelihood requests:  38%|███▊      | 21165/56168 [05:21<05:14, 111.22it/s]Running loglikelihood requests:  38%|███▊      | 21185/56168 [05:22<07:33, 77.13it/s] Running loglikelihood requests:  38%|███▊      | 21207/56168 [05:22<05:59, 97.30it/s]Running loglikelihood requests:  38%|███▊      | 21223/56168 [05:22<05:24, 107.62it/s]Running loglikelihood requests:  38%|███▊      | 21239/56168 [05:22<05:14, 111.09it/s]Running loglikelihood requests:  38%|███▊      | 21254/56168 [05:22<08:50, 65.82it/s] Running loglikelihood requests:  38%|███▊      | 21271/56168 [05:22<07:13, 80.42it/s]Running loglikelihood requests:  38%|███▊      | 21288/56168 [05:23<06:06, 95.11it/s]Running loglikelihood requests:  38%|███▊      | 21309/56168 [05:23<04:57, 117.09it/s]Running loglikelihood requests:  38%|███▊      | 21326/56168 [05:23<07:58, 72.88it/s] Running loglikelihood requests:  38%|███▊      | 21346/56168 [05:23<06:21, 91.33it/s]Running loglikelihood requests:  38%|███▊      | 21366/56168 [05:23<05:16, 109.81it/s]Running loglikelihood requests:  38%|███▊      | 21382/56168 [05:24<08:02, 72.06it/s] Running loglikelihood requests:  38%|███▊      | 21402/56168 [05:24<06:25, 90.28it/s]Running loglikelihood requests:  38%|███▊      | 21424/56168 [05:24<05:11, 111.71it/s]Running loglikelihood requests:  38%|███▊      | 21441/56168 [05:24<07:48, 74.20it/s] Running loglikelihood requests:  38%|███▊      | 21461/56168 [05:25<06:17, 92.04it/s]Running loglikelihood requests:  38%|███▊      | 21481/56168 [05:25<05:15, 109.85it/s]Running loglikelihood requests:  38%|███▊      | 21505/56168 [05:25<07:09, 80.73it/s] Running loglikelihood requests:  38%|███▊      | 21525/56168 [05:25<05:56, 97.25it/s]Running loglikelihood requests:  38%|███▊      | 21545/56168 [05:25<05:02, 114.30it/s]Running loglikelihood requests:  38%|███▊      | 21562/56168 [05:25<04:38, 124.06it/s]Running loglikelihood requests:  38%|███▊      | 21579/56168 [05:26<07:40, 75.05it/s] Running loglikelihood requests:  38%|███▊      | 21598/56168 [05:26<06:21, 90.63it/s]Running loglikelihood requests:  38%|███▊      | 21616/56168 [05:26<05:26, 105.79it/s]Running loglikelihood requests:  39%|███▊      | 21633/56168 [05:27<08:18, 69.29it/s] Running loglikelihood requests:  39%|███▊      | 21645/56168 [05:27<07:36, 75.64it/s]Running loglikelihood requests:  39%|███▊      | 21658/56168 [05:27<06:49, 84.34it/s]Running loglikelihood requests:  39%|███▊      | 21676/56168 [05:27<05:37, 102.20it/s]Running loglikelihood requests:  39%|███▊      | 21690/56168 [05:27<05:20, 107.42it/s]Running loglikelihood requests:  39%|███▊      | 21704/56168 [05:27<08:55, 64.30it/s] Running loglikelihood requests:  39%|███▊      | 21723/56168 [05:28<06:53, 83.21it/s]Running loglikelihood requests:  39%|███▊      | 21746/56168 [05:28<05:15, 108.94it/s]Running loglikelihood requests:  39%|███▊      | 21762/56168 [05:28<08:09, 70.25it/s] Running loglikelihood requests:  39%|███▉      | 21780/56168 [05:28<06:38, 86.19it/s]Running loglikelihood requests:  39%|███▉      | 21797/56168 [05:28<05:44, 99.89it/s]Running loglikelihood requests:  39%|███▉      | 21818/56168 [05:28<04:44, 120.89it/s]Running loglikelihood requests:  39%|███▉      | 21835/56168 [05:29<07:22, 77.52it/s] Running loglikelihood requests:  39%|███▉      | 21852/56168 [05:29<06:16, 91.13it/s]Running loglikelihood requests:  39%|███▉      | 21869/56168 [05:29<05:28, 104.50it/s]Running loglikelihood requests:  39%|███▉      | 21889/56168 [05:29<08:01, 71.13it/s] Running loglikelihood requests:  39%|███▉      | 21908/56168 [05:30<06:31, 87.52it/s]Running loglikelihood requests:  39%|███▉      | 21922/56168 [05:30<05:56, 96.13it/s]Running loglikelihood requests:  39%|███▉      | 21936/56168 [05:30<05:29, 103.88it/s]Running loglikelihood requests:  39%|███▉      | 21953/56168 [05:30<07:56, 71.76it/s] Running loglikelihood requests:  39%|███▉      | 21967/56168 [05:30<06:56, 82.13it/s]Running loglikelihood requests:  39%|███▉      | 21985/56168 [05:30<05:49, 97.91it/s]Running loglikelihood requests:  39%|███▉      | 21999/56168 [05:30<05:29, 103.69it/s]Running loglikelihood requests:  39%|███▉      | 22013/56168 [05:31<05:06, 111.31it/s]Running loglikelihood requests:  39%|███▉      | 22027/56168 [05:31<08:18, 68.49it/s] Running loglikelihood requests:  39%|███▉      | 22053/56168 [05:31<05:43, 99.33it/s]Running loglikelihood requests:  39%|███▉      | 22068/56168 [05:31<05:19, 106.68it/s]Running loglikelihood requests:  39%|███▉      | 22083/56168 [05:32<08:28, 66.99it/s] Running loglikelihood requests:  39%|███▉      | 22098/56168 [05:32<07:10, 79.06it/s]Running loglikelihood requests:  39%|███▉      | 22118/56168 [05:32<05:41, 99.58it/s]Running loglikelihood requests:  39%|███▉      | 22138/56168 [05:32<04:46, 118.84it/s]Running loglikelihood requests:  39%|███▉      | 22154/56168 [05:32<07:22, 76.86it/s] Running loglikelihood requests:  39%|███▉      | 22174/56168 [05:32<05:54, 96.02it/s]Running loglikelihood requests:  40%|███▉      | 22194/56168 [05:33<04:56, 114.45it/s]Running loglikelihood requests:  40%|███▉      | 22210/56168 [05:33<07:25, 76.28it/s] Running loglikelihood requests:  40%|███▉      | 22230/56168 [05:33<05:58, 94.63it/s]Running loglikelihood requests:  40%|███▉      | 22252/56168 [05:33<04:51, 116.16it/s]Running loglikelihood requests:  40%|███▉      | 22272/56168 [05:33<04:15, 132.45it/s]Running loglikelihood requests:  40%|███▉      | 22290/56168 [05:34<06:47, 83.12it/s] Running loglikelihood requests:  40%|███▉      | 22306/56168 [05:34<05:56, 95.03it/s]Running loglikelihood requests:  40%|███▉      | 22331/56168 [05:34<04:39, 121.22it/s]Running loglikelihood requests:  40%|███▉      | 22348/56168 [05:34<06:49, 82.58it/s] Running loglikelihood requests:  40%|███▉      | 22401/56168 [05:35<04:36, 121.95it/s]Running loglikelihood requests:  40%|███▉      | 22419/56168 [05:35<04:18, 130.63it/s]Running loglikelihood requests:  40%|███▉      | 22437/56168 [05:35<04:04, 137.89it/s]Running loglikelihood requests:  40%|███▉      | 22456/56168 [05:35<03:49, 147.18it/s]Running loglikelihood requests:  40%|████      | 22473/56168 [05:35<06:23, 87.94it/s] Running loglikelihood requests:  40%|████      | 22492/56168 [05:35<05:26, 103.04it/s]Running loglikelihood requests:  40%|████      | 22512/56168 [05:36<04:46, 117.53it/s]Running loglikelihood requests:  40%|████      | 22529/56168 [05:36<06:57, 80.52it/s] Running loglikelihood requests:  40%|████      | 22547/56168 [05:36<05:56, 94.20it/s]Running loglikelihood requests:  40%|████      | 22563/56168 [05:36<05:20, 104.90it/s]Running loglikelihood requests:  40%|████      | 22581/56168 [05:36<04:40, 119.76it/s]Running loglikelihood requests:  40%|████      | 22597/56168 [05:37<07:17, 76.77it/s] Running loglikelihood requests:  40%|████      | 22615/56168 [05:37<06:06, 91.66it/s]Running loglikelihood requests:  40%|████      | 22637/56168 [05:37<04:52, 114.66it/s]Running loglikelihood requests:  40%|████      | 22654/56168 [05:37<04:28, 124.91it/s]Running loglikelihood requests:  40%|████      | 22670/56168 [05:37<07:11, 77.60it/s] Running loglikelihood requests:  40%|████      | 22686/56168 [05:37<06:09, 90.53it/s]Running loglikelihood requests:  40%|████      | 22707/56168 [05:38<04:57, 112.55it/s]Running loglikelihood requests:  40%|████      | 22723/56168 [05:38<07:39, 72.77it/s] Running loglikelihood requests:  40%|████      | 22740/56168 [05:38<06:25, 86.81it/s]Running loglikelihood requests:  41%|████      | 22756/56168 [05:38<05:35, 99.46it/s]Running loglikelihood requests:  41%|████      | 22774/56168 [05:38<04:50, 114.81it/s]Running loglikelihood requests:  41%|████      | 22790/56168 [05:39<07:27, 74.58it/s] Running loglikelihood requests:  41%|████      | 22849/56168 [05:39<05:22, 103.26it/s]Running loglikelihood requests:  41%|████      | 22867/56168 [05:39<04:55, 112.81it/s]Running loglikelihood requests:  41%|████      | 22888/56168 [05:39<04:21, 127.29it/s]Running loglikelihood requests:  41%|████      | 22905/56168 [05:39<04:06, 134.76it/s]Running loglikelihood requests:  41%|████      | 22922/56168 [05:40<06:38, 83.52it/s] Running loglikelihood requests:  41%|████      | 22939/56168 [05:40<05:47, 95.59it/s]Running loglikelihood requests:  41%|████      | 22962/56168 [05:40<04:40, 118.43it/s]Running loglikelihood requests:  41%|████      | 22979/56168 [05:41<06:56, 79.61it/s] Running loglikelihood requests:  41%|████      | 22999/56168 [05:41<05:42, 96.88it/s]Running loglikelihood requests:  41%|████      | 23019/56168 [05:41<04:49, 114.39it/s]Running loglikelihood requests:  41%|████      | 23039/56168 [05:41<04:13, 130.52it/s]Running loglikelihood requests:  41%|████      | 23057/56168 [05:41<06:37, 83.20it/s] Running loglikelihood requests:  41%|████      | 23079/56168 [05:41<05:18, 103.90it/s]Running loglikelihood requests:  41%|████      | 23096/56168 [05:41<04:47, 115.11it/s]Running loglikelihood requests:  41%|████      | 23112/56168 [05:42<07:26, 74.05it/s] Running loglikelihood requests:  41%|████      | 23130/56168 [05:42<06:08, 89.65it/s]Running loglikelihood requests:  41%|████      | 23160/56168 [05:42<04:21, 126.10it/s]Running loglikelihood requests:  41%|████▏     | 23179/56168 [05:43<06:59, 78.59it/s] Running loglikelihood requests:  41%|████▏     | 23194/56168 [05:43<06:20, 86.63it/s]Running loglikelihood requests:  41%|████▏     | 23211/56168 [05:43<05:33, 98.90it/s]Running loglikelihood requests:  41%|████▏     | 23232/56168 [05:43<04:37, 118.80it/s]Running loglikelihood requests:  41%|████▏     | 23249/56168 [05:43<07:05, 77.45it/s] Running loglikelihood requests:  41%|████▏     | 23266/56168 [05:43<06:02, 90.86it/s]Running loglikelihood requests:  41%|████▏     | 23284/56168 [05:44<05:09, 106.12it/s]Running loglikelihood requests:  41%|████▏     | 23299/56168 [05:44<07:39, 71.59it/s] Running loglikelihood requests:  42%|████▏     | 23321/56168 [05:44<05:50, 93.78it/s]Running loglikelihood requests:  42%|████▏     | 23338/56168 [05:44<05:07, 106.76it/s]Running loglikelihood requests:  42%|████▏     | 23354/56168 [05:44<04:40, 117.05it/s]Running loglikelihood requests:  42%|████▏     | 23370/56168 [05:45<07:16, 75.17it/s] Running loglikelihood requests:  42%|████▏     | 23390/56168 [05:45<05:47, 94.43it/s]Running loglikelihood requests:  42%|████▏     | 23412/56168 [05:45<04:40, 116.75it/s]Running loglikelihood requests:  42%|████▏     | 23429/56168 [05:45<07:02, 77.46it/s] Running loglikelihood requests:  42%|████▏     | 23450/56168 [05:45<05:36, 97.18it/s]Running loglikelihood requests:  42%|████▏     | 23470/56168 [05:45<04:44, 114.83it/s]Running loglikelihood requests:  42%|████▏     | 23489/56168 [05:46<06:45, 80.64it/s] Running loglikelihood requests:  42%|████▏     | 23509/56168 [05:46<05:32, 98.25it/s]Running loglikelihood requests:  42%|████▏     | 23528/56168 [05:46<04:47, 113.67it/s]Running loglikelihood requests:  42%|████▏     | 23544/56168 [05:46<04:29, 121.25it/s]Running loglikelihood requests:  42%|████▏     | 23560/56168 [05:47<07:07, 76.33it/s] Running loglikelihood requests:  42%|████▏     | 23576/56168 [05:47<06:08, 88.44it/s]Running loglikelihood requests:  42%|████▏     | 23594/56168 [05:47<05:11, 104.48it/s]Running loglikelihood requests:  42%|████▏     | 23612/56168 [05:47<04:31, 119.73it/s]Running loglikelihood requests:  42%|████▏     | 23628/56168 [05:47<07:06, 76.27it/s] Running loglikelihood requests:  42%|████▏     | 23648/56168 [05:47<05:40, 95.57it/s]Running loglikelihood requests:  42%|████▏     | 23668/56168 [05:48<04:44, 114.30it/s]Running loglikelihood requests:  42%|████▏     | 23684/56168 [05:48<07:07, 76.02it/s] Running loglikelihood requests:  42%|████▏     | 23704/56168 [05:48<05:42, 94.80it/s]Running loglikelihood requests:  42%|████▏     | 23729/56168 [05:48<04:25, 121.99it/s]Running loglikelihood requests:  42%|████▏     | 23747/56168 [05:49<07:06, 76.06it/s] Running loglikelihood requests:  42%|████▏     | 23765/56168 [05:49<05:57, 90.66it/s]Running loglikelihood requests:  42%|████▏     | 23781/56168 [05:49<05:17, 101.96it/s]Running loglikelihood requests:  42%|████▏     | 23800/56168 [05:49<04:33, 118.52it/s]Running loglikelihood requests:  42%|████▏     | 23817/56168 [05:49<07:10, 75.07it/s] Running loglikelihood requests:  42%|████▏     | 23830/56168 [05:49<06:29, 83.01it/s]Running loglikelihood requests:  42%|████▏     | 23850/56168 [05:50<05:12, 103.29it/s]Running loglikelihood requests:  42%|████▏     | 23869/56168 [05:50<04:27, 120.59it/s]Running loglikelihood requests:  43%|████▎     | 23885/56168 [05:50<07:07, 75.56it/s] Running loglikelihood requests:  43%|████▎     | 23902/56168 [05:50<05:57, 90.31it/s]Running loglikelihood requests:  43%|████▎     | 23918/56168 [05:50<05:16, 102.00it/s]Running loglikelihood requests:  43%|████▎     | 23935/56168 [05:50<04:40, 115.05it/s]Running loglikelihood requests:  43%|████▎     | 23950/56168 [05:51<07:22, 72.79it/s] Running loglikelihood requests:  43%|████▎     | 23974/56168 [05:51<05:23, 99.54it/s]Running loglikelihood requests:  43%|████▎     | 23994/56168 [05:51<04:34, 117.31it/s]Running loglikelihood requests:  43%|████▎     | 24011/56168 [05:51<06:49, 78.44it/s] Running loglikelihood requests:  43%|████▎     | 24028/56168 [05:51<05:47, 92.45it/s]Running loglikelihood requests:  43%|████▎     | 24050/56168 [05:52<04:39, 114.94it/s]Running loglikelihood requests:  43%|████▎     | 24067/56168 [05:52<06:58, 76.63it/s] Running loglikelihood requests:  43%|████▎     | 24089/56168 [05:52<05:29, 97.42it/s]Running loglikelihood requests:  43%|████▎     | 24106/56168 [05:52<04:53, 109.42it/s]Running loglikelihood requests:  43%|████▎     | 24124/56168 [05:52<04:24, 121.30it/s]Running loglikelihood requests:  43%|████▎     | 24140/56168 [05:53<06:38, 80.32it/s] Running loglikelihood requests:  43%|████▎     | 24157/56168 [05:53<05:38, 94.62it/s]Running loglikelihood requests:  43%|████▎     | 24178/56168 [05:53<04:36, 115.86it/s]Running loglikelihood requests:  43%|████▎     | 24194/56168 [05:53<07:17, 73.08it/s] Running loglikelihood requests:  43%|████▎     | 24209/56168 [05:53<06:25, 82.83it/s]Running loglikelihood requests:  43%|████▎     | 24224/56168 [05:54<05:46, 92.10it/s]Running loglikelihood requests:  43%|████▎     | 24237/56168 [05:54<05:22, 98.97it/s]Running loglikelihood requests:  43%|████▎     | 24250/56168 [05:54<05:10, 102.70it/s]Running loglikelihood requests:  43%|████▎     | 24263/56168 [05:54<08:17, 64.07it/s] Running loglikelihood requests:  43%|████▎     | 24281/56168 [05:54<06:25, 82.73it/s]Running loglikelihood requests:  43%|████▎     | 24299/56168 [05:54<05:16, 100.55it/s]Running loglikelihood requests:  43%|████▎     | 24314/56168 [05:55<04:48, 110.49it/s]Running loglikelihood requests:  43%|████▎     | 24328/56168 [05:55<07:53, 67.31it/s] Running loglikelihood requests:  43%|████▎     | 24344/56168 [05:55<06:29, 81.69it/s]Running loglikelihood requests:  43%|████▎     | 24385/56168 [05:55<04:14, 124.90it/s]Running loglikelihood requests:  44%|████▎     | 24449/56168 [05:55<02:33, 206.05it/s]Running loglikelihood requests:  44%|████▎     | 24513/56168 [05:55<01:56, 271.17it/s]Running loglikelihood requests:  44%|████▍     | 24577/56168 [05:56<01:38, 321.62it/s]Running loglikelihood requests:  44%|████▍     | 24641/56168 [05:56<01:27, 359.23it/s]Running loglikelihood requests:  44%|████▍     | 24705/56168 [05:56<01:20, 388.73it/s]Running loglikelihood requests:  44%|████▍     | 24769/56168 [05:56<01:16, 409.28it/s]Running loglikelihood requests:  44%|████▍     | 24833/56168 [05:56<01:13, 424.92it/s]Running loglikelihood requests:  44%|████▍     | 24897/56168 [05:56<01:11, 434.82it/s]Running loglikelihood requests:  44%|████▍     | 24961/56168 [05:56<01:10, 441.56it/s]Running loglikelihood requests:  45%|████▍     | 25025/56168 [05:57<01:09, 446.68it/s]Running loglikelihood requests:  45%|████▍     | 25089/56168 [05:57<01:09, 449.64it/s]Running loglikelihood requests:  45%|████▍     | 25153/56168 [05:57<01:08, 452.69it/s]Running loglikelihood requests:  45%|████▍     | 25217/56168 [05:57<01:08, 451.99it/s]Running loglikelihood requests:  45%|████▌     | 25281/56168 [05:57<01:08, 453.69it/s]Running loglikelihood requests:  45%|████▌     | 25345/56168 [05:57<01:06, 463.09it/s]Running loglikelihood requests:  45%|████▌     | 25409/56168 [05:57<01:05, 469.84it/s]Running loglikelihood requests:  45%|████▌     | 25473/56168 [05:58<01:04, 473.84it/s]Running loglikelihood requests:  45%|████▌     | 25537/56168 [05:58<01:04, 477.28it/s]Running loglikelihood requests:  46%|████▌     | 25601/56168 [05:58<01:03, 478.49it/s]Running loglikelihood requests:  46%|████▌     | 25665/56168 [05:58<01:03, 481.19it/s]Running loglikelihood requests:  46%|████▌     | 25729/56168 [05:58<01:03, 481.55it/s]Running loglikelihood requests:  46%|████▌     | 25793/56168 [05:58<01:02, 484.49it/s]Running loglikelihood requests:  46%|████▌     | 25857/56168 [05:58<01:02, 485.40it/s]Running loglikelihood requests:  46%|████▌     | 25921/56168 [05:58<01:02, 485.96it/s]Running loglikelihood requests:  46%|████▋     | 25985/56168 [05:59<01:02, 486.03it/s]Running loglikelihood requests:  46%|████▋     | 26049/56168 [05:59<01:01, 487.52it/s]Running loglikelihood requests:  46%|████▋     | 26113/56168 [05:59<01:01, 486.30it/s]Running loglikelihood requests:  47%|████▋     | 26177/56168 [05:59<01:01, 487.03it/s]Running loglikelihood requests:  47%|████▋     | 26241/56168 [05:59<01:01, 486.92it/s]Running loglikelihood requests:  47%|████▋     | 26305/56168 [05:59<01:01, 487.05it/s]Running loglikelihood requests:  47%|████▋     | 26369/56168 [05:59<01:01, 486.99it/s]Running loglikelihood requests:  47%|████▋     | 26433/56168 [06:00<01:00, 488.18it/s]Running loglikelihood requests:  47%|████▋     | 26497/56168 [06:00<01:00, 488.25it/s]Running loglikelihood requests:  47%|████▋     | 26561/56168 [06:00<01:00, 487.36it/s]Running loglikelihood requests:  47%|████▋     | 26625/56168 [06:00<01:00, 487.70it/s]Running loglikelihood requests:  48%|████▊     | 26689/56168 [06:00<01:00, 487.97it/s]Running loglikelihood requests:  48%|████▊     | 26753/56168 [06:00<01:01, 480.64it/s]Running loglikelihood requests:  48%|████▊     | 26817/56168 [06:00<01:01, 476.66it/s]Running loglikelihood requests:  48%|████▊     | 26881/56168 [06:00<01:05, 449.06it/s]Running loglikelihood requests:  48%|████▊     | 26945/56168 [06:01<01:03, 461.38it/s]Running loglikelihood requests:  48%|████▊     | 27009/56168 [06:01<01:02, 465.13it/s]Running loglikelihood requests:  48%|████▊     | 27073/56168 [06:01<01:02, 462.31it/s]Running loglikelihood requests:  48%|████▊     | 27137/56168 [06:01<01:01, 471.37it/s]Running loglikelihood requests:  48%|████▊     | 27201/56168 [06:01<01:00, 479.15it/s]Running loglikelihood requests:  49%|████▊     | 27265/56168 [06:01<00:59, 485.15it/s]Running loglikelihood requests:  49%|████▊     | 27329/56168 [06:01<00:58, 488.97it/s]Running loglikelihood requests:  49%|████▉     | 27393/56168 [06:02<00:58, 490.41it/s]Running loglikelihood requests:  49%|████▉     | 27457/56168 [06:02<00:58, 493.35it/s]Running loglikelihood requests:  49%|████▉     | 27521/56168 [06:02<00:58, 493.84it/s]Running loglikelihood requests:  49%|████▉     | 27585/56168 [06:02<00:58, 492.32it/s]Running loglikelihood requests:  49%|████▉     | 27649/56168 [06:02<00:57, 494.09it/s]Running loglikelihood requests:  49%|████▉     | 27713/56168 [06:02<00:57, 494.67it/s]Running loglikelihood requests:  49%|████▉     | 27777/56168 [06:02<00:57, 493.66it/s]Running loglikelihood requests:  50%|████▉     | 27841/56168 [06:02<00:57, 495.37it/s]Running loglikelihood requests:  50%|████▉     | 27905/56168 [06:03<00:57, 494.84it/s]Running loglikelihood requests:  50%|████▉     | 27969/56168 [06:03<00:56, 497.39it/s]Running loglikelihood requests:  50%|████▉     | 28033/56168 [06:03<00:56, 496.64it/s]Running loglikelihood requests:  50%|█████     | 28097/56168 [06:03<00:56, 493.00it/s]Running loglikelihood requests:  50%|█████     | 28161/56168 [06:03<00:56, 491.45it/s]Running loglikelihood requests:  50%|█████     | 28225/56168 [06:03<00:57, 489.88it/s]Running loglikelihood requests:  50%|█████     | 28289/56168 [06:03<00:56, 490.36it/s]Running loglikelihood requests:  50%|█████     | 28353/56168 [06:04<00:59, 470.15it/s]Running loglikelihood requests:  51%|█████     | 28417/56168 [06:04<00:59, 467.38it/s]Running loglikelihood requests:  51%|█████     | 28481/56168 [06:04<00:58, 469.29it/s]Running loglikelihood requests:  51%|█████     | 28545/56168 [06:04<00:58, 470.86it/s]Running loglikelihood requests:  51%|█████     | 28609/56168 [06:04<00:59, 466.46it/s]Running loglikelihood requests:  51%|█████     | 28673/56168 [06:04<00:58, 469.71it/s]Running loglikelihood requests:  51%|█████     | 28737/56168 [06:04<00:57, 476.17it/s]Running loglikelihood requests:  51%|█████▏    | 28801/56168 [06:04<00:56, 481.88it/s]Running loglikelihood requests:  51%|█████▏    | 28865/56168 [06:05<00:56, 484.12it/s]Running loglikelihood requests:  52%|█████▏    | 28929/56168 [06:05<00:55, 486.44it/s]Running loglikelihood requests:  52%|█████▏    | 28993/56168 [06:05<00:55, 487.59it/s]Running loglikelihood requests:  52%|█████▏    | 29057/56168 [06:05<00:55, 488.15it/s]Running loglikelihood requests:  52%|█████▏    | 29121/56168 [06:05<00:55, 491.74it/s]Running loglikelihood requests:  52%|█████▏    | 29185/56168 [06:05<00:54, 494.96it/s]Running loglikelihood requests:  52%|█████▏    | 29249/56168 [06:05<00:54, 496.79it/s]Running loglikelihood requests:  52%|█████▏    | 29313/56168 [06:05<00:53, 497.74it/s]Running loglikelihood requests:  52%|█████▏    | 29377/56168 [06:06<00:54, 495.78it/s]Running loglikelihood requests:  52%|█████▏    | 29441/56168 [06:06<00:53, 495.77it/s]Running loglikelihood requests:  53%|█████▎    | 29505/56168 [06:06<00:54, 489.46it/s]Running loglikelihood requests:  53%|█████▎    | 29569/56168 [06:06<00:54, 490.84it/s]Running loglikelihood requests:  53%|█████▎    | 29633/56168 [06:06<00:53, 492.61it/s]Running loglikelihood requests:  53%|█████▎    | 29697/56168 [06:06<00:53, 494.80it/s]Running loglikelihood requests:  53%|█████▎    | 29761/56168 [06:06<00:53, 496.08it/s]Running loglikelihood requests:  53%|█████▎    | 29825/56168 [06:07<00:56, 467.40it/s]Running loglikelihood requests:  53%|█████▎    | 29889/56168 [06:07<00:55, 470.77it/s]Running loglikelihood requests:  53%|█████▎    | 29953/56168 [06:07<00:55, 472.31it/s]Running loglikelihood requests:  53%|█████▎    | 30017/56168 [06:07<00:54, 482.97it/s]Running loglikelihood requests:  54%|█████▎    | 30081/56168 [06:07<00:52, 495.99it/s]Running loglikelihood requests:  54%|█████▎    | 30145/56168 [06:07<00:51, 506.38it/s]Running loglikelihood requests:  54%|█████▍    | 30209/56168 [06:07<00:50, 513.06it/s]Running loglikelihood requests:  54%|█████▍    | 30273/56168 [06:07<00:49, 517.97it/s]Running loglikelihood requests:  54%|█████▍    | 30337/56168 [06:08<00:49, 521.38it/s]Running loglikelihood requests:  54%|█████▍    | 30401/56168 [06:08<00:49, 523.85it/s]Running loglikelihood requests:  54%|█████▍    | 30465/56168 [06:08<00:48, 524.97it/s]Running loglikelihood requests:  54%|█████▍    | 30529/56168 [06:08<00:48, 527.87it/s]Running loglikelihood requests:  54%|█████▍    | 30593/56168 [06:08<00:48, 530.81it/s]Running loglikelihood requests:  55%|█████▍    | 30657/56168 [06:08<00:47, 534.19it/s]Running loglikelihood requests:  55%|█████▍    | 30721/56168 [06:08<00:47, 537.82it/s]Running loglikelihood requests:  55%|█████▍    | 30785/56168 [06:08<00:47, 539.91it/s]Running loglikelihood requests:  55%|█████▍    | 30849/56168 [06:08<00:46, 541.09it/s]Running loglikelihood requests:  55%|█████▌    | 30913/56168 [06:09<00:46, 540.33it/s]Running loglikelihood requests:  55%|█████▌    | 30977/56168 [06:09<00:46, 537.53it/s]Running loglikelihood requests:  55%|█████▌    | 31041/56168 [06:09<00:46, 537.60it/s]Running loglikelihood requests:  55%|█████▌    | 31105/56168 [06:09<00:46, 539.06it/s]Running loglikelihood requests:  55%|█████▌    | 31169/56168 [06:09<00:46, 539.04it/s]Running loglikelihood requests:  56%|█████▌    | 31233/56168 [06:09<00:46, 533.21it/s]Running loglikelihood requests:  56%|█████▌    | 31297/56168 [06:09<00:46, 535.65it/s]Running loglikelihood requests:  56%|█████▌    | 31361/56168 [06:09<00:46, 538.69it/s]Running loglikelihood requests:  56%|█████▌    | 31425/56168 [06:10<00:45, 540.54it/s]Running loglikelihood requests:  56%|█████▌    | 31489/56168 [06:10<00:46, 532.11it/s]Running loglikelihood requests:  56%|█████▌    | 31553/56168 [06:10<00:45, 535.94it/s]Running loglikelihood requests:  56%|█████▋    | 31617/56168 [06:10<00:45, 537.21it/s]Running loglikelihood requests:  56%|█████▋    | 31681/56168 [06:10<00:45, 538.00it/s]Running loglikelihood requests:  57%|█████▋    | 31745/56168 [06:10<00:45, 539.31it/s]Running loglikelihood requests:  57%|█████▋    | 31809/56168 [06:10<00:44, 542.06it/s]Running loglikelihood requests:  57%|█████▋    | 31873/56168 [06:10<00:44, 543.68it/s]Running loglikelihood requests:  57%|█████▋    | 31937/56168 [06:11<00:44, 543.88it/s]Running loglikelihood requests:  57%|█████▋    | 32001/56168 [06:11<00:44, 542.98it/s]Running loglikelihood requests:  57%|█████▋    | 32065/56168 [06:11<00:44, 543.71it/s]Running loglikelihood requests:  57%|█████▋    | 32129/56168 [06:11<00:44, 545.36it/s]Running loglikelihood requests:  57%|█████▋    | 32193/56168 [06:11<00:43, 546.42it/s]Running loglikelihood requests:  57%|█████▋    | 32257/56168 [06:11<00:43, 545.94it/s]Running loglikelihood requests:  58%|█████▊    | 32321/56168 [06:11<00:43, 544.33it/s]Running loglikelihood requests:  58%|█████▊    | 32385/56168 [06:11<00:43, 545.83it/s]Running loglikelihood requests:  58%|█████▊    | 32449/56168 [06:11<00:43, 548.34it/s]Running loglikelihood requests:  58%|█████▊    | 32513/56168 [06:12<00:43, 546.49it/s]Running loglikelihood requests:  58%|█████▊    | 32577/56168 [06:12<00:43, 546.73it/s]Running loglikelihood requests:  58%|█████▊    | 32641/56168 [06:12<00:43, 546.03it/s]Running loglikelihood requests:  58%|█████▊    | 32705/56168 [06:12<00:42, 546.94it/s]Running loglikelihood requests:  58%|█████▊    | 32769/56168 [06:12<00:42, 547.46it/s]Running loglikelihood requests:  58%|█████▊    | 32833/56168 [06:12<00:42, 547.39it/s]Running loglikelihood requests:  59%|█████▊    | 32897/56168 [06:12<00:42, 545.65it/s]Running loglikelihood requests:  59%|█████▊    | 32961/56168 [06:12<00:42, 545.91it/s]Running loglikelihood requests:  59%|█████▉    | 33025/56168 [06:13<00:42, 548.35it/s]Running loglikelihood requests:  59%|█████▉    | 33089/56168 [06:13<00:41, 549.75it/s]Running loglikelihood requests:  59%|█████▉    | 33153/56168 [06:13<00:41, 549.58it/s]Running loglikelihood requests:  59%|█████▉    | 33217/56168 [06:13<00:41, 548.60it/s]Running loglikelihood requests:  59%|█████▉    | 33281/56168 [06:13<00:41, 549.02it/s]Running loglikelihood requests:  59%|█████▉    | 33345/56168 [06:13<00:41, 549.91it/s]Running loglikelihood requests:  59%|█████▉    | 33409/56168 [06:13<00:41, 548.61it/s]Running loglikelihood requests:  60%|█████▉    | 33473/56168 [06:13<00:41, 547.50it/s]Running loglikelihood requests:  60%|█████▉    | 33537/56168 [06:13<00:42, 538.82it/s]Running loglikelihood requests:  60%|█████▉    | 33601/56168 [06:14<00:41, 542.90it/s]Running loglikelihood requests:  60%|█████▉    | 33665/56168 [06:14<00:41, 545.04it/s]Running loglikelihood requests:  60%|██████    | 33729/56168 [06:14<00:41, 546.70it/s]Running loglikelihood requests:  60%|██████    | 33793/56168 [06:14<00:40, 547.61it/s]Running loglikelihood requests:  60%|██████    | 33857/56168 [06:14<00:40, 547.75it/s]Running loglikelihood requests:  60%|██████    | 33921/56168 [06:14<00:43, 510.44it/s]Running loglikelihood requests:  61%|██████    | 33985/56168 [06:14<00:42, 521.63it/s]Running loglikelihood requests:  61%|██████    | 34049/56168 [06:14<00:42, 519.21it/s]Running loglikelihood requests:  61%|██████    | 34113/56168 [06:15<00:42, 514.67it/s]Running loglikelihood requests:  61%|██████    | 34177/56168 [06:15<00:42, 516.97it/s]Running loglikelihood requests:  61%|██████    | 34241/56168 [06:15<00:42, 517.00it/s]Running loglikelihood requests:  61%|██████    | 34305/56168 [06:15<00:41, 526.46it/s]Running loglikelihood requests:  61%|██████    | 34369/56168 [06:15<00:41, 519.91it/s]Running loglikelihood requests:  61%|██████▏   | 34433/56168 [06:15<00:41, 524.02it/s]Running loglikelihood requests:  61%|██████▏   | 34497/56168 [06:15<00:41, 518.23it/s]Running loglikelihood requests:  62%|██████▏   | 34561/56168 [06:15<00:41, 521.54it/s]Running loglikelihood requests:  62%|██████▏   | 34625/56168 [06:16<00:41, 516.64it/s]Running loglikelihood requests:  62%|██████▏   | 34689/56168 [06:16<00:40, 527.58it/s]Running loglikelihood requests:  62%|██████▏   | 34753/56168 [06:16<00:40, 527.19it/s]Running loglikelihood requests:  62%|██████▏   | 34817/56168 [06:16<00:40, 527.86it/s]Running loglikelihood requests:  62%|██████▏   | 34881/56168 [06:16<00:39, 536.40it/s]Running loglikelihood requests:  62%|██████▏   | 34945/56168 [06:16<00:39, 541.67it/s]Running loglikelihood requests:  62%|██████▏   | 35009/56168 [06:16<00:38, 545.91it/s]Running loglikelihood requests:  62%|██████▏   | 35073/56168 [06:16<00:38, 550.14it/s]Running loglikelihood requests:  63%|██████▎   | 35137/56168 [06:16<00:38, 551.21it/s]Running loglikelihood requests:  63%|██████▎   | 35201/56168 [06:17<00:38, 551.32it/s]Running loglikelihood requests:  63%|██████▎   | 35265/56168 [06:17<00:37, 551.17it/s]Running loglikelihood requests:  63%|██████▎   | 35329/56168 [06:17<00:37, 549.40it/s]Running loglikelihood requests:  63%|██████▎   | 35393/56168 [06:17<00:37, 549.49it/s]Running loglikelihood requests:  63%|██████▎   | 35457/56168 [06:17<00:37, 547.39it/s]Running loglikelihood requests:  63%|██████▎   | 35521/56168 [06:17<00:37, 546.47it/s]Running loglikelihood requests:  63%|██████▎   | 35585/56168 [06:17<00:37, 547.53it/s]Running loglikelihood requests:  63%|██████▎   | 35649/56168 [06:17<00:37, 549.92it/s]Running loglikelihood requests:  64%|██████▎   | 35713/56168 [06:18<00:37, 549.68it/s]Running loglikelihood requests:  64%|██████▎   | 35777/56168 [06:18<00:37, 538.60it/s]Running loglikelihood requests:  64%|██████▍   | 35841/56168 [06:18<00:37, 536.74it/s]Running loglikelihood requests:  64%|██████▍   | 35905/56168 [06:18<00:37, 536.03it/s]Running loglikelihood requests:  64%|██████▍   | 35969/56168 [06:18<00:37, 534.85it/s]Running loglikelihood requests:  64%|██████▍   | 36033/56168 [06:18<00:37, 540.96it/s]Running loglikelihood requests:  64%|██████▍   | 36097/56168 [06:18<00:37, 542.40it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [06:18<00:36, 545.27it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [06:18<00:36, 543.54it/s]Running loglikelihood requests:  65%|██████▍   | 36289/56168 [06:19<00:36, 545.32it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [06:19<00:36, 549.01it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [06:19<00:35, 552.59it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [06:19<00:35, 559.43it/s]Running loglikelihood requests:  65%|██████▌   | 36545/56168 [06:19<00:34, 567.31it/s]Running loglikelihood requests:  65%|██████▌   | 36609/56168 [06:19<00:34, 570.77it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [06:19<00:33, 574.61it/s]Running loglikelihood requests:  65%|██████▌   | 36737/56168 [06:19<00:33, 575.44it/s]Running loglikelihood requests:  66%|██████▌   | 36801/56168 [06:19<00:33, 578.28it/s]Running loglikelihood requests:  66%|██████▌   | 36865/56168 [06:20<00:33, 579.09it/s]Running loglikelihood requests:  66%|██████▌   | 36929/56168 [06:20<00:34, 554.21it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [06:20<00:34, 561.43it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [06:20<00:33, 565.89it/s]Running loglikelihood requests:  66%|██████▌   | 37121/56168 [06:20<00:33, 569.21it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [06:20<00:33, 571.14it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [06:20<00:32, 573.85it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [06:20<00:32, 574.64it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [06:20<00:32, 577.80it/s]Running loglikelihood requests:  67%|██████▋   | 37441/56168 [06:21<00:32, 576.94it/s]Running loglikelihood requests:  67%|██████▋   | 37505/56168 [06:21<00:32, 579.83it/s]Running loglikelihood requests:  67%|██████▋   | 37569/56168 [06:21<00:32, 578.97it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [06:21<00:31, 580.54it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [06:21<00:31, 582.89it/s]Running loglikelihood requests:  67%|██████▋   | 37761/56168 [06:21<00:32, 569.25it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [06:21<00:32, 563.87it/s]Running loglikelihood requests:  67%|██████▋   | 37889/56168 [06:21<00:32, 555.46it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [06:21<00:33, 542.12it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [06:22<00:34, 532.74it/s]Running loglikelihood requests:  68%|██████▊   | 38081/56168 [06:22<00:34, 530.71it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [06:22<00:34, 527.70it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [06:22<00:34, 523.66it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [06:22<00:33, 527.58it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [06:22<00:35, 505.89it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [06:22<00:34, 509.59it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [06:23<00:34, 507.68it/s]Running loglikelihood requests:  69%|██████▊   | 38529/56168 [06:23<00:35, 501.04it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [06:23<00:33, 517.16it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [06:23<00:33, 522.88it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [06:23<00:32, 533.98it/s]Running loglikelihood requests:  69%|██████▉   | 38785/56168 [06:23<00:31, 543.87it/s]Running loglikelihood requests:  69%|██████▉   | 38849/56168 [06:23<00:31, 542.36it/s]Running loglikelihood requests:  69%|██████▉   | 38913/56168 [06:23<00:32, 533.48it/s]Running loglikelihood requests:  69%|██████▉   | 38977/56168 [06:23<00:31, 537.96it/s]Running loglikelihood requests:  70%|██████▉   | 39041/56168 [06:24<00:31, 544.08it/s]Running loglikelihood requests:  70%|██████▉   | 39105/56168 [06:24<00:33, 513.45it/s]Running loglikelihood requests:  70%|██████▉   | 39169/56168 [06:24<00:32, 516.21it/s]Running loglikelihood requests:  70%|██████▉   | 39233/56168 [06:24<00:34, 485.57it/s]Running loglikelihood requests:  70%|██████▉   | 39297/56168 [06:24<00:38, 438.41it/s]Running loglikelihood requests:  70%|███████   | 39361/56168 [06:24<00:40, 412.02it/s]Running loglikelihood requests:  70%|███████   | 39425/56168 [06:24<00:40, 415.18it/s]Running loglikelihood requests:  70%|███████   | 39489/56168 [06:25<00:42, 397.04it/s]Running loglikelihood requests:  70%|███████   | 39553/56168 [06:25<00:41, 398.35it/s]Running loglikelihood requests:  71%|███████   | 39617/56168 [06:25<00:42, 391.86it/s]Running loglikelihood requests:  71%|███████   | 39681/56168 [06:25<00:39, 412.40it/s]Running loglikelihood requests:  71%|███████   | 39745/56168 [06:25<00:39, 412.15it/s]Running loglikelihood requests:  71%|███████   | 39809/56168 [06:25<00:42, 383.98it/s]Running loglikelihood requests:  71%|███████   | 39873/56168 [06:26<00:42, 384.11it/s]Running loglikelihood requests:  71%|███████   | 39937/56168 [06:26<00:40, 397.83it/s]Running loglikelihood requests:  71%|███████   | 40001/56168 [06:26<00:42, 381.26it/s]Running loglikelihood requests:  71%|███████▏  | 40065/56168 [06:26<00:40, 393.53it/s]Running loglikelihood requests:  71%|███████▏  | 40129/56168 [06:26<00:41, 387.42it/s]Running loglikelihood requests:  72%|███████▏  | 40193/56168 [06:26<00:39, 404.98it/s]Running loglikelihood requests:  72%|███████▏  | 40257/56168 [06:27<00:40, 395.69it/s]Running loglikelihood requests:  72%|███████▏  | 40321/56168 [06:27<00:40, 391.71it/s]Running loglikelihood requests:  72%|███████▏  | 40385/56168 [06:27<00:38, 405.43it/s]Running loglikelihood requests:  72%|███████▏  | 40449/56168 [06:27<00:41, 379.13it/s]Running loglikelihood requests:  72%|███████▏  | 40513/56168 [06:27<00:43, 360.00it/s]Running loglikelihood requests:  72%|███████▏  | 40577/56168 [06:28<00:45, 345.24it/s]Running loglikelihood requests:  72%|███████▏  | 40641/56168 [06:28<00:42, 363.88it/s]Running loglikelihood requests:  72%|███████▏  | 40705/56168 [06:28<00:41, 371.60it/s]Running loglikelihood requests:  73%|███████▎  | 40769/56168 [06:28<00:42, 363.86it/s]Running loglikelihood requests:  73%|███████▎  | 40833/56168 [06:28<00:42, 362.56it/s]Running loglikelihood requests:  73%|███████▎  | 40897/56168 [06:28<00:40, 378.96it/s]Running loglikelihood requests:  73%|███████▎  | 40961/56168 [06:29<00:39, 384.50it/s]Running loglikelihood requests:  73%|███████▎  | 41025/56168 [06:29<00:40, 375.13it/s]Running loglikelihood requests:  73%|███████▎  | 41089/56168 [06:29<00:39, 382.30it/s]Running loglikelihood requests:  73%|███████▎  | 41153/56168 [06:29<00:38, 392.60it/s]Running loglikelihood requests:  73%|███████▎  | 41217/56168 [06:29<00:38, 385.54it/s]Running loglikelihood requests:  73%|███████▎  | 41281/56168 [06:29<00:38, 388.43it/s]Running loglikelihood requests:  74%|███████▎  | 41345/56168 [06:30<00:38, 387.14it/s]Running loglikelihood requests:  74%|███████▎  | 41409/56168 [06:30<00:36, 401.33it/s]Running loglikelihood requests:  74%|███████▍  | 41473/56168 [06:30<00:36, 400.10it/s]Running loglikelihood requests:  74%|███████▍  | 41537/56168 [06:30<00:36, 399.09it/s]Running loglikelihood requests:  74%|███████▍  | 41601/56168 [06:30<00:36, 394.37it/s]Running loglikelihood requests:  74%|███████▍  | 41665/56168 [06:30<00:35, 405.80it/s]Running loglikelihood requests:  74%|███████▍  | 41729/56168 [06:30<00:36, 390.66it/s]Running loglikelihood requests:  74%|███████▍  | 41793/56168 [06:31<00:36, 388.94it/s]Running loglikelihood requests:  75%|███████▍  | 41857/56168 [06:31<00:37, 386.43it/s]Running loglikelihood requests:  75%|███████▍  | 41921/56168 [06:31<00:36, 388.55it/s]Running loglikelihood requests:  75%|███████▍  | 41985/56168 [06:31<00:38, 368.52it/s]Running loglikelihood requests:  75%|███████▍  | 42049/56168 [06:31<00:37, 372.13it/s]Running loglikelihood requests:  75%|███████▍  | 42113/56168 [06:31<00:36, 384.57it/s]Running loglikelihood requests:  75%|███████▌  | 42177/56168 [06:32<00:35, 391.54it/s]Running loglikelihood requests:  75%|███████▌  | 42241/56168 [06:32<00:36, 386.31it/s]Running loglikelihood requests:  75%|███████▌  | 42305/56168 [06:32<00:33, 408.11it/s]Running loglikelihood requests:  75%|███████▌  | 42369/56168 [06:32<00:33, 407.33it/s]Running loglikelihood requests:  76%|███████▌  | 42433/56168 [06:32<00:34, 403.21it/s]Running loglikelihood requests:  76%|███████▌  | 42497/56168 [06:32<00:32, 415.05it/s]Running loglikelihood requests:  76%|███████▌  | 42561/56168 [06:33<00:34, 394.69it/s]Running loglikelihood requests:  76%|███████▌  | 42625/56168 [06:33<00:37, 365.54it/s]Running loglikelihood requests:  76%|███████▌  | 42689/56168 [06:33<00:35, 378.95it/s]Running loglikelihood requests:  76%|███████▌  | 42753/56168 [06:33<00:33, 402.93it/s]Running loglikelihood requests:  76%|███████▌  | 42817/56168 [06:33<00:29, 446.36it/s]Running loglikelihood requests:  76%|███████▋  | 42881/56168 [06:33<00:27, 483.28it/s]Running loglikelihood requests:  76%|███████▋  | 42945/56168 [06:33<00:26, 492.23it/s]Running loglikelihood requests:  77%|███████▋  | 43009/56168 [06:34<00:27, 471.67it/s]Running loglikelihood requests:  77%|███████▋  | 43073/56168 [06:34<00:27, 482.60it/s]Running loglikelihood requests:  77%|███████▋  | 43137/56168 [06:34<00:25, 505.75it/s]Running loglikelihood requests:  77%|███████▋  | 43201/56168 [06:34<00:25, 508.01it/s]Running loglikelihood requests:  77%|███████▋  | 43265/56168 [06:34<00:24, 530.71it/s]Running loglikelihood requests:  77%|███████▋  | 43329/56168 [06:34<00:23, 537.20it/s]Running loglikelihood requests:  77%|███████▋  | 43393/56168 [06:34<00:25, 495.03it/s]Running loglikelihood requests:  77%|███████▋  | 43457/56168 [06:34<00:24, 523.08it/s]Running loglikelihood requests:  77%|███████▋  | 43521/56168 [06:35<00:24, 506.66it/s]Running loglikelihood requests:  78%|███████▊  | 43585/56168 [06:35<00:23, 530.19it/s]Running loglikelihood requests:  78%|███████▊  | 43649/56168 [06:35<00:22, 549.88it/s]Running loglikelihood requests:  78%|███████▊  | 43713/56168 [06:35<00:22, 563.60it/s]Running loglikelihood requests:  78%|███████▊  | 43777/56168 [06:35<00:22, 557.26it/s]Running loglikelihood requests:  78%|███████▊  | 43841/56168 [06:35<00:22, 549.12it/s]Running loglikelihood requests:  78%|███████▊  | 43905/56168 [06:35<00:21, 559.90it/s]Running loglikelihood requests:  78%|███████▊  | 43969/56168 [06:35<00:22, 545.80it/s]Running loglikelihood requests:  78%|███████▊  | 44033/56168 [06:35<00:23, 527.23it/s]Running loglikelihood requests:  79%|███████▊  | 44097/56168 [06:36<00:24, 485.30it/s]Running loglikelihood requests:  79%|███████▊  | 44161/56168 [06:36<00:23, 514.66it/s]Running loglikelihood requests:  79%|███████▊  | 44225/56168 [06:36<00:22, 530.73it/s]Running loglikelihood requests:  79%|███████▉  | 44289/56168 [06:36<00:21, 550.53it/s]Running loglikelihood requests:  79%|███████▉  | 44353/56168 [06:36<00:21, 543.66it/s]Running loglikelihood requests:  79%|███████▉  | 44417/56168 [06:36<00:21, 549.75it/s]Running loglikelihood requests:  79%|███████▉  | 44481/56168 [06:36<00:22, 530.49it/s]Running loglikelihood requests:  79%|███████▉  | 44545/56168 [06:36<00:22, 513.30it/s]Running loglikelihood requests:  79%|███████▉  | 44609/56168 [06:37<00:21, 533.64it/s]Running loglikelihood requests:  80%|███████▉  | 44673/56168 [06:37<00:21, 530.38it/s]Running loglikelihood requests:  80%|███████▉  | 44737/56168 [06:37<00:21, 539.32it/s]Running loglikelihood requests:  80%|███████▉  | 44801/56168 [06:37<00:21, 536.35it/s]Running loglikelihood requests:  80%|███████▉  | 44865/56168 [06:37<00:21, 523.45it/s]Running loglikelihood requests:  80%|███████▉  | 44929/56168 [06:37<00:21, 514.61it/s]Running loglikelihood requests:  80%|████████  | 44993/56168 [06:37<00:21, 517.24it/s]Running loglikelihood requests:  80%|████████  | 45057/56168 [06:37<00:21, 514.88it/s]Running loglikelihood requests:  80%|████████  | 45121/56168 [06:38<00:20, 538.42it/s]Running loglikelihood requests:  80%|████████  | 45185/56168 [06:38<00:21, 522.33it/s]Running loglikelihood requests:  81%|████████  | 45249/56168 [06:38<00:20, 543.39it/s]Running loglikelihood requests:  81%|████████  | 45313/56168 [06:38<00:20, 535.60it/s]Running loglikelihood requests:  81%|████████  | 45377/56168 [06:38<00:19, 554.56it/s]Running loglikelihood requests:  81%|████████  | 45441/56168 [06:38<00:19, 548.33it/s]Running loglikelihood requests:  81%|████████  | 45505/56168 [06:38<00:18, 564.41it/s]Running loglikelihood requests:  81%|████████  | 45569/56168 [06:38<00:18, 571.13it/s]Running loglikelihood requests:  81%|████████  | 45633/56168 [06:38<00:18, 578.79it/s]Running loglikelihood requests:  81%|████████▏ | 45700/56168 [06:39<00:17, 604.18it/s]Running loglikelihood requests:  81%|████████▏ | 45761/56168 [06:39<00:17, 591.98it/s]Running loglikelihood requests:  82%|████████▏ | 45825/56168 [06:39<00:17, 591.27it/s]Running loglikelihood requests:  82%|████████▏ | 45903/56168 [06:39<00:15, 644.90it/s]Running loglikelihood requests:  82%|████████▏ | 45968/56168 [06:39<00:16, 635.77it/s]Running loglikelihood requests:  82%|████████▏ | 46032/56168 [06:39<00:16, 623.84it/s]Running loglikelihood requests:  82%|████████▏ | 46095/56168 [06:39<00:16, 612.10it/s]Running loglikelihood requests:  82%|████████▏ | 46157/56168 [06:39<00:16, 606.10it/s]Running loglikelihood requests:  82%|████████▏ | 46218/56168 [06:39<00:16, 593.25it/s]Running loglikelihood requests:  82%|████████▏ | 46278/56168 [06:40<00:17, 551.68it/s]Running loglikelihood requests:  82%|████████▏ | 46337/56168 [06:40<00:17, 552.00it/s]Running loglikelihood requests:  83%|████████▎ | 46401/56168 [06:40<00:17, 542.64it/s]Running loglikelihood requests:  83%|████████▎ | 46465/56168 [06:40<00:17, 559.07it/s]Running loglikelihood requests:  83%|████████▎ | 46529/56168 [06:40<00:16, 568.85it/s]Running loglikelihood requests:  83%|████████▎ | 46593/56168 [06:40<00:17, 563.05it/s]Running loglikelihood requests:  83%|████████▎ | 46657/56168 [06:40<00:16, 572.39it/s]Running loglikelihood requests:  83%|████████▎ | 46721/56168 [06:40<00:16, 579.75it/s]Running loglikelihood requests:  83%|████████▎ | 46803/56168 [06:40<00:14, 647.11it/s]Running loglikelihood requests:  83%|████████▎ | 46869/56168 [06:41<00:14, 639.65it/s]Running loglikelihood requests:  84%|████████▎ | 46934/56168 [06:41<00:14, 629.25it/s]Running loglikelihood requests:  84%|████████▎ | 46998/56168 [06:41<00:14, 614.92it/s]Running loglikelihood requests:  84%|████████▍ | 47068/56168 [06:41<00:14, 639.01it/s]Running loglikelihood requests:  84%|████████▍ | 47133/56168 [06:41<00:14, 629.36it/s]Running loglikelihood requests:  84%|████████▍ | 47197/56168 [06:41<00:14, 616.05it/s]Running loglikelihood requests:  84%|████████▍ | 47259/56168 [06:41<00:15, 588.76it/s]Running loglikelihood requests:  84%|████████▍ | 47319/56168 [06:41<00:15, 559.89it/s]Running loglikelihood requests:  84%|████████▍ | 47376/56168 [06:41<00:15, 550.28it/s]Running loglikelihood requests:  84%|████████▍ | 47432/56168 [06:41<00:15, 546.16it/s]Running loglikelihood requests:  85%|████████▍ | 47489/56168 [06:42<00:15, 542.77it/s]Running loglikelihood requests:  85%|████████▍ | 47568/56168 [06:42<00:14, 612.69it/s]Running loglikelihood requests:  85%|████████▍ | 47630/56168 [06:42<00:14, 597.08it/s]Running loglikelihood requests:  85%|████████▍ | 47691/56168 [06:42<00:14, 587.71it/s]Running loglikelihood requests:  85%|████████▌ | 47751/56168 [06:42<00:14, 582.43it/s]Running loglikelihood requests:  85%|████████▌ | 47810/56168 [06:42<00:14, 566.50it/s]Running loglikelihood requests:  85%|████████▌ | 47873/56168 [06:42<00:14, 566.83it/s]Running loglikelihood requests:  85%|████████▌ | 47937/56168 [06:42<00:14, 563.07it/s]Running loglikelihood requests:  85%|████████▌ | 48021/56168 [06:42<00:12, 640.15it/s]Running loglikelihood requests:  86%|████████▌ | 48086/56168 [06:43<00:12, 633.21it/s]Running loglikelihood requests:  86%|████████▌ | 48150/56168 [06:43<00:13, 613.40it/s]Running loglikelihood requests:  86%|████████▌ | 48212/56168 [06:43<00:13, 604.71it/s]Running loglikelihood requests:  86%|████████▌ | 48273/56168 [06:43<00:13, 582.75it/s]Running loglikelihood requests:  86%|████████▌ | 48332/56168 [06:43<00:13, 570.84it/s]Running loglikelihood requests:  86%|████████▌ | 48390/56168 [06:43<00:13, 565.38it/s]Running loglikelihood requests:  86%|████████▋ | 48449/56168 [06:43<00:13, 570.28it/s]Running loglikelihood requests:  86%|████████▋ | 48513/56168 [06:43<00:13, 584.38it/s]Running loglikelihood requests:  86%|████████▋ | 48577/56168 [06:43<00:12, 590.50it/s]Running loglikelihood requests:  87%|████████▋ | 48641/56168 [06:44<00:12, 589.04it/s]Running loglikelihood requests:  87%|████████▋ | 48721/56168 [06:44<00:11, 649.19it/s]Running loglikelihood requests:  87%|████████▋ | 48787/56168 [06:44<00:12, 597.14it/s]Running loglikelihood requests:  87%|████████▋ | 48848/56168 [06:44<00:13, 533.98it/s]Running loglikelihood requests:  87%|████████▋ | 48904/56168 [06:44<00:13, 535.02it/s]Running loglikelihood requests:  87%|████████▋ | 48961/56168 [06:44<00:13, 523.42it/s]Running loglikelihood requests:  87%|████████▋ | 49025/56168 [06:44<00:12, 552.32it/s]Running loglikelihood requests:  87%|████████▋ | 49089/56168 [06:44<00:13, 541.97it/s]Running loglikelihood requests:  88%|████████▊ | 49153/56168 [06:44<00:13, 537.99it/s]Running loglikelihood requests:  88%|████████▊ | 49228/56168 [06:45<00:11, 594.80it/s]Running loglikelihood requests:  88%|████████▊ | 49289/56168 [06:45<00:12, 549.58it/s]Running loglikelihood requests:  88%|████████▊ | 49346/56168 [06:45<00:12, 529.31it/s]Running loglikelihood requests:  88%|████████▊ | 49409/56168 [06:45<00:12, 550.20it/s]Running loglikelihood requests:  88%|████████▊ | 49475/56168 [06:45<00:11, 580.19it/s]Running loglikelihood requests:  88%|████████▊ | 49537/56168 [06:45<00:11, 581.88it/s]Running loglikelihood requests:  88%|████████▊ | 49603/56168 [06:45<00:10, 603.85it/s]Running loglikelihood requests:  88%|████████▊ | 49665/56168 [06:45<00:11, 590.94it/s]Running loglikelihood requests:  89%|████████▊ | 49729/56168 [06:45<00:10, 604.55it/s]Running loglikelihood requests:  89%|████████▊ | 49793/56168 [06:46<00:10, 602.09it/s]Running loglikelihood requests:  89%|████████▉ | 49865/56168 [06:46<00:09, 635.87it/s]Running loglikelihood requests:  89%|████████▉ | 49929/56168 [06:46<00:10, 614.84it/s]Running loglikelihood requests:  89%|████████▉ | 49991/56168 [06:46<00:10, 607.33it/s]Running loglikelihood requests:  89%|████████▉ | 50061/56168 [06:46<00:09, 633.96it/s]Running loglikelihood requests:  89%|████████▉ | 50125/56168 [06:46<00:09, 623.50it/s]Running loglikelihood requests:  89%|████████▉ | 50188/56168 [06:46<00:09, 609.50it/s]Running loglikelihood requests:  89%|████████▉ | 50263/56168 [06:46<00:09, 649.86it/s]Running loglikelihood requests:  90%|████████▉ | 50329/56168 [06:46<00:09, 633.89it/s]Running loglikelihood requests:  90%|████████▉ | 50406/56168 [06:46<00:08, 672.96it/s]Running loglikelihood requests:  90%|████████▉ | 50474/56168 [06:47<00:08, 648.40it/s]Running loglikelihood requests:  90%|████████▉ | 50540/56168 [06:47<00:08, 629.02it/s]Running loglikelihood requests:  90%|█████████ | 50625/56168 [06:47<00:10, 537.96it/s]Running loglikelihood requests:  90%|█████████ | 50689/56168 [06:47<00:10, 541.59it/s]Running loglikelihood requests:  90%|█████████ | 50774/56168 [06:47<00:08, 617.84it/s]Running loglikelihood requests:  91%|█████████ | 50839/56168 [06:47<00:08, 604.11it/s]Running loglikelihood requests:  91%|█████████ | 50902/56168 [06:47<00:08, 586.89it/s]Running loglikelihood requests:  91%|█████████ | 50972/56168 [06:47<00:08, 611.72it/s]Running loglikelihood requests:  91%|█████████ | 51035/56168 [06:48<00:08, 607.00it/s]Running loglikelihood requests:  91%|█████████ | 51119/56168 [06:48<00:07, 671.59it/s]Running loglikelihood requests:  91%|█████████ | 51188/56168 [06:48<00:07, 664.69it/s]Running loglikelihood requests:  91%|█████████▏| 51256/56168 [06:48<00:07, 664.82it/s]Running loglikelihood requests:  91%|█████████▏| 51324/56168 [06:48<00:07, 649.39it/s]Running loglikelihood requests:  91%|█████████▏| 51393/56168 [06:48<00:09, 525.78it/s]Running loglikelihood requests:  92%|█████████▏| 51457/56168 [06:48<00:09, 521.23it/s]Running loglikelihood requests:  92%|█████████▏| 51521/56168 [06:48<00:08, 543.62it/s]Running loglikelihood requests:  92%|█████████▏| 51605/56168 [06:49<00:07, 620.27it/s]Running loglikelihood requests:  92%|█████████▏| 51670/56168 [06:49<00:07, 616.83it/s]Running loglikelihood requests:  92%|█████████▏| 51734/56168 [06:49<00:07, 605.64it/s]Running loglikelihood requests:  92%|█████████▏| 51796/56168 [06:49<00:07, 603.31it/s]Running loglikelihood requests:  92%|█████████▏| 51870/56168 [06:49<00:06, 641.67it/s]Running loglikelihood requests:  92%|█████████▏| 51936/56168 [06:49<00:07, 603.73it/s]Running loglikelihood requests:  93%|█████████▎| 51998/56168 [06:49<00:07, 587.07it/s]Running loglikelihood requests:  93%|█████████▎| 52058/56168 [06:49<00:06, 588.69it/s]Running loglikelihood requests:  93%|█████████▎| 52118/56168 [06:49<00:07, 559.53it/s]Running loglikelihood requests:  93%|█████████▎| 52175/56168 [06:49<00:07, 556.54it/s]Running loglikelihood requests:  93%|█████████▎| 52232/56168 [06:50<00:07, 521.88it/s]Running loglikelihood requests:  93%|█████████▎| 52289/56168 [06:50<00:07, 498.14it/s]Running loglikelihood requests:  93%|█████████▎| 52354/56168 [06:50<00:07, 531.47it/s]Running loglikelihood requests:  93%|█████████▎| 52417/56168 [06:50<00:06, 542.28it/s]Running loglikelihood requests:  93%|█████████▎| 52481/56168 [06:50<00:06, 566.49it/s]Running loglikelihood requests:  94%|█████████▎| 52545/56168 [06:50<00:06, 556.26it/s]Running loglikelihood requests:  94%|█████████▎| 52609/56168 [06:50<00:06, 549.46it/s]Running loglikelihood requests:  94%|█████████▍| 52673/56168 [06:50<00:06, 555.94it/s]Running loglikelihood requests:  94%|█████████▍| 52737/56168 [06:51<00:06, 567.17it/s]Running loglikelihood requests:  94%|█████████▍| 52801/56168 [06:51<00:05, 575.05it/s]Running loglikelihood requests:  94%|█████████▍| 52865/56168 [06:51<00:05, 556.45it/s]Running loglikelihood requests:  94%|█████████▍| 52929/56168 [06:51<00:05, 556.82it/s]Running loglikelihood requests:  94%|█████████▍| 52993/56168 [06:51<00:05, 556.63it/s]Running loglikelihood requests:  94%|█████████▍| 53060/56168 [06:51<00:05, 587.38it/s]Running loglikelihood requests:  95%|█████████▍| 53121/56168 [06:51<00:05, 586.99it/s]Running loglikelihood requests:  95%|█████████▍| 53185/56168 [06:51<00:05, 559.17it/s]Running loglikelihood requests:  95%|█████████▍| 53249/56168 [06:51<00:05, 520.79it/s]Running loglikelihood requests:  95%|█████████▍| 53313/56168 [06:52<00:05, 520.00it/s]Running loglikelihood requests:  95%|█████████▌| 53377/56168 [06:52<00:05, 539.16it/s]Running loglikelihood requests:  95%|█████████▌| 53441/56168 [06:52<00:04, 562.75it/s]Running loglikelihood requests:  95%|█████████▌| 53505/56168 [06:52<00:04, 580.61it/s]Running loglikelihood requests:  95%|█████████▌| 53609/56168 [06:52<00:03, 709.20it/s]Running loglikelihood requests:  96%|█████████▌| 53682/56168 [06:52<00:03, 696.14it/s]Running loglikelihood requests:  96%|█████████▌| 53753/56168 [06:52<00:03, 678.51it/s]Running loglikelihood requests:  96%|█████████▌| 53822/56168 [06:52<00:03, 664.61it/s]Running loglikelihood requests:  96%|█████████▌| 53889/56168 [06:53<00:04, 528.26it/s]Running loglikelihood requests:  96%|█████████▌| 53953/56168 [06:53<00:04, 546.85it/s]Running loglikelihood requests:  96%|█████████▌| 54017/56168 [06:53<00:03, 563.07it/s]Running loglikelihood requests:  96%|█████████▋| 54114/56168 [06:53<00:03, 670.19it/s]Running loglikelihood requests:  96%|█████████▋| 54185/56168 [06:53<00:03, 655.07it/s]Running loglikelihood requests:  97%|█████████▋| 54269/56168 [06:53<00:02, 701.16it/s]Running loglikelihood requests:  97%|█████████▋| 54342/56168 [06:53<00:03, 592.82it/s]Running loglikelihood requests:  97%|█████████▋| 54446/56168 [06:53<00:02, 704.56it/s]Running loglikelihood requests:  97%|█████████▋| 54529/56168 [06:53<00:02, 618.86it/s]Running loglikelihood requests:  97%|█████████▋| 54597/56168 [06:54<00:02, 633.30it/s]Running loglikelihood requests:  97%|█████████▋| 54721/56168 [06:54<00:02, 656.62it/s]Running loglikelihood requests:  98%|█████████▊| 54813/56168 [06:54<00:01, 717.77it/s]Running loglikelihood requests:  98%|█████████▊| 54889/56168 [06:54<00:01, 718.16it/s]Running loglikelihood requests:  98%|█████████▊| 54977/56168 [06:54<00:01, 635.73it/s]Running loglikelihood requests:  98%|█████████▊| 55045/56168 [06:54<00:01, 641.60it/s]Running loglikelihood requests:  98%|█████████▊| 55169/56168 [06:54<00:01, 657.54it/s]Running loglikelihood requests:  98%|█████████▊| 55238/56168 [06:55<00:01, 664.91it/s]Running loglikelihood requests:  98%|█████████▊| 55323/56168 [06:55<00:01, 710.54it/s]Running loglikelihood requests:  99%|█████████▊| 55396/56168 [06:55<00:01, 639.34it/s]Running loglikelihood requests:  99%|█████████▉| 55489/56168 [06:55<00:01, 594.63it/s]Running loglikelihood requests:  99%|█████████▉| 55566/56168 [06:55<00:00, 619.08it/s]Running loglikelihood requests:  99%|█████████▉| 55631/56168 [06:55<00:00, 620.94it/s]Running loglikelihood requests:  99%|█████████▉| 55745/56168 [06:55<00:00, 627.50it/s]Running loglikelihood requests:  99%|█████████▉| 55873/56168 [06:56<00:00, 657.64it/s]Running loglikelihood requests: 100%|█████████▉| 56001/56168 [06:56<00:00, 678.08it/s]Running loglikelihood requests: 100%|█████████▉| 56087/56168 [06:56<00:00, 716.30it/s]Running loglikelihood requests: 100%|█████████▉| 56161/56168 [06:56<00:00, 652.97it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [06:56<00:00, 134.87it/s]
2025-05-15:01:47:46,815 WARNING  [huggingface.py:1353] Failed to get model SHA for /work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo_kl/checkpoint-150 at revision main. Error: Repo id must be in the form 'repo_name' or 'namespace/repo_name': '/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo_kl/checkpoint-150'. Use `repo_type` argument if needed.
2025-05-15:01:47:55,009 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo_kl/checkpoint-150,tokenizer=meta-llama/Meta-Llama-3-8b-Instruct), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.7887|±  |0.0034|
| - humanities                          |      2|none  |      |acc   |↑  |0.7764|±  |0.0060|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.7619|±  |0.0381|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.8667|±  |0.0265|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.8922|±  |0.0218|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.9198|±  |0.0177|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.8678|±  |0.0309|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.8241|±  |0.0368|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.8589|±  |0.0274|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.7399|±  |0.0236|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.6927|±  |0.0154|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.8199|±  |0.0218|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.8488|±  |0.0199|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.7308|±  |0.0113|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.8947|±  |0.0235|
| - other                               |      2|none  |      |acc   |↑  |0.8140|±  |0.0069|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.8400|±  |0.0368|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.8302|±  |0.0231|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.7399|±  |0.0335|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.7300|±  |0.0446|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.8072|±  |0.0265|
|  - management                         |      1|none  |     0|acc   |↑  |0.8447|±  |0.0359|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8846|±  |0.0209|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.8400|±  |0.0368|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.8544|±  |0.0126|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.8235|±  |0.0218|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.7447|±  |0.0260|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.8419|±  |0.0222|
|  - virology                           |      1|none  |     0|acc   |↑  |0.6386|±  |0.0374|
| - social sciences                     |      2|none  |      |acc   |↑  |0.8278|±  |0.0068|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.6930|±  |0.0434|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7727|±  |0.0299|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.9016|±  |0.0215|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.8000|±  |0.0203|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.8571|±  |0.0227|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.8881|±  |0.0135|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.8092|±  |0.0345|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.8317|±  |0.0151|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.7909|±  |0.0390|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.7429|±  |0.0280|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8657|±  |0.0241|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8300|±  |0.0378|
| - stem                                |      2|none  |      |acc   |↑  |0.7441|±  |0.0077|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.6500|±  |0.0479|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.8222|±  |0.0330|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.7303|±  |0.0361|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.7778|±  |0.0348|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.6600|±  |0.0476|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.7100|±  |0.0456|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.6400|±  |0.0482|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.6667|±  |0.0469|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.8800|±  |0.0327|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.7277|±  |0.0291|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.7724|±  |0.0349|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.7487|±  |0.0223|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.8065|±  |0.0225|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.7734|±  |0.0295|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.7900|±  |0.0409|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.6704|±  |0.0287|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.7020|±  |0.0373|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.7824|±  |0.0281|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.7321|±  |0.0420|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.7887|±  |0.0034|
| - humanities     |      2|none  |      |acc   |↑  |0.7764|±  |0.0060|
| - other          |      2|none  |      |acc   |↑  |0.8140|±  |0.0069|
| - social sciences|      2|none  |      |acc   |↑  |0.8278|±  |0.0068|
| - stem           |      2|none  |      |acc   |↑  |0.7441|±  |0.0077|

2025-05-15:01:48:03,231 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-15:01:48:03,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,410 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,428 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,448 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,454 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,467 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,474 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,497 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,507 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:03,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,405 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,409 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,417 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,438 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,485 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:04,550 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,459 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,469 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,485 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,883 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,897 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,982 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,989 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:05,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,010 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,019 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,023 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,036 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,058 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,063 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,076 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,098 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,115 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,130 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,138 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,142 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,153 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,161 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,165 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,170 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,178 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,183 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,204 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,208 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,230 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,237 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,349 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,362 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,365 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,372 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,375 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,378 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,381 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,390 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,402 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,405 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,408 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,411 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,416 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,419 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,427 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,430 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,433 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,454 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,459 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,461 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,471 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,478 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,492 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,497 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,535 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,538 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,566 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,569 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,582 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,588 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:06,621 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:07,623 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:07,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:07,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:07,658 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:07,660 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:07,662 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:07,664 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:07,666 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,736 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,740 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,747 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,751 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,753 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,787 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,807 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,853 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,877 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,881 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,883 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,885 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,897 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,899 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,922 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,924 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,930 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,937 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,941 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,953 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,955 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,959 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,961 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,968 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,979 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,985 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,987 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,989 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,994 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:08,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,029 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,046 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,069 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,073 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,075 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,077 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,079 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,081 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,085 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,089 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,093 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,111 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,113 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,115 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,117 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,121 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,123 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,135 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,154 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,156 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,158 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,163 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,165 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,167 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,169 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,170 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,172 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,176 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,178 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,180 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,181 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,183 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,189 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,194 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,198 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,202 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,204 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,206 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,208 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,211 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,215 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,230 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,266 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,268 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,273 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,277 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,279 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,281 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,284 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,290 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,312 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,314 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,319 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,323 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,327 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,330 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,334 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,337 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,343 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,346 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,354 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,365 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,369 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,370 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,372 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,376 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,378 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,380 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,395 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,403 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,406 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,408 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,410 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,416 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,433 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,435 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,452 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,571 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,574 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:09,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:12,319 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:12,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-15:01:48:12,324 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-15:01:48:12,327 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-15:01:48:12,328 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/nkale/unlearn_benchmark/unlearn_models/scrub/checkpoint-425', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-15:01:48:14,242 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-15:01:48:14,883 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:19<00:57, 19.27s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:35<00:35, 17.55s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:49<00:15, 15.84s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:52<00:00, 10.93s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:52<00:00, 13.21s/it]
2025-05-15:01:49:30,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,471 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,472 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-15:01:49:30,473 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-15:01:49:30,491 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 48%|████▊     | 48/100 [00:00<00:00, 479.48it/s]100%|██████████| 100/100 [00:00<00:00, 500.38it/s]100%|██████████| 100/100 [00:00<00:00, 496.38it/s]
2025-05-15:01:49:30,708 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 11%|█         | 34/310 [00:00<00:00, 327.46it/s] 25%|██▌       | 78/310 [00:00<00:00, 376.78it/s] 46%|████▌     | 143/310 [00:00<00:00, 495.29it/s] 64%|██████▍   | 198/310 [00:00<00:00, 509.61it/s] 81%|████████  | 250/310 [00:00<00:00, 477.11it/s] 96%|█████████▋| 299/310 [00:00<00:00, 441.09it/s]100%|██████████| 310/310 [00:00<00:00, 448.41it/s]
2025-05-15:01:49:31,417 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 57%|█████▋    | 57/100 [00:00<00:00, 564.95it/s]100%|██████████| 100/100 [00:00<00:00, 656.93it/s]
2025-05-15:01:49:31,580 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 59%|█████▊    | 85/145 [00:00<00:00, 844.66it/s]100%|██████████| 145/145 [00:00<00:00, 844.12it/s]
2025-05-15:01:49:31,757 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 85%|████████▌ | 85/100 [00:00<00:00, 841.87it/s]100%|██████████| 100/100 [00:00<00:00, 825.48it/s]
2025-05-15:01:49:31,883 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 37%|███▋      | 75/203 [00:00<00:00, 744.49it/s] 75%|███████▌  | 153/203 [00:00<00:00, 764.29it/s]100%|██████████| 203/203 [00:00<00:00, 677.96it/s]
2025-05-15:01:49:32,191 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 41%|████      | 62/152 [00:00<00:00, 619.33it/s] 89%|████████▉ | 135/152 [00:00<00:00, 683.75it/s]100%|██████████| 152/152 [00:00<00:00, 682.06it/s]
2025-05-15:01:49:32,419 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 63%|██████▎   | 64/102 [00:00<00:00, 633.83it/s]100%|██████████| 102/102 [00:00<00:00, 695.21it/s]
2025-05-15:01:49:32,571 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 82%|████████▏ | 82/100 [00:00<00:00, 816.04it/s]100%|██████████| 100/100 [00:00<00:00, 812.59it/s]
2025-05-15:01:49:32,699 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 22%|██▏       | 31/144 [00:00<00:00, 309.23it/s] 49%|████▉     | 71/144 [00:00<00:00, 361.43it/s] 86%|████████▌ | 124/144 [00:00<00:00, 436.68it/s]100%|██████████| 144/144 [00:00<00:00, 407.32it/s]
2025-05-15:01:49:33,065 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 24%|██▍       | 56/235 [00:00<00:00, 554.17it/s] 60%|██████    | 141/235 [00:00<00:00, 725.97it/s] 95%|█████████▍| 223/235 [00:00<00:00, 765.67it/s]100%|██████████| 235/235 [00:00<00:00, 726.46it/s]
2025-05-15:01:49:33,404 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 45%|████▍     | 50/112 [00:00<00:00, 480.81it/s] 88%|████████▊ | 99/112 [00:00<00:00, 483.91it/s]100%|██████████| 112/112 [00:00<00:00, 493.66it/s]
2025-05-15:01:49:33,636 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 18%|█▊        | 48/270 [00:00<00:00, 453.49it/s] 39%|███▉      | 106/270 [00:00<00:00, 520.95it/s] 59%|█████▉    | 159/270 [00:00<00:00, 482.54it/s] 78%|███████▊  | 211/270 [00:00<00:00, 496.39it/s] 97%|█████████▋| 261/270 [00:00<00:00, 492.88it/s]100%|██████████| 270/270 [00:00<00:00, 493.23it/s]
2025-05-15:01:49:34,199 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 40%|████      | 40/100 [00:00<00:00, 386.96it/s]100%|██████████| 100/100 [00:00<00:00, 495.80it/s]
2025-05-15:01:49:34,405 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 72%|███████▏  | 72/100 [00:00<00:00, 714.05it/s]100%|██████████| 100/100 [00:00<00:00, 592.95it/s]
2025-05-15:01:49:34,591 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 48%|████▊     | 65/135 [00:00<00:00, 644.71it/s] 96%|█████████▋| 130/135 [00:00<00:00, 592.07it/s]100%|██████████| 135/135 [00:00<00:00, 601.79it/s]
2025-05-15:01:49:34,822 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 17%|█▋        | 65/378 [00:00<00:00, 644.90it/s] 37%|███▋      | 140/378 [00:00<00:00, 705.99it/s] 56%|█████▌    | 211/378 [00:00<00:00, 572.85it/s] 78%|███████▊  | 295/378 [00:00<00:00, 662.14it/s] 96%|█████████▋| 364/378 [00:00<00:00, 653.82it/s]100%|██████████| 378/378 [00:00<00:00, 652.83it/s]
2025-05-15:01:49:35,418 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 54%|█████▎    | 81/151 [00:00<00:00, 806.57it/s]100%|██████████| 151/151 [00:00<00:00, 585.10it/s]
2025-05-15:01:49:35,683 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 18%|█▊        | 38/216 [00:00<00:00, 376.46it/s] 36%|███▌      | 78/216 [00:00<00:00, 379.26it/s] 60%|█████▉    | 129/216 [00:00<00:00, 428.02it/s] 92%|█████████▏| 199/216 [00:00<00:00, 532.03it/s]100%|██████████| 216/216 [00:00<00:00, 500.45it/s]
2025-05-15:01:49:36,136 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 23%|██▎       | 61/265 [00:00<00:00, 608.97it/s] 55%|█████▌    | 147/265 [00:00<00:00, 753.81it/s] 84%|████████▍ | 223/265 [00:00<00:00, 701.31it/s]100%|██████████| 265/265 [00:00<00:00, 713.78it/s]
2025-05-15:01:49:36,518 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 57%|█████▋    | 57/100 [00:00<00:00, 561.00it/s]100%|██████████| 100/100 [00:00<00:00, 643.96it/s]
2025-05-15:01:49:36,690 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 41%|████      | 42/103 [00:00<00:00, 394.39it/s] 97%|█████████▋| 100/103 [00:00<00:00, 490.76it/s]100%|██████████| 103/103 [00:00<00:00, 480.95it/s]
2025-05-15:01:49:36,920 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 26%|██▌       | 79/306 [00:00<00:00, 785.10it/s] 52%|█████▏    | 158/306 [00:00<00:00, 713.27it/s] 78%|███████▊  | 240/306 [00:00<00:00, 748.55it/s]100%|██████████| 306/306 [00:00<00:00, 671.60it/s]
2025-05-15:01:49:37,393 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 30%|███       | 52/173 [00:00<00:00, 506.33it/s] 60%|█████▉    | 103/173 [00:00<00:00, 466.35it/s] 87%|████████▋ | 150/173 [00:00<00:00, 436.73it/s]100%|██████████| 173/173 [00:00<00:00, 447.41it/s]
2025-05-15:01:49:37,786 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 27%|██▋       | 44/166 [00:00<00:00, 434.92it/s] 53%|█████▎    | 88/166 [00:00<00:00, 358.07it/s] 98%|█████████▊| 162/166 [00:00<00:00, 502.90it/s]100%|██████████| 166/166 [00:00<00:00, 467.08it/s]
2025-05-15:01:49:38,149 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 31%|███▏      | 85/272 [00:00<00:00, 844.90it/s] 62%|██████▎   | 170/272 [00:00<00:00, 740.19it/s] 90%|█████████ | 245/272 [00:00<00:00, 736.35it/s]100%|██████████| 272/272 [00:00<00:00, 730.28it/s]
2025-05-15:01:49:38,532 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 10%|▉         | 78/783 [00:00<00:00, 777.74it/s] 20%|█▉        | 156/783 [00:00<00:00, 728.29it/s] 29%|██▉       | 230/783 [00:00<00:00, 690.70it/s] 40%|███▉      | 313/783 [00:00<00:00, 741.04it/s] 50%|████▉     | 388/783 [00:00<00:00, 630.29it/s] 58%|█████▊    | 454/783 [00:00<00:00, 579.18it/s] 66%|██████▌   | 514/783 [00:00<00:00, 507.40it/s] 72%|███████▏  | 567/783 [00:00<00:00, 492.20it/s] 79%|███████▉  | 618/783 [00:01<00:00, 435.34it/s] 87%|████████▋ | 684/783 [00:01<00:00, 489.12it/s] 96%|█████████▌| 751/783 [00:01<00:00, 529.04it/s]100%|██████████| 783/783 [00:01<00:00, 565.39it/s]
2025-05-15:01:49:39,942 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 82%|████████▏ | 82/100 [00:00<00:00, 818.45it/s]100%|██████████| 100/100 [00:00<00:00, 815.26it/s]
2025-05-15:01:49:40,070 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 35%|███▌      | 35/100 [00:00<00:00, 313.10it/s] 80%|████████  | 80/100 [00:00<00:00, 389.86it/s]100%|██████████| 100/100 [00:00<00:00, 400.69it/s]
2025-05-15:01:49:40,324 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 16%|█▌        | 44/282 [00:00<00:00, 412.44it/s] 35%|███▍      | 98/282 [00:00<00:00, 479.67it/s] 52%|█████▏    | 147/282 [00:00<00:00, 467.55it/s] 69%|██████▉   | 194/282 [00:00<00:00, 458.16it/s] 86%|████████▌ | 242/282 [00:00<00:00, 464.23it/s]100%|██████████| 282/282 [00:00<00:00, 458.75it/s]
2025-05-15:01:49:40,956 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:05, 36.57it/s] 25%|██▍       | 58/234 [00:00<00:01, 112.56it/s] 46%|████▌     | 107/234 [00:00<00:00, 201.08it/s] 79%|███████▉  | 186/234 [00:00<00:00, 348.63it/s]100%|██████████| 234/234 [00:01<00:00, 230.09it/s]
2025-05-15:01:49:41,988 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s]  9%|▉         | 20/223 [00:00<00:01, 181.88it/s] 24%|██▍       | 53/223 [00:00<00:00, 264.34it/s] 58%|█████▊    | 130/223 [00:00<00:00, 488.91it/s] 91%|█████████ | 203/223 [00:00<00:00, 581.80it/s]100%|██████████| 223/223 [00:00<00:00, 494.89it/s]
2025-05-15:01:49:42,480 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 67%|██████▋   | 74/110 [00:00<00:00, 733.93it/s]100%|██████████| 110/110 [00:00<00:00, 741.19it/s]
2025-05-15:01:49:42,640 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 32%|███▏      | 65/201 [00:00<00:00, 613.66it/s] 72%|███████▏  | 144/201 [00:00<00:00, 713.69it/s]100%|██████████| 201/201 [00:00<00:00, 718.34it/s]
2025-05-15:01:49:42,929 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 31%|███       | 61/198 [00:00<00:00, 606.49it/s] 71%|███████   | 140/198 [00:00<00:00, 712.59it/s]100%|██████████| 198/198 [00:00<00:00, 724.34it/s]
2025-05-15:01:49:43,210 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 28%|██▊       | 68/245 [00:00<00:00, 678.21it/s] 62%|██████▏   | 151/245 [00:00<00:00, 764.02it/s] 93%|█████████▎| 228/245 [00:00<00:00, 717.80it/s]100%|██████████| 245/245 [00:00<00:00, 711.78it/s]
2025-05-15:01:49:43,570 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 15%|█▌        | 84/545 [00:00<00:00, 832.69it/s] 31%|███       | 168/545 [00:00<00:00, 682.28it/s] 44%|████▎     | 238/545 [00:00<00:00, 622.46it/s] 55%|█████▌    | 302/545 [00:00<00:00, 555.64it/s] 66%|██████▌   | 359/545 [00:00<00:00, 547.13it/s] 77%|███████▋  | 418/545 [00:00<00:00, 559.26it/s] 87%|████████▋ | 475/545 [00:00<00:00, 558.19it/s]100%|██████████| 545/545 [00:00<00:00, 603.29it/s]
2025-05-15:01:49:44,499 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 68%|██████▊   | 68/100 [00:00<00:00, 634.32it/s]100%|██████████| 100/100 [00:00<00:00, 627.07it/s]
2025-05-15:01:49:44,663 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 20%|██        | 78/390 [00:00<00:00, 779.51it/s] 40%|████      | 156/390 [00:00<00:00, 701.91it/s] 58%|█████▊    | 227/390 [00:00<00:00, 661.06it/s] 75%|███████▌  | 294/390 [00:00<00:00, 649.90it/s] 92%|█████████▏| 360/390 [00:00<00:00, 586.46it/s]100%|██████████| 390/390 [00:00<00:00, 608.61it/s]
2025-05-15:01:49:45,325 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 18%|█▊        | 43/238 [00:00<00:00, 379.80it/s] 46%|████▌     | 109/238 [00:00<00:00, 534.23it/s] 79%|███████▊  | 187/238 [00:00<00:00, 641.12it/s]100%|██████████| 238/238 [00:00<00:00, 598.36it/s]
2025-05-15:01:49:45,733 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 62%|██████▏   | 71/114 [00:00<00:00, 701.71it/s]100%|██████████| 114/114 [00:00<00:00, 717.63it/s]
2025-05-15:01:49:45,897 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s]  9%|▉         | 58/612 [00:00<00:00, 573.72it/s] 22%|██▏       | 133/612 [00:00<00:00, 673.11it/s] 33%|███▎      | 201/612 [00:00<00:00, 664.91it/s] 44%|████▍     | 268/612 [00:00<00:00, 549.82it/s] 53%|█████▎    | 326/612 [00:00<00:00, 514.43it/s] 62%|██████▏   | 380/612 [00:00<00:00, 488.58it/s] 70%|███████   | 430/612 [00:00<00:00, 458.70it/s] 78%|███████▊  | 477/612 [00:00<00:00, 456.72it/s] 86%|████████▌ | 526/612 [00:01<00:00, 464.89it/s] 94%|█████████▍| 574/612 [00:01<00:00, 469.05it/s]100%|██████████| 612/612 [00:01<00:00, 499.80it/s]
2025-05-15:01:49:47,151 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 27%|██▋       | 36/131 [00:00<00:00, 359.74it/s] 55%|█████▍    | 72/131 [00:00<00:00, 329.84it/s]100%|██████████| 131/131 [00:00<00:00, 421.72it/s]
2025-05-15:01:49:47,467 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 23%|██▎       | 44/193 [00:00<00:00, 420.97it/s] 45%|████▌     | 87/193 [00:00<00:00, 380.17it/s] 65%|██████▌   | 126/193 [00:00<00:00, 375.75it/s] 85%|████████▍ | 164/193 [00:00<00:00, 370.94it/s]100%|██████████| 193/193 [00:00<00:00, 349.58it/s]
2025-05-15:01:49:48,029 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  4%|▍         | 35/895 [00:00<00:02, 314.51it/s]  8%|▊         | 69/895 [00:00<00:02, 328.75it/s] 11%|█▏        | 102/895 [00:00<00:02, 267.92it/s] 16%|█▌        | 144/895 [00:00<00:02, 299.81it/s] 20%|█▉        | 175/895 [00:00<00:02, 289.43it/s] 23%|██▎       | 205/895 [00:00<00:02, 271.00it/s] 30%|███       | 271/895 [00:00<00:01, 378.00it/s] 35%|███▍      | 311/895 [00:00<00:01, 358.56it/s] 40%|███▉      | 357/895 [00:01<00:01, 384.51it/s] 45%|████▍     | 399/895 [00:01<00:01, 393.68it/s] 49%|████▉     | 440/895 [00:01<00:01, 366.04it/s] 53%|█████▎    | 478/895 [00:01<00:01, 362.88it/s] 58%|█████▊    | 515/895 [00:01<00:01, 358.00it/s] 63%|██████▎   | 562/895 [00:01<00:00, 388.34it/s] 67%|██████▋   | 602/895 [00:01<00:00, 351.72it/s] 73%|███████▎  | 649/895 [00:01<00:00, 382.80it/s] 77%|███████▋  | 689/895 [00:01<00:00, 385.34it/s] 82%|████████▏ | 737/895 [00:02<00:00, 411.31it/s] 87%|████████▋ | 779/895 [00:02<00:00, 360.21it/s] 91%|█████████▏| 817/895 [00:02<00:00, 323.79it/s] 95%|█████████▌| 851/895 [00:02<00:00, 319.47it/s] 99%|█████████▉| 884/895 [00:02<00:00, 292.96it/s]100%|██████████| 895/895 [00:02<00:00, 341.75it/s]
2025-05-15:01:49:50,748 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 28%|██▊       | 67/237 [00:00<00:00, 663.38it/s] 57%|█████▋    | 134/237 [00:00<00:00, 474.96it/s] 78%|███████▊  | 185/237 [00:00<00:00, 457.38it/s] 98%|█████████▊| 233/237 [00:00<00:00, 456.20it/s]100%|██████████| 237/237 [00:00<00:00, 470.82it/s]
2025-05-15:01:49:51,293 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 43%|████▎     | 71/165 [00:00<00:00, 703.92it/s] 86%|████████▌ | 142/165 [00:00<00:00, 649.54it/s]100%|██████████| 165/165 [00:00<00:00, 666.01it/s]
2025-05-15:01:49:51,548 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 25%|██▍       | 77/311 [00:00<00:00, 769.75it/s] 51%|█████▏    | 160/311 [00:00<00:00, 800.12it/s] 77%|███████▋  | 240/311 [00:00<00:00, 710.92it/s]100%|██████████| 311/311 [00:00<00:00, 613.10it/s]
2025-05-15:01:49:52,072 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 17%|█▋        | 60/346 [00:00<00:00, 595.52it/s] 35%|███▍      | 120/346 [00:00<00:00, 544.63it/s] 51%|█████     | 175/346 [00:00<00:00, 539.72it/s] 66%|██████▋   | 230/346 [00:00<00:00, 439.42it/s] 80%|████████  | 277/346 [00:00<00:00, 423.95it/s] 95%|█████████▍| 327/346 [00:00<00:00, 437.65it/s]100%|██████████| 346/346 [00:00<00:00, 456.18it/s]
2025-05-15:01:49:52,851 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 10%|█         | 21/204 [00:00<00:00, 189.83it/s] 21%|██        | 42/204 [00:00<00:00, 183.87it/s] 37%|███▋      | 75/204 [00:00<00:00, 242.98it/s] 61%|██████▏   | 125/204 [00:00<00:00, 338.51it/s] 91%|█████████ | 185/204 [00:00<00:00, 427.74it/s]100%|██████████| 204/204 [00:00<00:00, 343.31it/s]
2025-05-15:01:49:53,466 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 41%|████▏     | 50/121 [00:00<00:00, 494.11it/s] 95%|█████████▌| 115/121 [00:00<00:00, 506.91it/s]100%|██████████| 121/121 [00:00<00:00, 500.67it/s]
2025-05-15:01:49:53,713 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  3%|▎         | 45/1534 [00:00<00:03, 439.66it/s]  6%|▌         | 89/1534 [00:00<00:03, 363.24it/s] 11%|█         | 164/1534 [00:00<00:02, 519.31it/s] 14%|█▍        | 219/1534 [00:00<00:03, 413.12it/s] 17%|█▋        | 265/1534 [00:00<00:03, 407.52it/s] 20%|██        | 309/1534 [00:00<00:03, 370.49it/s] 23%|██▎       | 348/1534 [00:00<00:03, 333.70it/s] 26%|██▌       | 396/1534 [00:01<00:03, 355.54it/s] 28%|██▊       | 433/1534 [00:01<00:03, 342.71it/s] 31%|███▏      | 480/1534 [00:01<00:02, 375.65it/s] 34%|███▍      | 519/1534 [00:01<00:02, 371.17it/s] 37%|███▋      | 567/1534 [00:01<00:02, 400.87it/s] 40%|████      | 615/1534 [00:01<00:02, 422.90it/s] 43%|████▎     | 659/1534 [00:01<00:02, 425.90it/s] 46%|████▌     | 703/1534 [00:01<00:01, 428.28it/s] 49%|████▊     | 747/1534 [00:01<00:01, 428.84it/s] 52%|█████▏    | 791/1534 [00:01<00:01, 422.83it/s] 55%|█████▍    | 838/1534 [00:02<00:01, 428.05it/s] 58%|█████▊    | 894/1534 [00:02<00:01, 462.73it/s] 62%|██████▏   | 952/1534 [00:02<00:01, 488.44it/s] 65%|██████▌   | 1001/1534 [00:02<00:01, 470.39it/s] 69%|██████▉   | 1060/1534 [00:02<00:00, 503.55it/s] 72%|███████▏  | 1111/1534 [00:02<00:00, 500.70it/s] 76%|███████▌  | 1162/1534 [00:02<00:00, 485.17it/s] 79%|███████▉  | 1211/1534 [00:02<00:00, 416.16it/s] 82%|████████▏ | 1255/1534 [00:03<00:00, 341.03it/s] 85%|████████▍ | 1300/1534 [00:03<00:00, 365.39it/s] 88%|████████▊ | 1346/1534 [00:03<00:00, 387.99it/s] 90%|█████████ | 1388/1534 [00:03<00:00, 350.57it/s] 94%|█████████▎| 1438/1534 [00:03<00:00, 381.50it/s] 97%|█████████▋| 1484/1534 [00:03<00:00, 401.65it/s]100%|█████████▉| 1532/1534 [00:03<00:00, 420.92it/s]100%|██████████| 1534/1534 [00:03<00:00, 409.99it/s]
2025-05-15:01:49:57,531 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 30%|███       | 52/171 [00:00<00:00, 514.40it/s] 61%|██████    | 104/171 [00:00<00:00, 502.51it/s] 91%|█████████ | 155/171 [00:00<00:00, 492.29it/s]100%|██████████| 171/171 [00:00<00:00, 492.87it/s]
2025-05-15:01:49:57,894 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 40%|███▉      | 43/108 [00:00<00:00, 426.06it/s] 83%|████████▎ | 90/108 [00:00<00:00, 451.38it/s]100%|██████████| 108/108 [00:00<00:00, 452.96it/s]
2025-05-15:01:49:58,138 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 49%|████▉     | 62/126 [00:00<00:00, 584.35it/s]100%|██████████| 126/126 [00:00<00:00, 654.10it/s]
2025-05-15:01:49:58,343 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 14%|█▍        | 45/324 [00:00<00:00, 449.52it/s] 28%|██▊       | 90/324 [00:00<00:02, 112.24it/s] 42%|████▏     | 136/324 [00:00<00:01, 172.24it/s] 56%|█████▌    | 182/324 [00:00<00:00, 226.21it/s] 70%|██████▉   | 226/324 [00:01<00:00, 272.52it/s] 86%|████████▌ | 279/324 [00:01<00:00, 333.50it/s]100%|██████████| 324/324 [00:01<00:00, 360.15it/s]100%|██████████| 324/324 [00:01<00:00, 264.78it/s]
2025-05-15:01:49:59,586 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 25%|██▌       | 41/163 [00:00<00:00, 409.93it/s] 58%|█████▊    | 94/163 [00:00<00:00, 478.34it/s] 90%|█████████ | 147/163 [00:00<00:00, 500.70it/s]100%|██████████| 163/163 [00:00<00:00, 498.82it/s]
2025-05-15:01:49:59,926 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<40:24:20,  2.59s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:03<41:46, 22.38it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:04<26:00, 35.90it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:05<19:56, 46.78it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:06<17:16, 53.95it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:07<15:23, 60.50it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:08<14:33, 63.86it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:08<13:29, 68.87it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:09<12:48, 72.39it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:10<12:18, 75.32it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:11<11:55, 77.64it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:12<11:26, 80.81it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:12<11:06, 83.17it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:13<11:00, 83.73it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:14<10:38, 86.56it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:14<10:25, 88.29it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:15<10:17, 89.33it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:16<10:06, 90.84it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:16<09:37, 95.30it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:17<09:21, 97.83it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:18<09:18, 98.33it/s]Running loglikelihood requests:   2%|▏         | 1323/56168 [00:18<07:43, 118.21it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:18<10:00, 91.32it/s] Running loglikelihood requests:   2%|▏         | 1390/56168 [00:18<07:44, 117.82it/s]Running loglikelihood requests:   3%|▎         | 1413/56168 [00:19<10:36, 85.99it/s] Running loglikelihood requests:   3%|▎         | 1473/56168 [00:20<10:12, 89.37it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:20<09:44, 93.52it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:21<09:21, 97.17it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:21<09:04, 100.02it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:22<08:43, 104.07it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:23<08:33, 105.82it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:23<08:29, 106.57it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:24<08:25, 107.30it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:24<08:13, 109.78it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:25<08:12, 109.83it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:25<08:06, 111.16it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:26<07:57, 113.14it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:27<08:01, 112.11it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:27<08:15, 108.79it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:28<07:57, 112.65it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:28<07:57, 112.49it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:29<08:07, 110.13it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:29<07:59, 111.83it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:30<07:53, 112.97it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:31<07:51, 113.45it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:31<07:47, 114.31it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:32<07:47, 114.23it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:32<07:45, 114.56it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:33<07:41, 115.26it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:33<07:24, 119.58it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:34<07:38, 115.92it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:34<07:29, 118.03it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:35<07:22, 119.58it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:35<07:09, 123.20it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:36<07:10, 122.70it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:36<07:00, 125.61it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:37<07:08, 122.99it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:37<06:51, 127.80it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:38<06:41, 130.92it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:38<06:28, 135.31it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:39<06:13, 140.41it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:39<06:02, 144.34it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:40<05:56, 146.78it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:40<05:51, 148.51it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:40<05:41, 152.63it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:41<05:37, 154.70it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:41<05:29, 158.02it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:42<05:21, 161.77it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:42<05:14, 164.95it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:42<05:12, 166.00it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:43<05:13, 165.15it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:43<05:12, 165.65it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:43<05:11, 166.07it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:44<05:06, 168.64it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:44<05:03, 169.60it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:45<05:00, 171.34it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:45<04:59, 171.98it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:45<05:01, 170.62it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:46<05:02, 169.86it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:46<05:02, 169.51it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:46<05:00, 170.35it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:47<04:55, 173.14it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:47<04:55, 172.95it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:48<04:51, 174.84it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:48<04:49, 175.72it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:48<04:47, 176.65it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:49<04:46, 177.44it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:49<04:42, 179.60it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:49<04:38, 181.61it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:50<04:36, 182.77it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:50<04:33, 184.53it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:50<04:36, 182.53it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:51<04:34, 183.76it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:51<04:30, 185.85it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:51<04:24, 189.80it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:52<04:20, 192.49it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:52<04:17, 194.46it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:52<04:16, 195.21it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:53<04:12, 198.08it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:53<04:10, 199.51it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:53<04:07, 201.19it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:54<04:05, 203.18it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:54<04:03, 204.33it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:54<04:01, 205.52it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:54<03:59, 207.05it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:55<04:01, 204.86it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:55<04:00, 205.95it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:55<03:57, 208.08it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:56<03:55, 209.43it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:56<03:54, 210.02it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:56<03:51, 212.98it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:57<03:52, 211.38it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:57<03:54, 209.50it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:57<03:51, 212.15it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:57<03:50, 212.29it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:58<03:46, 215.85it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:58<03:42, 219.19it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:58<03:40, 221.11it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:59<03:38, 222.57it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:59<03:37, 224.03it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:59<03:34, 226.44it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:59<03:33, 227.31it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:00<03:34, 225.57it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:00<03:35, 224.61it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:00<03:32, 227.06it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:01<03:37, 222.04it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:01<03:35, 223.64it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:01<03:33, 225.87it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:01<03:30, 228.04it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:02<03:29, 229.43it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:02<03:28, 230.58it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:02<03:27, 230.37it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:03<03:25, 232.33it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:03<03:26, 231.84it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:03<03:24, 232.85it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:03<03:22, 235.69it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:04<03:22, 234.57it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:04<03:20, 236.50it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:04<03:20, 237.30it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:04<03:21, 235.31it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:05<03:22, 233.41it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:05<03:17, 239.51it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:05<03:14, 242.46it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:05<03:12, 244.95it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:06<03:11, 245.59it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:06<03:09, 247.75it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:06<03:04, 254.90it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:06<03:01, 257.81it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:07<03:00, 259.48it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:07<02:57, 262.94it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:07<02:55, 266.73it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:07<02:52, 270.31it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:08<02:49, 274.13it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:08<02:50, 272.76it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:08<02:51, 271.09it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:08<02:54, 265.06it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:09<02:54, 265.43it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:09<02:53, 267.18it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:09<02:52, 267.84it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:09<02:48, 273.93it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:10<02:49, 271.17it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:10<02:51, 268.54it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:10<02:46, 275.35it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:10<02:45, 276.46it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:10<02:45, 277.32it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:11<02:47, 272.59it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:11<02:45, 275.74it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:11<02:43, 278.67it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:11<02:41, 282.42it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:12<02:38, 286.22it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:12<02:40, 283.50it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:12<02:39, 284.87it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:12<02:37, 286.79it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:12<02:35, 291.75it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:13<02:32, 297.02it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:13<02:31, 297.53it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:13<02:31, 297.91it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:13<02:31, 296.93it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:14<02:30, 298.64it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:14<02:29, 299.20it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:14<02:28, 300.66it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:14<02:29, 299.71it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:14<02:29, 298.64it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:15<02:25, 306.70it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:15<02:22, 311.63it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:15<02:20, 315.68it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:15<02:19, 317.74it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:15<02:22, 309.99it/s]Running loglikelihood requests:  21%|██        | 11905/56168 [01:16<02:26, 303.15it/s]Running loglikelihood requests:  21%|██▏       | 11969/56168 [01:16<02:23, 307.85it/s]Running loglikelihood requests:  21%|██▏       | 12033/56168 [01:16<02:22, 310.00it/s]Running loglikelihood requests:  22%|██▏       | 12097/56168 [01:16<02:20, 314.33it/s]Running loglikelihood requests:  22%|██▏       | 12161/56168 [01:16<02:18, 317.69it/s]Running loglikelihood requests:  22%|██▏       | 12225/56168 [01:17<02:18, 317.77it/s]Running loglikelihood requests:  22%|██▏       | 12289/56168 [01:17<02:17, 319.05it/s]Running loglikelihood requests:  22%|██▏       | 12353/56168 [01:17<02:22, 306.57it/s]Running loglikelihood requests:  22%|██▏       | 12417/56168 [01:17<02:25, 299.75it/s]Running loglikelihood requests:  22%|██▏       | 12481/56168 [01:17<02:23, 304.11it/s]Running loglikelihood requests:  22%|██▏       | 12545/56168 [01:18<02:26, 298.01it/s]Running loglikelihood requests:  22%|██▏       | 12609/56168 [01:18<02:21, 307.83it/s]Running loglikelihood requests:  23%|██▎       | 12673/56168 [01:18<02:19, 312.42it/s]Running loglikelihood requests:  23%|██▎       | 12737/56168 [01:18<02:16, 317.85it/s]Running loglikelihood requests:  23%|██▎       | 12801/56168 [01:18<02:16, 318.04it/s]Running loglikelihood requests:  23%|██▎       | 12865/56168 [01:19<02:15, 318.51it/s]Running loglikelihood requests:  23%|██▎       | 12929/56168 [01:19<02:16, 316.76it/s]Running loglikelihood requests:  23%|██▎       | 12993/56168 [01:19<02:15, 319.02it/s]Running loglikelihood requests:  23%|██▎       | 13057/56168 [01:19<02:17, 313.63it/s]Running loglikelihood requests:  23%|██▎       | 13121/56168 [01:20<02:26, 294.39it/s]Running loglikelihood requests:  23%|██▎       | 13185/56168 [01:20<02:23, 300.00it/s]Running loglikelihood requests:  24%|██▎       | 13249/56168 [01:20<02:24, 296.93it/s]Running loglikelihood requests:  24%|██▎       | 13313/56168 [01:20<02:23, 299.17it/s]Running loglikelihood requests:  24%|██▍       | 13377/56168 [01:20<02:18, 308.08it/s]Running loglikelihood requests:  24%|██▍       | 13441/56168 [01:21<02:15, 314.40it/s]Running loglikelihood requests:  24%|██▍       | 13505/56168 [01:21<02:13, 319.58it/s]Running loglikelihood requests:  24%|██▍       | 13569/56168 [01:21<02:11, 324.68it/s]Running loglikelihood requests:  24%|██▍       | 13633/56168 [01:21<02:09, 329.45it/s]Running loglikelihood requests:  24%|██▍       | 13697/56168 [01:21<02:08, 330.02it/s]Running loglikelihood requests:  24%|██▍       | 13761/56168 [01:22<02:07, 332.22it/s]Running loglikelihood requests:  25%|██▍       | 13825/56168 [01:22<02:07, 333.08it/s]Running loglikelihood requests:  25%|██▍       | 13889/56168 [01:22<02:06, 334.74it/s]Running loglikelihood requests:  25%|██▍       | 13953/56168 [01:22<02:05, 337.35it/s]Running loglikelihood requests:  25%|██▍       | 14017/56168 [01:22<02:05, 334.55it/s]Running loglikelihood requests:  25%|██▌       | 14081/56168 [01:22<02:05, 335.38it/s]Running loglikelihood requests:  25%|██▌       | 14145/56168 [01:23<02:04, 337.43it/s]Running loglikelihood requests:  25%|██▌       | 14209/56168 [01:23<02:05, 334.71it/s]Running loglikelihood requests:  25%|██▌       | 14273/56168 [01:23<02:04, 335.85it/s]Running loglikelihood requests:  26%|██▌       | 14337/56168 [01:23<02:06, 330.41it/s]Running loglikelihood requests:  26%|██▌       | 14401/56168 [01:23<02:05, 332.83it/s]Running loglikelihood requests:  26%|██▌       | 14465/56168 [01:24<02:04, 334.98it/s]Running loglikelihood requests:  26%|██▌       | 14529/56168 [01:24<02:08, 324.66it/s]Running loglikelihood requests:  26%|██▌       | 14593/56168 [01:24<02:05, 331.81it/s]Running loglikelihood requests:  26%|██▌       | 14657/56168 [01:24<02:03, 334.82it/s]Running loglikelihood requests:  26%|██▌       | 14721/56168 [01:24<02:02, 339.71it/s]Running loglikelihood requests:  26%|██▋       | 14785/56168 [01:25<02:02, 339.19it/s]Running loglikelihood requests:  26%|██▋       | 14849/56168 [01:25<02:02, 338.18it/s]Running loglikelihood requests:  27%|██▋       | 14913/56168 [01:25<02:01, 338.65it/s]Running loglikelihood requests:  27%|██▋       | 14977/56168 [01:25<02:03, 334.65it/s]Running loglikelihood requests:  27%|██▋       | 15041/56168 [01:25<02:02, 335.66it/s]Running loglikelihood requests:  27%|██▋       | 15105/56168 [01:26<02:02, 335.59it/s]Running loglikelihood requests:  27%|██▋       | 15169/56168 [01:26<02:04, 329.62it/s]Running loglikelihood requests:  27%|██▋       | 15233/56168 [01:26<02:05, 327.17it/s]Running loglikelihood requests:  27%|██▋       | 15297/56168 [01:26<02:02, 332.77it/s]Running loglikelihood requests:  27%|██▋       | 15361/56168 [01:26<02:04, 326.55it/s]Running loglikelihood requests:  27%|██▋       | 15425/56168 [01:27<02:05, 324.42it/s]Running loglikelihood requests:  28%|██▊       | 15489/56168 [01:27<02:05, 324.07it/s]Running loglikelihood requests:  28%|██▊       | 15553/56168 [01:27<02:05, 324.08it/s]Running loglikelihood requests:  28%|██▊       | 15617/56168 [01:27<02:01, 333.38it/s]Running loglikelihood requests:  28%|██▊       | 15681/56168 [01:27<02:03, 328.48it/s]Running loglikelihood requests:  28%|██▊       | 15745/56168 [01:27<02:02, 330.75it/s]Running loglikelihood requests:  28%|██▊       | 15809/56168 [01:28<02:00, 334.26it/s]Running loglikelihood requests:  28%|██▊       | 15873/56168 [01:28<02:01, 330.34it/s]Running loglikelihood requests:  28%|██▊       | 15937/56168 [01:28<02:00, 334.29it/s]Running loglikelihood requests:  28%|██▊       | 16001/56168 [01:28<02:03, 324.13it/s]Running loglikelihood requests:  29%|██▊       | 16065/56168 [01:28<02:03, 324.85it/s]Running loglikelihood requests:  29%|██▊       | 16129/56168 [01:29<02:11, 303.49it/s]Running loglikelihood requests:  29%|██▉       | 16193/56168 [01:29<02:06, 316.03it/s]Running loglikelihood requests:  29%|██▉       | 16257/56168 [01:29<02:03, 323.34it/s]Running loglikelihood requests:  29%|██▉       | 16321/56168 [01:29<02:03, 322.91it/s]Running loglikelihood requests:  29%|██▉       | 16385/56168 [01:29<02:00, 330.30it/s]Running loglikelihood requests:  29%|██▉       | 16449/56168 [01:30<01:57, 338.77it/s]Running loglikelihood requests:  29%|██▉       | 16513/56168 [01:30<01:58, 335.42it/s]Running loglikelihood requests:  30%|██▉       | 16577/56168 [01:30<01:59, 332.23it/s]Running loglikelihood requests:  30%|██▉       | 16641/56168 [01:30<01:59, 329.92it/s]Running loglikelihood requests:  30%|██▉       | 16705/56168 [01:30<02:01, 325.84it/s]Running loglikelihood requests:  30%|██▉       | 16769/56168 [01:31<02:00, 325.74it/s]Running loglikelihood requests:  30%|██▉       | 16833/56168 [01:31<02:00, 327.75it/s]Running loglikelihood requests:  30%|███       | 16897/56168 [01:31<02:03, 319.14it/s]Running loglikelihood requests:  30%|███       | 16961/56168 [01:31<02:05, 312.16it/s]Running loglikelihood requests:  30%|███       | 17025/56168 [01:31<02:00, 324.34it/s]Running loglikelihood requests:  30%|███       | 17089/56168 [01:32<02:01, 321.81it/s]Running loglikelihood requests:  31%|███       | 17153/56168 [01:32<01:58, 328.53it/s]Running loglikelihood requests:  31%|███       | 17217/56168 [01:32<02:05, 310.17it/s]Running loglikelihood requests:  31%|███       | 17281/56168 [01:32<02:06, 307.26it/s]Running loglikelihood requests:  31%|███       | 17345/56168 [01:32<02:03, 314.97it/s]Running loglikelihood requests:  31%|███       | 17409/56168 [01:33<02:02, 317.58it/s]Running loglikelihood requests:  31%|███       | 17473/56168 [01:33<01:58, 326.37it/s]Running loglikelihood requests:  31%|███       | 17537/56168 [01:33<01:55, 335.69it/s]Running loglikelihood requests:  31%|███▏      | 17601/56168 [01:33<01:52, 341.79it/s]Running loglikelihood requests:  31%|███▏      | 17665/56168 [01:33<01:54, 335.94it/s]Running loglikelihood requests:  32%|███▏      | 17729/56168 [01:34<01:56, 330.99it/s]Running loglikelihood requests:  32%|███▏      | 17793/56168 [01:34<02:00, 317.23it/s]Running loglikelihood requests:  32%|███▏      | 17857/56168 [01:34<01:54, 335.04it/s]Running loglikelihood requests:  32%|███▏      | 17921/56168 [01:34<01:53, 337.97it/s]Running loglikelihood requests:  32%|███▏      | 17985/56168 [01:34<01:49, 347.57it/s]Running loglikelihood requests:  32%|███▏      | 18049/56168 [01:35<01:49, 347.33it/s]Running loglikelihood requests:  32%|███▏      | 18113/56168 [01:35<01:52, 339.28it/s]Running loglikelihood requests:  32%|███▏      | 18177/56168 [01:35<01:54, 331.68it/s]Running loglikelihood requests:  32%|███▏      | 18241/56168 [01:35<01:50, 342.07it/s]Running loglikelihood requests:  33%|███▎      | 18305/56168 [01:35<01:47, 352.83it/s]Running loglikelihood requests:  33%|███▎      | 18369/56168 [01:35<01:44, 361.72it/s]Running loglikelihood requests:  33%|███▎      | 18433/56168 [01:36<01:46, 354.96it/s]Running loglikelihood requests:  33%|███▎      | 18497/56168 [01:36<01:42, 366.15it/s]Running loglikelihood requests:  33%|███▎      | 18561/56168 [01:36<01:40, 373.45it/s]Running loglikelihood requests:  33%|███▎      | 18625/56168 [01:36<01:38, 382.88it/s]Running loglikelihood requests:  33%|███▎      | 18689/56168 [01:36<01:36, 388.96it/s]Running loglikelihood requests:  33%|███▎      | 18753/56168 [01:36<01:34, 394.34it/s]Running loglikelihood requests:  34%|███▎      | 18817/56168 [01:37<01:34, 394.41it/s]Running loglikelihood requests:  34%|███▎      | 18881/56168 [01:37<01:33, 399.33it/s]Running loglikelihood requests:  34%|███▎      | 18945/56168 [01:37<01:36, 386.43it/s]Running loglikelihood requests:  34%|███▍      | 19009/56168 [01:37<01:36, 385.49it/s]Running loglikelihood requests:  34%|███▍      | 19073/56168 [01:37<01:36, 384.25it/s]Running loglikelihood requests:  34%|███▍      | 19137/56168 [01:37<01:37, 379.89it/s]Running loglikelihood requests:  34%|███▍      | 19201/56168 [01:38<01:39, 373.34it/s]Running loglikelihood requests:  34%|███▍      | 19265/56168 [01:38<01:36, 382.15it/s]Running loglikelihood requests:  34%|███▍      | 19329/56168 [01:38<01:42, 360.60it/s]Running loglikelihood requests:  35%|███▍      | 19393/56168 [01:38<01:40, 365.26it/s]Running loglikelihood requests:  35%|███▍      | 19457/56168 [01:38<01:37, 377.53it/s]Running loglikelihood requests:  35%|███▍      | 19521/56168 [01:38<01:38, 373.61it/s]Running loglikelihood requests:  35%|███▍      | 19585/56168 [01:39<01:38, 373.28it/s]Running loglikelihood requests:  35%|███▍      | 19649/56168 [01:39<01:35, 383.69it/s]Running loglikelihood requests:  35%|███▌      | 19713/56168 [01:39<01:33, 390.69it/s]Running loglikelihood requests:  35%|███▌      | 19777/56168 [01:39<01:31, 397.28it/s]Running loglikelihood requests:  35%|███▌      | 19841/56168 [01:39<01:30, 400.70it/s]Running loglikelihood requests:  35%|███▌      | 19905/56168 [01:39<01:29, 403.28it/s]Running loglikelihood requests:  36%|███▌      | 19969/56168 [01:40<01:32, 391.92it/s]Running loglikelihood requests:  36%|███▌      | 20033/56168 [01:40<01:32, 390.11it/s]Running loglikelihood requests:  36%|███▌      | 20097/56168 [01:40<01:31, 393.92it/s]Running loglikelihood requests:  36%|███▌      | 20161/56168 [01:40<01:33, 386.92it/s]Running loglikelihood requests:  36%|███▌      | 20225/56168 [01:40<01:32, 389.10it/s]Running loglikelihood requests:  36%|███▌      | 20289/56168 [01:40<01:33, 383.43it/s]Running loglikelihood requests:  36%|███▌      | 20353/56168 [01:41<01:36, 372.53it/s]Running loglikelihood requests:  36%|███▋      | 20417/56168 [01:41<01:31, 389.02it/s]Running loglikelihood requests:  36%|███▋      | 20481/56168 [01:41<01:32, 387.37it/s]Running loglikelihood requests:  37%|███▋      | 20545/56168 [01:41<01:35, 372.00it/s]Running loglikelihood requests:  37%|███▋      | 20609/56168 [01:41<01:32, 384.98it/s]Running loglikelihood requests:  37%|███▋      | 20673/56168 [01:41<01:35, 371.66it/s]Running loglikelihood requests:  37%|███▋      | 20737/56168 [01:42<01:36, 367.39it/s]Running loglikelihood requests:  37%|███▋      | 20801/56168 [01:42<01:33, 378.52it/s]Running loglikelihood requests:  37%|███▋      | 20865/56168 [01:42<01:30, 389.76it/s]Running loglikelihood requests:  37%|███▋      | 20929/56168 [01:42<01:32, 382.31it/s]Running loglikelihood requests:  37%|███▋      | 20993/56168 [01:42<01:29, 391.62it/s]Running loglikelihood requests:  37%|███▋      | 21057/56168 [01:42<01:31, 382.09it/s]Running loglikelihood requests:  38%|███▊      | 21121/56168 [01:43<01:36, 361.87it/s]Running loglikelihood requests:  38%|███▊      | 21185/56168 [01:43<01:37, 360.58it/s]Running loglikelihood requests:  38%|███▊      | 21249/56168 [01:43<01:38, 353.57it/s]Running loglikelihood requests:  38%|███▊      | 21313/56168 [01:43<01:46, 325.93it/s]Running loglikelihood requests:  38%|███▊      | 21377/56168 [01:43<01:50, 315.01it/s]Running loglikelihood requests:  38%|███▊      | 21441/56168 [01:44<01:46, 325.78it/s]Running loglikelihood requests:  38%|███▊      | 21505/56168 [01:44<01:42, 339.16it/s]Running loglikelihood requests:  38%|███▊      | 21569/56168 [01:44<01:42, 336.28it/s]Running loglikelihood requests:  39%|███▊      | 21633/56168 [01:44<01:48, 318.23it/s]Running loglikelihood requests:  39%|███▊      | 21697/56168 [01:44<01:46, 322.30it/s]Running loglikelihood requests:  39%|███▊      | 21761/56168 [01:45<01:41, 337.49it/s]Running loglikelihood requests:  39%|███▉      | 21825/56168 [01:45<01:35, 358.11it/s]Running loglikelihood requests:  39%|███▉      | 21889/56168 [01:45<01:36, 356.70it/s]Running loglikelihood requests:  39%|███▉      | 21953/56168 [01:45<01:38, 347.92it/s]Running loglikelihood requests:  39%|███▉      | 22017/56168 [01:45<01:39, 344.88it/s]Running loglikelihood requests:  39%|███▉      | 22081/56168 [01:45<01:36, 352.97it/s]Running loglikelihood requests:  39%|███▉      | 22145/56168 [01:46<01:40, 337.88it/s]Running loglikelihood requests:  40%|███▉      | 22209/56168 [01:46<01:37, 347.41it/s]Running loglikelihood requests:  40%|███▉      | 22273/56168 [01:46<01:35, 356.73it/s]Running loglikelihood requests:  40%|███▉      | 22337/56168 [01:46<01:29, 379.46it/s]Running loglikelihood requests:  40%|███▉      | 22401/56168 [01:46<01:25, 395.40it/s]Running loglikelihood requests:  40%|███▉      | 22465/56168 [01:46<01:21, 411.54it/s]Running loglikelihood requests:  40%|████      | 22529/56168 [01:47<01:28, 379.55it/s]Running loglikelihood requests:  40%|████      | 22593/56168 [01:47<01:24, 399.64it/s]Running loglikelihood requests:  40%|████      | 22657/56168 [01:47<01:29, 376.02it/s]Running loglikelihood requests:  40%|████      | 22721/56168 [01:47<01:24, 397.56it/s]Running loglikelihood requests:  41%|████      | 22785/56168 [01:47<01:24, 397.14it/s]Running loglikelihood requests:  41%|████      | 22849/56168 [01:47<01:21, 407.09it/s]Running loglikelihood requests:  41%|████      | 22913/56168 [01:48<01:26, 384.22it/s]Running loglikelihood requests:  41%|████      | 22977/56168 [01:48<01:23, 395.15it/s]Running loglikelihood requests:  41%|████      | 23041/56168 [01:48<01:24, 393.35it/s]Running loglikelihood requests:  41%|████      | 23105/56168 [01:48<01:21, 408.09it/s]Running loglikelihood requests:  41%|████      | 23169/56168 [01:48<01:18, 418.18it/s]Running loglikelihood requests:  41%|████▏     | 23233/56168 [01:48<01:16, 431.15it/s]Running loglikelihood requests:  41%|████▏     | 23297/56168 [01:49<01:18, 419.56it/s]Running loglikelihood requests:  42%|████▏     | 23361/56168 [01:49<01:18, 418.88it/s]Running loglikelihood requests:  42%|████▏     | 23425/56168 [01:49<01:17, 421.97it/s]Running loglikelihood requests:  42%|████▏     | 23489/56168 [01:49<01:17, 419.36it/s]Running loglikelihood requests:  42%|████▏     | 23553/56168 [01:49<01:16, 427.50it/s]Running loglikelihood requests:  42%|████▏     | 23617/56168 [01:49<01:15, 429.18it/s]Running loglikelihood requests:  42%|████▏     | 23681/56168 [01:49<01:14, 434.20it/s]Running loglikelihood requests:  42%|████▏     | 23745/56168 [01:50<01:13, 440.03it/s]Running loglikelihood requests:  42%|████▏     | 23809/56168 [01:50<01:15, 429.42it/s]Running loglikelihood requests:  43%|████▎     | 23873/56168 [01:50<01:15, 426.27it/s]Running loglikelihood requests:  43%|████▎     | 23937/56168 [01:50<01:13, 436.68it/s]Running loglikelihood requests:  43%|████▎     | 24001/56168 [01:50<01:16, 420.82it/s]Running loglikelihood requests:  43%|████▎     | 24065/56168 [01:50<01:17, 414.56it/s]Running loglikelihood requests:  43%|████▎     | 24129/56168 [01:50<01:18, 406.10it/s]Running loglikelihood requests:  43%|████▎     | 24193/56168 [01:51<01:21, 391.15it/s]Running loglikelihood requests:  43%|████▎     | 24257/56168 [01:51<01:18, 406.15it/s]Running loglikelihood requests:  43%|████▎     | 24321/56168 [01:51<01:26, 369.49it/s]Running loglikelihood requests:  43%|████▎     | 24385/56168 [01:51<01:27, 362.93it/s]Running loglikelihood requests:  44%|████▎     | 24449/56168 [01:51<01:23, 379.42it/s]Running loglikelihood requests:  44%|████▎     | 24513/56168 [01:52<01:21, 390.60it/s]Running loglikelihood requests:  44%|████▍     | 24577/56168 [01:52<01:18, 402.82it/s]Running loglikelihood requests:  44%|████▍     | 24641/56168 [01:52<01:17, 405.86it/s]Running loglikelihood requests:  44%|████▍     | 24705/56168 [01:52<01:14, 424.29it/s]Running loglikelihood requests:  44%|████▍     | 24769/56168 [01:52<01:15, 416.30it/s]Running loglikelihood requests:  44%|████▍     | 24833/56168 [01:52<01:12, 430.51it/s]Running loglikelihood requests:  44%|████▍     | 24897/56168 [01:52<01:12, 431.79it/s]Running loglikelihood requests:  44%|████▍     | 24961/56168 [01:53<01:14, 419.71it/s]Running loglikelihood requests:  45%|████▍     | 25025/56168 [01:53<01:13, 423.05it/s]Running loglikelihood requests:  45%|████▍     | 25089/56168 [01:53<01:15, 411.68it/s]Running loglikelihood requests:  45%|████▍     | 25153/56168 [01:53<01:16, 406.92it/s]Running loglikelihood requests:  45%|████▍     | 25217/56168 [01:53<01:13, 423.51it/s]Running loglikelihood requests:  45%|████▌     | 25281/56168 [01:53<01:10, 435.04it/s]Running loglikelihood requests:  45%|████▌     | 25345/56168 [01:53<01:10, 435.84it/s]Running loglikelihood requests:  45%|████▌     | 25409/56168 [01:54<01:09, 440.23it/s]Running loglikelihood requests:  45%|████▌     | 25473/56168 [01:54<01:09, 444.31it/s]Running loglikelihood requests:  45%|████▌     | 25537/56168 [01:54<01:07, 456.87it/s]Running loglikelihood requests:  46%|████▌     | 25601/56168 [01:54<01:05, 467.51it/s]Running loglikelihood requests:  46%|████▌     | 25665/56168 [01:54<01:05, 463.85it/s]Running loglikelihood requests:  46%|████▌     | 25729/56168 [01:54<01:05, 464.70it/s]Running loglikelihood requests:  46%|████▌     | 25793/56168 [01:54<01:05, 466.66it/s]Running loglikelihood requests:  46%|████▌     | 25857/56168 [01:55<01:07, 449.86it/s]Running loglikelihood requests:  46%|████▌     | 25921/56168 [01:55<01:05, 462.71it/s]Running loglikelihood requests:  46%|████▋     | 25985/56168 [01:55<01:06, 453.38it/s]Running loglikelihood requests:  46%|████▋     | 26049/56168 [01:55<01:05, 460.05it/s]Running loglikelihood requests:  46%|████▋     | 26113/56168 [01:55<01:04, 466.85it/s]Running loglikelihood requests:  47%|████▋     | 26177/56168 [01:55<01:03, 470.01it/s]Running loglikelihood requests:  47%|████▋     | 26241/56168 [01:55<01:03, 467.73it/s]Running loglikelihood requests:  47%|████▋     | 26305/56168 [01:56<01:03, 473.67it/s]Running loglikelihood requests:  47%|████▋     | 26369/56168 [01:56<01:03, 472.23it/s]Running loglikelihood requests:  47%|████▋     | 26433/56168 [01:56<01:02, 479.32it/s]Running loglikelihood requests:  47%|████▋     | 26497/56168 [01:56<01:04, 458.45it/s]Running loglikelihood requests:  47%|████▋     | 26561/56168 [01:56<01:04, 461.00it/s]Running loglikelihood requests:  47%|████▋     | 26625/56168 [01:56<01:03, 466.82it/s]Running loglikelihood requests:  48%|████▊     | 26689/56168 [01:56<01:03, 465.75it/s]Running loglikelihood requests:  48%|████▊     | 26753/56168 [01:56<01:03, 464.60it/s]Running loglikelihood requests:  48%|████▊     | 26817/56168 [01:57<01:04, 454.73it/s]Running loglikelihood requests:  48%|████▊     | 26881/56168 [01:57<01:03, 458.65it/s]Running loglikelihood requests:  48%|████▊     | 26945/56168 [01:57<01:02, 464.40it/s]Running loglikelihood requests:  48%|████▊     | 27009/56168 [01:57<01:02, 465.05it/s]Running loglikelihood requests:  48%|████▊     | 27073/56168 [01:57<01:01, 474.26it/s]Running loglikelihood requests:  48%|████▊     | 27137/56168 [01:57<01:00, 480.30it/s]Running loglikelihood requests:  48%|████▊     | 27201/56168 [01:57<01:00, 476.63it/s]Running loglikelihood requests:  49%|████▊     | 27265/56168 [01:58<00:59, 482.66it/s]Running loglikelihood requests:  49%|████▊     | 27329/56168 [01:58<00:59, 482.21it/s]Running loglikelihood requests:  49%|████▉     | 27393/56168 [01:58<01:06, 435.33it/s]Running loglikelihood requests:  49%|████▉     | 27457/56168 [01:58<01:07, 426.16it/s]Running loglikelihood requests:  49%|████▉     | 27521/56168 [01:58<01:05, 434.31it/s]Running loglikelihood requests:  49%|████▉     | 27585/56168 [01:58<01:04, 443.46it/s]Running loglikelihood requests:  49%|████▉     | 27649/56168 [01:58<01:02, 459.08it/s]Running loglikelihood requests:  49%|████▉     | 27713/56168 [01:59<01:00, 467.07it/s]Running loglikelihood requests:  49%|████▉     | 27777/56168 [01:59<00:59, 476.18it/s]Running loglikelihood requests:  50%|████▉     | 27841/56168 [01:59<00:59, 478.10it/s]Running loglikelihood requests:  50%|████▉     | 27905/56168 [01:59<00:58, 486.17it/s]Running loglikelihood requests:  50%|████▉     | 27969/56168 [01:59<00:58, 482.29it/s]Running loglikelihood requests:  50%|████▉     | 28033/56168 [01:59<01:00, 462.26it/s]Running loglikelihood requests:  50%|█████     | 28097/56168 [01:59<01:02, 447.21it/s]Running loglikelihood requests:  50%|█████     | 28161/56168 [02:00<01:04, 434.80it/s]Running loglikelihood requests:  50%|█████     | 28225/56168 [02:00<01:05, 424.19it/s]Running loglikelihood requests:  50%|█████     | 28289/56168 [02:00<01:04, 434.55it/s]Running loglikelihood requests:  50%|█████     | 28353/56168 [02:00<01:04, 432.11it/s]Running loglikelihood requests:  51%|█████     | 28417/56168 [02:00<01:01, 449.13it/s]Running loglikelihood requests:  51%|█████     | 28481/56168 [02:00<00:59, 462.80it/s]Running loglikelihood requests:  51%|█████     | 28545/56168 [02:00<00:58, 475.39it/s]Running loglikelihood requests:  51%|█████     | 28609/56168 [02:01<00:57, 481.18it/s]Running loglikelihood requests:  51%|█████     | 28673/56168 [02:01<00:57, 481.74it/s]Running loglikelihood requests:  51%|█████     | 28737/56168 [02:01<00:58, 466.73it/s]Running loglikelihood requests:  51%|█████▏    | 28801/56168 [02:01<00:58, 471.78it/s]Running loglikelihood requests:  51%|█████▏    | 28865/56168 [02:01<00:57, 472.28it/s]Running loglikelihood requests:  52%|█████▏    | 28929/56168 [02:01<00:57, 473.84it/s]Running loglikelihood requests:  52%|█████▏    | 28993/56168 [02:01<00:56, 482.95it/s]Running loglikelihood requests:  52%|█████▏    | 29057/56168 [02:01<00:56, 478.93it/s]Running loglikelihood requests:  52%|█████▏    | 29121/56168 [02:02<00:55, 486.38it/s]Running loglikelihood requests:  52%|█████▏    | 29185/56168 [02:02<00:54, 491.92it/s]Running loglikelihood requests:  52%|█████▏    | 29249/56168 [02:02<00:54, 495.78it/s]Running loglikelihood requests:  52%|█████▏    | 29313/56168 [02:02<00:55, 485.93it/s]Running loglikelihood requests:  52%|█████▏    | 29377/56168 [02:02<00:55, 486.17it/s]Running loglikelihood requests:  52%|█████▏    | 29441/56168 [02:02<00:54, 491.55it/s]Running loglikelihood requests:  53%|█████▎    | 29505/56168 [02:02<00:53, 494.61it/s]Running loglikelihood requests:  53%|█████▎    | 29569/56168 [02:02<00:54, 491.88it/s]Running loglikelihood requests:  53%|█████▎    | 29633/56168 [02:03<00:54, 485.38it/s]Running loglikelihood requests:  53%|█████▎    | 29697/56168 [02:03<00:55, 475.06it/s]Running loglikelihood requests:  53%|█████▎    | 29761/56168 [02:03<00:54, 481.35it/s]Running loglikelihood requests:  53%|█████▎    | 29825/56168 [02:03<00:53, 496.50it/s]Running loglikelihood requests:  53%|█████▎    | 29889/56168 [02:03<00:51, 508.72it/s]Running loglikelihood requests:  53%|█████▎    | 29953/56168 [02:03<00:51, 512.28it/s]Running loglikelihood requests:  53%|█████▎    | 30017/56168 [02:03<00:52, 497.69it/s]Running loglikelihood requests:  54%|█████▎    | 30081/56168 [02:04<00:55, 472.21it/s]Running loglikelihood requests:  54%|█████▎    | 30145/56168 [02:04<00:54, 477.90it/s]Running loglikelihood requests:  54%|█████▍    | 30209/56168 [02:04<00:53, 489.54it/s]Running loglikelihood requests:  54%|█████▍    | 30273/56168 [02:04<00:53, 483.08it/s]Running loglikelihood requests:  54%|█████▍    | 30337/56168 [02:04<00:52, 492.17it/s]Running loglikelihood requests:  54%|█████▍    | 30401/56168 [02:04<00:52, 487.09it/s]Running loglikelihood requests:  54%|█████▍    | 30465/56168 [02:04<00:51, 495.27it/s]Running loglikelihood requests:  54%|█████▍    | 30529/56168 [02:04<00:50, 508.73it/s]Running loglikelihood requests:  54%|█████▍    | 30593/56168 [02:05<00:49, 511.74it/s]Running loglikelihood requests:  55%|█████▍    | 30657/56168 [02:05<00:50, 508.21it/s]Running loglikelihood requests:  55%|█████▍    | 30721/56168 [02:05<00:50, 503.26it/s]Running loglikelihood requests:  55%|█████▍    | 30785/56168 [02:05<00:49, 507.82it/s]Running loglikelihood requests:  55%|█████▍    | 30849/56168 [02:05<00:49, 512.74it/s]Running loglikelihood requests:  55%|█████▌    | 30913/56168 [02:05<00:51, 485.76it/s]Running loglikelihood requests:  55%|█████▌    | 30977/56168 [02:05<00:51, 489.27it/s]Running loglikelihood requests:  55%|█████▌    | 31041/56168 [02:05<00:49, 504.12it/s]Running loglikelihood requests:  55%|█████▌    | 31105/56168 [02:06<00:49, 508.36it/s]Running loglikelihood requests:  55%|█████▌    | 31169/56168 [02:06<00:48, 519.28it/s]Running loglikelihood requests:  56%|█████▌    | 31233/56168 [02:06<00:47, 519.87it/s]Running loglikelihood requests:  56%|█████▌    | 31297/56168 [02:06<00:48, 512.35it/s]Running loglikelihood requests:  56%|█████▌    | 31361/56168 [02:06<00:48, 516.25it/s]Running loglikelihood requests:  56%|█████▌    | 31425/56168 [02:06<00:47, 523.25it/s]Running loglikelihood requests:  56%|█████▌    | 31489/56168 [02:06<00:48, 512.75it/s]Running loglikelihood requests:  56%|█████▌    | 31553/56168 [02:06<00:47, 516.72it/s]Running loglikelihood requests:  56%|█████▋    | 31617/56168 [02:07<00:47, 517.71it/s]Running loglikelihood requests:  56%|█████▋    | 31681/56168 [02:07<00:48, 503.30it/s]Running loglikelihood requests:  57%|█████▋    | 31745/56168 [02:07<00:51, 476.87it/s]Running loglikelihood requests:  57%|█████▋    | 31809/56168 [02:07<00:52, 467.61it/s]Running loglikelihood requests:  57%|█████▋    | 31873/56168 [02:07<00:51, 475.09it/s]Running loglikelihood requests:  57%|█████▋    | 31937/56168 [02:07<00:49, 486.92it/s]Running loglikelihood requests:  57%|█████▋    | 32001/56168 [02:07<00:49, 492.74it/s]Running loglikelihood requests:  57%|█████▋    | 32065/56168 [02:07<00:47, 503.14it/s]Running loglikelihood requests:  57%|█████▋    | 32129/56168 [02:08<00:48, 500.18it/s]Running loglikelihood requests:  57%|█████▋    | 32193/56168 [02:08<00:46, 510.69it/s]Running loglikelihood requests:  57%|█████▋    | 32257/56168 [02:08<00:48, 488.43it/s]Running loglikelihood requests:  58%|█████▊    | 32321/56168 [02:08<00:48, 487.77it/s]Running loglikelihood requests:  58%|█████▊    | 32385/56168 [02:08<00:49, 478.72it/s]Running loglikelihood requests:  58%|█████▊    | 32449/56168 [02:08<00:48, 488.61it/s]Running loglikelihood requests:  58%|█████▊    | 32513/56168 [02:08<00:50, 465.70it/s]Running loglikelihood requests:  58%|█████▊    | 32577/56168 [02:09<00:53, 444.03it/s]Running loglikelihood requests:  58%|█████▊    | 32641/56168 [02:09<00:53, 441.25it/s]Running loglikelihood requests:  58%|█████▊    | 32705/56168 [02:09<00:54, 430.23it/s]Running loglikelihood requests:  58%|█████▊    | 32769/56168 [02:09<00:52, 444.10it/s]Running loglikelihood requests:  58%|█████▊    | 32833/56168 [02:09<00:50, 466.22it/s]Running loglikelihood requests:  59%|█████▊    | 32897/56168 [02:09<00:48, 482.36it/s]Running loglikelihood requests:  59%|█████▊    | 32961/56168 [02:09<00:50, 457.67it/s]Running loglikelihood requests:  59%|█████▉    | 33025/56168 [02:10<00:51, 446.78it/s]Running loglikelihood requests:  59%|█████▉    | 33089/56168 [02:10<00:50, 460.71it/s]Running loglikelihood requests:  59%|█████▉    | 33153/56168 [02:10<00:49, 461.00it/s]Running loglikelihood requests:  59%|█████▉    | 33217/56168 [02:10<00:47, 479.74it/s]Running loglikelihood requests:  59%|█████▉    | 33281/56168 [02:10<00:48, 469.41it/s]Running loglikelihood requests:  59%|█████▉    | 33345/56168 [02:10<00:46, 492.30it/s]Running loglikelihood requests:  59%|█████▉    | 33409/56168 [02:10<00:45, 501.39it/s]Running loglikelihood requests:  60%|█████▉    | 33473/56168 [02:10<00:45, 496.83it/s]Running loglikelihood requests:  60%|█████▉    | 33537/56168 [02:11<00:44, 512.53it/s]Running loglikelihood requests:  60%|█████▉    | 33601/56168 [02:11<00:43, 516.37it/s]Running loglikelihood requests:  60%|█████▉    | 33665/56168 [02:11<00:45, 491.85it/s]Running loglikelihood requests:  60%|██████    | 33729/56168 [02:11<00:44, 505.51it/s]Running loglikelihood requests:  60%|██████    | 33793/56168 [02:11<00:44, 503.62it/s]Running loglikelihood requests:  60%|██████    | 33857/56168 [02:11<00:44, 502.39it/s]Running loglikelihood requests:  60%|██████    | 33921/56168 [02:11<00:43, 515.49it/s]Running loglikelihood requests:  61%|██████    | 33985/56168 [02:11<00:42, 516.86it/s]Running loglikelihood requests:  61%|██████    | 34049/56168 [02:12<00:42, 519.31it/s]Running loglikelihood requests:  61%|██████    | 34113/56168 [02:12<00:42, 519.55it/s]Running loglikelihood requests:  61%|██████    | 34177/56168 [02:12<00:43, 510.13it/s]Running loglikelihood requests:  61%|██████    | 34241/56168 [02:12<00:42, 520.87it/s]Running loglikelihood requests:  61%|██████    | 34305/56168 [02:12<00:41, 525.35it/s]Running loglikelihood requests:  61%|██████    | 34369/56168 [02:12<00:44, 490.20it/s]Running loglikelihood requests:  61%|██████▏   | 34433/56168 [02:12<00:45, 480.80it/s]Running loglikelihood requests:  61%|██████▏   | 34497/56168 [02:13<00:43, 500.13it/s]Running loglikelihood requests:  62%|██████▏   | 34561/56168 [02:13<00:42, 507.01it/s]Running loglikelihood requests:  62%|██████▏   | 34625/56168 [02:13<00:41, 516.71it/s]Running loglikelihood requests:  62%|██████▏   | 34689/56168 [02:13<00:41, 521.10it/s]Running loglikelihood requests:  62%|██████▏   | 34753/56168 [02:13<00:40, 523.47it/s]Running loglikelihood requests:  62%|██████▏   | 34817/56168 [02:13<00:40, 532.10it/s]Running loglikelihood requests:  62%|██████▏   | 34881/56168 [02:13<00:40, 522.79it/s]Running loglikelihood requests:  62%|██████▏   | 34945/56168 [02:13<00:39, 532.46it/s]Running loglikelihood requests:  62%|██████▏   | 35009/56168 [02:13<00:39, 538.52it/s]Running loglikelihood requests:  62%|██████▏   | 35073/56168 [02:14<00:38, 543.35it/s]Running loglikelihood requests:  63%|██████▎   | 35137/56168 [02:14<00:38, 543.83it/s]Running loglikelihood requests:  63%|██████▎   | 35201/56168 [02:14<00:38, 545.57it/s]Running loglikelihood requests:  63%|██████▎   | 35265/56168 [02:14<00:38, 545.81it/s]Running loglikelihood requests:  63%|██████▎   | 35329/56168 [02:14<00:39, 531.34it/s]Running loglikelihood requests:  63%|██████▎   | 35393/56168 [02:14<00:39, 523.36it/s]Running loglikelihood requests:  63%|██████▎   | 35457/56168 [02:14<00:41, 503.47it/s]Running loglikelihood requests:  63%|██████▎   | 35521/56168 [02:14<00:41, 496.32it/s]Running loglikelihood requests:  63%|██████▎   | 35585/56168 [02:15<00:41, 491.97it/s]Running loglikelihood requests:  63%|██████▎   | 35649/56168 [02:15<00:42, 482.20it/s]Running loglikelihood requests:  64%|██████▎   | 35713/56168 [02:15<00:40, 501.05it/s]Running loglikelihood requests:  64%|██████▎   | 35777/56168 [02:15<00:41, 494.61it/s]Running loglikelihood requests:  64%|██████▍   | 35841/56168 [02:15<00:40, 499.56it/s]Running loglikelihood requests:  64%|██████▍   | 35905/56168 [02:15<00:39, 515.95it/s]Running loglikelihood requests:  64%|██████▍   | 35969/56168 [02:15<00:38, 522.06it/s]Running loglikelihood requests:  64%|██████▍   | 36033/56168 [02:15<00:38, 523.76it/s]Running loglikelihood requests:  64%|██████▍   | 36097/56168 [02:16<00:37, 532.95it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [02:16<00:37, 527.40it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [02:16<00:38, 524.32it/s]Running loglikelihood requests:  65%|██████▍   | 36289/56168 [02:16<00:37, 524.95it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [02:16<00:39, 504.32it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [02:16<00:39, 502.56it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [02:16<00:39, 496.49it/s]Running loglikelihood requests:  65%|██████▌   | 36545/56168 [02:16<00:38, 512.26it/s]Running loglikelihood requests:  65%|██████▌   | 36609/56168 [02:17<00:37, 520.89it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [02:17<00:36, 527.24it/s]Running loglikelihood requests:  65%|██████▌   | 36737/56168 [02:17<00:36, 538.68it/s]Running loglikelihood requests:  66%|██████▌   | 36801/56168 [02:17<00:35, 542.02it/s]Running loglikelihood requests:  66%|██████▌   | 36865/56168 [02:17<00:35, 544.94it/s]Running loglikelihood requests:  66%|██████▌   | 36929/56168 [02:17<00:34, 556.42it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [02:17<00:34, 551.12it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [02:17<00:34, 559.16it/s]Running loglikelihood requests:  66%|██████▌   | 37121/56168 [02:17<00:34, 549.59it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [02:18<00:34, 555.11it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [02:18<00:34, 555.53it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [02:18<00:34, 543.02it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [02:18<00:33, 555.04it/s]Running loglikelihood requests:  67%|██████▋   | 37441/56168 [02:18<00:33, 559.26it/s]Running loglikelihood requests:  67%|██████▋   | 37505/56168 [02:18<00:33, 556.36it/s]Running loglikelihood requests:  67%|██████▋   | 37569/56168 [02:18<00:33, 562.35it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [02:18<00:32, 568.12it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [02:19<00:32, 565.99it/s]Running loglikelihood requests:  67%|██████▋   | 37761/56168 [02:19<00:32, 570.37it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [02:19<00:32, 572.39it/s]Running loglikelihood requests:  67%|██████▋   | 37889/56168 [02:19<00:31, 574.81it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [02:19<00:31, 570.23it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [02:19<00:32, 560.74it/s]Running loglikelihood requests:  68%|██████▊   | 38081/56168 [02:19<00:32, 564.76it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [02:19<00:32, 558.23it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [02:19<00:33, 536.68it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [02:20<00:32, 551.21it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [02:20<00:32, 544.03it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [02:20<00:34, 514.82it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [02:20<00:34, 518.62it/s]Running loglikelihood requests:  69%|██████▊   | 38529/56168 [02:20<00:33, 522.06it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [02:20<00:32, 536.06it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [02:20<00:32, 542.55it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [02:20<00:31, 546.29it/s]Running loglikelihood requests:  69%|██████▉   | 38785/56168 [02:21<00:31, 549.67it/s]Running loglikelihood requests:  69%|██████▉   | 38849/56168 [02:21<00:31, 555.07it/s]Running loglikelihood requests:  69%|██████▉   | 38913/56168 [02:21<00:31, 555.40it/s]Running loglikelihood requests:  69%|██████▉   | 38977/56168 [02:21<00:30, 556.97it/s]Running loglikelihood requests:  70%|██████▉   | 39041/56168 [02:21<00:31, 550.18it/s]Running loglikelihood requests:  70%|██████▉   | 39105/56168 [02:21<00:30, 560.76it/s]Running loglikelihood requests:  70%|██████▉   | 39169/56168 [02:21<00:30, 564.14it/s]Running loglikelihood requests:  70%|██████▉   | 39233/56168 [02:21<00:31, 539.10it/s]Running loglikelihood requests:  70%|██████▉   | 39297/56168 [02:21<00:31, 542.59it/s]Running loglikelihood requests:  70%|███████   | 39361/56168 [02:22<00:30, 547.31it/s]Running loglikelihood requests:  70%|███████   | 39425/56168 [02:22<00:31, 532.92it/s]Running loglikelihood requests:  70%|███████   | 39489/56168 [02:22<00:33, 497.70it/s]Running loglikelihood requests:  70%|███████   | 39553/56168 [02:22<00:32, 513.31it/s]Running loglikelihood requests:  71%|███████   | 39617/56168 [02:22<00:31, 530.12it/s]Running loglikelihood requests:  71%|███████   | 39681/56168 [02:22<00:30, 541.76it/s]Running loglikelihood requests:  71%|███████   | 39745/56168 [02:22<00:30, 531.76it/s]Running loglikelihood requests:  71%|███████   | 39809/56168 [02:22<00:30, 528.93it/s]Running loglikelihood requests:  71%|███████   | 39873/56168 [02:23<00:31, 517.05it/s]Running loglikelihood requests:  71%|███████   | 39937/56168 [02:23<00:31, 520.10it/s]Running loglikelihood requests:  71%|███████   | 40001/56168 [02:23<00:30, 527.03it/s]Running loglikelihood requests:  71%|███████▏  | 40065/56168 [02:23<00:30, 521.26it/s]Running loglikelihood requests:  71%|███████▏  | 40129/56168 [02:23<00:30, 524.43it/s]Running loglikelihood requests:  72%|███████▏  | 40193/56168 [02:23<00:29, 535.93it/s]Running loglikelihood requests:  72%|███████▏  | 40257/56168 [02:23<00:29, 539.41it/s]Running loglikelihood requests:  72%|███████▏  | 40321/56168 [02:23<00:28, 553.98it/s]Running loglikelihood requests:  72%|███████▏  | 40385/56168 [02:23<00:28, 562.29it/s]Running loglikelihood requests:  72%|███████▏  | 40449/56168 [02:24<00:28, 556.66it/s]Running loglikelihood requests:  72%|███████▏  | 40513/56168 [02:24<00:28, 555.99it/s]Running loglikelihood requests:  72%|███████▏  | 40577/56168 [02:24<00:27, 557.97it/s]Running loglikelihood requests:  72%|███████▏  | 40641/56168 [02:24<00:27, 559.12it/s]Running loglikelihood requests:  72%|███████▏  | 40705/56168 [02:24<00:27, 552.34it/s]Running loglikelihood requests:  73%|███████▎  | 40769/56168 [02:24<00:27, 552.38it/s]Running loglikelihood requests:  73%|███████▎  | 40833/56168 [02:24<00:28, 546.60it/s]Running loglikelihood requests:  73%|███████▎  | 40897/56168 [02:24<00:29, 516.98it/s]Running loglikelihood requests:  73%|███████▎  | 40961/56168 [02:25<00:28, 527.83it/s]Running loglikelihood requests:  73%|███████▎  | 41025/56168 [02:25<00:30, 499.52it/s]Running loglikelihood requests:  73%|███████▎  | 41089/56168 [02:25<00:28, 524.52it/s]Running loglikelihood requests:  73%|███████▎  | 41153/56168 [02:25<00:28, 531.96it/s]Running loglikelihood requests:  73%|███████▎  | 41217/56168 [02:25<00:27, 546.99it/s]Running loglikelihood requests:  73%|███████▎  | 41281/56168 [02:25<00:27, 550.17it/s]Running loglikelihood requests:  74%|███████▎  | 41345/56168 [02:25<00:26, 552.93it/s]Running loglikelihood requests:  74%|███████▎  | 41409/56168 [02:25<00:26, 562.28it/s]Running loglikelihood requests:  74%|███████▍  | 41473/56168 [02:25<00:26, 561.69it/s]Running loglikelihood requests:  74%|███████▍  | 41537/56168 [02:26<00:25, 571.54it/s]Running loglikelihood requests:  74%|███████▍  | 41601/56168 [02:26<00:25, 577.84it/s]Running loglikelihood requests:  74%|███████▍  | 41665/56168 [02:26<00:25, 576.94it/s]Running loglikelihood requests:  74%|███████▍  | 41729/56168 [02:26<00:26, 542.14it/s]Running loglikelihood requests:  74%|███████▍  | 41793/56168 [02:26<00:25, 557.81it/s]Running loglikelihood requests:  75%|███████▍  | 41857/56168 [02:26<00:27, 515.27it/s]Running loglikelihood requests:  75%|███████▍  | 41921/56168 [02:26<00:26, 537.68it/s]Running loglikelihood requests:  75%|███████▍  | 41985/56168 [02:26<00:27, 513.63it/s]Running loglikelihood requests:  75%|███████▍  | 42049/56168 [02:27<00:27, 520.78it/s]Running loglikelihood requests:  75%|███████▍  | 42113/56168 [02:27<00:26, 525.40it/s]Running loglikelihood requests:  75%|███████▌  | 42177/56168 [02:27<00:25, 539.80it/s]Running loglikelihood requests:  75%|███████▌  | 42241/56168 [02:27<00:26, 533.99it/s]Running loglikelihood requests:  75%|███████▌  | 42305/56168 [02:27<00:26, 532.31it/s]Running loglikelihood requests:  75%|███████▌  | 42369/56168 [02:27<00:26, 512.79it/s]Running loglikelihood requests:  76%|███████▌  | 42433/56168 [02:27<00:27, 501.09it/s]Running loglikelihood requests:  76%|███████▌  | 42497/56168 [02:27<00:26, 519.33it/s]Running loglikelihood requests:  76%|███████▌  | 42561/56168 [02:28<00:25, 532.96it/s]Running loglikelihood requests:  76%|███████▌  | 42625/56168 [02:28<00:25, 536.55it/s]Running loglikelihood requests:  76%|███████▌  | 42689/56168 [02:28<00:24, 546.01it/s]Running loglikelihood requests:  76%|███████▌  | 42753/56168 [02:28<00:24, 551.63it/s]Running loglikelihood requests:  76%|███████▌  | 42817/56168 [02:28<00:24, 556.28it/s]Running loglikelihood requests:  76%|███████▋  | 42881/56168 [02:28<00:23, 553.64it/s]Running loglikelihood requests:  76%|███████▋  | 42945/56168 [02:28<00:23, 556.52it/s]Running loglikelihood requests:  77%|███████▋  | 43009/56168 [02:28<00:23, 568.06it/s]Running loglikelihood requests:  77%|███████▋  | 43073/56168 [02:28<00:22, 575.33it/s]Running loglikelihood requests:  77%|███████▋  | 43137/56168 [02:29<00:24, 526.38it/s]Running loglikelihood requests:  77%|███████▋  | 43201/56168 [02:29<00:24, 520.22it/s]Running loglikelihood requests:  77%|███████▋  | 43265/56168 [02:29<00:23, 541.28it/s]Running loglikelihood requests:  77%|███████▋  | 43329/56168 [02:29<00:23, 546.57it/s]Running loglikelihood requests:  77%|███████▋  | 43393/56168 [02:29<00:23, 553.64it/s]Running loglikelihood requests:  77%|███████▋  | 43457/56168 [02:29<00:22, 559.04it/s]Running loglikelihood requests:  77%|███████▋  | 43521/56168 [02:29<00:23, 532.85it/s]Running loglikelihood requests:  78%|███████▊  | 43585/56168 [02:29<00:24, 520.67it/s]Running loglikelihood requests:  78%|███████▊  | 43649/56168 [02:30<00:23, 541.50it/s]Running loglikelihood requests:  78%|███████▊  | 43713/56168 [02:30<00:22, 556.48it/s]Running loglikelihood requests:  78%|███████▊  | 43777/56168 [02:30<00:21, 569.47it/s]Running loglikelihood requests:  78%|███████▊  | 43841/56168 [02:30<00:21, 575.27it/s]Running loglikelihood requests:  78%|███████▊  | 43905/56168 [02:30<00:21, 581.55it/s]Running loglikelihood requests:  78%|███████▊  | 43969/56168 [02:30<00:20, 587.62it/s]Running loglikelihood requests:  78%|███████▊  | 44033/56168 [02:30<00:20, 592.18it/s]Running loglikelihood requests:  79%|███████▊  | 44097/56168 [02:30<00:20, 592.33it/s]Running loglikelihood requests:  79%|███████▊  | 44161/56168 [02:30<00:20, 587.14it/s]Running loglikelihood requests:  79%|███████▊  | 44225/56168 [02:31<00:21, 564.14it/s]Running loglikelihood requests:  79%|███████▉  | 44289/56168 [02:31<00:21, 558.18it/s]Running loglikelihood requests:  79%|███████▉  | 44353/56168 [02:31<00:22, 526.02it/s]Running loglikelihood requests:  79%|███████▉  | 44417/56168 [02:31<00:22, 520.30it/s]Running loglikelihood requests:  79%|███████▉  | 44481/56168 [02:31<00:22, 510.06it/s]Running loglikelihood requests:  79%|███████▉  | 44545/56168 [02:31<00:22, 510.65it/s]Running loglikelihood requests:  79%|███████▉  | 44609/56168 [02:31<00:22, 513.02it/s]Running loglikelihood requests:  80%|███████▉  | 44673/56168 [02:31<00:22, 520.52it/s]Running loglikelihood requests:  80%|███████▉  | 44737/56168 [02:32<00:22, 515.31it/s]Running loglikelihood requests:  80%|███████▉  | 44801/56168 [02:32<00:21, 525.40it/s]Running loglikelihood requests:  80%|███████▉  | 44865/56168 [02:32<00:21, 528.74it/s]Running loglikelihood requests:  80%|███████▉  | 44929/56168 [02:32<00:21, 518.01it/s]Running loglikelihood requests:  80%|████████  | 44993/56168 [02:32<00:22, 490.55it/s]Running loglikelihood requests:  80%|████████  | 45057/56168 [02:32<00:21, 519.30it/s]Running loglikelihood requests:  80%|████████  | 45121/56168 [02:32<00:22, 488.25it/s]Running loglikelihood requests:  80%|████████  | 45185/56168 [02:32<00:22, 487.36it/s]Running loglikelihood requests:  81%|████████  | 45249/56168 [02:33<00:22, 475.19it/s]Running loglikelihood requests:  81%|████████  | 45313/56168 [02:33<00:21, 497.02it/s]Running loglikelihood requests:  81%|████████  | 45377/56168 [02:33<00:20, 525.66it/s]Running loglikelihood requests:  81%|████████  | 45441/56168 [02:33<00:20, 536.18it/s]Running loglikelihood requests:  81%|████████  | 45505/56168 [02:33<00:19, 549.67it/s]Running loglikelihood requests:  81%|████████  | 45569/56168 [02:33<00:19, 552.03it/s]Running loglikelihood requests:  81%|████████  | 45633/56168 [02:33<00:18, 568.00it/s]Running loglikelihood requests:  81%|████████▏ | 45697/56168 [02:33<00:18, 581.14it/s]Running loglikelihood requests:  81%|████████▏ | 45761/56168 [02:33<00:17, 596.16it/s]Running loglikelihood requests:  82%|████████▏ | 45825/56168 [02:34<00:17, 599.63it/s]Running loglikelihood requests:  82%|████████▏ | 45889/56168 [02:34<00:17, 593.94it/s]Running loglikelihood requests:  82%|████████▏ | 45953/56168 [02:34<00:16, 603.66it/s]Running loglikelihood requests:  82%|████████▏ | 46017/56168 [02:34<00:16, 609.72it/s]Running loglikelihood requests:  82%|████████▏ | 46081/56168 [02:34<00:17, 592.36it/s]Running loglikelihood requests:  82%|████████▏ | 46145/56168 [02:34<00:16, 596.36it/s]Running loglikelihood requests:  82%|████████▏ | 46209/56168 [02:34<00:16, 598.89it/s]Running loglikelihood requests:  82%|████████▏ | 46275/56168 [02:34<00:16, 616.22it/s]Running loglikelihood requests:  82%|████████▏ | 46337/56168 [02:34<00:16, 608.58it/s]Running loglikelihood requests:  83%|████████▎ | 46401/56168 [02:34<00:16, 608.16it/s]Running loglikelihood requests:  83%|████████▎ | 46465/56168 [02:35<00:15, 617.00it/s]Running loglikelihood requests:  83%|████████▎ | 46529/56168 [02:35<00:15, 603.44it/s]Running loglikelihood requests:  83%|████████▎ | 46593/56168 [02:35<00:16, 594.42it/s]Running loglikelihood requests:  83%|████████▎ | 46657/56168 [02:35<00:18, 511.33it/s]Running loglikelihood requests:  83%|████████▎ | 46721/56168 [02:35<00:18, 522.49it/s]Running loglikelihood requests:  83%|████████▎ | 46785/56168 [02:35<00:17, 526.28it/s]Running loglikelihood requests:  83%|████████▎ | 46849/56168 [02:35<00:16, 553.38it/s]Running loglikelihood requests:  84%|████████▎ | 46917/56168 [02:35<00:15, 587.35it/s]Running loglikelihood requests:  84%|████████▎ | 46984/56168 [02:36<00:15, 610.32it/s]Running loglikelihood requests:  84%|████████▍ | 47047/56168 [02:36<00:14, 612.17it/s]Running loglikelihood requests:  84%|████████▍ | 47109/56168 [02:36<00:14, 606.15it/s]Running loglikelihood requests:  84%|████████▍ | 47171/56168 [02:36<00:14, 608.38it/s]Running loglikelihood requests:  84%|████████▍ | 47242/56168 [02:36<00:13, 637.79it/s]Running loglikelihood requests:  84%|████████▍ | 47312/56168 [02:36<00:13, 655.86it/s]Running loglikelihood requests:  84%|████████▍ | 47378/56168 [02:36<00:13, 647.10it/s]Running loglikelihood requests:  84%|████████▍ | 47443/56168 [02:36<00:13, 646.14it/s]Running loglikelihood requests:  85%|████████▍ | 47508/56168 [02:36<00:13, 627.25it/s]Running loglikelihood requests:  85%|████████▍ | 47571/56168 [02:36<00:14, 606.85it/s]Running loglikelihood requests:  85%|████████▍ | 47632/56168 [02:37<00:14, 574.78it/s]Running loglikelihood requests:  85%|████████▍ | 47690/56168 [02:37<00:15, 551.96it/s]Running loglikelihood requests:  85%|████████▌ | 47746/56168 [02:37<00:15, 543.14it/s]Running loglikelihood requests:  85%|████████▌ | 47809/56168 [02:37<00:15, 541.75it/s]Running loglikelihood requests:  85%|████████▌ | 47873/56168 [02:37<00:15, 551.10it/s]Running loglikelihood requests:  85%|████████▌ | 47937/56168 [02:37<00:14, 549.25it/s]Running loglikelihood requests:  85%|████████▌ | 48001/56168 [02:37<00:14, 549.68it/s]Running loglikelihood requests:  86%|████████▌ | 48065/56168 [02:37<00:14, 558.79it/s]Running loglikelihood requests:  86%|████████▌ | 48129/56168 [02:37<00:13, 580.97it/s]Running loglikelihood requests:  86%|████████▌ | 48193/56168 [02:38<00:14, 553.81it/s]Running loglikelihood requests:  86%|████████▌ | 48257/56168 [02:38<00:14, 560.77it/s]Running loglikelihood requests:  86%|████████▌ | 48321/56168 [02:38<00:14, 535.15it/s]Running loglikelihood requests:  86%|████████▌ | 48398/56168 [02:38<00:13, 597.18it/s]Running loglikelihood requests:  86%|████████▋ | 48459/56168 [02:38<00:12, 598.67it/s]Running loglikelihood requests:  86%|████████▋ | 48528/56168 [02:38<00:12, 624.15it/s]Running loglikelihood requests:  87%|████████▋ | 48592/56168 [02:38<00:12, 614.49it/s]Running loglikelihood requests:  87%|████████▋ | 48673/56168 [02:38<00:11, 670.03it/s]Running loglikelihood requests:  87%|████████▋ | 48741/56168 [02:38<00:11, 650.39it/s]Running loglikelihood requests:  87%|████████▋ | 48815/56168 [02:39<00:10, 675.91it/s]Running loglikelihood requests:  87%|████████▋ | 48884/56168 [02:39<00:10, 676.92it/s]Running loglikelihood requests:  87%|████████▋ | 48953/56168 [02:39<00:11, 647.90it/s]Running loglikelihood requests:  87%|████████▋ | 49019/56168 [02:39<00:11, 624.80it/s]Running loglikelihood requests:  87%|████████▋ | 49082/56168 [02:39<00:11, 614.37it/s]Running loglikelihood requests:  87%|████████▋ | 49144/56168 [02:39<00:12, 584.17it/s]Running loglikelihood requests:  88%|████████▊ | 49203/56168 [02:39<00:12, 557.55it/s]Running loglikelihood requests:  88%|████████▊ | 49260/56168 [02:39<00:12, 553.36it/s]Running loglikelihood requests:  88%|████████▊ | 49316/56168 [02:39<00:12, 537.48it/s]Running loglikelihood requests:  88%|████████▊ | 49370/56168 [02:40<00:13, 508.00it/s]Running loglikelihood requests:  88%|████████▊ | 49422/56168 [02:40<00:13, 511.02it/s]Running loglikelihood requests:  88%|████████▊ | 49474/56168 [02:40<00:13, 509.86it/s]Running loglikelihood requests:  88%|████████▊ | 49537/56168 [02:40<00:12, 529.31it/s]Running loglikelihood requests:  88%|████████▊ | 49601/56168 [02:40<00:12, 543.01it/s]Running loglikelihood requests:  88%|████████▊ | 49665/56168 [02:40<00:11, 553.30it/s]Running loglikelihood requests:  89%|████████▊ | 49729/56168 [02:40<00:11, 555.92it/s]Running loglikelihood requests:  89%|████████▊ | 49809/56168 [02:40<00:10, 623.77it/s]Running loglikelihood requests:  89%|████████▉ | 49872/56168 [02:40<00:10, 609.46it/s]Running loglikelihood requests:  89%|████████▉ | 49934/56168 [02:41<00:10, 610.41it/s]Running loglikelihood requests:  89%|████████▉ | 49997/56168 [02:41<00:10, 606.71it/s]Running loglikelihood requests:  89%|████████▉ | 50090/56168 [02:41<00:08, 688.45it/s]Running loglikelihood requests:  89%|████████▉ | 50159/56168 [02:41<00:08, 676.43it/s]Running loglikelihood requests:  89%|████████▉ | 50227/56168 [02:41<00:09, 659.60it/s]Running loglikelihood requests:  90%|████████▉ | 50294/56168 [02:41<00:10, 557.61it/s]Running loglikelihood requests:  90%|████████▉ | 50353/56168 [02:41<00:10, 546.05it/s]Running loglikelihood requests:  90%|████████▉ | 50412/56168 [02:41<00:10, 552.89it/s]Running loglikelihood requests:  90%|████████▉ | 50469/56168 [02:41<00:10, 550.29it/s]Running loglikelihood requests:  90%|████████▉ | 50525/56168 [02:42<00:10, 552.53it/s]Running loglikelihood requests:  90%|█████████ | 50581/56168 [02:42<00:10, 541.92it/s]Running loglikelihood requests:  90%|█████████ | 50636/56168 [02:42<00:10, 531.98it/s]Running loglikelihood requests:  90%|█████████ | 50690/56168 [02:42<00:10, 499.11it/s]Running loglikelihood requests:  90%|█████████ | 50753/56168 [02:42<00:11, 478.90it/s]Running loglikelihood requests:  90%|█████████ | 50817/56168 [02:42<00:10, 513.10it/s]Running loglikelihood requests:  91%|█████████ | 50881/56168 [02:42<00:09, 539.68it/s]Running loglikelihood requests:  91%|█████████ | 50945/56168 [02:42<00:09, 547.48it/s]Running loglikelihood requests:  91%|█████████ | 51009/56168 [02:42<00:09, 566.87it/s]Running loglikelihood requests:  91%|█████████ | 51073/56168 [02:43<00:09, 521.08it/s]Running loglikelihood requests:  91%|█████████ | 51137/56168 [02:43<00:09, 545.70it/s]Running loglikelihood requests:  91%|█████████ | 51201/56168 [02:43<00:08, 569.24it/s]Running loglikelihood requests:  91%|█████████▏| 51265/56168 [02:43<00:08, 549.46it/s]Running loglikelihood requests:  91%|█████████▏| 51329/56168 [02:43<00:08, 562.09it/s]Running loglikelihood requests:  91%|█████████▏| 51393/56168 [02:43<00:08, 580.20it/s]Running loglikelihood requests:  92%|█████████▏| 51457/56168 [02:43<00:07, 589.93it/s]Running loglikelihood requests:  92%|█████████▏| 51521/56168 [02:43<00:07, 586.08it/s]Running loglikelihood requests:  92%|█████████▏| 51585/56168 [02:43<00:08, 567.72it/s]Running loglikelihood requests:  92%|█████████▏| 51649/56168 [02:44<00:08, 551.58it/s]Running loglikelihood requests:  92%|█████████▏| 51713/56168 [02:44<00:07, 560.58it/s]Running loglikelihood requests:  92%|█████████▏| 51777/56168 [02:44<00:07, 560.78it/s]Running loglikelihood requests:  92%|█████████▏| 51841/56168 [02:44<00:07, 545.75it/s]Running loglikelihood requests:  92%|█████████▏| 51905/56168 [02:44<00:07, 553.58it/s]Running loglikelihood requests:  93%|█████████▎| 51993/56168 [02:44<00:06, 622.35it/s]Running loglikelihood requests:  93%|█████████▎| 52056/56168 [02:44<00:06, 601.02it/s]Running loglikelihood requests:  93%|█████████▎| 52117/56168 [02:44<00:07, 542.54it/s]Running loglikelihood requests:  93%|█████████▎| 52173/56168 [02:45<00:09, 434.77it/s]Running loglikelihood requests:  93%|█████████▎| 52225/56168 [02:45<00:09, 421.48it/s]Running loglikelihood requests:  93%|█████████▎| 52301/56168 [02:45<00:07, 499.76it/s]Running loglikelihood requests:  93%|█████████▎| 52355/56168 [02:45<00:07, 509.24it/s]Running loglikelihood requests:  93%|█████████▎| 52418/56168 [02:45<00:06, 540.81it/s]Running loglikelihood requests:  93%|█████████▎| 52481/56168 [02:45<00:07, 520.61it/s]Running loglikelihood requests:  94%|█████████▎| 52545/56168 [02:45<00:06, 519.80it/s]Running loglikelihood requests:  94%|█████████▎| 52624/56168 [02:45<00:06, 590.42it/s]Running loglikelihood requests:  94%|█████████▍| 52686/56168 [02:46<00:06, 579.58it/s]Running loglikelihood requests:  94%|█████████▍| 52746/56168 [02:46<00:06, 565.26it/s]Running loglikelihood requests:  94%|█████████▍| 52804/56168 [02:46<00:05, 567.21it/s]Running loglikelihood requests:  94%|█████████▍| 52865/56168 [02:46<00:06, 545.89it/s]Running loglikelihood requests:  94%|█████████▍| 52929/56168 [02:46<00:06, 497.76it/s]Running loglikelihood requests:  94%|█████████▍| 52993/56168 [02:46<00:06, 507.53it/s]Running loglikelihood requests:  94%|█████████▍| 53057/56168 [02:46<00:06, 477.95it/s]Running loglikelihood requests:  95%|█████████▍| 53121/56168 [02:46<00:05, 508.48it/s]Running loglikelihood requests:  95%|█████████▍| 53206/56168 [02:46<00:04, 595.59it/s]Running loglikelihood requests:  95%|█████████▍| 53268/56168 [02:47<00:04, 592.24it/s]Running loglikelihood requests:  95%|█████████▍| 53329/56168 [02:47<00:04, 596.99it/s]Running loglikelihood requests:  95%|█████████▌| 53390/56168 [02:47<00:04, 585.80it/s]Running loglikelihood requests:  95%|█████████▌| 53450/56168 [02:47<00:04, 583.57it/s]Running loglikelihood requests:  95%|█████████▌| 53509/56168 [02:47<00:04, 544.38it/s]Running loglikelihood requests:  95%|█████████▌| 53569/56168 [02:47<00:04, 554.01it/s]Running loglikelihood requests:  95%|█████████▌| 53633/56168 [02:47<00:04, 563.91it/s]Running loglikelihood requests:  96%|█████████▌| 53697/56168 [02:47<00:04, 529.16it/s]Running loglikelihood requests:  96%|█████████▌| 53761/56168 [02:48<00:04, 544.40it/s]Running loglikelihood requests:  96%|█████████▌| 53825/56168 [02:48<00:04, 548.69it/s]Running loglikelihood requests:  96%|█████████▌| 53889/56168 [02:48<00:04, 547.72it/s]Running loglikelihood requests:  96%|█████████▌| 54017/56168 [02:48<00:03, 605.72it/s]Running loglikelihood requests:  96%|█████████▋| 54081/56168 [02:48<00:03, 601.21it/s]Running loglikelihood requests:  96%|█████████▋| 54145/56168 [02:48<00:03, 603.06it/s]Running loglikelihood requests:  97%|█████████▋| 54209/56168 [02:48<00:03, 603.39it/s]Running loglikelihood requests:  97%|█████████▋| 54313/56168 [02:48<00:02, 707.37it/s]Running loglikelihood requests:  97%|█████████▋| 54385/56168 [02:48<00:02, 710.77it/s]Running loglikelihood requests:  97%|█████████▋| 54457/56168 [02:49<00:02, 634.48it/s]Running loglikelihood requests:  97%|█████████▋| 54522/56168 [02:49<00:02, 575.29it/s]Running loglikelihood requests:  97%|█████████▋| 54582/56168 [02:49<00:03, 515.36it/s]Running loglikelihood requests:  97%|█████████▋| 54636/56168 [02:49<00:03, 500.63it/s]Running loglikelihood requests:  97%|█████████▋| 54688/56168 [02:49<00:03, 473.06it/s]Running loglikelihood requests:  97%|█████████▋| 54737/56168 [02:49<00:03, 426.38it/s]Running loglikelihood requests:  98%|█████████▊| 54785/56168 [02:49<00:03, 429.94it/s]Running loglikelihood requests:  98%|█████████▊| 54849/56168 [02:50<00:03, 420.24it/s]Running loglikelihood requests:  98%|█████████▊| 54913/56168 [02:50<00:02, 457.01it/s]Running loglikelihood requests:  98%|█████████▊| 54983/56168 [02:50<00:02, 517.05it/s]Running loglikelihood requests:  98%|█████████▊| 55057/56168 [02:50<00:01, 575.32it/s]Running loglikelihood requests:  98%|█████████▊| 55161/56168 [02:50<00:01, 698.18it/s]Running loglikelihood requests:  98%|█████████▊| 55234/56168 [02:50<00:01, 538.56it/s]Running loglikelihood requests:  99%|█████████▊| 55361/56168 [02:50<00:01, 600.59it/s]Running loglikelihood requests:  99%|█████████▉| 55489/56168 [02:51<00:01, 648.64it/s]Running loglikelihood requests:  99%|█████████▉| 55613/56168 [02:51<00:00, 757.12it/s]Running loglikelihood requests:  99%|█████████▉| 55694/56168 [02:51<00:00, 632.68it/s]Running loglikelihood requests:  99%|█████████▉| 55809/56168 [02:51<00:00, 605.48it/s]Running loglikelihood requests:  99%|█████████▉| 55874/56168 [02:51<00:00, 588.64it/s]Running loglikelihood requests: 100%|█████████▉| 55937/56168 [02:51<00:00, 572.24it/s]Running loglikelihood requests: 100%|█████████▉| 56001/56168 [02:51<00:00, 518.95it/s]Running loglikelihood requests: 100%|█████████▉| 56104/56168 [02:52<00:00, 617.68it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:52<00:00, 326.16it/s]
2025-05-15:01:53:28,932 WARNING  [huggingface.py:1353] Failed to get model SHA for /work1/nkale/unlearn_benchmark/unlearn_models/scrub/checkpoint-425 at revision main. Error: Repo id must be in the form 'repo_name' or 'namespace/repo_name': '/work1/nkale/unlearn_benchmark/unlearn_models/scrub/checkpoint-425'. Use `repo_type` argument if needed.
2025-05-15:01:53:36,888 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=/work1/nkale/unlearn_benchmark/unlearn_models/scrub/checkpoint-425,tokenizer=meta-llama/Meta-Llama-3-8b-Instruct), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.7807|±  |0.0034|
| - humanities                          |      2|none  |      |acc   |↑  |0.7637|±  |0.0061|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.7381|±  |0.0393|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.9030|±  |0.0231|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.8824|±  |0.0226|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.8903|±  |0.0203|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.8430|±  |0.0332|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.8333|±  |0.0360|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.8528|±  |0.0278|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.7457|±  |0.0234|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.6369|±  |0.0161|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.8006|±  |0.0227|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.8302|±  |0.0209|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.7392|±  |0.0112|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.8713|±  |0.0257|
| - other                               |      2|none  |      |acc   |↑  |0.8172|±  |0.0069|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.8500|±  |0.0359|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.8151|±  |0.0239|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.7572|±  |0.0327|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.7400|±  |0.0441|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.7937|±  |0.0272|
|  - management                         |      1|none  |     0|acc   |↑  |0.8058|±  |0.0392|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8803|±  |0.0213|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.8400|±  |0.0368|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.8519|±  |0.0127|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.8301|±  |0.0215|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.7660|±  |0.0253|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.8640|±  |0.0208|
|  - virology                           |      1|none  |     0|acc   |↑  |0.6687|±  |0.0366|
| - social sciences                     |      2|none  |      |acc   |↑  |0.8187|±  |0.0069|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.6930|±  |0.0434|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7626|±  |0.0303|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.9016|±  |0.0215|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.8000|±  |0.0203|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.8361|±  |0.0240|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.8807|±  |0.0139|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7939|±  |0.0355|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.8186|±  |0.0156|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.7545|±  |0.0412|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.7347|±  |0.0283|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8557|±  |0.0248|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8400|±  |0.0368|
| - stem                                |      2|none  |      |acc   |↑  |0.7330|±  |0.0078|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.6300|±  |0.0485|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.7926|±  |0.0350|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.7368|±  |0.0358|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.7431|±  |0.0365|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.6600|±  |0.0476|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.7200|±  |0.0451|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.6500|±  |0.0479|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.6765|±  |0.0466|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.8800|±  |0.0327|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.7319|±  |0.0290|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.7379|±  |0.0366|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.7434|±  |0.0225|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7935|±  |0.0230|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.7389|±  |0.0309|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.8000|±  |0.0402|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.6519|±  |0.0290|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.6954|±  |0.0376|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.7546|±  |0.0293|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.7321|±  |0.0420|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.7807|±  |0.0034|
| - humanities     |      2|none  |      |acc   |↑  |0.7637|±  |0.0061|
| - other          |      2|none  |      |acc   |↑  |0.8172|±  |0.0069|
| - social sciences|      2|none  |      |acc   |↑  |0.8187|±  |0.0069|
| - stem           |      2|none  |      |acc   |↑  |0.7330|±  |0.0078|

