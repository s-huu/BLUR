2025-05-13:22:17:52,309 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-13:22:17:52,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,459 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,471 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,478 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,481 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,553 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:52,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,279 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,282 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,285 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,292 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,298 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,301 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,304 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,314 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,340 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,353 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,366 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,370 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,373 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,376 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,380 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,386 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:53,390 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,172 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,180 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,183 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,186 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,188 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,194 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,197 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,202 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,208 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,211 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,554 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,561 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,648 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,663 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,671 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,675 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,707 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,711 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,723 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,753 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,797 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,829 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,833 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,837 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,924 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,927 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,930 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,941 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,955 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,961 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,975 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,984 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,989 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,995 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:54,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,001 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,003 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,012 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,020 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,023 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,036 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,041 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,070 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,073 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,075 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,078 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,081 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,084 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,089 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,095 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,098 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,103 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,112 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,115 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,117 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,123 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,142 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,144 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,158 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,163 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:55,166 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:56,194 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:56,228 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:56,230 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:56,232 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:56,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:56,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:56,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:56,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,167 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,169 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,171 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,173 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,180 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,182 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,184 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,186 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,188 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,190 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,192 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,197 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,207 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,208 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,212 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,216 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,218 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,227 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,229 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,259 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,262 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,264 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,266 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,268 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,274 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,276 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,281 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,285 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,287 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,289 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,293 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,298 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,300 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,302 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,304 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,308 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,311 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,313 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,319 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,323 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,326 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,328 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,330 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,334 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,337 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,343 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,345 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,347 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,354 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,365 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,370 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,372 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,375 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,377 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,379 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,381 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,386 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,388 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,390 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,392 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,395 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,400 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,402 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,406 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,408 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,409 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,411 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,416 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,420 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,423 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,427 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,430 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,432 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,441 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,443 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,448 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,467 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,469 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,471 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,474 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,478 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,481 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,497 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,507 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,522 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,538 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,553 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,561 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,569 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,571 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,581 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,588 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,591 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,594 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,599 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,605 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,610 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,618 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,621 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,623 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,625 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,627 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,635 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,697 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,707 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:17:57,711 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:18:00,121 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:18:00,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:18:00,128 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-13:22:18:00,131 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-13:22:18:00,131 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent/checkpoint-485', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-13:22:18:00,653 INFO     [huggingface.py:130] Using device 'cuda:5'
2025-05-13:22:18:01,197 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:5'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:05,  1.95s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:03<00:03,  1.76s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:07<00:02,  2.69s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:10<00:00,  2.85s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:10<00:00,  2.62s/it]
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,281 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,282 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:18:29,283 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-13:22:18:29,295 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 45%|████▌     | 45/100 [00:00<00:00, 448.96it/s] 90%|█████████ | 90/100 [00:00<00:00, 424.29it/s]100%|██████████| 100/100 [00:00<00:00, 436.75it/s]
2025-05-13:22:18:29,549 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 13%|█▎        | 41/310 [00:00<00:00, 408.92it/s] 26%|██▋       | 82/310 [00:00<00:00, 397.29it/s] 40%|███▉      | 123/310 [00:00<00:00, 390.30it/s] 62%|██████▏   | 191/310 [00:00<00:00, 500.04it/s] 89%|████████▊ | 275/310 [00:00<00:00, 618.39it/s]100%|██████████| 310/310 [00:00<00:00, 556.90it/s]
2025-05-13:22:18:30,129 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 81%|████████  | 81/100 [00:00<00:00, 806.06it/s]100%|██████████| 100/100 [00:00<00:00, 809.51it/s]
2025-05-13:22:18:30,257 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 58%|█████▊    | 84/145 [00:00<00:00, 830.66it/s]100%|██████████| 145/145 [00:00<00:00, 816.39it/s]
2025-05-13:22:18:30,440 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 85%|████████▌ | 85/100 [00:00<00:00, 842.51it/s]100%|██████████| 100/100 [00:00<00:00, 838.02it/s]
2025-05-13:22:18:30,564 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 41%|████      | 83/203 [00:00<00:00, 821.26it/s] 82%|████████▏ | 166/203 [00:00<00:00, 779.47it/s]100%|██████████| 203/203 [00:00<00:00, 787.91it/s]
2025-05-13:22:18:30,829 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 43%|████▎     | 66/152 [00:00<00:00, 623.27it/s] 85%|████████▍ | 129/152 [00:00<00:00, 481.21it/s]100%|██████████| 152/152 [00:00<00:00, 488.92it/s]
2025-05-13:22:18:31,146 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 42%|████▏     | 43/102 [00:00<00:00, 426.73it/s] 84%|████████▍ | 86/102 [00:00<00:00, 407.50it/s]100%|██████████| 102/102 [00:00<00:00, 422.96it/s]
2025-05-13:22:18:31,408 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 49%|████▉     | 49/100 [00:00<00:00, 456.85it/s] 95%|█████████▌| 95/100 [00:00<00:00, 447.16it/s]100%|██████████| 100/100 [00:00<00:00, 458.75it/s]
2025-05-13:22:18:31,637 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 58%|█████▊    | 83/144 [00:00<00:00, 828.45it/s]100%|██████████| 144/144 [00:00<00:00, 831.18it/s]
2025-05-13:22:18:31,816 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 36%|███▌      | 84/235 [00:00<00:00, 832.58it/s] 71%|███████▏  | 168/235 [00:00<00:00, 822.77it/s]100%|██████████| 235/235 [00:00<00:00, 735.90it/s]
2025-05-13:22:18:32,144 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 37%|███▋      | 41/112 [00:00<00:00, 407.14it/s]100%|██████████| 112/112 [00:00<00:00, 568.23it/s]
2025-05-13:22:18:32,353 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 30%|███       | 82/270 [00:00<00:00, 812.11it/s] 61%|██████    | 164/270 [00:00<00:00, 800.57it/s] 91%|█████████ | 245/270 [00:00<00:00, 780.98it/s]100%|██████████| 270/270 [00:00<00:00, 788.51it/s]
2025-05-13:22:18:32,705 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 79%|███████▉  | 79/100 [00:00<00:00, 789.34it/s]100%|██████████| 100/100 [00:00<00:00, 799.34it/s]
2025-05-13:22:18:32,835 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 86%|████████▌ | 86/100 [00:00<00:00, 855.91it/s]100%|██████████| 100/100 [00:00<00:00, 851.04it/s]
2025-05-13:22:18:32,956 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 64%|██████▎   | 86/135 [00:00<00:00, 858.96it/s]100%|██████████| 135/135 [00:00<00:00, 857.72it/s]
2025-05-13:22:18:33,119 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 23%|██▎       | 87/378 [00:00<00:00, 860.92it/s] 46%|████▌     | 174/378 [00:00<00:00, 850.83it/s] 69%|██████▉   | 260/378 [00:00<00:00, 830.50it/s] 91%|█████████ | 344/378 [00:00<00:00, 620.78it/s]100%|██████████| 378/378 [00:00<00:00, 662.06it/s]
2025-05-13:22:18:33,703 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 29%|██▉       | 44/151 [00:00<00:00, 439.23it/s] 58%|█████▊    | 88/151 [00:00<00:00, 371.80it/s] 85%|████████▍ | 128/151 [00:00<00:00, 378.30it/s]100%|██████████| 151/151 [00:00<00:00, 390.51it/s]
2025-05-13:22:18:34,101 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 18%|█▊        | 39/216 [00:00<00:00, 358.55it/s] 39%|███▉      | 84/216 [00:00<00:00, 407.89it/s] 58%|█████▊    | 125/216 [00:00<00:00, 406.57it/s] 97%|█████████▋| 210/216 [00:00<00:00, 576.54it/s]100%|██████████| 216/216 [00:00<00:00, 514.57it/s]
2025-05-13:22:18:34,536 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 31%|███       | 82/265 [00:00<00:00, 819.69it/s] 62%|██████▏   | 164/265 [00:00<00:00, 767.07it/s] 91%|█████████ | 241/265 [00:00<00:00, 758.80it/s]100%|██████████| 265/265 [00:00<00:00, 769.17it/s]
2025-05-13:22:18:34,890 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 82%|████████▏ | 82/100 [00:00<00:00, 813.13it/s]100%|██████████| 100/100 [00:00<00:00, 820.18it/s]
2025-05-13:22:18:35,016 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 58%|█████▊    | 60/103 [00:00<00:00, 581.60it/s]100%|██████████| 103/103 [00:00<00:00, 534.52it/s]
2025-05-13:22:18:35,214 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 11%|█▏        | 35/306 [00:00<00:00, 327.52it/s] 22%|██▏       | 68/306 [00:00<00:00, 266.21it/s] 32%|███▏      | 97/306 [00:00<00:00, 271.40it/s] 46%|████▌     | 140/306 [00:00<00:00, 327.97it/s] 60%|██████    | 185/306 [00:00<00:00, 365.91it/s] 80%|████████  | 245/306 [00:00<00:00, 441.60it/s]100%|██████████| 306/306 [00:00<00:00, 414.08it/s]
2025-05-13:22:18:35,971 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 49%|████▊     | 84/173 [00:00<00:00, 837.26it/s] 97%|█████████▋| 168/173 [00:00<00:00, 678.73it/s]100%|██████████| 173/173 [00:00<00:00, 700.09it/s]
2025-05-13:22:18:36,225 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 29%|██▉       | 48/166 [00:00<00:00, 475.19it/s] 78%|███████▊  | 130/166 [00:00<00:00, 674.84it/s]100%|██████████| 166/166 [00:00<00:00, 643.37it/s]
2025-05-13:22:18:36,497 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 17%|█▋        | 45/272 [00:00<00:00, 449.62it/s] 35%|███▍      | 95/272 [00:00<00:00, 468.37it/s] 52%|█████▏    | 142/272 [00:00<00:00, 466.07it/s] 71%|███████   | 192/272 [00:00<00:00, 478.89it/s] 89%|████████▉ | 242/272 [00:00<00:00, 485.36it/s]100%|██████████| 272/272 [00:00<00:00, 477.54it/s]
2025-05-13:22:18:37,089 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s]  6%|▌         | 45/783 [00:00<00:01, 419.66it/s] 11%|█▏        | 90/783 [00:00<00:01, 436.78it/s] 17%|█▋        | 134/783 [00:00<00:01, 435.94it/s] 23%|██▎       | 178/783 [00:00<00:01, 413.35it/s] 28%|██▊       | 220/783 [00:00<00:01, 407.20it/s] 34%|███▍      | 269/783 [00:00<00:01, 433.02it/s] 40%|████      | 315/783 [00:00<00:01, 441.19it/s] 46%|████▌     | 362/783 [00:00<00:00, 449.92it/s] 53%|█████▎    | 412/783 [00:00<00:00, 460.41it/s] 59%|█████▉    | 464/783 [00:01<00:00, 477.49it/s] 65%|██████▌   | 512/783 [00:01<00:00, 477.48it/s] 72%|███████▏  | 563/783 [00:01<00:00, 480.81it/s] 78%|███████▊  | 612/783 [00:01<00:00, 452.74it/s] 84%|████████▍ | 658/783 [00:01<00:00, 418.92it/s] 90%|█████████ | 705/783 [00:01<00:00, 427.45it/s] 96%|█████████▌| 752/783 [00:01<00:00, 438.98it/s]100%|██████████| 783/783 [00:01<00:00, 444.89it/s]
2025-05-13:22:18:38,888 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 51%|█████     | 51/100 [00:00<00:00, 507.84it/s]100%|██████████| 100/100 [00:00<00:00, 488.64it/s]
2025-05-13:22:18:39,098 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 49%|████▉     | 49/100 [00:00<00:00, 472.91it/s] 97%|█████████▋| 97/100 [00:00<00:00, 355.37it/s]100%|██████████| 100/100 [00:00<00:00, 375.00it/s]
2025-05-13:22:18:39,381 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 15%|█▌        | 43/282 [00:00<00:00, 426.62it/s] 30%|███       | 86/282 [00:00<00:00, 419.35it/s] 48%|████▊     | 134/282 [00:00<00:00, 444.83it/s] 64%|██████▍   | 180/282 [00:00<00:00, 444.25it/s] 80%|███████▉  | 225/282 [00:00<00:00, 442.77it/s] 97%|█████████▋| 274/282 [00:00<00:00, 456.84it/s]100%|██████████| 282/282 [00:00<00:00, 448.83it/s]
2025-05-13:22:18:40,024 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:04, 45.45it/s] 27%|██▋       | 64/234 [00:00<00:01, 148.40it/s] 46%|████▌     | 107/234 [00:00<00:00, 221.09it/s] 64%|██████▎   | 149/234 [00:00<00:00, 275.32it/s] 89%|████████▉ | 209/234 [00:00<00:00, 359.88it/s]100%|██████████| 234/234 [00:00<00:00, 264.61it/s]
2025-05-13:22:18:40,929 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 19%|█▉        | 42/223 [00:00<00:00, 397.81it/s] 39%|███▉      | 88/223 [00:00<00:00, 419.92it/s] 62%|██████▏   | 138/223 [00:00<00:00, 453.71it/s] 83%|████████▎ | 184/223 [00:00<00:00, 421.39it/s]100%|██████████| 223/223 [00:00<00:00, 447.79it/s]
2025-05-13:22:18:41,435 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 68%|██████▊   | 75/110 [00:00<00:00, 744.73it/s]100%|██████████| 110/110 [00:00<00:00, 767.73it/s]
2025-05-13:22:18:41,583 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 40%|███▉      | 80/201 [00:00<00:00, 751.79it/s] 78%|███████▊  | 156/201 [00:00<00:00, 540.10it/s]100%|██████████| 201/201 [00:00<00:00, 538.91it/s]
2025-05-13:22:18:41,970 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 25%|██▍       | 49/198 [00:00<00:00, 489.20it/s] 66%|██████▌   | 130/198 [00:00<00:00, 675.30it/s]100%|██████████| 198/198 [00:00<00:00, 694.06it/s]
2025-05-13:22:18:42,268 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 28%|██▊       | 69/245 [00:00<00:00, 689.63it/s] 56%|█████▋    | 138/245 [00:00<00:00, 497.37it/s] 78%|███████▊  | 191/245 [00:00<00:00, 473.89it/s] 98%|█████████▊| 240/245 [00:00<00:00, 467.32it/s]100%|██████████| 245/245 [00:00<00:00, 484.36it/s]
2025-05-13:22:18:42,784 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s]  8%|▊         | 45/545 [00:00<00:01, 445.40it/s] 17%|█▋        | 90/545 [00:00<00:01, 398.36it/s] 24%|██▍       | 131/545 [00:00<00:01, 310.79it/s] 30%|███       | 164/545 [00:00<00:01, 304.07it/s] 39%|███▉      | 214/545 [00:00<00:00, 363.61it/s] 47%|████▋     | 257/545 [00:00<00:00, 381.18it/s] 57%|█████▋    | 309/545 [00:00<00:00, 418.11it/s] 66%|██████▌   | 357/545 [00:00<00:00, 432.78it/s] 74%|███████▍  | 404/545 [00:01<00:00, 443.39it/s] 82%|████████▏ | 449/545 [00:01<00:00, 441.39it/s] 91%|█████████ | 497/545 [00:01<00:00, 445.18it/s]100%|██████████| 545/545 [00:01<00:00, 411.92it/s]
2025-05-13:22:18:44,151 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 44%|████▍     | 44/100 [00:00<00:00, 434.90it/s] 89%|████████▉ | 89/100 [00:00<00:00, 438.69it/s]100%|██████████| 100/100 [00:00<00:00, 437.64it/s]
2025-05-13:22:18:44,384 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 11%|█         | 42/390 [00:00<00:00, 401.47it/s] 22%|██▏       | 86/390 [00:00<00:00, 418.10it/s] 33%|███▎      | 130/390 [00:00<00:00, 426.04it/s] 45%|████▍     | 175/390 [00:00<00:00, 431.41it/s] 57%|█████▋    | 221/390 [00:00<00:00, 436.47it/s] 68%|██████▊   | 267/390 [00:00<00:00, 439.61it/s] 80%|███████▉  | 311/390 [00:00<00:00, 438.42it/s] 91%|█████████ | 355/390 [00:00<00:00, 414.23it/s]100%|██████████| 390/390 [00:00<00:00, 428.67it/s]
2025-05-13:22:18:45,350 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 18%|█▊        | 42/238 [00:00<00:00, 402.26it/s] 36%|███▌      | 86/238 [00:00<00:00, 423.06it/s] 55%|█████▍    | 130/238 [00:00<00:00, 429.65it/s] 76%|███████▌  | 180/238 [00:00<00:00, 456.60it/s]100%|██████████| 238/238 [00:00<00:00, 504.49it/s]
2025-05-13:22:18:45,837 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 78%|███████▊  | 89/114 [00:00<00:00, 887.29it/s]100%|██████████| 114/114 [00:00<00:00, 886.80it/s]
2025-05-13:22:18:45,970 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 15%|█▍        | 90/612 [00:00<00:00, 890.01it/s] 29%|██▉       | 180/612 [00:00<00:00, 890.46it/s] 44%|████▍     | 270/612 [00:00<00:00, 888.74it/s] 59%|█████▊    | 359/612 [00:00<00:00, 885.29it/s] 73%|███████▎  | 448/612 [00:00<00:00, 883.58it/s] 88%|████████▊ | 537/612 [00:00<00:00, 882.40it/s]100%|██████████| 612/612 [00:00<00:00, 873.53it/s]
2025-05-13:22:18:46,690 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 67%|██████▋   | 88/131 [00:00<00:00, 876.13it/s]100%|██████████| 131/131 [00:00<00:00, 878.05it/s]
2025-05-13:22:18:46,844 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 45%|████▍     | 86/193 [00:00<00:00, 859.30it/s] 90%|█████████ | 174/193 [00:00<00:00, 869.16it/s]100%|██████████| 193/193 [00:00<00:00, 866.51it/s]
2025-05-13:22:18:47,073 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s] 10%|▉         | 87/895 [00:00<00:00, 867.75it/s] 19%|█▉        | 174/895 [00:00<00:00, 862.43it/s] 29%|██▉       | 262/895 [00:00<00:00, 868.45it/s] 39%|███▉      | 349/895 [00:00<00:00, 814.31it/s] 48%|████▊     | 431/895 [00:00<00:00, 766.77it/s] 58%|█████▊    | 518/895 [00:00<00:00, 798.82it/s] 68%|██████▊   | 605/895 [00:00<00:00, 820.10it/s] 77%|███████▋  | 692/895 [00:00<00:00, 833.36it/s] 87%|████████▋ | 777/895 [00:00<00:00, 836.27it/s] 96%|█████████▋| 862/895 [00:01<00:00, 837.89it/s]100%|██████████| 895/895 [00:01<00:00, 828.83it/s]
2025-05-13:22:18:48,181 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 35%|███▌      | 84/237 [00:00<00:00, 839.51it/s] 72%|███████▏  | 170/237 [00:00<00:00, 848.70it/s]100%|██████████| 237/237 [00:00<00:00, 847.71it/s]
2025-05-13:22:18:48,470 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 53%|█████▎    | 87/165 [00:00<00:00, 867.47it/s]100%|██████████| 165/165 [00:00<00:00, 868.82it/s]
2025-05-13:22:18:48,667 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 28%|██▊       | 88/311 [00:00<00:00, 871.82it/s] 57%|█████▋    | 176/311 [00:00<00:00, 856.03it/s] 84%|████████▍ | 262/311 [00:00<00:00, 855.87it/s]100%|██████████| 311/311 [00:00<00:00, 854.55it/s]
2025-05-13:22:18:49,041 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 25%|██▍       | 86/346 [00:00<00:00, 854.10it/s] 50%|████▉     | 172/346 [00:00<00:00, 847.94it/s] 75%|███████▍  | 259/346 [00:00<00:00, 857.30it/s]100%|██████████| 346/346 [00:00<00:00, 859.03it/s]
2025-05-13:22:18:49,456 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 42%|████▏     | 85/204 [00:00<00:00, 841.08it/s] 85%|████████▍ | 173/204 [00:00<00:00, 860.66it/s]100%|██████████| 204/204 [00:00<00:00, 859.63it/s]
2025-05-13:22:18:49,701 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 74%|███████▎  | 89/121 [00:00<00:00, 882.10it/s]100%|██████████| 121/121 [00:00<00:00, 880.99it/s]
2025-05-13:22:18:49,843 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  6%|▌         | 87/1534 [00:00<00:01, 860.72it/s] 11%|█▏        | 174/1534 [00:00<00:01, 861.36it/s] 17%|█▋        | 262/1534 [00:00<00:01, 865.80it/s] 23%|██▎       | 349/1534 [00:00<00:01, 864.79it/s] 28%|██▊       | 436/1534 [00:00<00:01, 864.48it/s] 34%|███▍      | 523/1534 [00:00<00:01, 858.55it/s] 40%|███▉      | 609/1534 [00:00<00:01, 858.94it/s] 45%|████▌     | 696/1534 [00:00<00:00, 862.10it/s] 51%|█████     | 784/1534 [00:00<00:00, 865.19it/s] 57%|█████▋    | 872/1534 [00:01<00:00, 866.90it/s] 63%|██████▎   | 959/1534 [00:01<00:00, 867.19it/s] 68%|██████▊   | 1047/1534 [00:01<00:00, 868.64it/s] 74%|███████▍  | 1134/1534 [00:01<00:00, 863.16it/s] 80%|███████▉  | 1221/1534 [00:01<00:00, 864.09it/s] 85%|████████▌ | 1308/1534 [00:01<00:00, 861.55it/s] 91%|█████████ | 1395/1534 [00:01<00:00, 862.29it/s] 97%|█████████▋| 1482/1534 [00:01<00:00, 859.11it/s]100%|██████████| 1534/1534 [00:01<00:00, 861.96it/s]
2025-05-13:22:18:51,673 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 50%|█████     | 86/171 [00:00<00:00, 856.36it/s]100%|██████████| 171/171 [00:00<00:00, 854.91it/s]
2025-05-13:22:18:51,879 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 80%|███████▉  | 86/108 [00:00<00:00, 856.45it/s]100%|██████████| 108/108 [00:00<00:00, 858.37it/s]
2025-05-13:22:18:52,010 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 68%|██████▊   | 86/126 [00:00<00:00, 857.23it/s]100%|██████████| 126/126 [00:00<00:00, 857.46it/s]
2025-05-13:22:18:52,162 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 27%|██▋       | 86/324 [00:00<00:00, 858.09it/s] 53%|█████▎    | 172/324 [00:00<00:00, 326.53it/s] 80%|███████▉  | 258/324 [00:00<00:00, 454.40it/s]100%|██████████| 324/324 [00:00<00:00, 493.94it/s]
2025-05-13:22:18:52,828 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 52%|█████▏    | 85/163 [00:00<00:00, 845.94it/s]100%|██████████| 163/163 [00:00<00:00, 843.10it/s]
2025-05-13:22:18:53,028 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<41:03:14,  2.63s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:03<44:15, 21.13it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:04<26:13, 35.62it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:05<20:01, 46.59it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:06<16:58, 54.89it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:07<15:09, 61.41it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:08<13:55, 66.80it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:08<13:03, 71.10it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:09<12:19, 75.29it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:10<11:49, 78.31it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:11<11:23, 81.22it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:11<11:04, 83.44it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:12<10:47, 85.50it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:13<10:35, 87.12it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:13<10:17, 89.53it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:14<10:05, 91.17it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:15<09:53, 92.85it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:15<09:41, 94.71it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:16<09:31, 96.21it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:17<09:21, 97.85it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:17<09:13, 99.08it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:18<09:11, 99.39it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:19<09:09, 99.63it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:19<08:59, 101.40it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:20<08:50, 103.08it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:20<08:41, 104.62it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:21<08:30, 106.72it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:21<08:22, 108.26it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:22<08:16, 109.45it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:23<08:15, 109.66it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:23<08:10, 110.67it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:24<08:08, 110.91it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:24<08:02, 112.26it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:25<08:03, 111.79it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:25<07:57, 113.12it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:26<07:53, 113.97it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:27<07:53, 113.68it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:27<07:49, 114.52it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:28<07:47, 115.06it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:28<07:41, 116.31it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:29<07:40, 116.42it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:29<07:39, 116.55it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:30<07:34, 117.59it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:30<07:31, 118.35it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:31<07:28, 119.03it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:31<07:19, 121.29it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:32<07:15, 122.12it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:32<07:13, 122.68it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:33<07:07, 124.31it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:33<07:05, 124.57it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:34<07:01, 125.76it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:34<06:57, 126.72it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:35<06:55, 127.31it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:35<06:51, 128.39it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:36<06:47, 129.26it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:36<06:44, 129.99it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:37<06:42, 130.66it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:37<06:44, 129.75it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:38<06:45, 129.23it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:38<06:41, 130.62it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:39<06:41, 130.27it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:39<06:36, 131.90it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:40<06:35, 132.10it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:40<06:30, 133.42it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:41<06:27, 134.54it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:41<06:24, 135.41it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:42<06:21, 136.11it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:42<06:19, 136.72it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:43<06:17, 137.10it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:43<06:20, 136.09it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:44<06:20, 135.98it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:44<06:19, 136.15it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:44<06:18, 136.35it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:45<06:12, 138.08it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:45<06:16, 136.78it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:46<06:11, 138.42it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:46<06:11, 138.23it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:47<06:07, 139.33it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:47<06:01, 141.42it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:48<05:57, 143.12it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:48<05:53, 144.35it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:49<05:49, 146.01it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:49<05:42, 148.56it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:49<05:37, 150.63it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:50<05:33, 152.28it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:50<05:30, 153.34it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:51<05:28, 154.15it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:51<05:26, 155.03it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:51<05:24, 155.56it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:52<05:23, 156.10it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:52<05:22, 156.54it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:53<05:21, 156.81it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:53<05:17, 158.12it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:53<05:15, 159.12it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:54<05:13, 159.81it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:54<05:12, 160.31it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:55<05:11, 160.73it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:55<05:10, 161.06it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:55<05:09, 161.45it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:56<05:07, 161.94it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:56<05:06, 162.41it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:57<05:05, 162.63it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:57<05:04, 162.92it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:57<05:03, 163.26it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:58<05:02, 163.53it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:58<05:01, 163.80it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:59<05:01, 163.97it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:59<04:58, 165.32it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:59<04:56, 166.32it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [01:00<04:54, 167.17it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [01:00<04:52, 167.88it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [01:00<04:51, 168.50it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [01:01<04:50, 168.88it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [01:01<04:41, 173.84it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [01:01<04:35, 177.48it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [01:02<04:30, 180.17it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [01:02<04:27, 182.32it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [01:02<04:24, 183.85it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [01:03<04:22, 185.23it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [01:03<04:20, 186.67it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:03<04:18, 187.68it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:04<04:16, 188.45it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:04<04:15, 189.23it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:04<04:14, 189.97it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:05<04:12, 190.70it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:05<04:11, 191.18it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:05<04:09, 192.65it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:06<04:07, 193.94it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:06<04:06, 194.86it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:06<04:04, 195.66it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:07<04:03, 196.37it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:07<04:02, 196.82it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:07<04:01, 197.62it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:08<03:59, 198.75it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:08<03:58, 199.54it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:08<03:57, 200.21it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:09<03:56, 201.00it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:09<03:54, 201.71it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:09<03:54, 202.14it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:10<03:51, 204.04it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:10<03:49, 205.51it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:10<03:48, 206.51it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:11<03:46, 207.45it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:11<03:45, 208.21it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:11<03:44, 208.89it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:11<03:44, 209.30it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:12<03:43, 209.96it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:12<03:41, 210.80it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:12<03:40, 211.32it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:13<03:39, 212.91it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:13<03:37, 213.91it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:13<03:36, 214.86it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:14<03:35, 215.79it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:14<03:32, 218.08it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:14<03:31, 219.41it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:14<03:29, 220.83it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:15<03:27, 222.13it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:15<03:26, 223.21it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:15<03:25, 224.02it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:16<03:24, 224.74it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:16<03:23, 225.15it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:16<03:19, 229.79it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:16<03:16, 233.54it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:17<03:13, 235.84it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:17<03:12, 237.87it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:17<03:10, 239.50it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:17<03:08, 241.00it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:18<03:08, 241.77it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:18<03:07, 242.60it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:18<03:06, 243.01it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:18<03:04, 246.11it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:19<03:02, 248.47it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:19<03:00, 249.88it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:19<02:59, 251.24it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:19<02:58, 252.38it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:20<02:57, 252.70it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:20<02:56, 253.71it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:20<02:56, 253.98it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:20<02:56, 254.19it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:21<02:55, 254.88it/s]Running loglikelihood requests:  21%|██        | 11525/56168 [01:21<02:51, 260.39it/s]Running loglikelihood requests:  21%|██        | 11589/56168 [01:21<02:51, 260.15it/s]Running loglikelihood requests:  21%|██        | 11653/56168 [01:21<02:51, 259.88it/s]Running loglikelihood requests:  21%|██        | 11717/56168 [01:22<02:50, 260.33it/s]Running loglikelihood requests:  21%|██        | 11781/56168 [01:22<02:50, 260.28it/s]Running loglikelihood requests:  21%|██        | 11845/56168 [01:22<02:50, 260.27it/s]Running loglikelihood requests:  21%|██        | 11909/56168 [01:22<02:49, 260.70it/s]Running loglikelihood requests:  21%|██▏       | 11973/56168 [01:23<02:49, 260.92it/s]Running loglikelihood requests:  21%|██▏       | 12037/56168 [01:23<02:49, 260.81it/s]Running loglikelihood requests:  22%|██▏       | 12101/56168 [01:23<02:48, 261.08it/s]Running loglikelihood requests:  22%|██▏       | 12165/56168 [01:23<02:48, 261.25it/s]Running loglikelihood requests:  22%|██▏       | 12229/56168 [01:24<02:47, 262.15it/s]Running loglikelihood requests:  22%|██▏       | 12293/56168 [01:24<02:45, 265.14it/s]Running loglikelihood requests:  22%|██▏       | 12357/56168 [01:24<02:44, 266.86it/s]Running loglikelihood requests:  22%|██▏       | 12421/56168 [01:24<02:42, 268.40it/s]Running loglikelihood requests:  22%|██▏       | 12485/56168 [01:25<02:41, 269.82it/s]Running loglikelihood requests:  22%|██▏       | 12549/56168 [01:25<02:41, 270.48it/s]Running loglikelihood requests:  22%|██▏       | 12613/56168 [01:25<02:40, 271.11it/s]Running loglikelihood requests:  23%|██▎       | 12677/56168 [01:25<02:39, 272.00it/s]Running loglikelihood requests:  23%|██▎       | 12741/56168 [01:26<02:39, 272.42it/s]Running loglikelihood requests:  23%|██▎       | 12805/56168 [01:26<02:38, 273.50it/s]Running loglikelihood requests:  23%|██▎       | 12869/56168 [01:26<02:37, 274.11it/s]Running loglikelihood requests:  23%|██▎       | 12933/56168 [01:26<02:38, 272.10it/s]Running loglikelihood requests:  23%|██▎       | 12997/56168 [01:26<02:38, 271.91it/s]Running loglikelihood requests:  23%|██▎       | 13061/56168 [01:27<02:39, 270.70it/s]Running loglikelihood requests:  23%|██▎       | 13125/56168 [01:27<02:40, 268.36it/s]Running loglikelihood requests:  23%|██▎       | 13189/56168 [01:27<02:39, 269.07it/s]Running loglikelihood requests:  24%|██▎       | 13253/56168 [01:27<02:40, 266.63it/s]Running loglikelihood requests:  24%|██▎       | 13317/56168 [01:28<02:39, 268.14it/s]Running loglikelihood requests:  24%|██▍       | 13381/56168 [01:28<02:38, 269.10it/s]Running loglikelihood requests:  24%|██▍       | 13445/56168 [01:28<02:38, 270.00it/s]Running loglikelihood requests:  24%|██▍       | 13509/56168 [01:28<02:35, 275.04it/s]Running loglikelihood requests:  24%|██▍       | 13573/56168 [01:29<02:32, 278.84it/s]Running loglikelihood requests:  24%|██▍       | 13637/56168 [01:29<02:32, 279.49it/s]Running loglikelihood requests:  24%|██▍       | 13701/56168 [01:29<02:32, 279.33it/s]Running loglikelihood requests:  25%|██▍       | 13765/56168 [01:29<02:31, 279.93it/s]Running loglikelihood requests:  25%|██▍       | 13829/56168 [01:30<02:32, 278.53it/s]Running loglikelihood requests:  25%|██▍       | 13893/56168 [01:30<02:33, 276.20it/s]Running loglikelihood requests:  25%|██▍       | 13957/56168 [01:30<02:31, 278.58it/s]Running loglikelihood requests:  25%|██▍       | 14021/56168 [01:30<02:29, 282.41it/s]Running loglikelihood requests:  25%|██▌       | 14085/56168 [01:30<02:28, 283.83it/s]Running loglikelihood requests:  25%|██▌       | 14149/56168 [01:31<02:27, 284.50it/s]Running loglikelihood requests:  25%|██▌       | 14213/56168 [01:31<02:28, 283.18it/s]Running loglikelihood requests:  25%|██▌       | 14277/56168 [01:31<02:26, 285.80it/s]Running loglikelihood requests:  26%|██▌       | 14341/56168 [01:31<02:25, 287.88it/s]Running loglikelihood requests:  26%|██▌       | 14405/56168 [01:32<02:24, 289.35it/s]Running loglikelihood requests:  26%|██▌       | 14469/56168 [01:32<02:23, 290.33it/s]Running loglikelihood requests:  26%|██▌       | 14533/56168 [01:32<02:22, 291.18it/s]Running loglikelihood requests:  26%|██▌       | 14597/56168 [01:32<02:22, 291.90it/s]Running loglikelihood requests:  26%|██▌       | 14661/56168 [01:32<02:22, 292.04it/s]Running loglikelihood requests:  26%|██▌       | 14725/56168 [01:33<02:21, 292.66it/s]Running loglikelihood requests:  26%|██▋       | 14789/56168 [01:33<02:21, 292.85it/s]Running loglikelihood requests:  26%|██▋       | 14853/56168 [01:33<02:20, 293.33it/s]Running loglikelihood requests:  27%|██▋       | 14917/56168 [01:33<02:20, 293.10it/s]Running loglikelihood requests:  27%|██▋       | 14981/56168 [01:33<02:20, 292.88it/s]Running loglikelihood requests:  27%|██▋       | 15045/56168 [01:34<02:20, 292.62it/s]Running loglikelihood requests:  27%|██▋       | 15109/56168 [01:34<02:20, 293.10it/s]Running loglikelihood requests:  27%|██▋       | 15173/56168 [01:34<02:19, 293.56it/s]Running loglikelihood requests:  27%|██▋       | 15237/56168 [01:34<02:19, 293.63it/s]Running loglikelihood requests:  27%|██▋       | 15301/56168 [01:35<02:19, 293.72it/s]Running loglikelihood requests:  27%|██▋       | 15365/56168 [01:35<02:18, 293.57it/s]Running loglikelihood requests:  27%|██▋       | 15429/56168 [01:35<02:18, 293.64it/s]Running loglikelihood requests:  28%|██▊       | 15493/56168 [01:35<02:17, 296.14it/s]Running loglikelihood requests:  28%|██▊       | 15557/56168 [01:35<02:16, 297.66it/s]Running loglikelihood requests:  28%|██▊       | 15621/56168 [01:36<02:15, 298.93it/s]Running loglikelihood requests:  28%|██▊       | 15685/56168 [01:36<02:15, 299.58it/s]Running loglikelihood requests:  28%|██▊       | 15749/56168 [01:36<02:14, 299.98it/s]Running loglikelihood requests:  28%|██▊       | 15813/56168 [01:36<02:14, 300.40it/s]Running loglikelihood requests:  28%|██▊       | 15877/56168 [01:36<02:13, 301.81it/s]Running loglikelihood requests:  28%|██▊       | 15945/56168 [01:37<02:10, 308.13it/s]Running loglikelihood requests:  29%|██▊       | 16009/56168 [01:37<02:10, 307.14it/s]Running loglikelihood requests:  29%|██▊       | 16073/56168 [01:37<02:11, 305.71it/s]Running loglikelihood requests:  29%|██▊       | 16137/56168 [01:37<02:11, 304.82it/s]Running loglikelihood requests:  29%|██▉       | 16201/56168 [01:38<02:11, 304.13it/s]Running loglikelihood requests:  29%|██▉       | 16265/56168 [01:38<02:11, 303.73it/s]Running loglikelihood requests:  29%|██▉       | 16329/56168 [01:38<02:11, 303.60it/s]Running loglikelihood requests:  29%|██▉       | 16393/56168 [01:38<02:11, 303.17it/s]Running loglikelihood requests:  29%|██▉       | 16457/56168 [01:38<02:10, 303.51it/s]Running loglikelihood requests:  29%|██▉       | 16521/56168 [01:39<02:10, 304.20it/s]Running loglikelihood requests:  30%|██▉       | 16585/56168 [01:39<02:10, 304.23it/s]Running loglikelihood requests:  30%|██▉       | 16649/56168 [01:39<02:10, 303.87it/s]Running loglikelihood requests:  30%|██▉       | 16713/56168 [01:39<02:09, 303.72it/s]Running loglikelihood requests:  30%|██▉       | 16777/56168 [01:39<02:09, 303.57it/s]Running loglikelihood requests:  30%|██▉       | 16841/56168 [01:40<02:09, 303.40it/s]Running loglikelihood requests:  30%|███       | 16905/56168 [01:40<02:09, 304.19it/s]Running loglikelihood requests:  30%|███       | 16969/56168 [01:40<02:08, 304.50it/s]Running loglikelihood requests:  30%|███       | 17033/56168 [01:40<02:08, 305.64it/s]Running loglikelihood requests:  30%|███       | 17097/56168 [01:40<02:07, 306.42it/s]Running loglikelihood requests:  31%|███       | 17161/56168 [01:41<02:07, 306.65it/s]Running loglikelihood requests:  31%|███       | 17225/56168 [01:41<02:07, 306.05it/s]Running loglikelihood requests:  31%|███       | 17289/56168 [01:41<02:06, 306.17it/s]Running loglikelihood requests:  31%|███       | 17353/56168 [01:41<02:06, 306.15it/s]Running loglikelihood requests:  31%|███       | 17417/56168 [01:42<02:06, 306.31it/s]Running loglikelihood requests:  31%|███       | 17481/56168 [01:42<02:06, 306.30it/s]Running loglikelihood requests:  31%|███       | 17545/56168 [01:42<02:06, 306.14it/s]Running loglikelihood requests:  31%|███▏      | 17609/56168 [01:42<02:05, 306.39it/s]Running loglikelihood requests:  31%|███▏      | 17673/56168 [01:42<02:05, 306.97it/s]Running loglikelihood requests:  32%|███▏      | 17737/56168 [01:43<02:04, 307.59it/s]Running loglikelihood requests:  32%|███▏      | 17801/56168 [01:43<02:04, 308.15it/s]Running loglikelihood requests:  32%|███▏      | 17865/56168 [01:43<02:04, 307.61it/s]Running loglikelihood requests:  32%|███▏      | 17929/56168 [01:43<02:04, 307.61it/s]Running loglikelihood requests:  32%|███▏      | 17993/56168 [01:43<02:04, 307.51it/s]Running loglikelihood requests:  32%|███▏      | 18057/56168 [01:44<02:03, 307.53it/s]Running loglikelihood requests:  32%|███▏      | 18121/56168 [01:44<02:03, 307.06it/s]Running loglikelihood requests:  32%|███▏      | 18185/56168 [01:44<02:03, 307.01it/s]Running loglikelihood requests:  32%|███▏      | 18249/56168 [01:44<02:03, 307.28it/s]Running loglikelihood requests:  33%|███▎      | 18313/56168 [01:44<02:02, 308.12it/s]Running loglikelihood requests:  33%|███▎      | 18377/56168 [01:45<02:02, 308.78it/s]Running loglikelihood requests:  33%|███▎      | 18441/56168 [01:45<02:02, 308.65it/s]Running loglikelihood requests:  33%|███▎      | 18505/56168 [01:45<02:01, 308.75it/s]Running loglikelihood requests:  33%|███▎      | 18569/56168 [01:45<02:01, 308.70it/s]Running loglikelihood requests:  33%|███▎      | 18633/56168 [01:45<02:01, 308.38it/s]Running loglikelihood requests:  33%|███▎      | 18697/56168 [01:46<02:01, 309.24it/s]Running loglikelihood requests:  33%|███▎      | 18761/56168 [01:46<02:00, 309.66it/s]Running loglikelihood requests:  34%|███▎      | 18829/56168 [01:46<01:58, 315.86it/s]Running loglikelihood requests:  34%|███▎      | 18893/56168 [01:46<01:58, 314.91it/s]Running loglikelihood requests:  34%|███▍      | 18957/56168 [01:47<01:58, 314.50it/s]Running loglikelihood requests:  34%|███▍      | 19021/56168 [01:47<01:58, 313.62it/s]Running loglikelihood requests:  34%|███▍      | 19085/56168 [01:47<01:58, 313.08it/s]Running loglikelihood requests:  34%|███▍      | 19149/56168 [01:47<01:58, 312.58it/s]Running loglikelihood requests:  34%|███▍      | 19213/56168 [01:47<01:58, 312.20it/s]Running loglikelihood requests:  34%|███▍      | 19277/56168 [01:48<01:58, 312.04it/s]Running loglikelihood requests:  34%|███▍      | 19341/56168 [01:48<01:58, 311.94it/s]Running loglikelihood requests:  35%|███▍      | 19405/56168 [01:48<01:57, 311.82it/s]Running loglikelihood requests:  35%|███▍      | 19469/56168 [01:48<01:57, 312.23it/s]Running loglikelihood requests:  35%|███▍      | 19533/56168 [01:48<01:57, 312.74it/s]Running loglikelihood requests:  35%|███▍      | 19597/56168 [01:49<01:56, 312.67it/s]Running loglikelihood requests:  35%|███▌      | 19661/56168 [01:49<01:56, 312.81it/s]Running loglikelihood requests:  35%|███▌      | 19725/56168 [01:49<01:56, 312.68it/s]Running loglikelihood requests:  35%|███▌      | 19789/56168 [01:49<01:56, 312.58it/s]Running loglikelihood requests:  35%|███▌      | 19853/56168 [01:49<01:56, 312.72it/s]Running loglikelihood requests:  35%|███▌      | 19917/56168 [01:50<01:55, 312.66it/s]Running loglikelihood requests:  36%|███▌      | 19981/56168 [01:50<01:55, 313.24it/s]Running loglikelihood requests:  36%|███▌      | 20045/56168 [01:50<01:55, 313.45it/s]Running loglikelihood requests:  36%|███▌      | 20113/56168 [01:50<01:52, 319.64it/s]Running loglikelihood requests:  36%|███▌      | 20177/56168 [01:50<01:52, 318.64it/s]Running loglikelihood requests:  36%|███▌      | 20241/56168 [01:51<01:52, 318.01it/s]Running loglikelihood requests:  36%|███▌      | 20305/56168 [01:51<01:52, 317.48it/s]Running loglikelihood requests:  36%|███▋      | 20369/56168 [01:51<01:52, 316.87it/s]Running loglikelihood requests:  36%|███▋      | 20433/56168 [01:51<01:52, 316.48it/s]Running loglikelihood requests:  36%|███▋      | 20497/56168 [01:51<01:52, 315.96it/s]Running loglikelihood requests:  37%|███▋      | 20561/56168 [01:52<01:52, 315.15it/s]Running loglikelihood requests:  37%|███▋      | 20625/56168 [01:52<01:52, 315.42it/s]Running loglikelihood requests:  37%|███▋      | 20689/56168 [01:52<01:52, 315.65it/s]Running loglikelihood requests:  37%|███▋      | 20757/56168 [01:52<01:50, 321.91it/s]Running loglikelihood requests:  37%|███▋      | 20821/56168 [01:52<01:50, 320.96it/s]Running loglikelihood requests:  37%|███▋      | 20885/56168 [01:53<01:50, 320.10it/s]Running loglikelihood requests:  37%|███▋      | 20949/56168 [01:53<01:50, 318.87it/s]Running loglikelihood requests:  37%|███▋      | 21013/56168 [01:53<01:50, 318.06it/s]Running loglikelihood requests:  38%|███▊      | 21077/56168 [01:53<01:50, 317.54it/s]Running loglikelihood requests:  38%|███▊      | 21141/56168 [01:53<01:50, 317.49it/s]Running loglikelihood requests:  38%|███▊      | 21205/56168 [01:54<01:50, 317.45it/s]Running loglikelihood requests:  38%|███▊      | 21269/56168 [01:54<01:49, 317.32it/s]Running loglikelihood requests:  38%|███▊      | 21333/56168 [01:54<01:49, 317.36it/s]Running loglikelihood requests:  38%|███▊      | 21401/56168 [01:54<01:47, 323.11it/s]Running loglikelihood requests:  38%|███▊      | 21465/56168 [01:54<01:47, 321.39it/s]Running loglikelihood requests:  38%|███▊      | 21529/56168 [01:55<01:44, 332.39it/s]Running loglikelihood requests:  38%|███▊      | 21593/56168 [01:55<01:41, 340.78it/s]Running loglikelihood requests:  39%|███▊      | 21657/56168 [01:55<01:39, 346.17it/s]Running loglikelihood requests:  39%|███▊      | 21721/56168 [01:55<01:38, 349.73it/s]Running loglikelihood requests:  39%|███▉      | 21785/56168 [01:55<01:37, 352.75it/s]Running loglikelihood requests:  39%|███▉      | 21849/56168 [01:56<01:36, 354.50it/s]Running loglikelihood requests:  39%|███▉      | 21913/56168 [01:56<01:36, 355.90it/s]Running loglikelihood requests:  39%|███▉      | 21977/56168 [01:56<01:35, 357.12it/s]Running loglikelihood requests:  39%|███▉      | 22041/56168 [01:56<01:35, 358.10it/s]Running loglikelihood requests:  39%|███▉      | 22105/56168 [01:56<01:34, 359.63it/s]Running loglikelihood requests:  39%|███▉      | 22169/56168 [01:56<01:34, 359.62it/s]Running loglikelihood requests:  40%|███▉      | 22233/56168 [01:57<01:34, 359.87it/s]Running loglikelihood requests:  40%|███▉      | 22297/56168 [01:57<01:33, 360.34it/s]Running loglikelihood requests:  40%|███▉      | 22361/56168 [01:57<01:33, 361.34it/s]Running loglikelihood requests:  40%|███▉      | 22425/56168 [01:57<01:32, 363.04it/s]Running loglikelihood requests:  40%|████      | 22489/56168 [01:57<01:32, 362.94it/s]Running loglikelihood requests:  40%|████      | 22553/56168 [01:57<01:32, 363.06it/s]Running loglikelihood requests:  40%|████      | 22617/56168 [01:58<01:32, 362.72it/s]Running loglikelihood requests:  40%|████      | 22681/56168 [01:58<01:32, 363.11it/s]Running loglikelihood requests:  40%|████      | 22745/56168 [01:58<01:32, 363.25it/s]Running loglikelihood requests:  41%|████      | 22813/56168 [01:58<01:30, 370.04it/s]Running loglikelihood requests:  41%|████      | 22877/56168 [01:58<01:30, 368.44it/s]Running loglikelihood requests:  41%|████      | 22945/56168 [01:59<01:28, 373.35it/s]Running loglikelihood requests:  41%|████      | 23009/56168 [01:59<01:29, 370.83it/s]Running loglikelihood requests:  41%|████      | 23073/56168 [01:59<01:29, 368.94it/s]Running loglikelihood requests:  41%|████      | 23137/56168 [01:59<01:29, 367.69it/s]Running loglikelihood requests:  41%|████▏     | 23201/56168 [01:59<01:29, 367.85it/s]Running loglikelihood requests:  41%|████▏     | 23265/56168 [01:59<01:29, 367.70it/s]Running loglikelihood requests:  42%|████▏     | 23329/56168 [02:00<01:29, 366.87it/s]Running loglikelihood requests:  42%|████▏     | 23393/56168 [02:00<01:29, 366.69it/s]Running loglikelihood requests:  42%|████▏     | 23457/56168 [02:00<01:29, 366.45it/s]Running loglikelihood requests:  42%|████▏     | 23521/56168 [02:00<01:29, 366.40it/s]Running loglikelihood requests:  42%|████▏     | 23585/56168 [02:00<01:28, 366.15it/s]Running loglikelihood requests:  42%|████▏     | 23649/56168 [02:00<01:28, 366.57it/s]Running loglikelihood requests:  42%|████▏     | 23713/56168 [02:01<01:28, 366.61it/s]Running loglikelihood requests:  42%|████▏     | 23777/56168 [02:01<01:28, 366.79it/s]Running loglikelihood requests:  42%|████▏     | 23841/56168 [02:01<01:28, 366.66it/s]Running loglikelihood requests:  43%|████▎     | 23905/56168 [02:01<01:27, 366.82it/s]Running loglikelihood requests:  43%|████▎     | 23969/56168 [02:01<01:27, 368.45it/s]Running loglikelihood requests:  43%|████▎     | 24033/56168 [02:01<01:26, 370.37it/s]Running loglikelihood requests:  43%|████▎     | 24097/56168 [02:02<01:26, 371.99it/s]Running loglikelihood requests:  43%|████▎     | 24161/56168 [02:02<01:25, 373.07it/s]Running loglikelihood requests:  43%|████▎     | 24225/56168 [02:02<01:25, 374.06it/s]Running loglikelihood requests:  43%|████▎     | 24289/56168 [02:02<01:24, 375.17it/s]Running loglikelihood requests:  43%|████▎     | 24353/56168 [02:02<01:24, 376.21it/s]Running loglikelihood requests:  43%|████▎     | 24417/56168 [02:02<01:24, 375.54it/s]Running loglikelihood requests:  44%|████▎     | 24481/56168 [02:03<01:24, 375.36it/s]Running loglikelihood requests:  44%|████▎     | 24545/56168 [02:03<01:24, 374.96it/s]Running loglikelihood requests:  44%|████▍     | 24609/56168 [02:03<01:24, 374.90it/s]Running loglikelihood requests:  44%|████▍     | 24673/56168 [02:03<01:23, 375.14it/s]Running loglikelihood requests:  44%|████▍     | 24737/56168 [02:03<01:23, 375.32it/s]Running loglikelihood requests:  44%|████▍     | 24801/56168 [02:04<01:23, 375.50it/s]Running loglikelihood requests:  44%|████▍     | 24865/56168 [02:04<01:23, 375.68it/s]Running loglikelihood requests:  44%|████▍     | 24933/56168 [02:04<01:21, 382.69it/s]Running loglikelihood requests:  45%|████▍     | 24997/56168 [02:04<01:21, 380.52it/s]Running loglikelihood requests:  45%|████▍     | 25061/56168 [02:04<01:21, 379.87it/s]Running loglikelihood requests:  45%|████▍     | 25125/56168 [02:04<01:21, 379.27it/s]Running loglikelihood requests:  45%|████▍     | 25189/56168 [02:05<01:21, 378.97it/s]Running loglikelihood requests:  45%|████▍     | 25253/56168 [02:05<01:21, 379.85it/s]Running loglikelihood requests:  45%|████▌     | 25317/56168 [02:05<01:21, 378.36it/s]Running loglikelihood requests:  45%|████▌     | 25381/56168 [02:05<01:21, 377.95it/s]Running loglikelihood requests:  45%|████▌     | 25445/56168 [02:05<01:21, 378.04it/s]Running loglikelihood requests:  45%|████▌     | 25509/56168 [02:05<01:21, 377.83it/s]Running loglikelihood requests:  46%|████▌     | 25573/56168 [02:06<01:20, 378.05it/s]Running loglikelihood requests:  46%|████▌     | 25637/56168 [02:06<01:20, 377.76it/s]Running loglikelihood requests:  46%|████▌     | 25701/56168 [02:06<01:20, 378.20it/s]Running loglikelihood requests:  46%|████▌     | 25765/56168 [02:06<01:20, 378.29it/s]Running loglikelihood requests:  46%|████▌     | 25829/56168 [02:06<01:20, 378.76it/s]Running loglikelihood requests:  46%|████▌     | 25893/56168 [02:06<01:19, 379.71it/s]Running loglikelihood requests:  46%|████▌     | 25957/56168 [02:07<01:19, 380.09it/s]Running loglikelihood requests:  46%|████▋     | 26021/56168 [02:07<01:19, 380.06it/s]Running loglikelihood requests:  46%|████▋     | 26085/56168 [02:07<01:19, 380.08it/s]Running loglikelihood requests:  47%|████▋     | 26149/56168 [02:07<01:18, 381.08it/s]Running loglikelihood requests:  47%|████▋     | 26213/56168 [02:07<01:18, 382.43it/s]Running loglikelihood requests:  47%|████▋     | 26277/56168 [02:07<01:17, 384.04it/s]Running loglikelihood requests:  47%|████▋     | 26341/56168 [02:08<01:17, 385.35it/s]Running loglikelihood requests:  47%|████▋     | 26405/56168 [02:08<01:17, 385.68it/s]Running loglikelihood requests:  47%|████▋     | 26469/56168 [02:08<01:17, 385.48it/s]Running loglikelihood requests:  47%|████▋     | 26533/56168 [02:08<01:16, 385.06it/s]Running loglikelihood requests:  47%|████▋     | 26597/56168 [02:08<01:16, 385.38it/s]Running loglikelihood requests:  47%|████▋     | 26661/56168 [02:08<01:16, 385.92it/s]Running loglikelihood requests:  48%|████▊     | 26725/56168 [02:09<01:16, 385.42it/s]Running loglikelihood requests:  48%|████▊     | 26789/56168 [02:09<01:16, 384.18it/s]Running loglikelihood requests:  48%|████▊     | 26853/56168 [02:09<01:16, 384.53it/s]Running loglikelihood requests:  48%|████▊     | 26917/56168 [02:09<01:16, 384.34it/s]Running loglikelihood requests:  48%|████▊     | 26981/56168 [02:09<01:16, 383.67it/s]Running loglikelihood requests:  48%|████▊     | 27045/56168 [02:09<01:16, 383.04it/s]Running loglikelihood requests:  48%|████▊     | 27109/56168 [02:10<01:14, 388.81it/s]Running loglikelihood requests:  48%|████▊     | 27173/56168 [02:10<01:13, 393.10it/s]Running loglikelihood requests:  48%|████▊     | 27237/56168 [02:10<01:13, 396.11it/s]Running loglikelihood requests:  49%|████▊     | 27301/56168 [02:10<01:12, 398.42it/s]Running loglikelihood requests:  49%|████▊     | 27365/56168 [02:10<01:12, 399.25it/s]Running loglikelihood requests:  49%|████▉     | 27429/56168 [02:10<01:11, 399.95it/s]Running loglikelihood requests:  49%|████▉     | 27493/56168 [02:11<01:11, 401.01it/s]Running loglikelihood requests:  49%|████▉     | 27557/56168 [02:11<01:11, 402.25it/s]Running loglikelihood requests:  49%|████▉     | 27621/56168 [02:11<01:10, 403.91it/s]Running loglikelihood requests:  49%|████▉     | 27685/56168 [02:11<01:10, 405.67it/s]Running loglikelihood requests:  49%|████▉     | 27753/56168 [02:11<01:08, 414.10it/s]Running loglikelihood requests:  50%|████▉     | 27817/56168 [02:11<01:08, 412.48it/s]Running loglikelihood requests:  50%|████▉     | 27881/56168 [02:11<01:08, 411.52it/s]Running loglikelihood requests:  50%|████▉     | 27945/56168 [02:12<01:08, 410.64it/s]Running loglikelihood requests:  50%|████▉     | 28009/56168 [02:12<01:08, 410.23it/s]Running loglikelihood requests:  50%|████▉     | 28073/56168 [02:12<01:08, 410.15it/s]Running loglikelihood requests:  50%|█████     | 28141/56168 [02:12<01:07, 417.53it/s]Running loglikelihood requests:  50%|█████     | 28205/56168 [02:12<01:07, 414.37it/s]Running loglikelihood requests:  50%|█████     | 28269/56168 [02:12<01:07, 411.60it/s]Running loglikelihood requests:  50%|█████     | 28333/56168 [02:13<01:07, 410.00it/s]Running loglikelihood requests:  51%|█████     | 28397/56168 [02:13<01:07, 409.15it/s]Running loglikelihood requests:  51%|█████     | 28461/56168 [02:13<01:07, 408.16it/s]Running loglikelihood requests:  51%|█████     | 28525/56168 [02:13<01:07, 407.93it/s]Running loglikelihood requests:  51%|█████     | 28589/56168 [02:13<01:07, 408.06it/s]Running loglikelihood requests:  51%|█████     | 28653/56168 [02:13<01:07, 408.05it/s]Running loglikelihood requests:  51%|█████     | 28717/56168 [02:13<01:07, 407.98it/s]Running loglikelihood requests:  51%|█████     | 28781/56168 [02:14<01:07, 408.34it/s]Running loglikelihood requests:  51%|█████▏    | 28845/56168 [02:14<01:06, 408.16it/s]Running loglikelihood requests:  51%|█████▏    | 28909/56168 [02:14<01:06, 407.62it/s]Running loglikelihood requests:  52%|█████▏    | 28973/56168 [02:14<01:06, 408.59it/s]Running loglikelihood requests:  52%|█████▏    | 29037/56168 [02:14<01:06, 409.80it/s]Running loglikelihood requests:  52%|█████▏    | 29101/56168 [02:14<01:05, 411.09it/s]Running loglikelihood requests:  52%|█████▏    | 29165/56168 [02:15<01:05, 411.43it/s]Running loglikelihood requests:  52%|█████▏    | 29229/56168 [02:15<01:05, 411.74it/s]Running loglikelihood requests:  52%|█████▏    | 29293/56168 [02:15<01:05, 411.89it/s]Running loglikelihood requests:  52%|█████▏    | 29357/56168 [02:15<01:05, 411.37it/s]Running loglikelihood requests:  52%|█████▏    | 29421/56168 [02:15<01:04, 412.23it/s]Running loglikelihood requests:  52%|█████▏    | 29485/56168 [02:15<01:04, 412.39it/s]Running loglikelihood requests:  53%|█████▎    | 29549/56168 [02:16<01:04, 412.58it/s]Running loglikelihood requests:  53%|█████▎    | 29613/56168 [02:16<01:04, 412.09it/s]Running loglikelihood requests:  53%|█████▎    | 29681/56168 [02:16<01:03, 418.81it/s]Running loglikelihood requests:  53%|█████▎    | 29745/56168 [02:16<01:03, 416.24it/s]Running loglikelihood requests:  53%|█████▎    | 29809/56168 [02:16<01:03, 414.07it/s]Running loglikelihood requests:  53%|█████▎    | 29873/56168 [02:16<01:03, 413.71it/s]Running loglikelihood requests:  53%|█████▎    | 29937/56168 [02:16<01:03, 413.33it/s]Running loglikelihood requests:  53%|█████▎    | 30001/56168 [02:17<01:03, 412.85it/s]Running loglikelihood requests:  54%|█████▎    | 30065/56168 [02:17<01:03, 413.08it/s]Running loglikelihood requests:  54%|█████▎    | 30129/56168 [02:17<01:03, 412.53it/s]Running loglikelihood requests:  54%|█████▍    | 30193/56168 [02:17<01:02, 412.74it/s]Running loglikelihood requests:  54%|█████▍    | 30257/56168 [02:17<01:02, 413.78it/s]Running loglikelihood requests:  54%|█████▍    | 30321/56168 [02:17<01:02, 414.42it/s]Running loglikelihood requests:  54%|█████▍    | 30385/56168 [02:18<01:02, 415.02it/s]Running loglikelihood requests:  54%|█████▍    | 30449/56168 [02:18<01:02, 414.38it/s]Running loglikelihood requests:  54%|█████▍    | 30513/56168 [02:18<01:01, 414.08it/s]Running loglikelihood requests:  54%|█████▍    | 30577/56168 [02:18<01:01, 412.83it/s]Running loglikelihood requests:  55%|█████▍    | 30641/56168 [02:18<01:01, 413.35it/s]Running loglikelihood requests:  55%|█████▍    | 30705/56168 [02:18<01:01, 413.53it/s]Running loglikelihood requests:  55%|█████▍    | 30769/56168 [02:18<01:01, 413.34it/s]Running loglikelihood requests:  55%|█████▍    | 30833/56168 [02:19<01:01, 413.36it/s]Running loglikelihood requests:  55%|█████▌    | 30897/56168 [02:19<01:00, 418.94it/s]Running loglikelihood requests:  55%|█████▌    | 30961/56168 [02:19<00:59, 422.89it/s]Running loglikelihood requests:  55%|█████▌    | 31025/56168 [02:19<00:59, 425.19it/s]Running loglikelihood requests:  55%|█████▌    | 31089/56168 [02:19<00:58, 426.81it/s]Running loglikelihood requests:  55%|█████▌    | 31153/56168 [02:19<00:58, 427.98it/s]Running loglikelihood requests:  56%|█████▌    | 31217/56168 [02:20<00:58, 428.88it/s]Running loglikelihood requests:  56%|█████▌    | 31281/56168 [02:20<00:57, 429.87it/s]Running loglikelihood requests:  56%|█████▌    | 31345/56168 [02:20<00:57, 430.45it/s]Running loglikelihood requests:  56%|█████▌    | 31409/56168 [02:20<00:57, 431.08it/s]Running loglikelihood requests:  56%|█████▌    | 31477/56168 [02:20<00:56, 440.49it/s]Running loglikelihood requests:  56%|█████▌    | 31541/56168 [02:20<00:55, 439.84it/s]Running loglikelihood requests:  56%|█████▋    | 31605/56168 [02:20<00:55, 439.55it/s]Running loglikelihood requests:  56%|█████▋    | 31669/56168 [02:21<00:55, 437.53it/s]Running loglikelihood requests:  56%|█████▋    | 31733/56168 [02:21<00:56, 435.67it/s]Running loglikelihood requests:  57%|█████▋    | 31797/56168 [02:21<00:56, 434.28it/s]Running loglikelihood requests:  57%|█████▋    | 31861/56168 [02:21<00:55, 434.55it/s]Running loglikelihood requests:  57%|█████▋    | 31925/56168 [02:21<00:55, 434.70it/s]Running loglikelihood requests:  57%|█████▋    | 31989/56168 [02:21<00:55, 434.42it/s]Running loglikelihood requests:  57%|█████▋    | 32053/56168 [02:21<00:55, 434.64it/s]Running loglikelihood requests:  57%|█████▋    | 32117/56168 [02:22<00:55, 432.03it/s]Running loglikelihood requests:  57%|█████▋    | 32185/56168 [02:22<00:54, 440.31it/s]Running loglikelihood requests:  57%|█████▋    | 32249/56168 [02:22<00:54, 439.02it/s]Running loglikelihood requests:  58%|█████▊    | 32313/56168 [02:22<00:54, 437.91it/s]Running loglikelihood requests:  58%|█████▊    | 32377/56168 [02:22<00:54, 437.24it/s]Running loglikelihood requests:  58%|█████▊    | 32441/56168 [02:22<00:54, 436.69it/s]Running loglikelihood requests:  58%|█████▊    | 32505/56168 [02:22<00:54, 437.02it/s]Running loglikelihood requests:  58%|█████▊    | 32569/56168 [02:23<00:54, 436.81it/s]Running loglikelihood requests:  58%|█████▊    | 32633/56168 [02:23<00:53, 436.52it/s]Running loglikelihood requests:  58%|█████▊    | 32697/56168 [02:23<00:53, 436.78it/s]Running loglikelihood requests:  58%|█████▊    | 32761/56168 [02:23<00:53, 437.90it/s]Running loglikelihood requests:  58%|█████▊    | 32825/56168 [02:23<00:53, 439.18it/s]Running loglikelihood requests:  59%|█████▊    | 32889/56168 [02:23<00:52, 439.88it/s]Running loglikelihood requests:  59%|█████▊    | 32953/56168 [02:23<00:52, 438.36it/s]Running loglikelihood requests:  59%|█████▉    | 33017/56168 [02:24<00:52, 438.88it/s]Running loglikelihood requests:  59%|█████▉    | 33081/56168 [02:24<00:52, 438.41it/s]Running loglikelihood requests:  59%|█████▉    | 33145/56168 [02:24<00:52, 438.39it/s]Running loglikelihood requests:  59%|█████▉    | 33209/56168 [02:24<00:52, 438.19it/s]Running loglikelihood requests:  59%|█████▉    | 33273/56168 [02:24<00:52, 438.32it/s]Running loglikelihood requests:  59%|█████▉    | 33337/56168 [02:24<00:52, 437.85it/s]Running loglikelihood requests:  59%|█████▉    | 33401/56168 [02:24<00:52, 437.44it/s]Running loglikelihood requests:  60%|█████▉    | 33465/56168 [02:25<00:51, 437.09it/s]Running loglikelihood requests:  60%|█████▉    | 33529/56168 [02:25<00:51, 437.32it/s]Running loglikelihood requests:  60%|█████▉    | 33593/56168 [02:25<00:51, 438.21it/s]Running loglikelihood requests:  60%|█████▉    | 33657/56168 [02:25<00:51, 438.70it/s]Running loglikelihood requests:  60%|██████    | 33721/56168 [02:25<00:51, 438.54it/s]Running loglikelihood requests:  60%|██████    | 33785/56168 [02:25<00:50, 439.26it/s]Running loglikelihood requests:  60%|██████    | 33849/56168 [02:26<00:50, 439.20it/s]Running loglikelihood requests:  60%|██████    | 33913/56168 [02:26<00:50, 439.41it/s]Running loglikelihood requests:  60%|██████    | 33977/56168 [02:26<00:50, 439.51it/s]Running loglikelihood requests:  61%|██████    | 34045/56168 [02:26<00:49, 447.47it/s]Running loglikelihood requests:  61%|██████    | 34109/56168 [02:26<00:49, 446.69it/s]Running loglikelihood requests:  61%|██████    | 34173/56168 [02:26<00:49, 446.32it/s]Running loglikelihood requests:  61%|██████    | 34237/56168 [02:26<00:49, 446.84it/s]Running loglikelihood requests:  61%|██████    | 34301/56168 [02:27<00:48, 446.85it/s]Running loglikelihood requests:  61%|██████    | 34365/56168 [02:27<00:48, 447.31it/s]Running loglikelihood requests:  61%|██████▏   | 34429/56168 [02:27<00:48, 446.70it/s]Running loglikelihood requests:  61%|██████▏   | 34493/56168 [02:27<00:48, 444.96it/s]Running loglikelihood requests:  62%|██████▏   | 34557/56168 [02:27<00:48, 443.85it/s]Running loglikelihood requests:  62%|██████▏   | 34621/56168 [02:27<00:48, 443.35it/s]Running loglikelihood requests:  62%|██████▏   | 34685/56168 [02:27<00:48, 442.84it/s]Running loglikelihood requests:  62%|██████▏   | 34749/56168 [02:28<00:48, 442.65it/s]Running loglikelihood requests:  62%|██████▏   | 34813/56168 [02:28<00:48, 442.63it/s]Running loglikelihood requests:  62%|██████▏   | 34877/56168 [02:28<00:48, 442.99it/s]Running loglikelihood requests:  62%|██████▏   | 34941/56168 [02:28<00:47, 443.56it/s]Running loglikelihood requests:  62%|██████▏   | 35005/56168 [02:28<00:47, 444.41it/s]Running loglikelihood requests:  62%|██████▏   | 35069/56168 [02:28<00:47, 444.79it/s]Running loglikelihood requests:  63%|██████▎   | 35133/56168 [02:28<00:47, 444.44it/s]Running loglikelihood requests:  63%|██████▎   | 35197/56168 [02:29<00:47, 443.80it/s]Running loglikelihood requests:  63%|██████▎   | 35261/56168 [02:29<00:47, 443.16it/s]Running loglikelihood requests:  63%|██████▎   | 35325/56168 [02:29<00:46, 443.79it/s]Running loglikelihood requests:  63%|██████▎   | 35389/56168 [02:29<00:46, 444.02it/s]Running loglikelihood requests:  63%|██████▎   | 35453/56168 [02:29<00:45, 453.68it/s]Running loglikelihood requests:  63%|██████▎   | 35517/56168 [02:29<00:44, 460.17it/s]Running loglikelihood requests:  63%|██████▎   | 35581/56168 [02:29<00:44, 465.02it/s]Running loglikelihood requests:  63%|██████▎   | 35645/56168 [02:30<00:43, 469.64it/s]Running loglikelihood requests:  64%|██████▎   | 35709/56168 [02:30<00:43, 472.96it/s]Running loglikelihood requests:  64%|██████▎   | 35773/56168 [02:30<00:42, 475.59it/s]Running loglikelihood requests:  64%|██████▍   | 35837/56168 [02:30<00:42, 477.59it/s]Running loglikelihood requests:  64%|██████▍   | 35901/56168 [02:30<00:42, 476.89it/s]Running loglikelihood requests:  64%|██████▍   | 35965/56168 [02:30<00:42, 476.45it/s]Running loglikelihood requests:  64%|██████▍   | 36029/56168 [02:30<00:42, 476.37it/s]Running loglikelihood requests:  64%|██████▍   | 36093/56168 [02:30<00:42, 476.82it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [02:31<00:41, 485.92it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [02:31<00:41, 483.18it/s]Running loglikelihood requests:  65%|██████▍   | 36289/56168 [02:31<00:41, 481.66it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [02:31<00:41, 480.16it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [02:31<00:41, 478.78it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [02:31<00:41, 478.36it/s]Running loglikelihood requests:  65%|██████▌   | 36545/56168 [02:31<00:41, 477.98it/s]Running loglikelihood requests:  65%|██████▌   | 36609/56168 [02:32<00:40, 477.35it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [02:32<00:40, 478.65it/s]Running loglikelihood requests:  65%|██████▌   | 36737/56168 [02:32<00:40, 478.58it/s]Running loglikelihood requests:  66%|██████▌   | 36805/56168 [02:32<00:39, 486.97it/s]Running loglikelihood requests:  66%|██████▌   | 36869/56168 [02:32<00:39, 484.95it/s]Running loglikelihood requests:  66%|██████▌   | 36933/56168 [02:32<00:39, 483.38it/s]Running loglikelihood requests:  66%|██████▌   | 36997/56168 [02:32<00:39, 482.72it/s]Running loglikelihood requests:  66%|██████▌   | 37061/56168 [02:32<00:39, 481.33it/s]Running loglikelihood requests:  66%|██████▌   | 37125/56168 [02:33<00:39, 481.11it/s]Running loglikelihood requests:  66%|██████▌   | 37189/56168 [02:33<00:39, 481.01it/s]Running loglikelihood requests:  66%|██████▋   | 37253/56168 [02:33<00:39, 482.10it/s]Running loglikelihood requests:  66%|██████▋   | 37317/56168 [02:33<00:38, 484.23it/s]Running loglikelihood requests:  67%|██████▋   | 37381/56168 [02:33<00:38, 485.85it/s]Running loglikelihood requests:  67%|██████▋   | 37445/56168 [02:33<00:38, 486.93it/s]Running loglikelihood requests:  67%|██████▋   | 37509/56168 [02:33<00:38, 487.25it/s]Running loglikelihood requests:  67%|██████▋   | 37573/56168 [02:34<00:38, 488.12it/s]Running loglikelihood requests:  67%|██████▋   | 37637/56168 [02:34<00:37, 488.23it/s]Running loglikelihood requests:  67%|██████▋   | 37701/56168 [02:34<00:37, 487.88it/s]Running loglikelihood requests:  67%|██████▋   | 37765/56168 [02:34<00:37, 485.16it/s]Running loglikelihood requests:  67%|██████▋   | 37829/56168 [02:34<00:37, 484.21it/s]Running loglikelihood requests:  67%|██████▋   | 37893/56168 [02:34<00:37, 482.46it/s]Running loglikelihood requests:  68%|██████▊   | 37957/56168 [02:34<00:37, 482.48it/s]Running loglikelihood requests:  68%|██████▊   | 38021/56168 [02:34<00:37, 482.19it/s]Running loglikelihood requests:  68%|██████▊   | 38085/56168 [02:35<00:37, 481.57it/s]Running loglikelihood requests:  68%|██████▊   | 38149/56168 [02:35<00:37, 481.51it/s]Running loglikelihood requests:  68%|██████▊   | 38213/56168 [02:35<00:37, 481.47it/s]Running loglikelihood requests:  68%|██████▊   | 38277/56168 [02:35<00:37, 481.38it/s]Running loglikelihood requests:  68%|██████▊   | 38341/56168 [02:35<00:37, 481.79it/s]Running loglikelihood requests:  68%|██████▊   | 38405/56168 [02:35<00:36, 481.51it/s]Running loglikelihood requests:  68%|██████▊   | 38469/56168 [02:35<00:36, 481.98it/s]Running loglikelihood requests:  69%|██████▊   | 38533/56168 [02:36<00:36, 482.40it/s]Running loglikelihood requests:  69%|██████▊   | 38597/56168 [02:36<00:36, 482.43it/s]Running loglikelihood requests:  69%|██████▉   | 38661/56168 [02:36<00:36, 482.82it/s]Running loglikelihood requests:  69%|██████▉   | 38725/56168 [02:36<00:36, 483.45it/s]Running loglikelihood requests:  69%|██████▉   | 38789/56168 [02:36<00:35, 483.78it/s]Running loglikelihood requests:  69%|██████▉   | 38853/56168 [02:36<00:35, 484.43it/s]Running loglikelihood requests:  69%|██████▉   | 38917/56168 [02:36<00:35, 484.79it/s]Running loglikelihood requests:  69%|██████▉   | 38981/56168 [02:36<00:35, 484.88it/s]Running loglikelihood requests:  70%|██████▉   | 39045/56168 [02:37<00:35, 484.83it/s]Running loglikelihood requests:  70%|██████▉   | 39109/56168 [02:37<00:35, 484.40it/s]Running loglikelihood requests:  70%|██████▉   | 39173/56168 [02:37<00:34, 486.21it/s]Running loglikelihood requests:  70%|██████▉   | 39237/56168 [02:37<00:34, 486.99it/s]Running loglikelihood requests:  70%|██████▉   | 39301/56168 [02:37<00:34, 486.94it/s]Running loglikelihood requests:  70%|███████   | 39365/56168 [02:37<00:34, 488.54it/s]Running loglikelihood requests:  70%|███████   | 39429/56168 [02:37<00:34, 490.29it/s]Running loglikelihood requests:  70%|███████   | 39493/56168 [02:37<00:33, 491.12it/s]Running loglikelihood requests:  70%|███████   | 39557/56168 [02:38<00:33, 492.55it/s]Running loglikelihood requests:  71%|███████   | 39621/56168 [02:38<00:33, 491.41it/s]Running loglikelihood requests:  71%|███████   | 39685/56168 [02:38<00:33, 489.93it/s]Running loglikelihood requests:  71%|███████   | 39749/56168 [02:38<00:33, 488.97it/s]Running loglikelihood requests:  71%|███████   | 39813/56168 [02:38<00:33, 488.33it/s]Running loglikelihood requests:  71%|███████   | 39877/56168 [02:38<00:33, 488.20it/s]Running loglikelihood requests:  71%|███████   | 39941/56168 [02:38<00:33, 488.06it/s]Running loglikelihood requests:  71%|███████   | 40005/56168 [02:39<00:33, 487.84it/s]Running loglikelihood requests:  71%|███████▏  | 40069/56168 [02:39<00:33, 487.73it/s]Running loglikelihood requests:  71%|███████▏  | 40133/56168 [02:39<00:32, 488.33it/s]Running loglikelihood requests:  72%|███████▏  | 40201/56168 [02:39<00:32, 496.64it/s]Running loglikelihood requests:  72%|███████▏  | 40265/56168 [02:39<00:32, 495.21it/s]Running loglikelihood requests:  72%|███████▏  | 40329/56168 [02:39<00:32, 493.84it/s]Running loglikelihood requests:  72%|███████▏  | 40393/56168 [02:39<00:32, 492.62it/s]Running loglikelihood requests:  72%|███████▏  | 40457/56168 [02:39<00:31, 491.43it/s]Running loglikelihood requests:  72%|███████▏  | 40521/56168 [02:40<00:31, 491.34it/s]Running loglikelihood requests:  72%|███████▏  | 40585/56168 [02:40<00:31, 490.24it/s]Running loglikelihood requests:  72%|███████▏  | 40649/56168 [02:40<00:31, 489.56it/s]Running loglikelihood requests:  72%|███████▏  | 40713/56168 [02:40<00:31, 493.66it/s]Running loglikelihood requests:  73%|███████▎  | 40777/56168 [02:40<00:30, 498.14it/s]Running loglikelihood requests:  73%|███████▎  | 40841/56168 [02:40<00:30, 500.79it/s]Running loglikelihood requests:  73%|███████▎  | 40905/56168 [02:40<00:30, 503.19it/s]Running loglikelihood requests:  73%|███████▎  | 40969/56168 [02:40<00:30, 503.94it/s]Running loglikelihood requests:  73%|███████▎  | 41033/56168 [02:41<00:29, 505.33it/s]Running loglikelihood requests:  73%|███████▎  | 41097/56168 [02:41<00:29, 507.27it/s]Running loglikelihood requests:  73%|███████▎  | 41161/56168 [02:41<00:29, 508.78it/s]Running loglikelihood requests:  73%|███████▎  | 41225/56168 [02:41<00:29, 510.77it/s]Running loglikelihood requests:  74%|███████▎  | 41289/56168 [02:41<00:29, 512.32it/s]Running loglikelihood requests:  74%|███████▎  | 41353/56168 [02:41<00:28, 513.44it/s]Running loglikelihood requests:  74%|███████▎  | 41417/56168 [02:41<00:28, 514.70it/s]Running loglikelihood requests:  74%|███████▍  | 41481/56168 [02:41<00:28, 515.97it/s]Running loglikelihood requests:  74%|███████▍  | 41545/56168 [02:42<00:28, 517.00it/s]Running loglikelihood requests:  74%|███████▍  | 41609/56168 [02:42<00:28, 517.20it/s]Running loglikelihood requests:  74%|███████▍  | 41673/56168 [02:42<00:28, 517.10it/s]Running loglikelihood requests:  74%|███████▍  | 41737/56168 [02:42<00:27, 516.77it/s]Running loglikelihood requests:  74%|███████▍  | 41801/56168 [02:42<00:27, 517.18it/s]Running loglikelihood requests:  75%|███████▍  | 41865/56168 [02:42<00:27, 518.15it/s]Running loglikelihood requests:  75%|███████▍  | 41929/56168 [02:42<00:27, 518.76it/s]Running loglikelihood requests:  75%|███████▍  | 41993/56168 [02:42<00:27, 519.55it/s]Running loglikelihood requests:  75%|███████▍  | 42057/56168 [02:43<00:27, 519.34it/s]Running loglikelihood requests:  75%|███████▍  | 42121/56168 [02:43<00:27, 516.52it/s]Running loglikelihood requests:  75%|███████▌  | 42185/56168 [02:43<00:27, 514.64it/s]Running loglikelihood requests:  75%|███████▌  | 42249/56168 [02:43<00:27, 512.20it/s]Running loglikelihood requests:  75%|███████▌  | 42317/56168 [02:43<00:26, 521.51it/s]Running loglikelihood requests:  75%|███████▌  | 42381/56168 [02:43<00:26, 519.19it/s]Running loglikelihood requests:  76%|███████▌  | 42445/56168 [02:43<00:26, 516.99it/s]Running loglikelihood requests:  76%|███████▌  | 42509/56168 [02:43<00:26, 515.12it/s]Running loglikelihood requests:  76%|███████▌  | 42573/56168 [02:44<00:26, 514.19it/s]Running loglikelihood requests:  76%|███████▌  | 42641/56168 [02:44<00:25, 523.13it/s]Running loglikelihood requests:  76%|███████▌  | 42705/56168 [02:44<00:25, 520.54it/s]Running loglikelihood requests:  76%|███████▌  | 42769/56168 [02:44<00:25, 517.91it/s]Running loglikelihood requests:  76%|███████▋  | 42833/56168 [02:44<00:25, 515.53it/s]Running loglikelihood requests:  76%|███████▋  | 42897/56168 [02:44<00:25, 514.70it/s]Running loglikelihood requests:  76%|███████▋  | 42961/56168 [02:44<00:25, 515.10it/s]Running loglikelihood requests:  77%|███████▋  | 43025/56168 [02:44<00:25, 515.51it/s]Running loglikelihood requests:  77%|███████▋  | 43093/56168 [02:45<00:24, 524.22it/s]Running loglikelihood requests:  77%|███████▋  | 43157/56168 [02:45<00:24, 520.94it/s]Running loglikelihood requests:  77%|███████▋  | 43221/56168 [02:45<00:24, 518.40it/s]Running loglikelihood requests:  77%|███████▋  | 43285/56168 [02:45<00:24, 516.50it/s]Running loglikelihood requests:  77%|███████▋  | 43349/56168 [02:45<00:24, 515.34it/s]Running loglikelihood requests:  77%|███████▋  | 43413/56168 [02:45<00:24, 516.24it/s]Running loglikelihood requests:  77%|███████▋  | 43477/56168 [02:45<00:24, 516.54it/s]Running loglikelihood requests:  78%|███████▊  | 43541/56168 [02:45<00:24, 517.14it/s]Running loglikelihood requests:  78%|███████▊  | 43605/56168 [02:46<00:24, 517.26it/s]Running loglikelihood requests:  78%|███████▊  | 43669/56168 [02:46<00:24, 516.73it/s]Running loglikelihood requests:  78%|███████▊  | 43733/56168 [02:46<00:24, 516.19it/s]Running loglikelihood requests:  78%|███████▊  | 43797/56168 [02:46<00:23, 519.30it/s]Running loglikelihood requests:  78%|███████▊  | 43861/56168 [02:46<00:23, 521.76it/s]Running loglikelihood requests:  78%|███████▊  | 43925/56168 [02:46<00:23, 523.13it/s]Running loglikelihood requests:  78%|███████▊  | 43993/56168 [02:46<00:22, 530.39it/s]Running loglikelihood requests:  78%|███████▊  | 44057/56168 [02:46<00:22, 527.15it/s]Running loglikelihood requests:  79%|███████▊  | 44121/56168 [02:47<00:22, 525.01it/s]Running loglikelihood requests:  79%|███████▊  | 44185/56168 [02:47<00:22, 523.09it/s]Running loglikelihood requests:  79%|███████▉  | 44249/56168 [02:47<00:22, 521.58it/s]Running loglikelihood requests:  79%|███████▉  | 44313/56168 [02:47<00:22, 520.52it/s]Running loglikelihood requests:  79%|███████▉  | 44377/56168 [02:47<00:22, 519.29it/s]Running loglikelihood requests:  79%|███████▉  | 44441/56168 [02:47<00:22, 518.74it/s]Running loglikelihood requests:  79%|███████▉  | 44505/56168 [02:47<00:22, 518.49it/s]Running loglikelihood requests:  79%|███████▉  | 44569/56168 [02:47<00:22, 517.73it/s]Running loglikelihood requests:  79%|███████▉  | 44637/56168 [02:48<00:21, 527.37it/s]Running loglikelihood requests:  80%|███████▉  | 44701/56168 [02:48<00:21, 525.63it/s]Running loglikelihood requests:  80%|███████▉  | 44765/56168 [02:48<00:21, 524.92it/s]Running loglikelihood requests:  80%|███████▉  | 44829/56168 [02:48<00:21, 524.06it/s]Running loglikelihood requests:  80%|███████▉  | 44893/56168 [02:48<00:21, 523.73it/s]Running loglikelihood requests:  80%|████████  | 44957/56168 [02:48<00:21, 522.57it/s]Running loglikelihood requests:  80%|████████  | 45021/56168 [02:48<00:21, 522.22it/s]Running loglikelihood requests:  80%|████████  | 45085/56168 [02:48<00:21, 522.22it/s]Running loglikelihood requests:  80%|████████  | 45149/56168 [02:49<00:21, 522.42it/s]Running loglikelihood requests:  80%|████████  | 45213/56168 [02:49<00:21, 521.42it/s]Running loglikelihood requests:  81%|████████  | 45277/56168 [02:49<00:20, 520.83it/s]Running loglikelihood requests:  81%|████████  | 45341/56168 [02:49<00:20, 520.87it/s]Running loglikelihood requests:  81%|████████  | 45405/56168 [02:49<00:20, 522.41it/s]Running loglikelihood requests:  81%|████████  | 45469/56168 [02:49<00:20, 523.70it/s]Running loglikelihood requests:  81%|████████  | 45537/56168 [02:49<00:19, 532.93it/s]Running loglikelihood requests:  81%|████████  | 45601/56168 [02:49<00:19, 530.91it/s]Running loglikelihood requests:  81%|████████▏ | 45665/56168 [02:49<00:19, 530.45it/s]Running loglikelihood requests:  81%|████████▏ | 45729/56168 [02:50<00:19, 530.74it/s]Running loglikelihood requests:  82%|████████▏ | 45793/56168 [02:50<00:19, 531.86it/s]Running loglikelihood requests:  82%|████████▏ | 45857/56168 [02:50<00:19, 533.14it/s]Running loglikelihood requests:  82%|████████▏ | 45921/56168 [02:50<00:19, 531.44it/s]Running loglikelihood requests:  82%|████████▏ | 45985/56168 [02:50<00:19, 530.11it/s]Running loglikelihood requests:  82%|████████▏ | 46049/56168 [02:50<00:19, 529.01it/s]Running loglikelihood requests:  82%|████████▏ | 46113/56168 [02:50<00:19, 527.77it/s]Running loglikelihood requests:  82%|████████▏ | 46177/56168 [02:50<00:18, 526.63it/s]Running loglikelihood requests:  82%|████████▏ | 46241/56168 [02:51<00:18, 527.27it/s]Running loglikelihood requests:  82%|████████▏ | 46305/56168 [02:51<00:18, 527.44it/s]Running loglikelihood requests:  83%|████████▎ | 46369/56168 [02:51<00:18, 527.44it/s]Running loglikelihood requests:  83%|████████▎ | 46433/56168 [02:51<00:18, 527.45it/s]Running loglikelihood requests:  83%|████████▎ | 46497/56168 [02:51<00:18, 527.62it/s]Running loglikelihood requests:  83%|████████▎ | 46561/56168 [02:51<00:18, 528.01it/s]Running loglikelihood requests:  83%|████████▎ | 46625/56168 [02:51<00:18, 528.71it/s]Running loglikelihood requests:  83%|████████▎ | 46689/56168 [02:51<00:17, 528.48it/s]Running loglikelihood requests:  83%|████████▎ | 46753/56168 [02:52<00:17, 528.57it/s]Running loglikelihood requests:  83%|████████▎ | 46817/56168 [02:52<00:17, 527.77it/s]Running loglikelihood requests:  83%|████████▎ | 46881/56168 [02:52<00:17, 527.81it/s]Running loglikelihood requests:  84%|████████▎ | 46945/56168 [02:52<00:17, 528.21it/s]Running loglikelihood requests:  84%|████████▎ | 47009/56168 [02:52<00:17, 528.36it/s]Running loglikelihood requests:  84%|████████▍ | 47073/56168 [02:52<00:17, 528.13it/s]Running loglikelihood requests:  84%|████████▍ | 47137/56168 [02:52<00:16, 537.43it/s]Running loglikelihood requests:  84%|████████▍ | 47201/56168 [02:52<00:16, 543.94it/s]Running loglikelihood requests:  84%|████████▍ | 47265/56168 [02:53<00:16, 547.55it/s]Running loglikelihood requests:  84%|████████▍ | 47329/56168 [02:53<00:16, 551.11it/s]Running loglikelihood requests:  84%|████████▍ | 47393/56168 [02:53<00:15, 553.67it/s]Running loglikelihood requests:  84%|████████▍ | 47457/56168 [02:53<00:15, 555.16it/s]Running loglikelihood requests:  85%|████████▍ | 47521/56168 [02:53<00:15, 556.32it/s]Running loglikelihood requests:  85%|████████▍ | 47585/56168 [02:53<00:15, 557.25it/s]Running loglikelihood requests:  85%|████████▍ | 47649/56168 [02:53<00:15, 558.87it/s]Running loglikelihood requests:  85%|████████▍ | 47713/56168 [02:53<00:15, 562.29it/s]Running loglikelihood requests:  85%|████████▌ | 47777/56168 [02:53<00:14, 564.49it/s]Running loglikelihood requests:  85%|████████▌ | 47841/56168 [02:54<00:14, 565.78it/s]Running loglikelihood requests:  85%|████████▌ | 47905/56168 [02:54<00:14, 566.44it/s]Running loglikelihood requests:  85%|████████▌ | 47969/56168 [02:54<00:14, 563.88it/s]Running loglikelihood requests:  86%|████████▌ | 48033/56168 [02:54<00:14, 563.71it/s]Running loglikelihood requests:  86%|████████▌ | 48097/56168 [02:54<00:14, 563.75it/s]Running loglikelihood requests:  86%|████████▌ | 48161/56168 [02:54<00:14, 563.26it/s]Running loglikelihood requests:  86%|████████▌ | 48225/56168 [02:54<00:14, 564.08it/s]Running loglikelihood requests:  86%|████████▌ | 48289/56168 [02:54<00:13, 563.10it/s]Running loglikelihood requests:  86%|████████▌ | 48353/56168 [02:54<00:13, 562.82it/s]Running loglikelihood requests:  86%|████████▌ | 48417/56168 [02:55<00:13, 563.83it/s]Running loglikelihood requests:  86%|████████▋ | 48481/56168 [02:55<00:13, 564.01it/s]Running loglikelihood requests:  86%|████████▋ | 48545/56168 [02:55<00:13, 564.83it/s]Running loglikelihood requests:  87%|████████▋ | 48609/56168 [02:55<00:13, 564.40it/s]Running loglikelihood requests:  87%|████████▋ | 48673/56168 [02:55<00:13, 564.03it/s]Running loglikelihood requests:  87%|████████▋ | 48737/56168 [02:55<00:13, 564.40it/s]Running loglikelihood requests:  87%|████████▋ | 48801/56168 [02:55<00:13, 564.27it/s]Running loglikelihood requests:  87%|████████▋ | 48865/56168 [02:55<00:12, 564.45it/s]Running loglikelihood requests:  87%|████████▋ | 48929/56168 [02:55<00:12, 564.05it/s]Running loglikelihood requests:  87%|████████▋ | 48993/56168 [02:56<00:12, 564.48it/s]Running loglikelihood requests:  87%|████████▋ | 49057/56168 [02:56<00:12, 565.75it/s]Running loglikelihood requests:  87%|████████▋ | 49121/56168 [02:56<00:12, 565.21it/s]Running loglikelihood requests:  88%|████████▊ | 49185/56168 [02:56<00:12, 564.93it/s]Running loglikelihood requests:  88%|████████▊ | 49249/56168 [02:56<00:12, 565.96it/s]Running loglikelihood requests:  88%|████████▊ | 49313/56168 [02:56<00:12, 565.42it/s]Running loglikelihood requests:  88%|████████▊ | 49377/56168 [02:56<00:12, 564.84it/s]Running loglikelihood requests:  88%|████████▊ | 49441/56168 [02:56<00:11, 565.01it/s]Running loglikelihood requests:  88%|████████▊ | 49505/56168 [02:56<00:11, 564.74it/s]Running loglikelihood requests:  88%|████████▊ | 49569/56168 [02:57<00:11, 565.29it/s]Running loglikelihood requests:  88%|████████▊ | 49633/56168 [02:57<00:11, 564.56it/s]Running loglikelihood requests:  88%|████████▊ | 49697/56168 [02:57<00:11, 565.77it/s]Running loglikelihood requests:  89%|████████▊ | 49761/56168 [02:57<00:11, 566.70it/s]Running loglikelihood requests:  89%|████████▊ | 49825/56168 [02:57<00:11, 568.47it/s]Running loglikelihood requests:  89%|████████▉ | 49889/56168 [02:57<00:11, 570.15it/s]Running loglikelihood requests:  89%|████████▉ | 49953/56168 [02:57<00:10, 572.05it/s]Running loglikelihood requests:  89%|████████▉ | 50017/56168 [02:57<00:10, 573.65it/s]Running loglikelihood requests:  89%|████████▉ | 50081/56168 [02:57<00:10, 575.10it/s]Running loglikelihood requests:  89%|████████▉ | 50145/56168 [02:58<00:10, 576.35it/s]Running loglikelihood requests:  89%|████████▉ | 50209/56168 [02:58<00:10, 576.55it/s]Running loglikelihood requests:  90%|████████▉ | 50273/56168 [02:58<00:10, 576.91it/s]Running loglikelihood requests:  90%|████████▉ | 50337/56168 [02:58<00:10, 577.75it/s]Running loglikelihood requests:  90%|████████▉ | 50401/56168 [02:58<00:09, 579.00it/s]Running loglikelihood requests:  90%|████████▉ | 50465/56168 [02:58<00:09, 579.61it/s]Running loglikelihood requests:  90%|████████▉ | 50529/56168 [02:58<00:09, 582.12it/s]Running loglikelihood requests:  90%|█████████ | 50593/56168 [02:58<00:09, 580.20it/s]Running loglikelihood requests:  90%|█████████ | 50657/56168 [02:58<00:09, 578.65it/s]Running loglikelihood requests:  90%|█████████ | 50721/56168 [02:59<00:09, 578.76it/s]Running loglikelihood requests:  90%|█████████ | 50785/56168 [02:59<00:09, 576.22it/s]Running loglikelihood requests:  91%|█████████ | 50853/56168 [02:59<00:09, 585.48it/s]Running loglikelihood requests:  91%|█████████ | 50917/56168 [02:59<00:09, 581.63it/s]Running loglikelihood requests:  91%|█████████ | 50981/56168 [02:59<00:08, 579.58it/s]Running loglikelihood requests:  91%|█████████ | 51045/56168 [02:59<00:08, 578.15it/s]Running loglikelihood requests:  91%|█████████ | 51109/56168 [02:59<00:08, 577.68it/s]Running loglikelihood requests:  91%|█████████ | 51173/56168 [02:59<00:08, 576.91it/s]Running loglikelihood requests:  91%|█████████ | 51237/56168 [02:59<00:08, 576.74it/s]Running loglikelihood requests:  91%|█████████▏| 51301/56168 [03:00<00:08, 578.12it/s]Running loglikelihood requests:  91%|█████████▏| 51369/56168 [03:00<00:08, 588.86it/s]Running loglikelihood requests:  92%|█████████▏| 51433/56168 [03:00<00:08, 585.75it/s]Running loglikelihood requests:  92%|█████████▏| 51497/56168 [03:00<00:07, 584.68it/s]Running loglikelihood requests:  92%|█████████▏| 51561/56168 [03:00<00:07, 582.61it/s]Running loglikelihood requests:  92%|█████████▏| 51625/56168 [03:00<00:07, 582.62it/s]Running loglikelihood requests:  92%|█████████▏| 51689/56168 [03:00<00:07, 580.74it/s]Running loglikelihood requests:  92%|█████████▏| 51753/56168 [03:00<00:07, 581.20it/s]Running loglikelihood requests:  92%|█████████▏| 51817/56168 [03:00<00:07, 579.82it/s]Running loglikelihood requests:  92%|█████████▏| 51881/56168 [03:01<00:07, 580.32it/s]Running loglikelihood requests:  92%|█████████▏| 51945/56168 [03:01<00:07, 579.39it/s]Running loglikelihood requests:  93%|█████████▎| 52009/56168 [03:01<00:07, 579.63it/s]Running loglikelihood requests:  93%|█████████▎| 52077/56168 [03:01<00:06, 589.90it/s]Running loglikelihood requests:  93%|█████████▎| 52141/56168 [03:01<00:06, 588.52it/s]Running loglikelihood requests:  93%|█████████▎| 52205/56168 [03:01<00:06, 586.61it/s]Running loglikelihood requests:  93%|█████████▎| 52269/56168 [03:01<00:06, 585.90it/s]Running loglikelihood requests:  93%|█████████▎| 52333/56168 [03:01<00:06, 585.81it/s]Running loglikelihood requests:  93%|█████████▎| 52397/56168 [03:01<00:06, 584.94it/s]Running loglikelihood requests:  93%|█████████▎| 52461/56168 [03:02<00:06, 584.80it/s]Running loglikelihood requests:  94%|█████████▎| 52525/56168 [03:02<00:06, 584.04it/s]Running loglikelihood requests:  94%|█████████▎| 52589/56168 [03:02<00:06, 585.93it/s]Running loglikelihood requests:  94%|█████████▎| 52653/56168 [03:02<00:05, 588.07it/s]Running loglikelihood requests:  94%|█████████▍| 52717/56168 [03:02<00:05, 589.32it/s]Running loglikelihood requests:  94%|█████████▍| 52781/56168 [03:02<00:05, 591.81it/s]Running loglikelihood requests:  94%|█████████▍| 52845/56168 [03:02<00:05, 593.75it/s]Running loglikelihood requests:  94%|█████████▍| 52909/56168 [03:02<00:05, 594.46it/s]Running loglikelihood requests:  94%|█████████▍| 52973/56168 [03:02<00:05, 594.96it/s]Running loglikelihood requests:  94%|█████████▍| 53037/56168 [03:03<00:05, 594.86it/s]Running loglikelihood requests:  95%|█████████▍| 53101/56168 [03:03<00:05, 595.37it/s]Running loglikelihood requests:  95%|█████████▍| 53165/56168 [03:03<00:05, 596.24it/s]Running loglikelihood requests:  95%|█████████▍| 53229/56168 [03:03<00:04, 597.09it/s]Running loglikelihood requests:  95%|█████████▍| 53293/56168 [03:03<00:04, 595.94it/s]Running loglikelihood requests:  95%|█████████▌| 53397/56168 [03:03<00:03, 722.59it/s]Running loglikelihood requests:  95%|█████████▌| 53485/56168 [03:03<00:04, 616.98it/s]Running loglikelihood requests:  95%|█████████▌| 53588/56168 [03:03<00:03, 719.86it/s]Running loglikelihood requests:  96%|█████████▌| 53677/56168 [03:04<00:03, 625.28it/s]Running loglikelihood requests:  96%|█████████▌| 53780/56168 [03:04<00:03, 720.25it/s]Running loglikelihood requests:  96%|█████████▌| 53869/56168 [03:04<00:03, 628.60it/s]Running loglikelihood requests:  96%|█████████▌| 53969/56168 [03:04<00:03, 713.25it/s]Running loglikelihood requests:  96%|█████████▌| 54061/56168 [03:04<00:03, 632.99it/s]Running loglikelihood requests:  96%|█████████▋| 54169/56168 [03:04<00:02, 733.51it/s]Running loglikelihood requests:  97%|█████████▋| 54253/56168 [03:04<00:03, 631.82it/s]Running loglikelihood requests:  97%|█████████▋| 54357/56168 [03:04<00:02, 723.41it/s]Running loglikelihood requests:  97%|█████████▋| 54445/56168 [03:05<00:02, 632.81it/s]Running loglikelihood requests:  97%|█████████▋| 54555/56168 [03:05<00:02, 737.20it/s]Running loglikelihood requests:  97%|█████████▋| 54638/56168 [03:05<00:02, 634.35it/s]Running loglikelihood requests:  97%|█████████▋| 54746/56168 [03:05<00:01, 734.22it/s]Running loglikelihood requests:  98%|█████████▊| 54829/56168 [03:05<00:02, 632.29it/s]Running loglikelihood requests:  98%|█████████▊| 54938/56168 [03:05<00:01, 734.81it/s]Running loglikelihood requests:  98%|█████████▊| 55021/56168 [03:06<00:01, 632.37it/s]Running loglikelihood requests:  98%|█████████▊| 55127/56168 [03:06<00:01, 728.19it/s]Running loglikelihood requests:  98%|█████████▊| 55213/56168 [03:06<00:01, 633.85it/s]Running loglikelihood requests:  99%|█████████▊| 55328/56168 [03:06<00:01, 749.47it/s]Running loglikelihood requests:  99%|█████████▊| 55413/56168 [03:06<00:01, 648.02it/s]Running loglikelihood requests:  99%|█████████▉| 55533/56168 [03:06<00:00, 648.71it/s]Running loglikelihood requests:  99%|█████████▉| 55653/56168 [03:06<00:00, 765.86it/s]Running loglikelihood requests:  99%|█████████▉| 55739/56168 [03:07<00:00, 664.56it/s]Running loglikelihood requests:  99%|█████████▉| 55853/56168 [03:07<00:00, 652.61it/s]Running loglikelihood requests: 100%|█████████▉| 55974/56168 [03:07<00:00, 769.54it/s]Running loglikelihood requests: 100%|█████████▉| 56060/56168 [03:07<00:00, 685.85it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [03:07<00:00, 299.43it/s]
2025-05-13:22:22:29,113 WARNING  [huggingface.py:1353] Failed to get model SHA for /work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent/checkpoint-485 at revision main. Error: Repo id must be in the form 'repo_name' or 'namespace/repo_name': '/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent/checkpoint-485'. Use `repo_type` argument if needed.
2025-05-13:22:22:35,222 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent/checkpoint-485,tokenizer=meta-llama/Meta-Llama-3-8b-Instruct), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.6383|±  |0.0038|
| - humanities                          |      2|none  |      |acc   |↑  |0.5849|±  |0.0068|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.4762|±  |0.0447|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.7333|±  |0.0345|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.8088|±  |0.0276|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.8439|±  |0.0236|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.7521|±  |0.0394|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.7685|±  |0.0408|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.7485|±  |0.0341|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6821|±  |0.0251|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.3732|±  |0.0162|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6977|±  |0.0261|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.7377|±  |0.0245|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4870|±  |0.0128|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.8012|±  |0.0306|
| - other                               |      2|none  |      |acc   |↑  |0.7190|±  |0.0078|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.6300|±  |0.0485|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.7283|±  |0.0274|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.6763|±  |0.0357|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.4300|±  |0.0498|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6861|±  |0.0311|
|  - management                         |      1|none  |     0|acc   |↑  |0.8350|±  |0.0368|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8932|±  |0.0202|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.8200|±  |0.0386|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.8135|±  |0.0139|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.7386|±  |0.0252|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.5248|±  |0.0298|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.7206|±  |0.0273|
|  - virology                           |      1|none  |     0|acc   |↑  |0.4880|±  |0.0389|
| - social sciences                     |      2|none  |      |acc   |↑  |0.7410|±  |0.0078|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.5439|±  |0.0469|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7828|±  |0.0294|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8653|±  |0.0246|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.6256|±  |0.0245|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.7395|±  |0.0285|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.8257|±  |0.0163|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7557|±  |0.0377|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.6912|±  |0.0187|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6727|±  |0.0449|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.7143|±  |0.0289|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8607|±  |0.0245|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8200|±  |0.0386|
| - stem                                |      2|none  |      |acc   |↑  |0.5382|±  |0.0086|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.2900|±  |0.0456|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.6148|±  |0.0420|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.7171|±  |0.0367|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.7500|±  |0.0362|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4300|±  |0.0498|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.4700|±  |0.0502|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3500|±  |0.0479|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5000|±  |0.0498|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.7500|±  |0.0435|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.5404|±  |0.0326|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.5931|±  |0.0409|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4656|±  |0.0257|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7516|±  |0.0246|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.4778|±  |0.0351|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.6900|±  |0.0465|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.3630|±  |0.0293|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.4437|±  |0.0406|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.5046|±  |0.0341|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.4911|±  |0.0475|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.6383|±  |0.0038|
| - humanities     |      2|none  |      |acc   |↑  |0.5849|±  |0.0068|
| - other          |      2|none  |      |acc   |↑  |0.7190|±  |0.0078|
| - social sciences|      2|none  |      |acc   |↑  |0.7410|±  |0.0078|
| - stem           |      2|none  |      |acc   |↑  |0.5382|±  |0.0086|

2025-05-13:22:22:40,992 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-13:22:22:41,123 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,132 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,140 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,146 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,148 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,154 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,163 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,165 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,168 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,171 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,182 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,190 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,198 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,204 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,207 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,950 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,965 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,982 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,987 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:41,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,005 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,023 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,034 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,038 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,046 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,797 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,799 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:42,807 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,099 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,103 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,140 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,166 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,170 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,181 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,188 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,192 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,224 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,228 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,268 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,282 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,285 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,292 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,313 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,320 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,327 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,331 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,334 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,338 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,345 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,430 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,432 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,435 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,454 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,461 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,479 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,481 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,507 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,538 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,547 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,553 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,581 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,608 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,627 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,630 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,635 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,637 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:43,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:44,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:44,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:44,615 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:44,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:44,618 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:44,621 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:44,623 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:44,625 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,452 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,469 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,471 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,474 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,478 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,481 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,489 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,492 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,507 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,522 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,528 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,550 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,553 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,554 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,566 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,569 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,571 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,574 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,581 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,588 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,591 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,594 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,597 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,605 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,608 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,615 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,618 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,621 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,623 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,627 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,630 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,635 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,639 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,641 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,649 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,650 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,653 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,658 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,661 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,662 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,664 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,665 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,671 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,673 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,674 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,676 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,677 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,684 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,689 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,692 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,694 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,711 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,714 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,723 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,729 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,736 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,740 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,751 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,759 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,787 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,797 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,808 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,812 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,814 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,820 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,826 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,829 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,831 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,835 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,837 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,846 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,853 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,856 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,861 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,862 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,864 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,868 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,870 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,874 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,877 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,880 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,883 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,885 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,960 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,963 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:45,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:48,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:48,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:22:48,291 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-13:22:22:48,294 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-13:22:22:48,294 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent_kl/checkpoint-490', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-13:22:22:49,017 INFO     [huggingface.py:130] Using device 'cuda:5'
2025-05-13:22:22:49,528 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:5'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:05,  1.81s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:03<00:03,  1.54s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:05<00:02,  2.07s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:08<00:00,  2.44s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:08<00:00,  2.22s/it]
2025-05-13:22:23:14,746 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,747 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,748 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,749 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,749 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:23:14,749 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-13:22:23:14,753 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 858.61it/s]100%|██████████| 100/100 [00:00<00:00, 859.29it/s]
2025-05-13:22:23:14,874 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 28%|██▊       | 87/310 [00:00<00:00, 864.54it/s] 56%|█████▌    | 174/310 [00:00<00:00, 863.14it/s] 85%|████████▍ | 262/310 [00:00<00:00, 867.86it/s]100%|██████████| 310/310 [00:00<00:00, 867.48it/s]
2025-05-13:22:23:15,241 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 869.36it/s]100%|██████████| 100/100 [00:00<00:00, 870.92it/s]
2025-05-13:22:23:15,359 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 61%|██████▏   | 89/145 [00:00<00:00, 880.38it/s]100%|██████████| 145/145 [00:00<00:00, 880.90it/s]
2025-05-13:22:23:15,529 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 864.55it/s]100%|██████████| 100/100 [00:00<00:00, 864.45it/s]
2025-05-13:22:23:15,649 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 43%|████▎     | 87/203 [00:00<00:00, 869.76it/s] 86%|████████▌ | 175/203 [00:00<00:00, 870.77it/s]100%|██████████| 203/203 [00:00<00:00, 869.69it/s]
2025-05-13:22:23:15,889 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 58%|█████▊    | 88/152 [00:00<00:00, 870.87it/s]100%|██████████| 152/152 [00:00<00:00, 870.95it/s]
2025-05-13:22:23:16,069 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 86%|████████▋ | 88/102 [00:00<00:00, 877.09it/s]100%|██████████| 102/102 [00:00<00:00, 876.79it/s]
2025-05-13:22:23:16,190 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 863.54it/s]100%|██████████| 100/100 [00:00<00:00, 865.98it/s]
2025-05-13:22:23:16,309 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 61%|██████    | 88/144 [00:00<00:00, 876.24it/s]100%|██████████| 144/144 [00:00<00:00, 878.34it/s]
2025-05-13:22:23:16,478 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 37%|███▋      | 87/235 [00:00<00:00, 864.85it/s] 74%|███████▍  | 174/235 [00:00<00:00, 861.98it/s]100%|██████████| 235/235 [00:00<00:00, 865.42it/s]
2025-05-13:22:23:16,757 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 79%|███████▊  | 88/112 [00:00<00:00, 872.29it/s]100%|██████████| 112/112 [00:00<00:00, 868.01it/s]
2025-05-13:22:23:16,891 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 33%|███▎      | 88/270 [00:00<00:00, 874.14it/s] 65%|██████▌   | 176/270 [00:00<00:00, 876.66it/s] 98%|█████████▊| 264/270 [00:00<00:00, 877.04it/s]100%|██████████| 270/270 [00:00<00:00, 876.56it/s]
2025-05-13:22:23:17,208 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 873.64it/s]100%|██████████| 100/100 [00:00<00:00, 872.31it/s]
2025-05-13:22:23:17,326 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 85%|████████▌ | 85/100 [00:00<00:00, 843.62it/s]100%|██████████| 100/100 [00:00<00:00, 843.51it/s]
2025-05-13:22:23:17,449 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 63%|██████▎   | 85/135 [00:00<00:00, 843.90it/s]100%|██████████| 135/135 [00:00<00:00, 843.71it/s]
2025-05-13:22:23:17,613 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 22%|██▏       | 83/378 [00:00<00:00, 829.83it/s] 45%|████▍     | 169/378 [00:00<00:00, 843.03it/s] 68%|██████▊   | 258/378 [00:00<00:00, 859.92it/s] 92%|█████████▏| 346/378 [00:00<00:00, 864.46it/s]100%|██████████| 378/378 [00:00<00:00, 857.23it/s]
2025-05-13:22:23:18,067 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 58%|█████▊    | 88/151 [00:00<00:00, 871.46it/s]100%|██████████| 151/151 [00:00<00:00, 869.70it/s]
2025-05-13:22:23:18,246 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 41%|████      | 88/216 [00:00<00:00, 878.24it/s] 81%|████████▏ | 176/216 [00:00<00:00, 875.12it/s]100%|██████████| 216/216 [00:00<00:00, 872.70it/s]
2025-05-13:22:23:18,501 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 33%|███▎      | 88/265 [00:00<00:00, 871.62it/s] 66%|██████▋   | 176/265 [00:00<00:00, 870.00it/s]100%|█████████▉| 264/265 [00:00<00:00, 870.68it/s]100%|██████████| 265/265 [00:00<00:00, 870.14it/s]
2025-05-13:22:23:18,815 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 86%|████████▌ | 86/100 [00:00<00:00, 858.83it/s]100%|██████████| 100/100 [00:00<00:00, 860.49it/s]
2025-05-13:22:23:18,935 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 84%|████████▍ | 87/103 [00:00<00:00, 863.28it/s]100%|██████████| 103/103 [00:00<00:00, 856.49it/s]
2025-05-13:22:23:19,059 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 28%|██▊       | 87/306 [00:00<00:00, 862.72it/s] 57%|█████▋    | 175/306 [00:00<00:00, 870.21it/s] 86%|████████▋ | 264/306 [00:00<00:00, 876.05it/s]100%|██████████| 306/306 [00:00<00:00, 867.47it/s]
2025-05-13:22:23:19,422 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 51%|█████     | 88/173 [00:00<00:00, 876.73it/s]100%|██████████| 173/173 [00:00<00:00, 875.77it/s]
2025-05-13:22:23:19,626 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 53%|█████▎    | 88/166 [00:00<00:00, 874.19it/s]100%|██████████| 166/166 [00:00<00:00, 877.11it/s]
2025-05-13:22:23:19,821 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 32%|███▏      | 87/272 [00:00<00:00, 868.77it/s] 64%|██████▍   | 174/272 [00:00<00:00, 860.62it/s] 96%|█████████▌| 261/272 [00:00<00:00, 861.55it/s]100%|██████████| 272/272 [00:00<00:00, 862.05it/s]
2025-05-13:22:23:20,146 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 11%|█         | 87/783 [00:00<00:00, 861.75it/s] 22%|██▏       | 174/783 [00:00<00:00, 857.95it/s] 33%|███▎      | 260/783 [00:00<00:00, 858.17it/s] 44%|████▍     | 348/783 [00:00<00:00, 863.79it/s] 56%|█████▌    | 435/783 [00:00<00:00, 863.90it/s] 67%|██████▋   | 522/783 [00:00<00:00, 857.60it/s] 78%|███████▊  | 608/783 [00:00<00:00, 856.18it/s] 89%|████████▊ | 694/783 [00:00<00:00, 855.65it/s]100%|█████████▉| 780/783 [00:00<00:00, 853.96it/s]100%|██████████| 783/783 [00:00<00:00, 857.21it/s]
2025-05-13:22:23:21,084 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 86%|████████▌ | 86/100 [00:00<00:00, 855.18it/s]100%|██████████| 100/100 [00:00<00:00, 854.90it/s]
2025-05-13:22:23:21,205 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 85%|████████▌ | 85/100 [00:00<00:00, 847.27it/s]100%|██████████| 100/100 [00:00<00:00, 849.54it/s]
2025-05-13:22:23:21,327 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 30%|███       | 86/282 [00:00<00:00, 857.42it/s] 61%|██████▏   | 173/282 [00:00<00:00, 863.42it/s] 92%|█████████▏| 260/282 [00:00<00:00, 854.11it/s]100%|██████████| 282/282 [00:00<00:00, 855.59it/s]
2025-05-13:22:23:21,666 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:03, 70.23it/s] 44%|████▎     | 102/234 [00:00<00:00, 331.95it/s] 78%|███████▊  | 183/234 [00:00<00:00, 488.30it/s]100%|██████████| 234/234 [00:00<00:00, 436.64it/s]
2025-05-13:22:23:22,210 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 37%|███▋      | 82/223 [00:00<00:00, 810.91it/s] 74%|███████▍  | 165/223 [00:00<00:00, 820.25it/s]100%|██████████| 223/223 [00:00<00:00, 820.73it/s]
2025-05-13:22:23:22,490 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 75%|███████▍  | 82/110 [00:00<00:00, 812.87it/s]100%|██████████| 110/110 [00:00<00:00, 807.43it/s]
2025-05-13:22:23:22,630 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 40%|████      | 81/201 [00:00<00:00, 809.48it/s] 81%|████████  | 162/201 [00:00<00:00, 809.40it/s]100%|██████████| 201/201 [00:00<00:00, 810.46it/s]
2025-05-13:22:23:22,886 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 42%|████▏     | 83/198 [00:00<00:00, 825.70it/s] 84%|████████▍ | 166/198 [00:00<00:00, 817.09it/s]100%|██████████| 198/198 [00:00<00:00, 815.79it/s]
2025-05-13:22:23:23,136 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 33%|███▎      | 82/245 [00:00<00:00, 813.27it/s] 67%|██████▋   | 164/245 [00:00<00:00, 808.95it/s]100%|██████████| 245/245 [00:00<00:00, 815.79it/s]
2025-05-13:22:23:23,446 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 16%|█▌        | 86/545 [00:00<00:00, 853.23it/s] 32%|███▏      | 172/545 [00:00<00:00, 854.58it/s] 48%|████▊     | 259/545 [00:00<00:00, 858.65it/s] 63%|██████▎   | 345/545 [00:00<00:00, 850.82it/s] 79%|███████▉  | 431/545 [00:00<00:00, 852.07it/s] 95%|█████████▍| 517/545 [00:00<00:00, 851.49it/s]100%|██████████| 545/545 [00:00<00:00, 852.17it/s]
2025-05-13:22:23:24,104 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 84%|████████▍ | 84/100 [00:00<00:00, 837.79it/s]100%|██████████| 100/100 [00:00<00:00, 836.02it/s]
2025-05-13:22:23:24,228 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 22%|██▏       | 87/390 [00:00<00:00, 859.89it/s] 44%|████▍     | 173/390 [00:00<00:00, 859.44it/s] 66%|██████▋   | 259/390 [00:00<00:00, 857.98it/s] 88%|████████▊ | 345/390 [00:00<00:00, 825.32it/s]100%|██████████| 390/390 [00:00<00:00, 828.58it/s]
2025-05-13:22:23:24,712 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 33%|███▎      | 79/238 [00:00<00:00, 786.37it/s] 68%|██████▊   | 161/238 [00:00<00:00, 802.92it/s]100%|██████████| 238/238 [00:00<00:00, 805.70it/s]
2025-05-13:22:23:25,017 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 67%|██████▋   | 76/114 [00:00<00:00, 754.35it/s]100%|██████████| 114/114 [00:00<00:00, 759.11it/s]
2025-05-13:22:23:25,172 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 13%|█▎        | 80/612 [00:00<00:00, 795.60it/s] 26%|██▋       | 162/612 [00:00<00:00, 806.61it/s] 40%|████      | 246/612 [00:00<00:00, 819.46it/s] 54%|█████▍    | 329/612 [00:00<00:00, 822.46it/s] 67%|██████▋   | 412/612 [00:00<00:00, 776.77it/s] 80%|████████  | 491/612 [00:00<00:00, 772.78it/s] 93%|█████████▎| 572/612 [00:00<00:00, 784.35it/s]100%|██████████| 612/612 [00:00<00:00, 786.22it/s]
2025-05-13:22:23:25,972 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 60%|██████    | 79/131 [00:00<00:00, 779.09it/s]100%|██████████| 131/131 [00:00<00:00, 751.14it/s]
2025-05-13:22:23:26,152 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 38%|███▊      | 74/193 [00:00<00:00, 738.99it/s] 78%|███████▊  | 150/193 [00:00<00:00, 746.31it/s]100%|██████████| 193/193 [00:00<00:00, 753.17it/s]
2025-05-13:22:23:26,417 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s] 10%|▉         | 86/895 [00:00<00:00, 856.52it/s] 19%|█▉        | 172/895 [00:00<00:00, 770.99it/s] 28%|██▊       | 250/895 [00:00<00:00, 756.73it/s] 37%|███▋      | 329/895 [00:00<00:00, 765.69it/s] 46%|████▌     | 412/895 [00:00<00:00, 785.32it/s] 56%|█████▌    | 498/895 [00:00<00:00, 808.87it/s] 65%|██████▌   | 585/895 [00:00<00:00, 828.30it/s] 75%|███████▍  | 668/895 [00:00<00:00, 800.47it/s] 84%|████████▎ | 749/895 [00:00<00:00, 780.85it/s] 93%|█████████▎| 828/895 [00:01<00:00, 783.08it/s]100%|██████████| 895/895 [00:01<00:00, 792.22it/s]
2025-05-13:22:23:27,578 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 37%|███▋      | 88/237 [00:00<00:00, 874.69it/s] 74%|███████▍  | 176/237 [00:00<00:00, 854.61it/s]100%|██████████| 237/237 [00:00<00:00, 838.75it/s]
2025-05-13:22:23:27,869 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 44%|████▎     | 72/165 [00:00<00:00, 717.08it/s] 88%|████████▊ | 146/165 [00:00<00:00, 729.14it/s]100%|██████████| 165/165 [00:00<00:00, 729.38it/s]
2025-05-13:22:23:28,104 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 26%|██▌       | 81/311 [00:00<00:00, 806.15it/s] 53%|█████▎    | 166/311 [00:00<00:00, 830.80it/s] 81%|████████  | 252/311 [00:00<00:00, 840.43it/s]100%|██████████| 311/311 [00:00<00:00, 809.44it/s]
2025-05-13:22:23:28,501 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 23%|██▎       | 78/346 [00:00<00:00, 774.62it/s] 47%|████▋     | 162/346 [00:00<00:00, 807.63it/s] 70%|███████   | 243/346 [00:00<00:00, 806.49it/s] 94%|█████████▎| 324/346 [00:00<00:00, 762.91it/s]100%|██████████| 346/346 [00:00<00:00, 771.87it/s]
2025-05-13:22:23:28,963 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 39%|███▊      | 79/204 [00:00<00:00, 785.73it/s] 80%|████████  | 164/204 [00:00<00:00, 823.28it/s]100%|██████████| 204/204 [00:00<00:00, 792.86it/s]
2025-05-13:22:23:29,229 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 58%|█████▊    | 70/121 [00:00<00:00, 699.66it/s]100%|██████████| 121/121 [00:00<00:00, 706.66it/s]
2025-05-13:22:23:29,406 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  5%|▌         | 79/1534 [00:00<00:01, 788.16it/s] 11%|█         | 164/1534 [00:00<00:01, 823.15it/s] 16%|█▋        | 251/1534 [00:00<00:01, 842.41it/s] 22%|██▏       | 339/1534 [00:00<00:01, 854.73it/s] 28%|██▊       | 428/1534 [00:00<00:01, 865.34it/s] 34%|███▎      | 517/1534 [00:00<00:01, 873.29it/s] 40%|███▉      | 606/1534 [00:00<00:01, 877.75it/s] 45%|████▌     | 695/1534 [00:00<00:00, 881.21it/s] 51%|█████     | 784/1534 [00:00<00:00, 877.92it/s] 57%|█████▋    | 873/1534 [00:01<00:00, 880.08it/s] 63%|██████▎   | 962/1534 [00:01<00:00, 879.84it/s] 69%|██████▊   | 1051/1534 [00:01<00:00, 880.37it/s] 74%|███████▍  | 1140/1534 [00:01<00:00, 850.23it/s] 80%|███████▉  | 1226/1534 [00:01<00:00, 800.29it/s] 85%|████████▌ | 1307/1534 [00:01<00:00, 780.46it/s] 90%|█████████ | 1388/1534 [00:01<00:00, 786.41it/s] 96%|█████████▌| 1470/1534 [00:01<00:00, 795.96it/s]100%|██████████| 1534/1534 [00:01<00:00, 836.42it/s]
2025-05-13:22:23:31,298 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 49%|████▉     | 84/171 [00:00<00:00, 835.63it/s] 99%|█████████▉| 170/171 [00:00<00:00, 847.29it/s]100%|██████████| 171/171 [00:00<00:00, 844.85it/s]
2025-05-13:22:23:31,507 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 81%|████████▏ | 88/108 [00:00<00:00, 877.22it/s]100%|██████████| 108/108 [00:00<00:00, 875.84it/s]
2025-05-13:22:23:31,635 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 71%|███████   | 89/126 [00:00<00:00, 887.68it/s]100%|██████████| 126/126 [00:00<00:00, 888.69it/s]
2025-05-13:22:23:31,781 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 27%|██▋       | 88/324 [00:00<00:01, 230.63it/s] 49%|████▉     | 160/324 [00:00<00:00, 363.45it/s] 73%|███████▎  | 236/324 [00:00<00:00, 473.90it/s] 98%|█████████▊| 316/324 [00:00<00:00, 566.49it/s]100%|██████████| 324/324 [00:00<00:00, 468.01it/s]
2025-05-13:22:23:32,484 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 54%|█████▍    | 88/163 [00:00<00:00, 875.11it/s]100%|██████████| 163/163 [00:00<00:00, 875.05it/s]
2025-05-13:22:23:32,676 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<31:49:19,  2.04s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:03<38:00, 24.60it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:04<23:30, 39.72it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:05<18:33, 50.28it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<16:05, 57.91it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<14:32, 63.97it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:07<13:29, 68.91it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:08<12:44, 72.85it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<12:07, 76.53it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<11:40, 79.41it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:10<11:16, 82.09it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:11<10:59, 84.09it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:44, 85.96it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:12<10:32, 87.44it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:13<10:13, 90.04it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:13<10:00, 91.98it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:14<09:46, 94.03it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:15<09:36, 95.61it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:15<09:27, 96.90it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:16<09:18, 98.35it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:17<09:11, 99.49it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:17<09:06, 100.36it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:18<09:01, 101.06it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:18<08:53, 102.44it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:19<08:44, 104.07it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:20<08:38, 105.25it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:20<08:29, 107.00it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:21<08:21, 108.47it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:21<08:15, 109.63it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:22<08:11, 110.51it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:22<08:07, 111.24it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:23<08:01, 112.49it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:24<07:57, 113.38it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:24<07:53, 114.11it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:25<07:50, 114.69it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:25<07:48, 115.20it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:26<07:45, 115.62it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:26<07:41, 116.51it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:27<07:38, 117.32it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:27<07:34, 117.99it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:28<07:32, 118.52it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:28<07:30, 118.92it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:29<07:28, 119.26it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:30<07:26, 119.63it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:30<07:18, 121.70it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:31<07:12, 123.13it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:31<07:07, 124.35it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:32<07:04, 125.23it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:32<07:01, 126.11it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:33<06:58, 126.81it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:33<06:55, 127.33it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:34<06:54, 127.77it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:34<06:52, 128.16it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:35<06:48, 129.18it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:35<06:45, 129.97it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:35<06:43, 130.57it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:36<06:41, 131.05it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:36<06:38, 131.75it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:37<06:36, 132.20it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:37<06:35, 132.52it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:38<06:33, 132.82it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:38<06:30, 133.77it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:39<06:28, 134.44it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:39<06:26, 135.02it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:40<06:24, 135.52it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:40<06:22, 136.05it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:41<06:20, 136.42it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:41<06:19, 136.60it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:42<06:18, 136.87it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:42<06:17, 137.22it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:43<06:16, 137.44it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:43<06:13, 138.38it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:43<06:10, 139.15it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:44<06:08, 139.91it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:44<06:06, 140.37it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:45<06:05, 140.72it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:45<06:03, 141.13it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:46<05:59, 142.54it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:46<05:56, 143.68it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:47<05:53, 144.52it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:47<05:51, 145.10it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:47<05:44, 147.85it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:48<05:39, 149.80it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:48<05:36, 151.32it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:49<05:33, 152.39it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:49<05:30, 153.27it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:50<05:29, 153.84it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:50<05:27, 154.48it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:50<05:26, 154.91it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:51<05:25, 155.27it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:51<05:23, 155.84it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:52<05:22, 156.04it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:52<05:19, 157.21it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:52<05:17, 158.16it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:53<05:15, 158.88it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:53<05:14, 159.46it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:54<05:12, 159.84it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:54<05:11, 160.37it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:54<05:10, 160.88it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:55<05:08, 161.46it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:55<05:07, 162.10it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:56<05:05, 162.49it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:56<05:04, 162.89it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:56<05:03, 163.28it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:57<05:02, 163.60it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:57<05:01, 163.95it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:57<05:00, 164.19it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:58<04:57, 165.51it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:58<04:55, 166.63it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:59<04:53, 167.49it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:59<04:52, 168.20it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:59<04:50, 168.75it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [01:00<04:49, 169.22it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [01:00<04:40, 174.26it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [01:00<04:34, 177.93it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [01:01<04:30, 180.56it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [01:01<04:26, 182.60it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [01:01<04:24, 184.20it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [01:02<04:22, 185.49it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [01:02<04:19, 186.84it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:02<04:18, 187.70it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:03<04:16, 188.42it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:03<04:15, 189.11it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:03<04:14, 189.74it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:04<04:13, 190.28it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:04<04:12, 190.53it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:04<04:10, 192.27it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:05<04:08, 193.57it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:05<04:06, 194.52it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:05<04:05, 195.38it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:06<04:04, 196.06it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:06<04:03, 196.56it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:06<04:01, 197.23it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:07<04:00, 198.34it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:07<03:58, 199.37it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:07<03:57, 200.09it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:08<03:56, 200.85it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:08<03:55, 201.48it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:08<03:54, 202.07it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:09<03:51, 203.91it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:09<03:49, 205.30it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:09<03:48, 206.29it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:10<03:47, 207.09it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:10<03:46, 207.48it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:10<03:45, 208.16it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:10<03:44, 208.85it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:11<03:43, 209.82it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:11<03:41, 210.76it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:11<03:40, 211.42it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:12<03:39, 212.80it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:12<03:38, 213.54it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:12<03:36, 214.66it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:13<03:35, 215.29it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:13<03:33, 217.48it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:13<03:31, 218.93it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:13<03:29, 220.27it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:14<03:28, 221.42it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:14<03:27, 222.65it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:14<03:26, 223.22it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:15<03:25, 223.71it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:15<03:24, 224.41it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:15<03:20, 228.91it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:15<03:16, 232.61it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:16<03:14, 235.42it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:16<03:12, 237.45it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:16<03:10, 238.78it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:16<03:09, 240.06it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:17<03:08, 241.00it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:17<03:07, 241.61it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:17<03:07, 242.22it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:17<03:04, 244.99it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:18<03:02, 247.32it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:18<03:01, 249.07it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:18<03:00, 250.51it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:18<02:59, 251.36it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:19<02:58, 252.13it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:19<02:57, 253.23it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:19<02:56, 253.86it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:19<02:56, 254.15it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:20<02:55, 254.58it/s]Running loglikelihood requests:  21%|██        | 11525/56168 [01:20<02:51, 260.23it/s]Running loglikelihood requests:  21%|██        | 11589/56168 [01:20<02:51, 260.09it/s]Running loglikelihood requests:  21%|██        | 11653/56168 [01:20<02:51, 259.90it/s]Running loglikelihood requests:  21%|██        | 11717/56168 [01:21<02:50, 259.97it/s]Running loglikelihood requests:  21%|██        | 11781/56168 [01:21<02:50, 259.95it/s]Running loglikelihood requests:  21%|██        | 11845/56168 [01:21<02:50, 259.98it/s]Running loglikelihood requests:  21%|██        | 11909/56168 [01:21<02:49, 260.37it/s]Running loglikelihood requests:  21%|██▏       | 11973/56168 [01:22<02:49, 261.02it/s]Running loglikelihood requests:  21%|██▏       | 12037/56168 [01:22<02:49, 260.98it/s]Running loglikelihood requests:  22%|██▏       | 12101/56168 [01:22<02:48, 261.05it/s]Running loglikelihood requests:  22%|██▏       | 12165/56168 [01:22<02:48, 261.17it/s]Running loglikelihood requests:  22%|██▏       | 12229/56168 [01:23<02:48, 261.29it/s]Running loglikelihood requests:  22%|██▏       | 12293/56168 [01:23<02:46, 264.08it/s]Running loglikelihood requests:  22%|██▏       | 12357/56168 [01:23<02:44, 266.25it/s]Running loglikelihood requests:  22%|██▏       | 12421/56168 [01:23<02:43, 268.11it/s]Running loglikelihood requests:  22%|██▏       | 12485/56168 [01:24<02:42, 269.63it/s]Running loglikelihood requests:  22%|██▏       | 12549/56168 [01:24<02:41, 270.79it/s]Running loglikelihood requests:  22%|██▏       | 12613/56168 [01:24<02:40, 271.58it/s]Running loglikelihood requests:  23%|██▎       | 12677/56168 [01:24<02:39, 272.30it/s]Running loglikelihood requests:  23%|██▎       | 12741/56168 [01:25<02:39, 272.76it/s]Running loglikelihood requests:  23%|██▎       | 12805/56168 [01:25<02:38, 273.83it/s]Running loglikelihood requests:  23%|██▎       | 12869/56168 [01:25<02:37, 274.30it/s]Running loglikelihood requests:  23%|██▎       | 12933/56168 [01:25<02:37, 274.29it/s]Running loglikelihood requests:  23%|██▎       | 12997/56168 [01:25<02:37, 274.24it/s]Running loglikelihood requests:  23%|██▎       | 13061/56168 [01:26<02:36, 274.60it/s]Running loglikelihood requests:  23%|██▎       | 13125/56168 [01:26<02:36, 274.86it/s]Running loglikelihood requests:  23%|██▎       | 13189/56168 [01:26<02:36, 274.96it/s]Running loglikelihood requests:  24%|██▎       | 13253/56168 [01:26<02:36, 275.05it/s]Running loglikelihood requests:  24%|██▎       | 13317/56168 [01:27<02:35, 275.49it/s]Running loglikelihood requests:  24%|██▍       | 13381/56168 [01:27<02:35, 275.76it/s]Running loglikelihood requests:  24%|██▍       | 13445/56168 [01:27<02:34, 275.75it/s]Running loglikelihood requests:  24%|██▍       | 13509/56168 [01:27<02:32, 279.33it/s]Running loglikelihood requests:  24%|██▍       | 13573/56168 [01:28<02:31, 281.83it/s]Running loglikelihood requests:  24%|██▍       | 13637/56168 [01:28<02:29, 283.96it/s]Running loglikelihood requests:  24%|██▍       | 13701/56168 [01:28<02:28, 285.50it/s]Running loglikelihood requests:  25%|██▍       | 13765/56168 [01:28<02:28, 286.46it/s]Running loglikelihood requests:  25%|██▍       | 13829/56168 [01:28<02:27, 287.75it/s]Running loglikelihood requests:  25%|██▍       | 13893/56168 [01:29<02:26, 288.17it/s]Running loglikelihood requests:  25%|██▍       | 13957/56168 [01:29<02:26, 288.43it/s]Running loglikelihood requests:  25%|██▍       | 14021/56168 [01:29<02:25, 289.62it/s]Running loglikelihood requests:  25%|██▌       | 14085/56168 [01:29<02:25, 289.65it/s]Running loglikelihood requests:  25%|██▌       | 14149/56168 [01:30<02:24, 289.81it/s]Running loglikelihood requests:  25%|██▌       | 14213/56168 [01:30<02:24, 290.19it/s]Running loglikelihood requests:  25%|██▌       | 14277/56168 [01:30<02:24, 290.70it/s]Running loglikelihood requests:  26%|██▌       | 14341/56168 [01:30<02:23, 291.20it/s]Running loglikelihood requests:  26%|██▌       | 14405/56168 [01:30<02:23, 291.60it/s]Running loglikelihood requests:  26%|██▌       | 14469/56168 [01:31<02:23, 291.60it/s]Running loglikelihood requests:  26%|██▌       | 14533/56168 [01:31<02:22, 291.69it/s]Running loglikelihood requests:  26%|██▌       | 14597/56168 [01:31<02:22, 291.98it/s]Running loglikelihood requests:  26%|██▌       | 14661/56168 [01:31<02:22, 292.30it/s]Running loglikelihood requests:  26%|██▌       | 14725/56168 [01:31<02:21, 292.61it/s]Running loglikelihood requests:  26%|██▋       | 14789/56168 [01:32<02:21, 292.97it/s]Running loglikelihood requests:  26%|██▋       | 14853/56168 [01:32<02:20, 293.24it/s]Running loglikelihood requests:  27%|██▋       | 14917/56168 [01:32<02:20, 293.44it/s]Running loglikelihood requests:  27%|██▋       | 14981/56168 [01:32<02:20, 293.49it/s]Running loglikelihood requests:  27%|██▋       | 15045/56168 [01:33<02:20, 293.43it/s]Running loglikelihood requests:  27%|██▋       | 15109/56168 [01:33<02:19, 293.83it/s]Running loglikelihood requests:  27%|██▋       | 15173/56168 [01:33<02:19, 294.10it/s]Running loglikelihood requests:  27%|██▋       | 15237/56168 [01:33<02:19, 294.01it/s]Running loglikelihood requests:  27%|██▋       | 15301/56168 [01:33<02:19, 293.73it/s]Running loglikelihood requests:  27%|██▋       | 15365/56168 [01:34<02:18, 293.88it/s]Running loglikelihood requests:  27%|██▋       | 15429/56168 [01:34<02:18, 293.82it/s]Running loglikelihood requests:  28%|██▊       | 15493/56168 [01:34<02:17, 296.44it/s]Running loglikelihood requests:  28%|██▊       | 15557/56168 [01:34<02:16, 297.97it/s]Running loglikelihood requests:  28%|██▊       | 15621/56168 [01:35<02:15, 299.29it/s]Running loglikelihood requests:  28%|██▊       | 15685/56168 [01:35<02:14, 300.07it/s]Running loglikelihood requests:  28%|██▊       | 15749/56168 [01:35<02:14, 301.12it/s]Running loglikelihood requests:  28%|██▊       | 15813/56168 [01:35<02:13, 301.45it/s]Running loglikelihood requests:  28%|██▊       | 15877/56168 [01:35<02:13, 301.74it/s]Running loglikelihood requests:  28%|██▊       | 15945/56168 [01:36<02:10, 307.36it/s]Running loglikelihood requests:  29%|██▊       | 16009/56168 [01:36<02:11, 305.82it/s]Running loglikelihood requests:  29%|██▊       | 16073/56168 [01:36<02:11, 304.88it/s]Running loglikelihood requests:  29%|██▊       | 16137/56168 [01:36<02:11, 304.44it/s]Running loglikelihood requests:  29%|██▉       | 16201/56168 [01:36<02:11, 304.30it/s]Running loglikelihood requests:  29%|██▉       | 16265/56168 [01:37<02:11, 304.28it/s]Running loglikelihood requests:  29%|██▉       | 16329/56168 [01:37<02:11, 303.89it/s]Running loglikelihood requests:  29%|██▉       | 16393/56168 [01:37<02:10, 303.65it/s]Running loglikelihood requests:  29%|██▉       | 16457/56168 [01:37<02:10, 303.70it/s]Running loglikelihood requests:  29%|██▉       | 16521/56168 [01:37<02:10, 303.53it/s]Running loglikelihood requests:  30%|██▉       | 16585/56168 [01:38<02:10, 303.52it/s]Running loglikelihood requests:  30%|██▉       | 16649/56168 [01:38<02:10, 303.61it/s]Running loglikelihood requests:  30%|██▉       | 16713/56168 [01:38<02:09, 303.63it/s]Running loglikelihood requests:  30%|██▉       | 16777/56168 [01:38<02:09, 303.54it/s]Running loglikelihood requests:  30%|██▉       | 16841/56168 [01:39<02:09, 303.44it/s]Running loglikelihood requests:  30%|███       | 16905/56168 [01:39<02:08, 304.53it/s]Running loglikelihood requests:  30%|███       | 16969/56168 [01:39<02:08, 305.01it/s]Running loglikelihood requests:  30%|███       | 17033/56168 [01:39<02:08, 305.64it/s]Running loglikelihood requests:  30%|███       | 17097/56168 [01:39<02:07, 305.89it/s]Running loglikelihood requests:  31%|███       | 17161/56168 [01:40<02:07, 306.05it/s]Running loglikelihood requests:  31%|███       | 17225/56168 [01:40<02:07, 306.37it/s]Running loglikelihood requests:  31%|███       | 17289/56168 [01:40<02:06, 307.40it/s]Running loglikelihood requests:  31%|███       | 17353/56168 [01:40<02:06, 308.05it/s]Running loglikelihood requests:  31%|███       | 17417/56168 [01:40<02:05, 308.57it/s]Running loglikelihood requests:  31%|███       | 17481/56168 [01:41<02:05, 309.07it/s]Running loglikelihood requests:  31%|███       | 17545/56168 [01:41<02:04, 309.42it/s]Running loglikelihood requests:  31%|███▏      | 17609/56168 [01:41<02:04, 309.45it/s]Running loglikelihood requests:  31%|███▏      | 17673/56168 [01:41<02:04, 309.41it/s]Running loglikelihood requests:  32%|███▏      | 17737/56168 [01:41<02:04, 309.60it/s]Running loglikelihood requests:  32%|███▏      | 17801/56168 [01:42<02:03, 309.70it/s]Running loglikelihood requests:  32%|███▏      | 17865/56168 [01:42<02:03, 309.67it/s]Running loglikelihood requests:  32%|███▏      | 17929/56168 [01:42<02:03, 309.71it/s]Running loglikelihood requests:  32%|███▏      | 17993/56168 [01:42<02:03, 309.83it/s]Running loglikelihood requests:  32%|███▏      | 18057/56168 [01:42<02:02, 309.88it/s]Running loglikelihood requests:  32%|███▏      | 18121/56168 [01:43<02:02, 309.67it/s]Running loglikelihood requests:  32%|███▏      | 18185/56168 [01:43<02:02, 309.44it/s]Running loglikelihood requests:  32%|███▏      | 18249/56168 [01:43<02:02, 309.80it/s]Running loglikelihood requests:  33%|███▎      | 18313/56168 [01:43<02:02, 310.12it/s]Running loglikelihood requests:  33%|███▎      | 18377/56168 [01:43<02:01, 310.08it/s]Running loglikelihood requests:  33%|███▎      | 18441/56168 [01:44<02:01, 309.94it/s]Running loglikelihood requests:  33%|███▎      | 18505/56168 [01:44<02:01, 310.03it/s]Running loglikelihood requests:  33%|███▎      | 18569/56168 [01:44<02:01, 310.00it/s]Running loglikelihood requests:  33%|███▎      | 18633/56168 [01:44<02:01, 309.76it/s]Running loglikelihood requests:  33%|███▎      | 18697/56168 [01:45<02:00, 310.59it/s]Running loglikelihood requests:  33%|███▎      | 18761/56168 [01:45<02:00, 311.43it/s]Running loglikelihood requests:  34%|███▎      | 18829/56168 [01:45<01:57, 317.84it/s]Running loglikelihood requests:  34%|███▎      | 18893/56168 [01:45<01:57, 316.54it/s]Running loglikelihood requests:  34%|███▍      | 18957/56168 [01:45<01:57, 315.49it/s]Running loglikelihood requests:  34%|███▍      | 19021/56168 [01:46<01:58, 314.79it/s]Running loglikelihood requests:  34%|███▍      | 19085/56168 [01:46<01:58, 314.17it/s]Running loglikelihood requests:  34%|███▍      | 19149/56168 [01:46<01:57, 314.11it/s]Running loglikelihood requests:  34%|███▍      | 19213/56168 [01:46<01:57, 313.98it/s]Running loglikelihood requests:  34%|███▍      | 19277/56168 [01:46<01:57, 314.02it/s]Running loglikelihood requests:  34%|███▍      | 19341/56168 [01:47<01:57, 313.71it/s]Running loglikelihood requests:  35%|███▍      | 19405/56168 [01:47<01:57, 313.75it/s]Running loglikelihood requests:  35%|███▍      | 19469/56168 [01:47<01:56, 313.76it/s]Running loglikelihood requests:  35%|███▍      | 19533/56168 [01:47<01:56, 313.58it/s]Running loglikelihood requests:  35%|███▍      | 19597/56168 [01:47<01:56, 313.82it/s]Running loglikelihood requests:  35%|███▌      | 19661/56168 [01:48<01:56, 314.07it/s]Running loglikelihood requests:  35%|███▌      | 19725/56168 [01:48<01:55, 314.27it/s]Running loglikelihood requests:  35%|███▌      | 19789/56168 [01:48<01:55, 314.50it/s]Running loglikelihood requests:  35%|███▌      | 19853/56168 [01:48<01:55, 314.73it/s]Running loglikelihood requests:  35%|███▌      | 19917/56168 [01:48<01:55, 314.41it/s]Running loglikelihood requests:  36%|███▌      | 19981/56168 [01:49<01:54, 314.78it/s]Running loglikelihood requests:  36%|███▌      | 20045/56168 [01:49<01:54, 315.03it/s]Running loglikelihood requests:  36%|███▌      | 20113/56168 [01:49<01:52, 321.17it/s]Running loglikelihood requests:  36%|███▌      | 20177/56168 [01:49<01:52, 319.60it/s]Running loglikelihood requests:  36%|███▌      | 20241/56168 [01:49<01:52, 318.30it/s]Running loglikelihood requests:  36%|███▌      | 20305/56168 [01:50<01:52, 317.98it/s]Running loglikelihood requests:  36%|███▋      | 20369/56168 [01:50<01:52, 317.78it/s]Running loglikelihood requests:  36%|███▋      | 20433/56168 [01:50<01:52, 317.58it/s]Running loglikelihood requests:  36%|███▋      | 20497/56168 [01:50<01:52, 317.53it/s]Running loglikelihood requests:  37%|███▋      | 20561/56168 [01:50<01:52, 317.33it/s]Running loglikelihood requests:  37%|███▋      | 20625/56168 [01:51<01:51, 317.55it/s]Running loglikelihood requests:  37%|███▋      | 20689/56168 [01:51<01:51, 317.89it/s]Running loglikelihood requests:  37%|███▋      | 20757/56168 [01:51<01:49, 323.82it/s]Running loglikelihood requests:  37%|███▋      | 20821/56168 [01:51<01:49, 322.14it/s]Running loglikelihood requests:  37%|███▋      | 20885/56168 [01:51<01:49, 320.82it/s]Running loglikelihood requests:  37%|███▋      | 20949/56168 [01:52<01:50, 320.17it/s]Running loglikelihood requests:  37%|███▋      | 21013/56168 [01:52<01:49, 319.81it/s]Running loglikelihood requests:  38%|███▊      | 21077/56168 [01:52<01:49, 319.44it/s]Running loglikelihood requests:  38%|███▊      | 21141/56168 [01:52<01:49, 319.33it/s]Running loglikelihood requests:  38%|███▊      | 21205/56168 [01:52<01:49, 319.72it/s]Running loglikelihood requests:  38%|███▊      | 21269/56168 [01:53<01:49, 319.52it/s]Running loglikelihood requests:  38%|███▊      | 21333/56168 [01:53<01:48, 319.60it/s]Running loglikelihood requests:  38%|███▊      | 21401/56168 [01:53<01:46, 325.30it/s]Running loglikelihood requests:  38%|███▊      | 21465/56168 [01:53<01:47, 323.46it/s]Running loglikelihood requests:  38%|███▊      | 21529/56168 [01:53<01:43, 334.01it/s]Running loglikelihood requests:  38%|███▊      | 21593/56168 [01:54<01:41, 341.69it/s]Running loglikelihood requests:  39%|███▊      | 21657/56168 [01:54<01:39, 347.19it/s]Running loglikelihood requests:  39%|███▊      | 21721/56168 [01:54<01:38, 350.94it/s]Running loglikelihood requests:  39%|███▉      | 21785/56168 [01:54<01:37, 354.15it/s]Running loglikelihood requests:  39%|███▉      | 21849/56168 [01:54<01:36, 356.79it/s]Running loglikelihood requests:  39%|███▉      | 21913/56168 [01:54<01:35, 358.94it/s]Running loglikelihood requests:  39%|███▉      | 21977/56168 [01:55<01:35, 359.84it/s]Running loglikelihood requests:  39%|███▉      | 22041/56168 [01:55<01:34, 361.03it/s]Running loglikelihood requests:  39%|███▉      | 22105/56168 [01:55<01:34, 361.91it/s]Running loglikelihood requests:  39%|███▉      | 22169/56168 [01:55<01:33, 362.19it/s]Running loglikelihood requests:  40%|███▉      | 22233/56168 [01:55<01:33, 362.96it/s]Running loglikelihood requests:  40%|███▉      | 22297/56168 [01:56<01:33, 363.16it/s]Running loglikelihood requests:  40%|███▉      | 22361/56168 [01:56<01:32, 363.69it/s]Running loglikelihood requests:  40%|███▉      | 22425/56168 [01:56<01:32, 363.84it/s]Running loglikelihood requests:  40%|████      | 22489/56168 [01:56<01:32, 364.18it/s]Running loglikelihood requests:  40%|████      | 22553/56168 [01:56<01:32, 364.38it/s]Running loglikelihood requests:  40%|████      | 22617/56168 [01:56<01:32, 364.39it/s]Running loglikelihood requests:  40%|████      | 22681/56168 [01:57<01:31, 365.15it/s]Running loglikelihood requests:  40%|████      | 22745/56168 [01:57<01:31, 365.62it/s]Running loglikelihood requests:  41%|████      | 22813/56168 [01:57<01:29, 372.59it/s]Running loglikelihood requests:  41%|████      | 22877/56168 [01:57<01:29, 370.66it/s]Running loglikelihood requests:  41%|████      | 22945/56168 [01:57<01:28, 375.78it/s]Running loglikelihood requests:  41%|████      | 23009/56168 [01:57<01:28, 373.70it/s]Running loglikelihood requests:  41%|████      | 23073/56168 [01:58<01:28, 372.03it/s]Running loglikelihood requests:  41%|████      | 23137/56168 [01:58<01:28, 371.17it/s]Running loglikelihood requests:  41%|████▏     | 23201/56168 [01:58<01:28, 370.76it/s]Running loglikelihood requests:  41%|████▏     | 23265/56168 [01:58<01:29, 369.58it/s]Running loglikelihood requests:  42%|████▏     | 23329/56168 [01:58<01:28, 369.62it/s]Running loglikelihood requests:  42%|████▏     | 23393/56168 [01:58<01:28, 369.49it/s]Running loglikelihood requests:  42%|████▏     | 23457/56168 [01:59<01:28, 369.55it/s]Running loglikelihood requests:  42%|████▏     | 23521/56168 [01:59<01:28, 369.66it/s]Running loglikelihood requests:  42%|████▏     | 23585/56168 [01:59<01:28, 369.28it/s]Running loglikelihood requests:  42%|████▏     | 23649/56168 [01:59<01:27, 369.83it/s]Running loglikelihood requests:  42%|████▏     | 23713/56168 [01:59<01:27, 370.03it/s]Running loglikelihood requests:  42%|████▏     | 23777/56168 [02:00<01:27, 370.55it/s]Running loglikelihood requests:  42%|████▏     | 23841/56168 [02:00<01:27, 370.79it/s]Running loglikelihood requests:  43%|████▎     | 23905/56168 [02:00<01:26, 370.94it/s]Running loglikelihood requests:  43%|████▎     | 23969/56168 [02:00<01:26, 370.85it/s]Running loglikelihood requests:  43%|████▎     | 24033/56168 [02:00<01:26, 372.59it/s]Running loglikelihood requests:  43%|████▎     | 24097/56168 [02:00<01:25, 372.97it/s]Running loglikelihood requests:  43%|████▎     | 24161/56168 [02:01<01:25, 374.27it/s]Running loglikelihood requests:  43%|████▎     | 24225/56168 [02:01<01:25, 374.88it/s]Running loglikelihood requests:  43%|████▎     | 24289/56168 [02:01<01:24, 376.29it/s]Running loglikelihood requests:  43%|████▎     | 24353/56168 [02:01<01:24, 376.59it/s]Running loglikelihood requests:  43%|████▎     | 24417/56168 [02:01<01:24, 377.17it/s]Running loglikelihood requests:  44%|████▎     | 24481/56168 [02:01<01:24, 376.63it/s]Running loglikelihood requests:  44%|████▎     | 24545/56168 [02:02<01:23, 377.12it/s]Running loglikelihood requests:  44%|████▍     | 24609/56168 [02:02<01:23, 376.47it/s]Running loglikelihood requests:  44%|████▍     | 24673/56168 [02:02<01:23, 376.05it/s]Running loglikelihood requests:  44%|████▍     | 24737/56168 [02:02<01:23, 376.21it/s]Running loglikelihood requests:  44%|████▍     | 24801/56168 [02:02<01:23, 376.22it/s]Running loglikelihood requests:  44%|████▍     | 24865/56168 [02:02<01:23, 376.30it/s]Running loglikelihood requests:  44%|████▍     | 24933/56168 [02:03<01:21, 382.83it/s]Running loglikelihood requests:  45%|████▍     | 24997/56168 [02:03<01:21, 380.65it/s]Running loglikelihood requests:  45%|████▍     | 25061/56168 [02:03<01:21, 379.84it/s]Running loglikelihood requests:  45%|████▍     | 25125/56168 [02:03<01:21, 379.59it/s]Running loglikelihood requests:  45%|████▍     | 25189/56168 [02:03<01:21, 379.40it/s]Running loglikelihood requests:  45%|████▍     | 25253/56168 [02:03<01:21, 379.15it/s]Running loglikelihood requests:  45%|████▌     | 25317/56168 [02:04<01:21, 379.11it/s]Running loglikelihood requests:  45%|████▌     | 25381/56168 [02:04<01:21, 378.71it/s]Running loglikelihood requests:  45%|████▌     | 25445/56168 [02:04<01:21, 378.75it/s]Running loglikelihood requests:  45%|████▌     | 25509/56168 [02:04<01:20, 379.15it/s]Running loglikelihood requests:  46%|████▌     | 25573/56168 [02:04<01:20, 379.21it/s]Running loglikelihood requests:  46%|████▌     | 25637/56168 [02:04<01:20, 379.32it/s]Running loglikelihood requests:  46%|████▌     | 25701/56168 [02:05<01:20, 379.87it/s]Running loglikelihood requests:  46%|████▌     | 25765/56168 [02:05<01:20, 379.50it/s]Running loglikelihood requests:  46%|████▌     | 25829/56168 [02:05<01:19, 379.67it/s]Running loglikelihood requests:  46%|████▌     | 25893/56168 [02:05<01:19, 379.95it/s]Running loglikelihood requests:  46%|████▌     | 25957/56168 [02:05<01:19, 380.33it/s]Running loglikelihood requests:  46%|████▋     | 26021/56168 [02:05<01:19, 379.78it/s]Running loglikelihood requests:  46%|████▋     | 26085/56168 [02:06<01:19, 380.18it/s]Running loglikelihood requests:  47%|████▋     | 26149/56168 [02:06<01:18, 380.74it/s]Running loglikelihood requests:  47%|████▋     | 26213/56168 [02:06<01:18, 380.85it/s]Running loglikelihood requests:  47%|████▋     | 26277/56168 [02:06<01:18, 381.83it/s]Running loglikelihood requests:  47%|████▋     | 26341/56168 [02:06<01:18, 381.61it/s]Running loglikelihood requests:  47%|████▋     | 26405/56168 [02:06<01:17, 381.60it/s]Running loglikelihood requests:  47%|████▋     | 26469/56168 [02:07<01:17, 382.18it/s]Running loglikelihood requests:  47%|████▋     | 26533/56168 [02:07<01:17, 382.39it/s]Running loglikelihood requests:  47%|████▋     | 26597/56168 [02:07<01:17, 381.63it/s]Running loglikelihood requests:  47%|████▋     | 26661/56168 [02:07<01:17, 381.73it/s]Running loglikelihood requests:  48%|████▊     | 26725/56168 [02:07<01:17, 382.16it/s]Running loglikelihood requests:  48%|████▊     | 26789/56168 [02:07<01:16, 382.12it/s]Running loglikelihood requests:  48%|████▊     | 26853/56168 [02:08<01:16, 382.28it/s]Running loglikelihood requests:  48%|████▊     | 26917/56168 [02:08<01:16, 382.71it/s]Running loglikelihood requests:  48%|████▊     | 26981/56168 [02:08<01:16, 383.20it/s]Running loglikelihood requests:  48%|████▊     | 27045/56168 [02:08<01:16, 383.09it/s]Running loglikelihood requests:  48%|████▊     | 27109/56168 [02:08<01:14, 388.73it/s]Running loglikelihood requests:  48%|████▊     | 27173/56168 [02:08<01:13, 392.63it/s]Running loglikelihood requests:  48%|████▊     | 27237/56168 [02:09<01:13, 395.65it/s]Running loglikelihood requests:  49%|████▊     | 27301/56168 [02:09<01:12, 397.71it/s]Running loglikelihood requests:  49%|████▊     | 27365/56168 [02:09<01:12, 399.16it/s]Running loglikelihood requests:  49%|████▉     | 27429/56168 [02:09<01:11, 399.99it/s]Running loglikelihood requests:  49%|████▉     | 27493/56168 [02:09<01:11, 401.58it/s]Running loglikelihood requests:  49%|████▉     | 27557/56168 [02:09<01:11, 402.85it/s]Running loglikelihood requests:  49%|████▉     | 27621/56168 [02:10<01:10, 403.00it/s]Running loglikelihood requests:  49%|████▉     | 27685/56168 [02:10<01:10, 403.41it/s]Running loglikelihood requests:  49%|████▉     | 27753/56168 [02:10<01:09, 410.66it/s]Running loglikelihood requests:  50%|████▉     | 27817/56168 [02:10<01:09, 408.71it/s]Running loglikelihood requests:  50%|████▉     | 27881/56168 [02:10<01:09, 407.51it/s]Running loglikelihood requests:  50%|████▉     | 27945/56168 [02:10<01:09, 406.71it/s]Running loglikelihood requests:  50%|████▉     | 28009/56168 [02:11<01:09, 406.65it/s]Running loglikelihood requests:  50%|████▉     | 28073/56168 [02:11<01:09, 406.12it/s]Running loglikelihood requests:  50%|█████     | 28141/56168 [02:11<01:07, 413.24it/s]Running loglikelihood requests:  50%|█████     | 28205/56168 [02:11<01:08, 411.10it/s]Running loglikelihood requests:  50%|█████     | 28269/56168 [02:11<01:08, 409.32it/s]Running loglikelihood requests:  50%|█████     | 28333/56168 [02:11<01:07, 409.46it/s]Running loglikelihood requests:  51%|█████     | 28397/56168 [02:11<01:08, 408.08it/s]Running loglikelihood requests:  51%|█████     | 28461/56168 [02:12<01:08, 406.17it/s]Running loglikelihood requests:  51%|█████     | 28525/56168 [02:12<01:07, 406.62it/s]Running loglikelihood requests:  51%|█████     | 28589/56168 [02:12<01:07, 407.18it/s]Running loglikelihood requests:  51%|█████     | 28653/56168 [02:12<01:07, 407.58it/s]Running loglikelihood requests:  51%|█████     | 28717/56168 [02:12<01:07, 407.47it/s]Running loglikelihood requests:  51%|█████     | 28781/56168 [02:12<01:07, 407.41it/s]Running loglikelihood requests:  51%|█████▏    | 28845/56168 [02:13<01:07, 407.38it/s]Running loglikelihood requests:  51%|█████▏    | 28909/56168 [02:13<01:06, 407.78it/s]Running loglikelihood requests:  52%|█████▏    | 28973/56168 [02:13<01:06, 408.56it/s]Running loglikelihood requests:  52%|█████▏    | 29037/56168 [02:13<01:06, 408.83it/s]Running loglikelihood requests:  52%|█████▏    | 29101/56168 [02:13<01:06, 409.75it/s]Running loglikelihood requests:  52%|█████▏    | 29165/56168 [02:13<01:05, 409.83it/s]Running loglikelihood requests:  52%|█████▏    | 29229/56168 [02:14<01:05, 409.26it/s]Running loglikelihood requests:  52%|█████▏    | 29293/56168 [02:14<01:05, 409.10it/s]Running loglikelihood requests:  52%|█████▏    | 29357/56168 [02:14<01:05, 409.53it/s]Running loglikelihood requests:  52%|█████▏    | 29421/56168 [02:14<01:05, 409.91it/s]Running loglikelihood requests:  52%|█████▏    | 29485/56168 [02:14<01:05, 409.85it/s]Running loglikelihood requests:  53%|█████▎    | 29549/56168 [02:14<01:05, 409.39it/s]Running loglikelihood requests:  53%|█████▎    | 29613/56168 [02:14<01:04, 409.88it/s]Running loglikelihood requests:  53%|█████▎    | 29681/56168 [02:15<01:03, 417.50it/s]Running loglikelihood requests:  53%|█████▎    | 29745/56168 [02:15<01:03, 414.64it/s]Running loglikelihood requests:  53%|█████▎    | 29809/56168 [02:15<01:03, 412.90it/s]Running loglikelihood requests:  53%|█████▎    | 29873/56168 [02:15<01:03, 412.84it/s]Running loglikelihood requests:  53%|█████▎    | 29937/56168 [02:15<01:03, 413.79it/s]Running loglikelihood requests:  53%|█████▎    | 30001/56168 [02:15<01:03, 414.59it/s]Running loglikelihood requests:  54%|█████▎    | 30065/56168 [02:16<01:02, 415.09it/s]Running loglikelihood requests:  54%|█████▎    | 30129/56168 [02:16<01:02, 414.56it/s]Running loglikelihood requests:  54%|█████▍    | 30193/56168 [02:16<01:02, 413.94it/s]Running loglikelihood requests:  54%|█████▍    | 30257/56168 [02:16<01:02, 413.86it/s]Running loglikelihood requests:  54%|█████▍    | 30321/56168 [02:16<01:02, 413.24it/s]Running loglikelihood requests:  54%|█████▍    | 30385/56168 [02:16<01:02, 413.35it/s]Running loglikelihood requests:  54%|█████▍    | 30449/56168 [02:16<01:02, 413.73it/s]Running loglikelihood requests:  54%|█████▍    | 30513/56168 [02:17<01:01, 413.82it/s]Running loglikelihood requests:  54%|█████▍    | 30577/56168 [02:17<01:01, 413.40it/s]Running loglikelihood requests:  55%|█████▍    | 30641/56168 [02:17<01:01, 413.46it/s]Running loglikelihood requests:  55%|█████▍    | 30705/56168 [02:17<01:01, 413.58it/s]Running loglikelihood requests:  55%|█████▍    | 30769/56168 [02:17<01:01, 413.00it/s]Running loglikelihood requests:  55%|█████▍    | 30833/56168 [02:17<01:01, 412.99it/s]Running loglikelihood requests:  55%|█████▌    | 30897/56168 [02:18<01:00, 419.04it/s]Running loglikelihood requests:  55%|█████▌    | 30961/56168 [02:18<00:59, 423.01it/s]Running loglikelihood requests:  55%|█████▌    | 31025/56168 [02:18<00:59, 425.55it/s]Running loglikelihood requests:  55%|█████▌    | 31089/56168 [02:18<00:58, 428.82it/s]Running loglikelihood requests:  55%|█████▌    | 31153/56168 [02:18<00:58, 429.64it/s]Running loglikelihood requests:  56%|█████▌    | 31217/56168 [02:18<00:58, 430.02it/s]Running loglikelihood requests:  56%|█████▌    | 31281/56168 [02:18<00:57, 430.45it/s]Running loglikelihood requests:  56%|█████▌    | 31345/56168 [02:19<00:57, 431.18it/s]Running loglikelihood requests:  56%|█████▌    | 31409/56168 [02:19<00:57, 432.11it/s]Running loglikelihood requests:  56%|█████▌    | 31477/56168 [02:19<00:56, 440.09it/s]Running loglikelihood requests:  56%|█████▌    | 31541/56168 [02:19<00:56, 438.21it/s]Running loglikelihood requests:  56%|█████▋    | 31605/56168 [02:19<00:56, 436.32it/s]Running loglikelihood requests:  56%|█████▋    | 31669/56168 [02:19<00:56, 435.65it/s]Running loglikelihood requests:  56%|█████▋    | 31733/56168 [02:19<00:56, 435.09it/s]Running loglikelihood requests:  57%|█████▋    | 31797/56168 [02:20<00:56, 434.22it/s]Running loglikelihood requests:  57%|█████▋    | 31861/56168 [02:20<00:55, 434.57it/s]Running loglikelihood requests:  57%|█████▋    | 31925/56168 [02:20<00:55, 435.56it/s]Running loglikelihood requests:  57%|█████▋    | 31989/56168 [02:20<00:55, 436.53it/s]Running loglikelihood requests:  57%|█████▋    | 32053/56168 [02:20<00:55, 436.15it/s]Running loglikelihood requests:  57%|█████▋    | 32117/56168 [02:20<00:55, 436.25it/s]Running loglikelihood requests:  57%|█████▋    | 32185/56168 [02:20<00:54, 443.90it/s]Running loglikelihood requests:  57%|█████▋    | 32249/56168 [02:21<00:54, 441.22it/s]Running loglikelihood requests:  58%|█████▊    | 32313/56168 [02:21<00:54, 439.15it/s]Running loglikelihood requests:  58%|█████▊    | 32377/56168 [02:21<00:54, 438.39it/s]Running loglikelihood requests:  58%|█████▊    | 32441/56168 [02:21<00:54, 437.36it/s]Running loglikelihood requests:  58%|█████▊    | 32505/56168 [02:21<00:54, 436.82it/s]Running loglikelihood requests:  58%|█████▊    | 32569/56168 [02:21<00:53, 437.12it/s]Running loglikelihood requests:  58%|█████▊    | 32633/56168 [02:22<00:53, 436.93it/s]Running loglikelihood requests:  58%|█████▊    | 32697/56168 [02:22<00:53, 436.91it/s]Running loglikelihood requests:  58%|█████▊    | 32761/56168 [02:22<00:53, 436.85it/s]Running loglikelihood requests:  58%|█████▊    | 32825/56168 [02:22<00:53, 437.82it/s]Running loglikelihood requests:  59%|█████▊    | 32889/56168 [02:22<00:53, 437.65it/s]Running loglikelihood requests:  59%|█████▊    | 32953/56168 [02:22<00:53, 437.38it/s]Running loglikelihood requests:  59%|█████▉    | 33017/56168 [02:22<00:52, 437.27it/s]Running loglikelihood requests:  59%|█████▉    | 33081/56168 [02:23<00:52, 437.67it/s]Running loglikelihood requests:  59%|█████▉    | 33145/56168 [02:23<00:52, 437.83it/s]Running loglikelihood requests:  59%|█████▉    | 33209/56168 [02:23<00:52, 437.76it/s]Running loglikelihood requests:  59%|█████▉    | 33273/56168 [02:23<00:52, 437.62it/s]Running loglikelihood requests:  59%|█████▉    | 33337/56168 [02:23<00:52, 438.28it/s]Running loglikelihood requests:  59%|█████▉    | 33401/56168 [02:23<00:51, 438.52it/s]Running loglikelihood requests:  60%|█████▉    | 33465/56168 [02:23<00:51, 438.50it/s]Running loglikelihood requests:  60%|█████▉    | 33529/56168 [02:24<00:51, 438.23it/s]Running loglikelihood requests:  60%|█████▉    | 33593/56168 [02:24<00:51, 439.36it/s]Running loglikelihood requests:  60%|█████▉    | 33657/56168 [02:24<00:51, 441.17it/s]Running loglikelihood requests:  60%|██████    | 33721/56168 [02:24<00:50, 441.11it/s]Running loglikelihood requests:  60%|██████    | 33785/56168 [02:24<00:50, 440.83it/s]Running loglikelihood requests:  60%|██████    | 33849/56168 [02:24<00:50, 440.97it/s]Running loglikelihood requests:  60%|██████    | 33913/56168 [02:24<00:50, 441.02it/s]Running loglikelihood requests:  60%|██████    | 33977/56168 [02:25<00:50, 441.09it/s]Running loglikelihood requests:  61%|██████    | 34045/56168 [02:25<00:49, 448.46it/s]Running loglikelihood requests:  61%|██████    | 34109/56168 [02:25<00:49, 446.32it/s]Running loglikelihood requests:  61%|██████    | 34173/56168 [02:25<00:49, 444.97it/s]Running loglikelihood requests:  61%|██████    | 34237/56168 [02:25<00:49, 443.71it/s]Running loglikelihood requests:  61%|██████    | 34301/56168 [02:25<00:49, 443.29it/s]Running loglikelihood requests:  61%|██████    | 34365/56168 [02:25<00:49, 444.18it/s]Running loglikelihood requests:  61%|██████▏   | 34429/56168 [02:26<00:48, 444.14it/s]Running loglikelihood requests:  61%|██████▏   | 34493/56168 [02:26<00:48, 444.78it/s]Running loglikelihood requests:  62%|██████▏   | 34557/56168 [02:26<00:48, 445.09it/s]Running loglikelihood requests:  62%|██████▏   | 34621/56168 [02:26<00:48, 445.93it/s]Running loglikelihood requests:  62%|██████▏   | 34685/56168 [02:26<00:48, 446.78it/s]Running loglikelihood requests:  62%|██████▏   | 34749/56168 [02:26<00:47, 447.58it/s]Running loglikelihood requests:  62%|██████▏   | 34813/56168 [02:26<00:47, 448.69it/s]Running loglikelihood requests:  62%|██████▏   | 34877/56168 [02:27<00:47, 448.78it/s]Running loglikelihood requests:  62%|██████▏   | 34941/56168 [02:27<00:47, 449.12it/s]Running loglikelihood requests:  62%|██████▏   | 35005/56168 [02:27<00:47, 449.45it/s]Running loglikelihood requests:  62%|██████▏   | 35069/56168 [02:27<00:46, 449.40it/s]Running loglikelihood requests:  63%|██████▎   | 35133/56168 [02:27<00:46, 449.90it/s]Running loglikelihood requests:  63%|██████▎   | 35197/56168 [02:27<00:46, 450.29it/s]Running loglikelihood requests:  63%|██████▎   | 35261/56168 [02:27<00:46, 450.15it/s]Running loglikelihood requests:  63%|██████▎   | 35325/56168 [02:28<00:46, 449.66it/s]Running loglikelihood requests:  63%|██████▎   | 35389/56168 [02:28<00:46, 449.06it/s]Running loglikelihood requests:  63%|██████▎   | 35453/56168 [02:28<00:45, 458.02it/s]Running loglikelihood requests:  63%|██████▎   | 35517/56168 [02:28<00:44, 464.56it/s]Running loglikelihood requests:  63%|██████▎   | 35581/56168 [02:28<00:43, 468.54it/s]Running loglikelihood requests:  63%|██████▎   | 35645/56168 [02:28<00:43, 472.02it/s]Running loglikelihood requests:  64%|██████▎   | 35709/56168 [02:28<00:43, 474.45it/s]Running loglikelihood requests:  64%|██████▎   | 35773/56168 [02:29<00:42, 475.71it/s]Running loglikelihood requests:  64%|██████▍   | 35837/56168 [02:29<00:42, 476.75it/s]Running loglikelihood requests:  64%|██████▍   | 35901/56168 [02:29<00:42, 477.67it/s]Running loglikelihood requests:  64%|██████▍   | 35965/56168 [02:29<00:42, 477.54it/s]Running loglikelihood requests:  64%|██████▍   | 36029/56168 [02:29<00:42, 478.39it/s]Running loglikelihood requests:  64%|██████▍   | 36093/56168 [02:29<00:41, 478.84it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [02:29<00:40, 488.52it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [02:29<00:40, 486.45it/s]Running loglikelihood requests:  65%|██████▍   | 36289/56168 [02:30<00:41, 484.78it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [02:30<00:40, 483.96it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [02:30<00:40, 483.52it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [02:30<00:40, 483.16it/s]Running loglikelihood requests:  65%|██████▌   | 36545/56168 [02:30<00:40, 482.38it/s]Running loglikelihood requests:  65%|██████▌   | 36609/56168 [02:30<00:40, 481.97it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [02:30<00:40, 482.64it/s]Running loglikelihood requests:  65%|██████▌   | 36737/56168 [02:31<00:40, 483.12it/s]Running loglikelihood requests:  66%|██████▌   | 36805/56168 [02:31<00:39, 491.62it/s]Running loglikelihood requests:  66%|██████▌   | 36869/56168 [02:31<00:39, 489.30it/s]Running loglikelihood requests:  66%|██████▌   | 36933/56168 [02:31<00:39, 488.00it/s]Running loglikelihood requests:  66%|██████▌   | 36997/56168 [02:31<00:39, 486.42it/s]Running loglikelihood requests:  66%|██████▌   | 37061/56168 [02:31<00:39, 486.13it/s]Running loglikelihood requests:  66%|██████▌   | 37125/56168 [02:31<00:39, 485.81it/s]Running loglikelihood requests:  66%|██████▌   | 37189/56168 [02:31<00:39, 485.25it/s]Running loglikelihood requests:  66%|██████▋   | 37253/56168 [02:32<00:39, 484.28it/s]Running loglikelihood requests:  66%|██████▋   | 37317/56168 [02:32<00:38, 484.89it/s]Running loglikelihood requests:  67%|██████▋   | 37381/56168 [02:32<00:38, 485.08it/s]Running loglikelihood requests:  67%|██████▋   | 37445/56168 [02:32<00:38, 484.62it/s]Running loglikelihood requests:  67%|██████▋   | 37509/56168 [02:32<00:38, 484.39it/s]Running loglikelihood requests:  67%|██████▋   | 37573/56168 [02:32<00:38, 484.00it/s]Running loglikelihood requests:  67%|██████▋   | 37637/56168 [02:32<00:38, 483.90it/s]Running loglikelihood requests:  67%|██████▋   | 37701/56168 [02:33<00:38, 484.21it/s]Running loglikelihood requests:  67%|██████▋   | 37765/56168 [02:33<00:37, 484.30it/s]Running loglikelihood requests:  67%|██████▋   | 37829/56168 [02:33<00:37, 484.26it/s]Running loglikelihood requests:  67%|██████▋   | 37893/56168 [02:33<00:37, 484.15it/s]Running loglikelihood requests:  68%|██████▊   | 37957/56168 [02:33<00:37, 484.35it/s]Running loglikelihood requests:  68%|██████▊   | 38021/56168 [02:33<00:37, 484.74it/s]Running loglikelihood requests:  68%|██████▊   | 38085/56168 [02:33<00:37, 485.01it/s]Running loglikelihood requests:  68%|██████▊   | 38149/56168 [02:33<00:37, 484.94it/s]Running loglikelihood requests:  68%|██████▊   | 38213/56168 [02:34<00:36, 485.75it/s]Running loglikelihood requests:  68%|██████▊   | 38277/56168 [02:34<00:36, 485.21it/s]Running loglikelihood requests:  68%|██████▊   | 38341/56168 [02:34<00:36, 485.74it/s]Running loglikelihood requests:  68%|██████▊   | 38405/56168 [02:34<00:36, 486.20it/s]Running loglikelihood requests:  68%|██████▊   | 38469/56168 [02:34<00:36, 487.04it/s]Running loglikelihood requests:  69%|██████▊   | 38533/56168 [02:34<00:36, 487.30it/s]Running loglikelihood requests:  69%|██████▊   | 38597/56168 [02:34<00:36, 487.53it/s]Running loglikelihood requests:  69%|██████▉   | 38661/56168 [02:34<00:35, 488.49it/s]Running loglikelihood requests:  69%|██████▉   | 38725/56168 [02:35<00:35, 489.12it/s]Running loglikelihood requests:  69%|██████▉   | 38789/56168 [02:35<00:35, 489.00it/s]Running loglikelihood requests:  69%|██████▉   | 38853/56168 [02:35<00:35, 490.08it/s]Running loglikelihood requests:  69%|██████▉   | 38917/56168 [02:35<00:35, 490.67it/s]Running loglikelihood requests:  69%|██████▉   | 38981/56168 [02:35<00:35, 490.64it/s]Running loglikelihood requests:  70%|██████▉   | 39045/56168 [02:35<00:34, 491.90it/s]Running loglikelihood requests:  70%|██████▉   | 39109/56168 [02:35<00:34, 491.88it/s]Running loglikelihood requests:  70%|██████▉   | 39173/56168 [02:36<00:34, 492.49it/s]Running loglikelihood requests:  70%|██████▉   | 39237/56168 [02:36<00:34, 492.65it/s]Running loglikelihood requests:  70%|██████▉   | 39301/56168 [02:36<00:34, 492.88it/s]Running loglikelihood requests:  70%|███████   | 39365/56168 [02:36<00:34, 493.37it/s]Running loglikelihood requests:  70%|███████   | 39429/56168 [02:36<00:33, 493.33it/s]Running loglikelihood requests:  70%|███████   | 39493/56168 [02:36<00:33, 494.10it/s]Running loglikelihood requests:  70%|███████   | 39557/56168 [02:36<00:33, 494.59it/s]Running loglikelihood requests:  71%|███████   | 39621/56168 [02:36<00:33, 495.21it/s]Running loglikelihood requests:  71%|███████   | 39685/56168 [02:37<00:33, 495.17it/s]Running loglikelihood requests:  71%|███████   | 39749/56168 [02:37<00:33, 495.63it/s]Running loglikelihood requests:  71%|███████   | 39813/56168 [02:37<00:33, 495.37it/s]Running loglikelihood requests:  71%|███████   | 39877/56168 [02:37<00:32, 494.99it/s]Running loglikelihood requests:  71%|███████   | 39941/56168 [02:37<00:32, 495.14it/s]Running loglikelihood requests:  71%|███████   | 40005/56168 [02:37<00:32, 494.60it/s]Running loglikelihood requests:  71%|███████▏  | 40069/56168 [02:37<00:32, 494.64it/s]Running loglikelihood requests:  71%|███████▏  | 40133/56168 [02:37<00:32, 495.41it/s]Running loglikelihood requests:  72%|███████▏  | 40201/56168 [02:38<00:31, 504.68it/s]Running loglikelihood requests:  72%|███████▏  | 40265/56168 [02:38<00:31, 501.84it/s]Running loglikelihood requests:  72%|███████▏  | 40329/56168 [02:38<00:31, 500.06it/s]Running loglikelihood requests:  72%|███████▏  | 40393/56168 [02:38<00:31, 498.71it/s]Running loglikelihood requests:  72%|███████▏  | 40457/56168 [02:38<00:31, 498.24it/s]Running loglikelihood requests:  72%|███████▏  | 40521/56168 [02:38<00:31, 496.63it/s]Running loglikelihood requests:  72%|███████▏  | 40585/56168 [02:38<00:31, 496.52it/s]Running loglikelihood requests:  72%|███████▏  | 40649/56168 [02:38<00:31, 496.10it/s]Running loglikelihood requests:  72%|███████▏  | 40713/56168 [02:39<00:30, 501.28it/s]Running loglikelihood requests:  73%|███████▎  | 40777/56168 [02:39<00:30, 502.75it/s]Running loglikelihood requests:  73%|███████▎  | 40841/56168 [02:39<00:30, 504.98it/s]Running loglikelihood requests:  73%|███████▎  | 40905/56168 [02:39<00:30, 508.01it/s]Running loglikelihood requests:  73%|███████▎  | 40969/56168 [02:39<00:29, 510.26it/s]Running loglikelihood requests:  73%|███████▎  | 41033/56168 [02:39<00:29, 511.23it/s]Running loglikelihood requests:  73%|███████▎  | 41097/56168 [02:39<00:29, 512.89it/s]Running loglikelihood requests:  73%|███████▎  | 41161/56168 [02:39<00:29, 510.68it/s]Running loglikelihood requests:  73%|███████▎  | 41225/56168 [02:40<00:29, 511.65it/s]Running loglikelihood requests:  74%|███████▎  | 41289/56168 [02:40<00:29, 512.38it/s]Running loglikelihood requests:  74%|███████▎  | 41353/56168 [02:40<00:28, 511.38it/s]Running loglikelihood requests:  74%|███████▎  | 41417/56168 [02:40<00:28, 513.75it/s]Running loglikelihood requests:  74%|███████▍  | 41481/56168 [02:40<00:28, 513.90it/s]Running loglikelihood requests:  74%|███████▍  | 41545/56168 [02:40<00:28, 515.50it/s]Running loglikelihood requests:  74%|███████▍  | 41609/56168 [02:40<00:28, 514.20it/s]Running loglikelihood requests:  74%|███████▍  | 41673/56168 [02:40<00:28, 512.30it/s]Running loglikelihood requests:  74%|███████▍  | 41737/56168 [02:41<00:28, 513.26it/s]Running loglikelihood requests:  74%|███████▍  | 41801/56168 [02:41<00:27, 514.88it/s]Running loglikelihood requests:  75%|███████▍  | 41865/56168 [02:41<00:27, 512.75it/s]Running loglikelihood requests:  75%|███████▍  | 41929/56168 [02:41<00:27, 511.41it/s]Running loglikelihood requests:  75%|███████▍  | 41993/56168 [02:41<00:27, 510.50it/s]Running loglikelihood requests:  75%|███████▍  | 42057/56168 [02:41<00:27, 511.21it/s]Running loglikelihood requests:  75%|███████▍  | 42121/56168 [02:41<00:27, 514.46it/s]Running loglikelihood requests:  75%|███████▌  | 42185/56168 [02:41<00:27, 516.53it/s]Running loglikelihood requests:  75%|███████▌  | 42249/56168 [02:42<00:26, 517.61it/s]Running loglikelihood requests:  75%|███████▌  | 42317/56168 [02:42<00:26, 525.56it/s]Running loglikelihood requests:  75%|███████▌  | 42381/56168 [02:42<00:26, 520.98it/s]Running loglikelihood requests:  76%|███████▌  | 42445/56168 [02:42<00:26, 518.58it/s]Running loglikelihood requests:  76%|███████▌  | 42509/56168 [02:42<00:26, 518.92it/s]Running loglikelihood requests:  76%|███████▌  | 42573/56168 [02:42<00:26, 519.84it/s]Running loglikelihood requests:  76%|███████▌  | 42641/56168 [02:42<00:25, 530.10it/s]Running loglikelihood requests:  76%|███████▌  | 42705/56168 [02:42<00:25, 524.47it/s]Running loglikelihood requests:  76%|███████▌  | 42769/56168 [02:43<00:25, 519.74it/s]Running loglikelihood requests:  76%|███████▋  | 42833/56168 [02:43<00:25, 516.92it/s]Running loglikelihood requests:  76%|███████▋  | 42897/56168 [02:43<00:25, 516.89it/s]Running loglikelihood requests:  76%|███████▋  | 42961/56168 [02:43<00:25, 519.83it/s]Running loglikelihood requests:  77%|███████▋  | 43025/56168 [02:43<00:25, 521.53it/s]Running loglikelihood requests:  77%|███████▋  | 43093/56168 [02:43<00:24, 529.33it/s]Running loglikelihood requests:  77%|███████▋  | 43157/56168 [02:43<00:24, 525.42it/s]Running loglikelihood requests:  77%|███████▋  | 43221/56168 [02:43<00:24, 522.42it/s]Running loglikelihood requests:  77%|███████▋  | 43285/56168 [02:44<00:24, 519.25it/s]Running loglikelihood requests:  77%|███████▋  | 43349/56168 [02:44<00:24, 517.92it/s]Running loglikelihood requests:  77%|███████▋  | 43413/56168 [02:44<00:24, 519.16it/s]Running loglikelihood requests:  77%|███████▋  | 43477/56168 [02:44<00:24, 520.80it/s]Running loglikelihood requests:  78%|███████▊  | 43541/56168 [02:44<00:24, 519.75it/s]Running loglikelihood requests:  78%|███████▊  | 43605/56168 [02:44<00:24, 518.39it/s]Running loglikelihood requests:  78%|███████▊  | 43669/56168 [02:44<00:24, 518.05it/s]Running loglikelihood requests:  78%|███████▊  | 43733/56168 [02:44<00:24, 517.02it/s]Running loglikelihood requests:  78%|███████▊  | 43797/56168 [02:45<00:23, 516.99it/s]Running loglikelihood requests:  78%|███████▊  | 43861/56168 [02:45<00:23, 517.04it/s]Running loglikelihood requests:  78%|███████▊  | 43925/56168 [02:45<00:23, 517.49it/s]Running loglikelihood requests:  78%|███████▊  | 43993/56168 [02:45<00:23, 528.92it/s]Running loglikelihood requests:  78%|███████▊  | 44057/56168 [02:45<00:23, 525.52it/s]Running loglikelihood requests:  79%|███████▊  | 44121/56168 [02:45<00:22, 524.23it/s]Running loglikelihood requests:  79%|███████▊  | 44185/56168 [02:45<00:23, 520.88it/s]Running loglikelihood requests:  79%|███████▉  | 44249/56168 [02:45<00:22, 520.49it/s]Running loglikelihood requests:  79%|███████▉  | 44313/56168 [02:46<00:22, 519.38it/s]Running loglikelihood requests:  79%|███████▉  | 44377/56168 [02:46<00:22, 518.65it/s]Running loglikelihood requests:  79%|███████▉  | 44441/56168 [02:46<00:22, 518.37it/s]Running loglikelihood requests:  79%|███████▉  | 44505/56168 [02:46<00:22, 517.83it/s]Running loglikelihood requests:  79%|███████▉  | 44569/56168 [02:46<00:22, 520.11it/s]Running loglikelihood requests:  79%|███████▉  | 44637/56168 [02:46<00:21, 532.37it/s]Running loglikelihood requests:  80%|███████▉  | 44701/56168 [02:46<00:21, 532.34it/s]Running loglikelihood requests:  80%|███████▉  | 44765/56168 [02:46<00:21, 532.36it/s]Running loglikelihood requests:  80%|███████▉  | 44829/56168 [02:47<00:21, 532.11it/s]Running loglikelihood requests:  80%|███████▉  | 44893/56168 [02:47<00:21, 532.19it/s]Running loglikelihood requests:  80%|████████  | 44957/56168 [02:47<00:21, 531.70it/s]Running loglikelihood requests:  80%|████████  | 45021/56168 [02:47<00:20, 531.33it/s]Running loglikelihood requests:  80%|████████  | 45085/56168 [02:47<00:20, 531.15it/s]Running loglikelihood requests:  80%|████████  | 45149/56168 [02:47<00:20, 530.49it/s]Running loglikelihood requests:  80%|████████  | 45213/56168 [02:47<00:20, 530.22it/s]Running loglikelihood requests:  81%|████████  | 45277/56168 [02:47<00:20, 530.19it/s]Running loglikelihood requests:  81%|████████  | 45341/56168 [02:48<00:20, 526.37it/s]Running loglikelihood requests:  81%|████████  | 45405/56168 [02:48<00:20, 526.37it/s]Running loglikelihood requests:  81%|████████  | 45469/56168 [02:48<00:20, 526.96it/s]Running loglikelihood requests:  81%|████████  | 45537/56168 [02:48<00:19, 536.57it/s]Running loglikelihood requests:  81%|████████  | 45601/56168 [02:48<00:19, 533.04it/s]Running loglikelihood requests:  81%|████████▏ | 45665/56168 [02:48<00:19, 530.31it/s]Running loglikelihood requests:  81%|████████▏ | 45729/56168 [02:48<00:19, 528.32it/s]Running loglikelihood requests:  82%|████████▏ | 45793/56168 [02:48<00:19, 527.29it/s]Running loglikelihood requests:  82%|████████▏ | 45857/56168 [02:48<00:19, 526.63it/s]Running loglikelihood requests:  82%|████████▏ | 45921/56168 [02:49<00:19, 526.60it/s]Running loglikelihood requests:  82%|████████▏ | 45985/56168 [02:49<00:19, 527.82it/s]Running loglikelihood requests:  82%|████████▏ | 46049/56168 [02:49<00:19, 527.71it/s]Running loglikelihood requests:  82%|████████▏ | 46113/56168 [02:49<00:19, 527.25it/s]Running loglikelihood requests:  82%|████████▏ | 46177/56168 [02:49<00:18, 526.37it/s]Running loglikelihood requests:  82%|████████▏ | 46241/56168 [02:49<00:18, 526.56it/s]Running loglikelihood requests:  82%|████████▏ | 46305/56168 [02:49<00:18, 526.18it/s]Running loglikelihood requests:  83%|████████▎ | 46369/56168 [02:49<00:18, 526.28it/s]Running loglikelihood requests:  83%|████████▎ | 46433/56168 [02:50<00:18, 525.65it/s]Running loglikelihood requests:  83%|████████▎ | 46497/56168 [02:50<00:18, 525.80it/s]Running loglikelihood requests:  83%|████████▎ | 46561/56168 [02:50<00:18, 526.14it/s]Running loglikelihood requests:  83%|████████▎ | 46625/56168 [02:50<00:18, 526.11it/s]Running loglikelihood requests:  83%|████████▎ | 46689/56168 [02:50<00:18, 526.41it/s]Running loglikelihood requests:  83%|████████▎ | 46753/56168 [02:50<00:17, 527.08it/s]Running loglikelihood requests:  83%|████████▎ | 46817/56168 [02:50<00:17, 529.61it/s]Running loglikelihood requests:  83%|████████▎ | 46881/56168 [02:50<00:17, 528.74it/s]Running loglikelihood requests:  84%|████████▎ | 46945/56168 [02:51<00:17, 528.17it/s]Running loglikelihood requests:  84%|████████▎ | 47009/56168 [02:51<00:17, 527.48it/s]Running loglikelihood requests:  84%|████████▍ | 47073/56168 [02:51<00:17, 527.17it/s]Running loglikelihood requests:  84%|████████▍ | 47137/56168 [02:51<00:16, 536.37it/s]Running loglikelihood requests:  84%|████████▍ | 47201/56168 [02:51<00:16, 542.66it/s]Running loglikelihood requests:  84%|████████▍ | 47265/56168 [02:51<00:16, 548.05it/s]Running loglikelihood requests:  84%|████████▍ | 47329/56168 [02:51<00:16, 550.87it/s]Running loglikelihood requests:  84%|████████▍ | 47393/56168 [02:51<00:15, 553.16it/s]Running loglikelihood requests:  84%|████████▍ | 47457/56168 [02:51<00:15, 555.63it/s]Running loglikelihood requests:  85%|████████▍ | 47521/56168 [02:52<00:15, 556.27it/s]Running loglikelihood requests:  85%|████████▍ | 47585/56168 [02:52<00:15, 556.85it/s]Running loglikelihood requests:  85%|████████▍ | 47649/56168 [02:52<00:15, 558.25it/s]Running loglikelihood requests:  85%|████████▍ | 47713/56168 [02:52<00:15, 561.28it/s]Running loglikelihood requests:  85%|████████▌ | 47777/56168 [02:52<00:15, 558.65it/s]Running loglikelihood requests:  85%|████████▌ | 47841/56168 [02:52<00:14, 559.23it/s]Running loglikelihood requests:  85%|████████▌ | 47905/56168 [02:52<00:14, 559.21it/s]Running loglikelihood requests:  85%|████████▌ | 47969/56168 [02:52<00:14, 559.22it/s]Running loglikelihood requests:  86%|████████▌ | 48033/56168 [02:53<00:14, 561.01it/s]Running loglikelihood requests:  86%|████████▌ | 48097/56168 [02:53<00:14, 560.87it/s]Running loglikelihood requests:  86%|████████▌ | 48161/56168 [02:53<00:14, 561.67it/s]Running loglikelihood requests:  86%|████████▌ | 48225/56168 [02:53<00:14, 562.76it/s]Running loglikelihood requests:  86%|████████▌ | 48289/56168 [02:53<00:14, 562.09it/s]Running loglikelihood requests:  86%|████████▌ | 48353/56168 [02:53<00:13, 562.41it/s]Running loglikelihood requests:  86%|████████▌ | 48417/56168 [02:53<00:13, 562.67it/s]Running loglikelihood requests:  86%|████████▋ | 48481/56168 [02:53<00:13, 562.40it/s]Running loglikelihood requests:  86%|████████▋ | 48545/56168 [02:53<00:13, 563.58it/s]Running loglikelihood requests:  87%|████████▋ | 48609/56168 [02:54<00:13, 563.72it/s]Running loglikelihood requests:  87%|████████▋ | 48673/56168 [02:54<00:13, 565.93it/s]Running loglikelihood requests:  87%|████████▋ | 48737/56168 [02:54<00:13, 567.88it/s]Running loglikelihood requests:  87%|████████▋ | 48801/56168 [02:54<00:12, 568.98it/s]Running loglikelihood requests:  87%|████████▋ | 48865/56168 [02:54<00:12, 570.08it/s]Running loglikelihood requests:  87%|████████▋ | 48929/56168 [02:54<00:12, 571.66it/s]Running loglikelihood requests:  87%|████████▋ | 48993/56168 [02:54<00:12, 574.26it/s]Running loglikelihood requests:  87%|████████▋ | 49057/56168 [02:54<00:12, 574.69it/s]Running loglikelihood requests:  87%|████████▋ | 49121/56168 [02:54<00:12, 575.97it/s]Running loglikelihood requests:  88%|████████▊ | 49185/56168 [02:55<00:12, 575.38it/s]Running loglikelihood requests:  88%|████████▊ | 49249/56168 [02:55<00:12, 576.15it/s]Running loglikelihood requests:  88%|████████▊ | 49313/56168 [02:55<00:11, 575.41it/s]Running loglikelihood requests:  88%|████████▊ | 49377/56168 [02:55<00:11, 571.90it/s]Running loglikelihood requests:  88%|████████▊ | 49441/56168 [02:55<00:11, 569.41it/s]Running loglikelihood requests:  88%|████████▊ | 49505/56168 [02:55<00:11, 568.29it/s]Running loglikelihood requests:  88%|████████▊ | 49569/56168 [02:55<00:11, 567.54it/s]Running loglikelihood requests:  88%|████████▊ | 49633/56168 [02:55<00:11, 564.95it/s]Running loglikelihood requests:  88%|████████▊ | 49697/56168 [02:55<00:11, 565.64it/s]Running loglikelihood requests:  89%|████████▊ | 49761/56168 [02:56<00:11, 566.58it/s]Running loglikelihood requests:  89%|████████▊ | 49825/56168 [02:56<00:11, 566.48it/s]Running loglikelihood requests:  89%|████████▉ | 49889/56168 [02:56<00:11, 567.84it/s]Running loglikelihood requests:  89%|████████▉ | 49953/56168 [02:56<00:10, 567.61it/s]Running loglikelihood requests:  89%|████████▉ | 50017/56168 [02:56<00:10, 568.58it/s]Running loglikelihood requests:  89%|████████▉ | 50081/56168 [02:56<00:10, 568.51it/s]Running loglikelihood requests:  89%|████████▉ | 50145/56168 [02:56<00:10, 569.08it/s]Running loglikelihood requests:  89%|████████▉ | 50209/56168 [02:56<00:10, 569.09it/s]Running loglikelihood requests:  90%|████████▉ | 50273/56168 [02:56<00:10, 569.52it/s]Running loglikelihood requests:  90%|████████▉ | 50337/56168 [02:57<00:10, 572.07it/s]Running loglikelihood requests:  90%|████████▉ | 50401/56168 [02:57<00:10, 573.51it/s]Running loglikelihood requests:  90%|████████▉ | 50465/56168 [02:57<00:09, 574.07it/s]Running loglikelihood requests:  90%|████████▉ | 50529/56168 [02:57<00:09, 573.04it/s]Running loglikelihood requests:  90%|█████████ | 50593/56168 [02:57<00:09, 574.87it/s]Running loglikelihood requests:  90%|█████████ | 50657/56168 [02:57<00:09, 574.40it/s]Running loglikelihood requests:  90%|█████████ | 50721/56168 [02:57<00:09, 575.00it/s]Running loglikelihood requests:  90%|█████████ | 50785/56168 [02:57<00:09, 574.40it/s]Running loglikelihood requests:  91%|█████████ | 50853/56168 [02:57<00:09, 585.15it/s]Running loglikelihood requests:  91%|█████████ | 50917/56168 [02:58<00:09, 580.94it/s]Running loglikelihood requests:  91%|█████████ | 50981/56168 [02:58<00:08, 579.78it/s]Running loglikelihood requests:  91%|█████████ | 51045/56168 [02:58<00:08, 577.73it/s]Running loglikelihood requests:  91%|█████████ | 51109/56168 [02:58<00:08, 577.17it/s]Running loglikelihood requests:  91%|█████████ | 51173/56168 [02:58<00:08, 576.55it/s]Running loglikelihood requests:  91%|█████████ | 51237/56168 [02:58<00:08, 576.57it/s]Running loglikelihood requests:  91%|█████████▏| 51301/56168 [02:58<00:08, 577.40it/s]Running loglikelihood requests:  91%|█████████▏| 51369/56168 [02:58<00:08, 588.20it/s]Running loglikelihood requests:  92%|█████████▏| 51433/56168 [02:58<00:08, 585.16it/s]Running loglikelihood requests:  92%|█████████▏| 51497/56168 [02:59<00:07, 584.61it/s]Running loglikelihood requests:  92%|█████████▏| 51561/56168 [02:59<00:07, 584.02it/s]Running loglikelihood requests:  92%|█████████▏| 51625/56168 [02:59<00:07, 586.01it/s]Running loglikelihood requests:  92%|█████████▏| 51689/56168 [02:59<00:07, 586.76it/s]Running loglikelihood requests:  92%|█████████▏| 51753/56168 [02:59<00:07, 583.98it/s]Running loglikelihood requests:  92%|█████████▏| 51817/56168 [02:59<00:07, 582.53it/s]Running loglikelihood requests:  92%|█████████▏| 51881/56168 [02:59<00:07, 581.71it/s]Running loglikelihood requests:  92%|█████████▏| 51945/56168 [02:59<00:07, 581.29it/s]Running loglikelihood requests:  93%|█████████▎| 52009/56168 [02:59<00:07, 580.24it/s]Running loglikelihood requests:  93%|█████████▎| 52077/56168 [03:00<00:06, 590.49it/s]Running loglikelihood requests:  93%|█████████▎| 52141/56168 [03:00<00:06, 587.41it/s]Running loglikelihood requests:  93%|█████████▎| 52205/56168 [03:00<00:06, 586.08it/s]Running loglikelihood requests:  93%|█████████▎| 52269/56168 [03:00<00:06, 583.72it/s]Running loglikelihood requests:  93%|█████████▎| 52333/56168 [03:00<00:06, 583.94it/s]Running loglikelihood requests:  93%|█████████▎| 52397/56168 [03:00<00:06, 582.38it/s]Running loglikelihood requests:  93%|█████████▎| 52461/56168 [03:00<00:06, 583.26it/s]Running loglikelihood requests:  94%|█████████▎| 52525/56168 [03:00<00:06, 583.20it/s]Running loglikelihood requests:  94%|█████████▎| 52589/56168 [03:00<00:06, 583.59it/s]Running loglikelihood requests:  94%|█████████▎| 52653/56168 [03:01<00:06, 583.82it/s]Running loglikelihood requests:  94%|█████████▍| 52717/56168 [03:01<00:05, 582.73it/s]Running loglikelihood requests:  94%|█████████▍| 52781/56168 [03:01<00:05, 584.38it/s]Running loglikelihood requests:  94%|█████████▍| 52845/56168 [03:01<00:05, 583.64it/s]Running loglikelihood requests:  94%|█████████▍| 52909/56168 [03:01<00:05, 586.84it/s]Running loglikelihood requests:  94%|█████████▍| 52973/56168 [03:01<00:05, 588.90it/s]Running loglikelihood requests:  94%|█████████▍| 53037/56168 [03:01<00:05, 588.34it/s]Running loglikelihood requests:  95%|█████████▍| 53101/56168 [03:01<00:05, 588.04it/s]Running loglikelihood requests:  95%|█████████▍| 53165/56168 [03:01<00:05, 586.54it/s]Running loglikelihood requests:  95%|█████████▍| 53229/56168 [03:02<00:05, 587.48it/s]Running loglikelihood requests:  95%|█████████▍| 53293/56168 [03:02<00:04, 586.59it/s]Running loglikelihood requests:  95%|█████████▌| 53374/56168 [03:02<00:04, 649.55it/s]Running loglikelihood requests:  95%|█████████▌| 53455/56168 [03:02<00:03, 695.44it/s]Running loglikelihood requests:  95%|█████████▌| 53535/56168 [03:02<00:03, 725.63it/s]Running loglikelihood requests:  95%|█████████▌| 53613/56168 [03:02<00:04, 592.97it/s]Running loglikelihood requests:  96%|█████████▌| 53688/56168 [03:02<00:03, 632.26it/s]Running loglikelihood requests:  96%|█████████▌| 53768/56168 [03:02<00:03, 676.40it/s]Running loglikelihood requests:  96%|█████████▌| 53841/56168 [03:02<00:03, 691.03it/s]Running loglikelihood requests:  96%|█████████▌| 53917/56168 [03:03<00:03, 710.30it/s]Running loglikelihood requests:  96%|█████████▌| 53997/56168 [03:03<00:03, 591.61it/s]Running loglikelihood requests:  96%|█████████▋| 54085/56168 [03:03<00:03, 662.93it/s]Running loglikelihood requests:  96%|█████████▋| 54169/56168 [03:03<00:02, 709.11it/s]Running loglikelihood requests:  97%|█████████▋| 54253/56168 [03:03<00:03, 604.59it/s]Running loglikelihood requests:  97%|█████████▋| 54341/56168 [03:03<00:02, 670.37it/s]Running loglikelihood requests:  97%|█████████▋| 54441/56168 [03:03<00:02, 754.19it/s]Running loglikelihood requests:  97%|█████████▋| 54522/56168 [03:03<00:02, 629.92it/s]Running loglikelihood requests:  97%|█████████▋| 54632/56168 [03:04<00:02, 741.69it/s]Running loglikelihood requests:  97%|█████████▋| 54714/56168 [03:04<00:02, 627.00it/s]Running loglikelihood requests:  98%|█████████▊| 54806/56168 [03:04<00:01, 694.15it/s]Running loglikelihood requests:  98%|█████████▊| 54893/56168 [03:04<00:02, 610.24it/s]Running loglikelihood requests:  98%|█████████▊| 54990/56168 [03:04<00:01, 691.51it/s]Running loglikelihood requests:  98%|█████████▊| 55085/56168 [03:04<00:01, 625.18it/s]Running loglikelihood requests:  98%|█████████▊| 55179/56168 [03:04<00:01, 695.67it/s]Running loglikelihood requests:  98%|█████████▊| 55273/56168 [03:05<00:01, 754.58it/s]Running loglikelihood requests:  99%|█████████▊| 55355/56168 [03:05<00:01, 636.81it/s]Running loglikelihood requests:  99%|█████████▊| 55458/56168 [03:05<00:00, 728.13it/s]Running loglikelihood requests:  99%|█████████▉| 55539/56168 [03:05<00:01, 621.44it/s]Running loglikelihood requests:  99%|█████████▉| 55644/56168 [03:05<00:00, 719.21it/s]Running loglikelihood requests:  99%|█████████▉| 55725/56168 [03:05<00:00, 618.32it/s]Running loglikelihood requests:  99%|█████████▉| 55834/56168 [03:05<00:00, 725.06it/s]Running loglikelihood requests: 100%|█████████▉| 55917/56168 [03:06<00:00, 628.36it/s]Running loglikelihood requests: 100%|█████████▉| 56027/56168 [03:06<00:00, 734.87it/s]Running loglikelihood requests: 100%|█████████▉| 56110/56168 [03:06<00:00, 664.05it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [03:06<00:00, 301.46it/s]
2025-05-13:22:27:08,236 WARNING  [huggingface.py:1353] Failed to get model SHA for /work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent_kl/checkpoint-490 at revision main. Error: Repo id must be in the form 'repo_name' or 'namespace/repo_name': '/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent_kl/checkpoint-490'. Use `repo_type` argument if needed.
2025-05-13:22:27:14,229 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=/work1/nkale/unlearn_benchmark/unlearn_models/grad_ascent_kl/checkpoint-490,tokenizer=meta-llama/Meta-Llama-3-8b-Instruct), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.6397|±  |0.0038|
| - humanities                          |      2|none  |      |acc   |↑  |0.5858|±  |0.0068|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.4603|±  |0.0446|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.7394|±  |0.0343|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.8088|±  |0.0276|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.8439|±  |0.0236|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.7521|±  |0.0394|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.7685|±  |0.0408|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.7546|±  |0.0338|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6850|±  |0.0250|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.3754|±  |0.0162|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.7042|±  |0.0259|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.7377|±  |0.0245|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4870|±  |0.0128|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.7953|±  |0.0309|
| - other                               |      2|none  |      |acc   |↑  |0.7216|±  |0.0078|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.6300|±  |0.0485|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.7208|±  |0.0276|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.6705|±  |0.0358|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.4500|±  |0.0500|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6816|±  |0.0313|
|  - management                         |      1|none  |     0|acc   |↑  |0.8350|±  |0.0368|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8974|±  |0.0199|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.8200|±  |0.0386|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.8174|±  |0.0138|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.7418|±  |0.0251|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.5355|±  |0.0298|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.7243|±  |0.0271|
|  - virology                           |      1|none  |     0|acc   |↑  |0.4940|±  |0.0389|
| - social sciences                     |      2|none  |      |acc   |↑  |0.7410|±  |0.0078|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.5263|±  |0.0470|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7778|±  |0.0296|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8756|±  |0.0238|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.6282|±  |0.0245|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.7269|±  |0.0289|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.8275|±  |0.0162|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7481|±  |0.0381|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.6928|±  |0.0187|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6727|±  |0.0449|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.7184|±  |0.0288|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8607|±  |0.0245|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8300|±  |0.0378|
| - stem                                |      2|none  |      |acc   |↑  |0.5404|±  |0.0086|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.3000|±  |0.0461|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.6222|±  |0.0419|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.7171|±  |0.0367|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.7361|±  |0.0369|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4300|±  |0.0498|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.4600|±  |0.0501|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3500|±  |0.0479|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5000|±  |0.0498|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.7500|±  |0.0435|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.5404|±  |0.0326|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.6069|±  |0.0407|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4656|±  |0.0257|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7484|±  |0.0247|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.4877|±  |0.0352|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.6900|±  |0.0465|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.3630|±  |0.0293|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.4570|±  |0.0407|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.5185|±  |0.0341|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.4911|±  |0.0475|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.6397|±  |0.0038|
| - humanities     |      2|none  |      |acc   |↑  |0.5858|±  |0.0068|
| - other          |      2|none  |      |acc   |↑  |0.7216|±  |0.0078|
| - social sciences|      2|none  |      |acc   |↑  |0.7410|±  |0.0078|
| - stem           |      2|none  |      |acc   |↑  |0.5404|±  |0.0086|

2025-05-13:22:27:20,421 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-13:22:27:20,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,581 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,627 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,639 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,641 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,649 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:20,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,354 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,365 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,369 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,373 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,377 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,381 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,392 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,402 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,406 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,411 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,416 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,420 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,443 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,448 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,452 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,476 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:21,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,327 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,330 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,338 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,347 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,349 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,707 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,814 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,831 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,835 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,883 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,892 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,896 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,924 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,933 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,937 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,941 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,975 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,979 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,987 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:22,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,001 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,088 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,103 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,112 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,115 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,140 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,146 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,154 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,163 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,166 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,169 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,171 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,180 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,183 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,188 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,194 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,204 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,207 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,212 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,215 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,227 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,230 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,241 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,243 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,259 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,262 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,267 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,273 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,293 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,298 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,301 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,308 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,313 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,320 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,322 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:23,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:24,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:24,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:24,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:24,357 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:24,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:24,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:24,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:24,366 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,338 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,340 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,342 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,346 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,354 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,362 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,364 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,366 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,369 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,371 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,373 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,375 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,377 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,379 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,381 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,392 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,394 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,398 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,400 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,402 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,406 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,408 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,410 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,416 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,419 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,423 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,427 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,433 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,438 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,440 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,448 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,459 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,469 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,471 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,479 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,481 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,482 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,497 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,522 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,547 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,554 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,571 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,581 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,582 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,599 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,605 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,608 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,610 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,623 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,625 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,635 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,637 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,639 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,641 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,643 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,645 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,648 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,649 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,650 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,653 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,657 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,658 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,660 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,661 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,662 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,663 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,665 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,666 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,669 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,671 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,673 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,674 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,675 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,677 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,678 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,684 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,686 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,688 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,690 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,692 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,697 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,707 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,711 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,716 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,721 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,723 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,727 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,729 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,733 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,736 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,740 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,744 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,753 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,846 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,853 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,857 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:25,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:28,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:28,112 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:27:28,116 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-13:22:27:28,119 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-13:22:27:28,119 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo/checkpoint-150', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-13:22:27:28,740 INFO     [huggingface.py:130] Using device 'cuda:5'
2025-05-13:22:27:29,243 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:5'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:05,  1.78s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:03<00:03,  1.58s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:04<00:01,  1.42s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.04s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:04<00:00,  1.22s/it]
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,583 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,584 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:27:49,585 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-13:22:27:49,591 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 83%|████████▎ | 83/100 [00:00<00:00, 821.40it/s]100%|██████████| 100/100 [00:00<00:00, 817.43it/s]
2025-05-13:22:27:49,717 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 27%|██▋       | 85/310 [00:00<00:00, 841.94it/s] 55%|█████▌    | 171/310 [00:00<00:00, 849.65it/s] 83%|████████▎ | 257/310 [00:00<00:00, 853.53it/s]100%|██████████| 310/310 [00:00<00:00, 844.91it/s]
2025-05-13:22:27:50,095 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 85%|████████▌ | 85/100 [00:00<00:00, 849.26it/s]100%|██████████| 100/100 [00:00<00:00, 850.55it/s]
2025-05-13:22:27:50,217 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 61%|██████    | 88/145 [00:00<00:00, 870.91it/s]100%|██████████| 145/145 [00:00<00:00, 863.62it/s]
2025-05-13:22:27:50,390 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 84%|████████▍ | 84/100 [00:00<00:00, 835.13it/s]100%|██████████| 100/100 [00:00<00:00, 836.77it/s]
2025-05-13:22:27:50,513 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 43%|████▎     | 87/203 [00:00<00:00, 860.64it/s] 86%|████████▌ | 174/203 [00:00<00:00, 855.08it/s]100%|██████████| 203/203 [00:00<00:00, 852.47it/s]
2025-05-13:22:27:50,759 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 56%|█████▌    | 85/152 [00:00<00:00, 848.96it/s]100%|██████████| 152/152 [00:00<00:00, 856.03it/s]
2025-05-13:22:27:50,942 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 83%|████████▎ | 85/102 [00:00<00:00, 848.52it/s]100%|██████████| 102/102 [00:00<00:00, 845.62it/s]
2025-05-13:22:27:51,066 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 85%|████████▌ | 85/100 [00:00<00:00, 844.23it/s]100%|██████████| 100/100 [00:00<00:00, 845.81it/s]
2025-05-13:22:27:51,189 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 60%|█████▉    | 86/144 [00:00<00:00, 854.38it/s]100%|██████████| 144/144 [00:00<00:00, 850.96it/s]
2025-05-13:22:27:51,364 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 37%|███▋      | 86/235 [00:00<00:00, 854.20it/s] 73%|███████▎  | 172/235 [00:00<00:00, 841.24it/s]100%|██████████| 235/235 [00:00<00:00, 844.70it/s]
2025-05-13:22:27:51,650 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 77%|███████▋  | 86/112 [00:00<00:00, 855.57it/s]100%|██████████| 112/112 [00:00<00:00, 854.27it/s]
2025-05-13:22:27:51,786 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 31%|███▏      | 85/270 [00:00<00:00, 847.46it/s] 63%|██████▎   | 171/270 [00:00<00:00, 849.32it/s] 95%|█████████▌| 257/270 [00:00<00:00, 851.56it/s]100%|██████████| 270/270 [00:00<00:00, 850.30it/s]
2025-05-13:22:27:52,113 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 84%|████████▍ | 84/100 [00:00<00:00, 839.13it/s]100%|██████████| 100/100 [00:00<00:00, 837.23it/s]
2025-05-13:22:27:52,236 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 85%|████████▌ | 85/100 [00:00<00:00, 849.80it/s]100%|██████████| 100/100 [00:00<00:00, 851.63it/s]
2025-05-13:22:27:52,358 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 63%|██████▎   | 85/135 [00:00<00:00, 841.94it/s]100%|██████████| 135/135 [00:00<00:00, 849.83it/s]
2025-05-13:22:27:52,522 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 23%|██▎       | 86/378 [00:00<00:00, 859.14it/s] 46%|████▌     | 172/378 [00:00<00:00, 859.53it/s] 68%|██████▊   | 258/378 [00:00<00:00, 847.46it/s] 91%|█████████ | 344/378 [00:00<00:00, 849.51it/s]100%|██████████| 378/378 [00:00<00:00, 850.54it/s]
2025-05-13:22:27:52,979 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 56%|█████▋    | 85/151 [00:00<00:00, 843.26it/s]100%|██████████| 151/151 [00:00<00:00, 847.75it/s]
2025-05-13:22:27:53,164 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 40%|███▉      | 86/216 [00:00<00:00, 854.83it/s] 80%|███████▉  | 172/216 [00:00<00:00, 850.10it/s]100%|██████████| 216/216 [00:00<00:00, 851.06it/s]
2025-05-13:22:27:53,426 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 32%|███▏      | 84/265 [00:00<00:00, 834.28it/s] 64%|██████▍   | 169/265 [00:00<00:00, 842.70it/s] 96%|█████████▌| 254/265 [00:00<00:00, 843.58it/s]100%|██████████| 265/265 [00:00<00:00, 843.03it/s]
2025-05-13:22:27:53,749 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 83%|████████▎ | 83/100 [00:00<00:00, 825.02it/s]100%|██████████| 100/100 [00:00<00:00, 819.08it/s]
2025-05-13:22:27:53,876 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 83%|████████▎ | 85/103 [00:00<00:00, 846.15it/s]100%|██████████| 103/103 [00:00<00:00, 845.34it/s]
2025-05-13:22:27:54,002 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 28%|██▊       | 86/306 [00:00<00:00, 856.95it/s] 56%|█████▌    | 172/306 [00:00<00:00, 856.11it/s] 84%|████████▍ | 258/306 [00:00<00:00, 845.66it/s]100%|██████████| 306/306 [00:00<00:00, 847.47it/s]
2025-05-13:22:27:54,373 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 50%|████▉     | 86/173 [00:00<00:00, 851.33it/s] 99%|█████████▉| 172/173 [00:00<00:00, 853.32it/s]100%|██████████| 173/173 [00:00<00:00, 852.33it/s]
2025-05-13:22:27:54,583 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 51%|█████     | 85/166 [00:00<00:00, 849.06it/s]100%|██████████| 166/166 [00:00<00:00, 840.26it/s]
2025-05-13:22:27:54,787 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 31%|███▏      | 85/272 [00:00<00:00, 842.08it/s] 63%|██████▎   | 171/272 [00:00<00:00, 852.12it/s] 95%|█████████▍| 258/272 [00:00<00:00, 856.43it/s]100%|██████████| 272/272 [00:00<00:00, 852.63it/s]
2025-05-13:22:27:55,116 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 11%|█         | 83/783 [00:00<00:00, 825.80it/s] 21%|██▏       | 167/783 [00:00<00:00, 829.69it/s] 32%|███▏      | 253/783 [00:00<00:00, 842.45it/s] 43%|████▎     | 338/783 [00:00<00:00, 842.64it/s] 54%|█████▍    | 424/783 [00:00<00:00, 847.88it/s] 65%|██████▌   | 511/783 [00:00<00:00, 854.78it/s] 77%|███████▋  | 599/783 [00:00<00:00, 859.84it/s] 88%|████████▊ | 687/783 [00:00<00:00, 863.49it/s] 99%|█████████▉| 774/783 [00:00<00:00, 856.80it/s]100%|██████████| 783/783 [00:00<00:00, 851.80it/s]
2025-05-13:22:27:56,062 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 880.22it/s]100%|██████████| 100/100 [00:00<00:00, 878.36it/s]
2025-05-13:22:27:56,180 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 869.81it/s]100%|██████████| 100/100 [00:00<00:00, 868.38it/s]
2025-05-13:22:27:56,299 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 32%|███▏      | 89/282 [00:00<00:00, 883.04it/s] 63%|██████▎   | 178/282 [00:00<00:00, 873.91it/s] 94%|█████████▍| 266/282 [00:00<00:00, 873.37it/s]100%|██████████| 282/282 [00:00<00:00, 872.41it/s]
2025-05-13:22:27:56,633 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:02, 76.82it/s] 46%|████▌     | 107/234 [00:00<00:00, 369.73it/s] 83%|████████▎ | 195/234 [00:00<00:00, 543.30it/s]100%|██████████| 234/234 [00:00<00:00, 470.30it/s]
2025-05-13:22:27:57,139 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 39%|███▊      | 86/223 [00:00<00:00, 859.85it/s] 78%|███████▊  | 173/223 [00:00<00:00, 860.82it/s]100%|██████████| 223/223 [00:00<00:00, 861.18it/s]
2025-05-13:22:27:57,406 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 79%|███████▉  | 87/110 [00:00<00:00, 864.92it/s]100%|██████████| 110/110 [00:00<00:00, 865.12it/s]
2025-05-13:22:27:57,537 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 42%|████▏     | 85/201 [00:00<00:00, 847.94it/s] 85%|████████▌ | 171/201 [00:00<00:00, 854.28it/s]100%|██████████| 201/201 [00:00<00:00, 855.12it/s]
2025-05-13:22:27:57,779 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 43%|████▎     | 86/198 [00:00<00:00, 854.74it/s] 87%|████████▋ | 173/198 [00:00<00:00, 861.74it/s]100%|██████████| 198/198 [00:00<00:00, 862.95it/s]
2025-05-13:22:27:58,015 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 36%|███▋      | 89/245 [00:00<00:00, 884.58it/s] 73%|███████▎  | 178/245 [00:00<00:00, 865.64it/s]100%|██████████| 245/245 [00:00<00:00, 875.55it/s]
2025-05-13:22:27:58,304 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 17%|█▋        | 90/545 [00:00<00:00, 895.68it/s] 33%|███▎      | 181/545 [00:00<00:00, 899.17it/s] 50%|████▉     | 271/545 [00:00<00:00, 888.29it/s] 66%|██████▌   | 360/545 [00:00<00:00, 886.51it/s] 83%|████████▎ | 450/545 [00:00<00:00, 889.40it/s] 99%|█████████▉| 540/545 [00:00<00:00, 892.43it/s]100%|██████████| 545/545 [00:00<00:00, 891.47it/s]
2025-05-13:22:27:58,933 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 887.36it/s]100%|██████████| 100/100 [00:00<00:00, 886.99it/s]
2025-05-13:22:27:59,049 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 22%|██▏       | 86/390 [00:00<00:00, 859.95it/s] 44%|████▍     | 172/390 [00:00<00:00, 822.64it/s] 65%|██████▌   | 255/390 [00:00<00:00, 822.90it/s] 87%|████████▋ | 340/390 [00:00<00:00, 830.15it/s]100%|██████████| 390/390 [00:00<00:00, 834.33it/s]
2025-05-13:22:27:59,529 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 33%|███▎      | 78/238 [00:00<00:00, 775.62it/s] 66%|██████▌   | 156/238 [00:00<00:00, 774.50it/s] 99%|█████████▉| 236/238 [00:00<00:00, 784.67it/s]100%|██████████| 238/238 [00:00<00:00, 781.86it/s]
2025-05-13:22:27:59,842 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 71%|███████   | 81/114 [00:00<00:00, 805.34it/s]100%|██████████| 114/114 [00:00<00:00, 818.39it/s]
2025-05-13:22:27:59,986 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 13%|█▎        | 81/612 [00:00<00:00, 800.49it/s] 26%|██▋       | 162/612 [00:00<00:00, 781.70it/s] 40%|████      | 245/612 [00:00<00:00, 800.19it/s] 54%|█████▍    | 333/612 [00:00<00:00, 827.78it/s] 69%|██████▉   | 422/612 [00:00<00:00, 846.92it/s] 83%|████████▎ | 507/612 [00:00<00:00, 833.40it/s] 97%|█████████▋| 591/612 [00:00<00:00, 790.00it/s]100%|██████████| 612/612 [00:00<00:00, 792.86it/s]
2025-05-13:22:28:00,778 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 57%|█████▋    | 75/131 [00:00<00:00, 745.41it/s]100%|██████████| 131/131 [00:00<00:00, 770.08it/s]
2025-05-13:22:28:00,954 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 45%|████▌     | 87/193 [00:00<00:00, 866.37it/s] 90%|█████████ | 174/193 [00:00<00:00, 857.10it/s]100%|██████████| 193/193 [00:00<00:00, 847.85it/s]
2025-05-13:22:28:01,189 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  9%|▉         | 84/895 [00:00<00:00, 833.93it/s] 19%|█▉        | 172/895 [00:00<00:00, 859.66it/s] 29%|██▉       | 263/895 [00:00<00:00, 878.93it/s] 39%|███▉      | 351/895 [00:00<00:00, 834.23it/s] 49%|████▊     | 435/895 [00:00<00:00, 828.67it/s] 58%|█████▊    | 523/895 [00:00<00:00, 845.19it/s] 68%|██████▊   | 613/895 [00:00<00:00, 862.09it/s] 78%|███████▊  | 700/895 [00:00<00:00, 816.76it/s] 87%|████████▋ | 783/895 [00:00<00:00, 805.04it/s] 97%|█████████▋| 869/895 [00:01<00:00, 820.77it/s]100%|██████████| 895/895 [00:01<00:00, 833.29it/s]
2025-05-13:22:28:02,295 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 38%|███▊      | 89/237 [00:00<00:00, 885.38it/s] 75%|███████▌  | 178/237 [00:00<00:00, 842.52it/s]100%|██████████| 237/237 [00:00<00:00, 818.98it/s]
2025-05-13:22:28:02,594 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 51%|█████     | 84/165 [00:00<00:00, 836.36it/s]100%|██████████| 165/165 [00:00<00:00, 862.88it/s]
2025-05-13:22:28:02,792 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 29%|██▊       | 89/311 [00:00<00:00, 887.08it/s] 58%|█████▊    | 179/311 [00:00<00:00, 888.83it/s] 86%|████████▌ | 268/311 [00:00<00:00, 886.88it/s]100%|██████████| 311/311 [00:00<00:00, 887.21it/s]
2025-05-13:22:28:03,153 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 25%|██▌       | 88/346 [00:00<00:00, 869.83it/s] 51%|█████     | 175/346 [00:00<00:00, 782.72it/s] 73%|███████▎  | 254/346 [00:00<00:00, 749.84it/s] 95%|█████████▌| 330/346 [00:00<00:00, 743.48it/s]100%|██████████| 346/346 [00:00<00:00, 758.81it/s]
2025-05-13:22:28:03,620 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 42%|████▏     | 85/204 [00:00<00:00, 846.39it/s] 85%|████████▌ | 174/204 [00:00<00:00, 870.91it/s]100%|██████████| 204/204 [00:00<00:00, 868.58it/s]
2025-05-13:22:28:03,864 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 73%|███████▎  | 88/121 [00:00<00:00, 876.43it/s]100%|██████████| 121/121 [00:00<00:00, 874.07it/s]
2025-05-13:22:28:04,006 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  6%|▌         | 88/1534 [00:00<00:01, 875.40it/s] 11%|█▏        | 176/1534 [00:00<00:01, 770.79it/s] 17%|█▋        | 254/1534 [00:00<00:01, 744.80it/s] 21%|██▏       | 329/1534 [00:00<00:01, 723.09it/s] 26%|██▌       | 402/1534 [00:00<00:01, 724.40it/s] 32%|███▏      | 486/1534 [00:00<00:01, 759.27it/s] 37%|███▋      | 574/1534 [00:00<00:01, 796.53it/s] 43%|████▎     | 663/1534 [00:00<00:01, 824.17it/s] 49%|████▉     | 752/1534 [00:00<00:00, 841.93it/s] 55%|█████▍    | 839/1534 [00:01<00:00, 849.03it/s] 60%|██████    | 928/1534 [00:01<00:00, 859.36it/s] 66%|██████▌   | 1015/1534 [00:01<00:00, 826.79it/s] 72%|███████▏  | 1099/1534 [00:01<00:00, 787.07it/s] 77%|███████▋  | 1179/1534 [00:01<00:00, 763.93it/s] 82%|████████▏ | 1256/1534 [00:01<00:00, 749.12it/s] 87%|████████▋ | 1332/1534 [00:01<00:00, 737.50it/s] 92%|█████████▏| 1406/1534 [00:01<00:00, 700.61it/s] 96%|█████████▋| 1477/1534 [00:01<00:00, 665.60it/s]100%|██████████| 1534/1534 [00:02<00:00, 759.13it/s]
2025-05-13:22:28:06,079 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 49%|████▉     | 84/171 [00:00<00:00, 830.28it/s]100%|██████████| 171/171 [00:00<00:00, 853.21it/s]100%|██████████| 171/171 [00:00<00:00, 849.22it/s]
2025-05-13:22:28:06,287 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 83%|████████▎ | 90/108 [00:00<00:00, 892.25it/s]100%|██████████| 108/108 [00:00<00:00, 885.12it/s]
2025-05-13:22:28:06,413 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 71%|███████   | 89/126 [00:00<00:00, 889.15it/s]100%|██████████| 126/126 [00:00<00:00, 889.58it/s]
2025-05-13:22:28:06,559 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 27%|██▋       | 88/324 [00:00<00:01, 221.99it/s] 48%|████▊     | 154/324 [00:00<00:00, 337.12it/s] 69%|██████▉   | 223/324 [00:00<00:00, 433.17it/s] 90%|█████████ | 293/324 [00:00<00:00, 506.30it/s]100%|██████████| 324/324 [00:00<00:00, 435.68it/s]
2025-05-13:22:28:07,315 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 43%|████▎     | 70/163 [00:00<00:00, 698.32it/s] 86%|████████▌ | 140/163 [00:00<00:00, 697.31it/s]100%|██████████| 163/163 [00:00<00:00, 697.46it/s]
2025-05-13:22:28:07,557 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<31:15:31,  2.00s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:03<37:38, 24.84it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:04<23:20, 40.01it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<18:27, 50.56it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<16:02, 58.10it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<14:32, 64.04it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:07<13:29, 68.91it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:08<12:45, 72.76it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<12:08, 76.45it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<11:41, 79.24it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:10<11:19, 81.77it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:11<11:02, 83.71it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:45, 85.79it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:12<10:33, 87.38it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:13<10:15, 89.86it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:13<10:01, 91.84it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:14<09:47, 93.79it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:15<09:37, 95.31it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:15<09:29, 96.66it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:16<09:19, 98.19it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:17<09:12, 99.29it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:17<09:07, 100.22it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:18<09:02, 101.00it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:18<08:54, 102.37it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:19<08:45, 103.97it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:20<08:38, 105.29it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:20<08:29, 106.99it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:21<08:22, 108.36it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:21<08:16, 109.45it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:22<08:11, 110.43it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:22<08:08, 111.16it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:23<08:02, 112.23it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:24<07:58, 113.10it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:24<07:54, 113.86it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:25<07:51, 114.43it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:25<07:48, 115.06it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:26<07:46, 115.49it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:26<07:41, 116.50it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:27<07:38, 117.29it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:27<07:35, 117.93it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:28<07:33, 118.31it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:28<07:30, 118.73it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:29<07:29, 119.10it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:30<07:26, 119.58it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:30<07:18, 121.68it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:31<07:12, 123.22it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:31<07:07, 124.42it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:32<07:04, 125.22it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:32<07:01, 125.97it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:33<06:59, 126.47it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:33<06:57, 126.94it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:34<06:55, 127.46it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:34<06:53, 127.87it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:35<06:49, 128.93it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:35<06:45, 129.87it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:36<06:43, 130.41it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:36<06:41, 130.95it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:36<06:39, 131.44it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:37<06:37, 132.00it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:37<06:35, 132.42it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:38<06:33, 132.83it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:38<06:29, 134.01it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:39<06:26, 134.95it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:39<06:24, 135.60it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:40<06:22, 136.21it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:40<06:20, 136.53it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:41<06:19, 137.02it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:41<06:17, 137.37it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:42<06:16, 137.76it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:42<06:14, 138.15it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:43<06:12, 138.60it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:43<06:09, 139.58it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:43<06:06, 140.57it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:44<06:05, 141.07it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:44<06:02, 141.74it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:45<06:01, 142.12it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:45<06:00, 142.48it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:46<05:56, 143.78it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:46<05:53, 144.70it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:47<05:51, 145.60it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:47<05:48, 146.29it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:47<05:42, 149.06it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:48<05:37, 150.91it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:48<05:33, 152.33it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:49<05:30, 153.47it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:49<05:28, 154.22it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:49<05:27, 154.84it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:50<05:25, 155.39it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:50<05:24, 155.87it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:51<05:22, 156.33it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:51<05:21, 156.77it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:51<05:20, 157.14it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:52<05:17, 158.53it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:52<05:14, 159.54it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:53<05:13, 160.14it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:53<05:11, 160.58it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:53<05:10, 160.90it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:54<05:09, 161.21it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:54<05:08, 161.65it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:55<05:07, 162.16it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:55<05:05, 162.70it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:55<05:04, 163.24it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:56<05:03, 163.62it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:56<05:02, 163.92it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:57<05:01, 164.20it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:57<05:00, 164.61it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:57<04:59, 164.90it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:58<04:56, 166.19it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:58<04:54, 167.17it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:58<04:52, 168.08it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:59<04:50, 168.84it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:59<04:49, 169.43it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [01:00<04:48, 169.82it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [01:00<04:40, 174.54it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [01:00<04:34, 177.83it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [01:01<04:30, 180.14it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [01:01<04:27, 182.29it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [01:01<04:24, 183.85it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [01:02<04:23, 184.67it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [01:02<04:21, 185.94it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:02<04:19, 187.02it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:03<04:17, 187.72it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:03<04:16, 188.68it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:03<04:15, 189.34it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:04<04:14, 189.73it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:04<04:12, 190.58it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:04<04:10, 192.15it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:05<04:07, 193.73it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:05<04:06, 194.85it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:05<04:04, 195.69it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:06<04:03, 196.63it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:06<04:02, 197.04it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:06<04:01, 197.72it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:07<03:59, 199.07it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:07<03:57, 200.29it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:07<03:56, 201.18it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:08<03:54, 202.18it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:08<03:53, 203.05it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:08<03:52, 203.89it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:08<03:50, 205.27it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:09<03:49, 206.14it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:09<03:47, 207.07it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:09<03:46, 208.21it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:10<03:44, 209.10it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:10<03:43, 209.74it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:10<03:42, 210.31it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:11<03:41, 211.27it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:11<03:40, 212.16it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:11<03:39, 212.51it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:11<03:38, 213.75it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:12<03:36, 214.85it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:12<03:35, 215.71it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:12<03:34, 216.50it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:13<03:31, 218.85it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:13<03:29, 220.57it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:13<03:28, 221.86it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:14<03:27, 222.97it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:14<03:26, 223.87it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:14<03:25, 224.56it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:14<03:24, 225.28it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:15<03:23, 225.77it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:15<03:18, 230.70it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:15<03:15, 234.21it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:15<03:12, 237.10it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:16<03:10, 239.29it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:16<03:09, 241.00it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:16<03:08, 242.16it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:16<03:07, 242.96it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:17<03:06, 243.87it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:17<03:05, 244.60it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:17<03:03, 247.42it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:17<03:01, 249.38it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:18<02:59, 251.38it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:18<02:58, 252.94it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:18<02:57, 253.72it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:18<02:56, 254.61it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:19<02:55, 255.31it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:19<02:55, 256.15it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:19<02:54, 256.25it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:19<02:54, 256.83it/s]Running loglikelihood requests:  21%|██        | 11525/56168 [01:20<02:49, 262.84it/s]Running loglikelihood requests:  21%|██        | 11589/56168 [01:20<02:49, 262.38it/s]Running loglikelihood requests:  21%|██        | 11653/56168 [01:20<02:49, 262.00it/s]Running loglikelihood requests:  21%|██        | 11717/56168 [01:20<02:49, 261.55it/s]Running loglikelihood requests:  21%|██        | 11781/56168 [01:21<02:49, 262.30it/s]Running loglikelihood requests:  21%|██        | 11845/56168 [01:21<02:49, 262.08it/s]Running loglikelihood requests:  21%|██        | 11909/56168 [01:21<02:48, 262.95it/s]Running loglikelihood requests:  21%|██▏       | 11973/56168 [01:21<02:47, 263.22it/s]Running loglikelihood requests:  21%|██▏       | 12037/56168 [01:22<02:47, 263.87it/s]Running loglikelihood requests:  22%|██▏       | 12101/56168 [01:22<02:46, 264.35it/s]Running loglikelihood requests:  22%|██▏       | 12165/56168 [01:22<02:46, 264.31it/s]Running loglikelihood requests:  22%|██▏       | 12229/56168 [01:22<02:45, 264.86it/s]Running loglikelihood requests:  22%|██▏       | 12293/56168 [01:23<02:43, 267.77it/s]Running loglikelihood requests:  22%|██▏       | 12357/56168 [01:23<02:42, 269.48it/s]Running loglikelihood requests:  22%|██▏       | 12421/56168 [01:23<02:41, 271.05it/s]Running loglikelihood requests:  22%|██▏       | 12485/56168 [01:23<02:40, 272.28it/s]Running loglikelihood requests:  22%|██▏       | 12549/56168 [01:24<02:39, 273.61it/s]Running loglikelihood requests:  22%|██▏       | 12613/56168 [01:24<02:38, 274.29it/s]Running loglikelihood requests:  23%|██▎       | 12677/56168 [01:24<02:37, 275.40it/s]Running loglikelihood requests:  23%|██▎       | 12741/56168 [01:24<02:37, 275.56it/s]Running loglikelihood requests:  23%|██▎       | 12805/56168 [01:24<02:36, 276.53it/s]Running loglikelihood requests:  23%|██▎       | 12869/56168 [01:25<02:36, 276.66it/s]Running loglikelihood requests:  23%|██▎       | 12933/56168 [01:25<02:36, 277.02it/s]Running loglikelihood requests:  23%|██▎       | 12997/56168 [01:25<02:35, 277.82it/s]Running loglikelihood requests:  23%|██▎       | 13061/56168 [01:25<02:35, 276.91it/s]Running loglikelihood requests:  23%|██▎       | 13125/56168 [01:26<02:35, 277.44it/s]Running loglikelihood requests:  23%|██▎       | 13189/56168 [01:26<02:34, 277.64it/s]Running loglikelihood requests:  24%|██▎       | 13253/56168 [01:26<02:34, 278.23it/s]Running loglikelihood requests:  24%|██▎       | 13317/56168 [01:26<02:33, 278.57it/s]Running loglikelihood requests:  24%|██▍       | 13381/56168 [01:27<02:33, 278.20it/s]Running loglikelihood requests:  24%|██▍       | 13445/56168 [01:27<02:33, 278.17it/s]Running loglikelihood requests:  24%|██▍       | 13509/56168 [01:27<02:31, 281.39it/s]Running loglikelihood requests:  24%|██▍       | 13573/56168 [01:27<02:29, 284.07it/s]Running loglikelihood requests:  24%|██▍       | 13637/56168 [01:27<02:28, 286.60it/s]Running loglikelihood requests:  24%|██▍       | 13701/56168 [01:28<02:27, 288.81it/s]Running loglikelihood requests:  25%|██▍       | 13765/56168 [01:28<02:26, 290.06it/s]Running loglikelihood requests:  25%|██▍       | 13829/56168 [01:28<02:25, 291.03it/s]Running loglikelihood requests:  25%|██▍       | 13893/56168 [01:28<02:24, 291.78it/s]Running loglikelihood requests:  25%|██▍       | 13957/56168 [01:29<02:24, 291.27it/s]Running loglikelihood requests:  25%|██▍       | 14021/56168 [01:29<02:24, 291.56it/s]Running loglikelihood requests:  25%|██▌       | 14085/56168 [01:29<02:24, 291.97it/s]Running loglikelihood requests:  25%|██▌       | 14149/56168 [01:29<02:23, 292.22it/s]Running loglikelihood requests:  25%|██▌       | 14213/56168 [01:29<02:23, 292.67it/s]Running loglikelihood requests:  25%|██▌       | 14277/56168 [01:30<02:22, 293.43it/s]Running loglikelihood requests:  26%|██▌       | 14341/56168 [01:30<02:22, 293.13it/s]Running loglikelihood requests:  26%|██▌       | 14405/56168 [01:30<02:22, 293.24it/s]Running loglikelihood requests:  26%|██▌       | 14469/56168 [01:30<02:22, 293.00it/s]Running loglikelihood requests:  26%|██▌       | 14533/56168 [01:31<02:21, 293.47it/s]Running loglikelihood requests:  26%|██▌       | 14597/56168 [01:31<02:21, 293.52it/s]Running loglikelihood requests:  26%|██▌       | 14661/56168 [01:31<02:21, 294.16it/s]Running loglikelihood requests:  26%|██▌       | 14725/56168 [01:31<02:20, 295.50it/s]Running loglikelihood requests:  26%|██▋       | 14789/56168 [01:31<02:19, 296.15it/s]Running loglikelihood requests:  26%|██▋       | 14853/56168 [01:32<02:19, 296.64it/s]Running loglikelihood requests:  27%|██▋       | 14917/56168 [01:32<02:18, 297.14it/s]Running loglikelihood requests:  27%|██▋       | 14981/56168 [01:32<02:18, 296.58it/s]Running loglikelihood requests:  27%|██▋       | 15045/56168 [01:32<02:18, 296.01it/s]Running loglikelihood requests:  27%|██▋       | 15109/56168 [01:32<02:18, 296.19it/s]Running loglikelihood requests:  27%|██▋       | 15173/56168 [01:33<02:18, 296.32it/s]Running loglikelihood requests:  27%|██▋       | 15237/56168 [01:33<02:18, 296.19it/s]Running loglikelihood requests:  27%|██▋       | 15301/56168 [01:33<02:18, 296.14it/s]Running loglikelihood requests:  27%|██▋       | 15365/56168 [01:33<02:17, 296.24it/s]Running loglikelihood requests:  27%|██▋       | 15429/56168 [01:34<02:17, 296.83it/s]Running loglikelihood requests:  28%|██▊       | 15493/56168 [01:34<02:15, 299.63it/s]Running loglikelihood requests:  28%|██▊       | 15557/56168 [01:34<02:14, 301.27it/s]Running loglikelihood requests:  28%|██▊       | 15621/56168 [01:34<02:13, 302.59it/s]Running loglikelihood requests:  28%|██▊       | 15685/56168 [01:34<02:13, 303.48it/s]Running loglikelihood requests:  28%|██▊       | 15749/56168 [01:35<02:12, 304.21it/s]Running loglikelihood requests:  28%|██▊       | 15813/56168 [01:35<02:12, 303.87it/s]Running loglikelihood requests:  28%|██▊       | 15877/56168 [01:35<02:12, 303.88it/s]Running loglikelihood requests:  28%|██▊       | 15945/56168 [01:35<02:10, 309.36it/s]Running loglikelihood requests:  29%|██▊       | 16009/56168 [01:35<02:10, 307.22it/s]Running loglikelihood requests:  29%|██▊       | 16073/56168 [01:36<02:10, 306.27it/s]Running loglikelihood requests:  29%|██▊       | 16137/56168 [01:36<02:11, 305.43it/s]Running loglikelihood requests:  29%|██▉       | 16201/56168 [01:36<02:10, 305.57it/s]Running loglikelihood requests:  29%|██▉       | 16265/56168 [01:36<02:10, 305.28it/s]Running loglikelihood requests:  29%|██▉       | 16329/56168 [01:36<02:10, 304.99it/s]Running loglikelihood requests:  29%|██▉       | 16393/56168 [01:37<02:10, 305.72it/s]Running loglikelihood requests:  29%|██▉       | 16457/56168 [01:37<02:10, 305.01it/s]Running loglikelihood requests:  29%|██▉       | 16521/56168 [01:37<02:09, 305.32it/s]Running loglikelihood requests:  30%|██▉       | 16585/56168 [01:37<02:09, 305.05it/s]Running loglikelihood requests:  30%|██▉       | 16649/56168 [01:38<02:09, 305.22it/s]Running loglikelihood requests:  30%|██▉       | 16713/56168 [01:38<02:09, 305.16it/s]Running loglikelihood requests:  30%|██▉       | 16777/56168 [01:38<02:09, 304.76it/s]Running loglikelihood requests:  30%|██▉       | 16841/56168 [01:38<02:09, 304.62it/s]Running loglikelihood requests:  30%|███       | 16905/56168 [01:38<02:08, 304.89it/s]Running loglikelihood requests:  30%|███       | 16969/56168 [01:39<02:08, 305.41it/s]Running loglikelihood requests:  30%|███       | 17033/56168 [01:39<02:07, 306.53it/s]Running loglikelihood requests:  30%|███       | 17097/56168 [01:39<02:07, 307.30it/s]Running loglikelihood requests:  31%|███       | 17161/56168 [01:39<02:06, 307.93it/s]Running loglikelihood requests:  31%|███       | 17225/56168 [01:39<02:06, 307.60it/s]Running loglikelihood requests:  31%|███       | 17289/56168 [01:40<02:06, 307.89it/s]Running loglikelihood requests:  31%|███       | 17353/56168 [01:40<02:06, 307.50it/s]Running loglikelihood requests:  31%|███       | 17417/56168 [01:40<02:06, 307.55it/s]Running loglikelihood requests:  31%|███       | 17481/56168 [01:40<02:05, 307.63it/s]Running loglikelihood requests:  31%|███       | 17545/56168 [01:40<02:05, 307.58it/s]Running loglikelihood requests:  31%|███▏      | 17609/56168 [01:41<02:05, 308.04it/s]Running loglikelihood requests:  31%|███▏      | 17673/56168 [01:41<02:04, 308.35it/s]Running loglikelihood requests:  32%|███▏      | 17737/56168 [01:41<02:04, 308.33it/s]Running loglikelihood requests:  32%|███▏      | 17801/56168 [01:41<02:04, 308.56it/s]Running loglikelihood requests:  32%|███▏      | 17865/56168 [01:41<02:03, 309.10it/s]Running loglikelihood requests:  32%|███▏      | 17929/56168 [01:42<02:03, 310.05it/s]Running loglikelihood requests:  32%|███▏      | 17993/56168 [01:42<02:03, 309.46it/s]Running loglikelihood requests:  32%|███▏      | 18057/56168 [01:42<02:03, 309.02it/s]Running loglikelihood requests:  32%|███▏      | 18121/56168 [01:42<02:03, 308.57it/s]Running loglikelihood requests:  32%|███▏      | 18185/56168 [01:43<02:03, 308.15it/s]Running loglikelihood requests:  32%|███▏      | 18249/56168 [01:43<02:02, 308.54it/s]Running loglikelihood requests:  33%|███▎      | 18313/56168 [01:43<02:02, 308.84it/s]Running loglikelihood requests:  33%|███▎      | 18377/56168 [01:43<02:02, 309.41it/s]Running loglikelihood requests:  33%|███▎      | 18441/56168 [01:43<02:01, 309.63it/s]Running loglikelihood requests:  33%|███▎      | 18505/56168 [01:44<02:01, 309.64it/s]Running loglikelihood requests:  33%|███▎      | 18569/56168 [01:44<02:01, 309.41it/s]Running loglikelihood requests:  33%|███▎      | 18633/56168 [01:44<02:01, 309.79it/s]Running loglikelihood requests:  33%|███▎      | 18697/56168 [01:44<02:00, 310.60it/s]Running loglikelihood requests:  33%|███▎      | 18761/56168 [01:44<02:00, 311.14it/s]Running loglikelihood requests:  34%|███▎      | 18829/56168 [01:45<01:57, 317.12it/s]Running loglikelihood requests:  34%|███▎      | 18893/56168 [01:45<01:57, 316.31it/s]Running loglikelihood requests:  34%|███▍      | 18957/56168 [01:45<01:57, 316.18it/s]Running loglikelihood requests:  34%|███▍      | 19021/56168 [01:45<01:57, 315.80it/s]Running loglikelihood requests:  34%|███▍      | 19085/56168 [01:45<01:57, 314.54it/s]Running loglikelihood requests:  34%|███▍      | 19149/56168 [01:46<01:57, 314.18it/s]Running loglikelihood requests:  34%|███▍      | 19213/56168 [01:46<01:57, 313.92it/s]Running loglikelihood requests:  34%|███▍      | 19277/56168 [01:46<01:57, 313.57it/s]Running loglikelihood requests:  34%|███▍      | 19341/56168 [01:46<01:57, 313.76it/s]Running loglikelihood requests:  35%|███▍      | 19405/56168 [01:46<01:57, 313.60it/s]Running loglikelihood requests:  35%|███▍      | 19469/56168 [01:47<01:57, 313.41it/s]Running loglikelihood requests:  35%|███▍      | 19533/56168 [01:47<01:57, 312.83it/s]Running loglikelihood requests:  35%|███▍      | 19597/56168 [01:47<01:56, 313.40it/s]Running loglikelihood requests:  35%|███▌      | 19661/56168 [01:47<01:56, 314.06it/s]Running loglikelihood requests:  35%|███▌      | 19725/56168 [01:47<01:55, 314.52it/s]Running loglikelihood requests:  35%|███▌      | 19789/56168 [01:48<01:55, 314.95it/s]Running loglikelihood requests:  35%|███▌      | 19853/56168 [01:48<01:55, 314.95it/s]Running loglikelihood requests:  35%|███▌      | 19917/56168 [01:48<01:55, 314.95it/s]Running loglikelihood requests:  36%|███▌      | 19981/56168 [01:48<01:54, 316.48it/s]Running loglikelihood requests:  36%|███▌      | 20045/56168 [01:48<01:53, 317.77it/s]Running loglikelihood requests:  36%|███▌      | 20113/56168 [01:49<01:51, 324.02it/s]Running loglikelihood requests:  36%|███▌      | 20177/56168 [01:49<01:51, 322.45it/s]Running loglikelihood requests:  36%|███▌      | 20241/56168 [01:49<01:51, 321.40it/s]Running loglikelihood requests:  36%|███▌      | 20305/56168 [01:49<01:52, 319.80it/s]Running loglikelihood requests:  36%|███▋      | 20369/56168 [01:49<01:52, 318.81it/s]Running loglikelihood requests:  36%|███▋      | 20433/56168 [01:50<01:52, 318.44it/s]Running loglikelihood requests:  36%|███▋      | 20497/56168 [01:50<01:52, 318.04it/s]Running loglikelihood requests:  37%|███▋      | 20561/56168 [01:50<01:52, 317.66it/s]Running loglikelihood requests:  37%|███▋      | 20625/56168 [01:50<01:51, 318.01it/s]Running loglikelihood requests:  37%|███▋      | 20689/56168 [01:50<01:51, 318.11it/s]Running loglikelihood requests:  37%|███▋      | 20757/56168 [01:51<01:49, 323.94it/s]Running loglikelihood requests:  37%|███▋      | 20821/56168 [01:51<01:49, 321.98it/s]Running loglikelihood requests:  37%|███▋      | 20885/56168 [01:51<01:50, 320.73it/s]Running loglikelihood requests:  37%|███▋      | 20949/56168 [01:51<01:49, 320.26it/s]Running loglikelihood requests:  37%|███▋      | 21013/56168 [01:51<01:49, 319.90it/s]Running loglikelihood requests:  38%|███▊      | 21077/56168 [01:52<01:49, 319.67it/s]Running loglikelihood requests:  38%|███▊      | 21141/56168 [01:52<01:49, 319.29it/s]Running loglikelihood requests:  38%|███▊      | 21205/56168 [01:52<01:49, 319.61it/s]Running loglikelihood requests:  38%|███▊      | 21269/56168 [01:52<01:48, 320.73it/s]Running loglikelihood requests:  38%|███▊      | 21333/56168 [01:52<01:48, 321.56it/s]Running loglikelihood requests:  38%|███▊      | 21401/56168 [01:53<01:46, 327.97it/s]Running loglikelihood requests:  38%|███▊      | 21465/56168 [01:53<01:46, 325.72it/s]Running loglikelihood requests:  38%|███▊      | 21529/56168 [01:53<01:43, 335.47it/s]Running loglikelihood requests:  38%|███▊      | 21593/56168 [01:53<01:40, 342.49it/s]Running loglikelihood requests:  39%|███▊      | 21657/56168 [01:53<01:39, 347.24it/s]Running loglikelihood requests:  39%|███▊      | 21721/56168 [01:54<01:38, 351.09it/s]Running loglikelihood requests:  39%|███▉      | 21785/56168 [01:54<01:37, 354.18it/s]Running loglikelihood requests:  39%|███▉      | 21849/56168 [01:54<01:36, 356.32it/s]Running loglikelihood requests:  39%|███▉      | 21913/56168 [01:54<01:35, 357.78it/s]Running loglikelihood requests:  39%|███▉      | 21977/56168 [01:54<01:35, 358.73it/s]Running loglikelihood requests:  39%|███▉      | 22041/56168 [01:54<01:34, 359.94it/s]Running loglikelihood requests:  39%|███▉      | 22105/56168 [01:55<01:34, 360.74it/s]Running loglikelihood requests:  39%|███▉      | 22169/56168 [01:55<01:34, 360.70it/s]Running loglikelihood requests:  40%|███▉      | 22233/56168 [01:55<01:33, 361.28it/s]Running loglikelihood requests:  40%|███▉      | 22297/56168 [01:55<01:33, 361.64it/s]Running loglikelihood requests:  40%|███▉      | 22361/56168 [01:55<01:33, 362.02it/s]Running loglikelihood requests:  40%|███▉      | 22425/56168 [01:56<01:33, 362.62it/s]Running loglikelihood requests:  40%|████      | 22489/56168 [01:56<01:32, 362.32it/s]Running loglikelihood requests:  40%|████      | 22553/56168 [01:56<01:32, 363.14it/s]Running loglikelihood requests:  40%|████      | 22617/56168 [01:56<01:32, 364.15it/s]Running loglikelihood requests:  40%|████      | 22681/56168 [01:56<01:31, 365.24it/s]Running loglikelihood requests:  40%|████      | 22745/56168 [01:56<01:31, 366.36it/s]Running loglikelihood requests:  41%|████      | 22813/56168 [01:57<01:29, 373.83it/s]Running loglikelihood requests:  41%|████      | 22877/56168 [01:57<01:29, 371.76it/s]Running loglikelihood requests:  41%|████      | 22945/56168 [01:57<01:27, 377.88it/s]Running loglikelihood requests:  41%|████      | 23009/56168 [01:57<01:28, 375.01it/s]Running loglikelihood requests:  41%|████      | 23073/56168 [01:57<01:28, 373.34it/s]Running loglikelihood requests:  41%|████      | 23137/56168 [01:57<01:28, 372.06it/s]Running loglikelihood requests:  41%|████▏     | 23201/56168 [01:58<01:29, 369.66it/s]Running loglikelihood requests:  41%|████▏     | 23265/56168 [01:58<01:29, 368.31it/s]Running loglikelihood requests:  42%|████▏     | 23329/56168 [01:58<01:29, 367.96it/s]Running loglikelihood requests:  42%|████▏     | 23393/56168 [01:58<01:29, 367.43it/s]Running loglikelihood requests:  42%|████▏     | 23457/56168 [01:58<01:28, 367.61it/s]Running loglikelihood requests:  42%|████▏     | 23521/56168 [01:58<01:28, 367.49it/s]Running loglikelihood requests:  42%|████▏     | 23585/56168 [01:59<01:28, 367.00it/s]Running loglikelihood requests:  42%|████▏     | 23649/56168 [01:59<01:28, 367.74it/s]Running loglikelihood requests:  42%|████▏     | 23713/56168 [01:59<01:28, 367.59it/s]Running loglikelihood requests:  42%|████▏     | 23777/56168 [01:59<01:28, 367.84it/s]Running loglikelihood requests:  42%|████▏     | 23841/56168 [01:59<01:27, 368.15it/s]Running loglikelihood requests:  43%|████▎     | 23905/56168 [02:00<01:27, 367.81it/s]Running loglikelihood requests:  43%|████▎     | 23969/56168 [02:00<01:26, 370.22it/s]Running loglikelihood requests:  43%|████▎     | 24033/56168 [02:00<01:26, 371.81it/s]Running loglikelihood requests:  43%|████▎     | 24097/56168 [02:00<01:25, 373.40it/s]Running loglikelihood requests:  43%|████▎     | 24161/56168 [02:00<01:25, 374.05it/s]Running loglikelihood requests:  43%|████▎     | 24225/56168 [02:00<01:25, 375.14it/s]Running loglikelihood requests:  43%|████▎     | 24289/56168 [02:01<01:24, 376.71it/s]Running loglikelihood requests:  43%|████▎     | 24353/56168 [02:01<01:24, 378.20it/s]Running loglikelihood requests:  43%|████▎     | 24417/56168 [02:01<01:23, 379.39it/s]Running loglikelihood requests:  44%|████▎     | 24481/56168 [02:01<01:23, 380.38it/s]Running loglikelihood requests:  44%|████▎     | 24545/56168 [02:01<01:23, 380.98it/s]Running loglikelihood requests:  44%|████▍     | 24609/56168 [02:01<01:22, 381.13it/s]Running loglikelihood requests:  44%|████▍     | 24673/56168 [02:02<01:22, 381.38it/s]Running loglikelihood requests:  44%|████▍     | 24737/56168 [02:02<01:22, 381.86it/s]Running loglikelihood requests:  44%|████▍     | 24801/56168 [02:02<01:22, 382.06it/s]Running loglikelihood requests:  44%|████▍     | 24865/56168 [02:02<01:21, 382.53it/s]Running loglikelihood requests:  44%|████▍     | 24933/56168 [02:02<01:20, 389.27it/s]Running loglikelihood requests:  45%|████▍     | 24997/56168 [02:02<01:20, 385.41it/s]Running loglikelihood requests:  45%|████▍     | 25061/56168 [02:03<01:20, 384.32it/s]Running loglikelihood requests:  45%|████▍     | 25125/56168 [02:03<01:20, 383.32it/s]Running loglikelihood requests:  45%|████▍     | 25189/56168 [02:03<01:20, 383.13it/s]Running loglikelihood requests:  45%|████▍     | 25253/56168 [02:03<01:20, 382.93it/s]Running loglikelihood requests:  45%|████▌     | 25317/56168 [02:03<01:20, 382.04it/s]Running loglikelihood requests:  45%|████▌     | 25381/56168 [02:03<01:20, 381.23it/s]Running loglikelihood requests:  45%|████▌     | 25445/56168 [02:04<01:20, 381.77it/s]Running loglikelihood requests:  45%|████▌     | 25509/56168 [02:04<01:20, 382.13it/s]Running loglikelihood requests:  46%|████▌     | 25573/56168 [02:04<01:20, 381.82it/s]Running loglikelihood requests:  46%|████▌     | 25637/56168 [02:04<01:19, 381.87it/s]Running loglikelihood requests:  46%|████▌     | 25701/56168 [02:04<01:19, 382.51it/s]Running loglikelihood requests:  46%|████▌     | 25765/56168 [02:04<01:19, 382.17it/s]Running loglikelihood requests:  46%|████▌     | 25829/56168 [02:05<01:19, 383.31it/s]Running loglikelihood requests:  46%|████▌     | 25893/56168 [02:05<01:18, 384.34it/s]Running loglikelihood requests:  46%|████▌     | 25957/56168 [02:05<01:18, 384.72it/s]Running loglikelihood requests:  46%|████▋     | 26021/56168 [02:05<01:18, 384.86it/s]Running loglikelihood requests:  46%|████▋     | 26085/56168 [02:05<01:18, 385.45it/s]Running loglikelihood requests:  47%|████▋     | 26149/56168 [02:05<01:17, 386.47it/s]Running loglikelihood requests:  47%|████▋     | 26213/56168 [02:06<01:17, 387.07it/s]Running loglikelihood requests:  47%|████▋     | 26277/56168 [02:06<01:17, 387.90it/s]Running loglikelihood requests:  47%|████▋     | 26341/56168 [02:06<01:16, 387.69it/s]Running loglikelihood requests:  47%|████▋     | 26405/56168 [02:06<01:16, 386.86it/s]Running loglikelihood requests:  47%|████▋     | 26469/56168 [02:06<01:16, 386.80it/s]Running loglikelihood requests:  47%|████▋     | 26533/56168 [02:06<01:16, 387.15it/s]Running loglikelihood requests:  47%|████▋     | 26597/56168 [02:07<01:16, 387.17it/s]Running loglikelihood requests:  47%|████▋     | 26661/56168 [02:07<01:16, 387.38it/s]Running loglikelihood requests:  48%|████▊     | 26725/56168 [02:07<01:16, 387.14it/s]Running loglikelihood requests:  48%|████▊     | 26789/56168 [02:07<01:15, 386.93it/s]Running loglikelihood requests:  48%|████▊     | 26853/56168 [02:07<01:15, 387.20it/s]Running loglikelihood requests:  48%|████▊     | 26917/56168 [02:07<01:15, 387.05it/s]Running loglikelihood requests:  48%|████▊     | 26981/56168 [02:08<01:15, 387.06it/s]Running loglikelihood requests:  48%|████▊     | 27045/56168 [02:08<01:15, 386.37it/s]Running loglikelihood requests:  48%|████▊     | 27109/56168 [02:08<01:14, 391.89it/s]Running loglikelihood requests:  48%|████▊     | 27173/56168 [02:08<01:13, 395.79it/s]Running loglikelihood requests:  48%|████▊     | 27237/56168 [02:08<01:12, 399.08it/s]Running loglikelihood requests:  49%|████▊     | 27301/56168 [02:08<01:11, 401.14it/s]Running loglikelihood requests:  49%|████▊     | 27365/56168 [02:08<01:11, 403.04it/s]Running loglikelihood requests:  49%|████▉     | 27429/56168 [02:09<01:11, 404.00it/s]Running loglikelihood requests:  49%|████▉     | 27493/56168 [02:09<01:10, 404.94it/s]Running loglikelihood requests:  49%|████▉     | 27557/56168 [02:09<01:10, 406.40it/s]Running loglikelihood requests:  49%|████▉     | 27621/56168 [02:09<01:10, 407.40it/s]Running loglikelihood requests:  49%|████▉     | 27685/56168 [02:09<01:09, 409.17it/s]Running loglikelihood requests:  49%|████▉     | 27753/56168 [02:09<01:08, 416.97it/s]Running loglikelihood requests:  50%|████▉     | 27817/56168 [02:10<01:08, 415.39it/s]Running loglikelihood requests:  50%|████▉     | 27881/56168 [02:10<01:08, 414.65it/s]Running loglikelihood requests:  50%|████▉     | 27945/56168 [02:10<01:08, 413.27it/s]Running loglikelihood requests:  50%|████▉     | 28009/56168 [02:10<01:08, 413.56it/s]Running loglikelihood requests:  50%|████▉     | 28073/56168 [02:10<01:07, 414.47it/s]Running loglikelihood requests:  50%|█████     | 28141/56168 [02:10<01:06, 422.54it/s]Running loglikelihood requests:  50%|█████     | 28205/56168 [02:11<01:06, 420.31it/s]Running loglikelihood requests:  50%|█████     | 28269/56168 [02:11<01:06, 416.92it/s]Running loglikelihood requests:  50%|█████     | 28333/56168 [02:11<01:07, 414.20it/s]Running loglikelihood requests:  51%|█████     | 28397/56168 [02:11<01:07, 411.93it/s]Running loglikelihood requests:  51%|█████     | 28461/56168 [02:11<01:07, 410.31it/s]Running loglikelihood requests:  51%|█████     | 28525/56168 [02:11<01:07, 410.76it/s]Running loglikelihood requests:  51%|█████     | 28589/56168 [02:11<01:07, 411.06it/s]Running loglikelihood requests:  51%|█████     | 28653/56168 [02:12<01:06, 410.79it/s]Running loglikelihood requests:  51%|█████     | 28717/56168 [02:12<01:06, 410.96it/s]Running loglikelihood requests:  51%|█████     | 28781/56168 [02:12<01:06, 411.08it/s]Running loglikelihood requests:  51%|█████▏    | 28845/56168 [02:12<01:06, 411.47it/s]Running loglikelihood requests:  51%|█████▏    | 28909/56168 [02:12<01:06, 412.31it/s]Running loglikelihood requests:  52%|█████▏    | 28973/56168 [02:12<01:05, 412.92it/s]Running loglikelihood requests:  52%|█████▏    | 29037/56168 [02:13<01:05, 412.97it/s]Running loglikelihood requests:  52%|█████▏    | 29101/56168 [02:13<01:05, 412.53it/s]Running loglikelihood requests:  52%|█████▏    | 29165/56168 [02:13<01:05, 412.95it/s]Running loglikelihood requests:  52%|█████▏    | 29229/56168 [02:13<01:05, 413.10it/s]Running loglikelihood requests:  52%|█████▏    | 29293/56168 [02:13<01:05, 413.02it/s]Running loglikelihood requests:  52%|█████▏    | 29357/56168 [02:13<01:04, 414.00it/s]Running loglikelihood requests:  52%|█████▏    | 29421/56168 [02:13<01:04, 414.14it/s]Running loglikelihood requests:  52%|█████▏    | 29485/56168 [02:14<01:04, 415.00it/s]Running loglikelihood requests:  53%|█████▎    | 29549/56168 [02:14<01:03, 416.09it/s]Running loglikelihood requests:  53%|█████▎    | 29613/56168 [02:14<01:03, 416.95it/s]Running loglikelihood requests:  53%|█████▎    | 29681/56168 [02:14<01:02, 424.77it/s]Running loglikelihood requests:  53%|█████▎    | 29745/56168 [02:14<01:02, 423.38it/s]Running loglikelihood requests:  53%|█████▎    | 29809/56168 [02:14<01:02, 421.61it/s]Running loglikelihood requests:  53%|█████▎    | 29873/56168 [02:15<01:02, 421.65it/s]Running loglikelihood requests:  53%|█████▎    | 29937/56168 [02:15<01:02, 419.39it/s]Running loglikelihood requests:  53%|█████▎    | 30001/56168 [02:15<01:02, 418.14it/s]Running loglikelihood requests:  54%|█████▎    | 30065/56168 [02:15<01:02, 417.40it/s]Running loglikelihood requests:  54%|█████▎    | 30129/56168 [02:15<01:02, 416.30it/s]Running loglikelihood requests:  54%|█████▍    | 30193/56168 [02:15<01:02, 416.46it/s]Running loglikelihood requests:  54%|█████▍    | 30257/56168 [02:15<01:02, 416.05it/s]Running loglikelihood requests:  54%|█████▍    | 30321/56168 [02:16<01:02, 415.68it/s]Running loglikelihood requests:  54%|█████▍    | 30385/56168 [02:16<01:01, 416.11it/s]Running loglikelihood requests:  54%|█████▍    | 30449/56168 [02:16<01:01, 416.31it/s]Running loglikelihood requests:  54%|█████▍    | 30513/56168 [02:16<01:01, 416.66it/s]Running loglikelihood requests:  54%|█████▍    | 30577/56168 [02:16<01:01, 416.95it/s]Running loglikelihood requests:  55%|█████▍    | 30641/56168 [02:16<01:01, 416.71it/s]Running loglikelihood requests:  55%|█████▍    | 30705/56168 [02:17<01:01, 416.82it/s]Running loglikelihood requests:  55%|█████▍    | 30769/56168 [02:17<01:00, 416.72it/s]Running loglikelihood requests:  55%|█████▍    | 30833/56168 [02:17<01:00, 416.82it/s]Running loglikelihood requests:  55%|█████▌    | 30897/56168 [02:17<00:59, 422.26it/s]Running loglikelihood requests:  55%|█████▌    | 30961/56168 [02:17<00:59, 426.03it/s]Running loglikelihood requests:  55%|█████▌    | 31025/56168 [02:17<00:58, 428.09it/s]Running loglikelihood requests:  55%|█████▌    | 31089/56168 [02:17<00:58, 430.59it/s]Running loglikelihood requests:  55%|█████▌    | 31153/56168 [02:18<00:57, 433.92it/s]Running loglikelihood requests:  56%|█████▌    | 31217/56168 [02:18<00:57, 435.77it/s]Running loglikelihood requests:  56%|█████▌    | 31281/56168 [02:18<00:57, 435.49it/s]Running loglikelihood requests:  56%|█████▌    | 31345/56168 [02:18<00:57, 434.95it/s]Running loglikelihood requests:  56%|█████▌    | 31409/56168 [02:18<00:56, 434.94it/s]Running loglikelihood requests:  56%|█████▌    | 31477/56168 [02:18<00:55, 442.73it/s]Running loglikelihood requests:  56%|█████▌    | 31541/56168 [02:18<00:55, 440.82it/s]Running loglikelihood requests:  56%|█████▋    | 31605/56168 [02:19<00:55, 439.69it/s]Running loglikelihood requests:  56%|█████▋    | 31669/56168 [02:19<00:55, 438.78it/s]Running loglikelihood requests:  56%|█████▋    | 31733/56168 [02:19<00:55, 436.90it/s]Running loglikelihood requests:  57%|█████▋    | 31797/56168 [02:19<00:55, 436.62it/s]Running loglikelihood requests:  57%|█████▋    | 31861/56168 [02:19<00:55, 437.12it/s]Running loglikelihood requests:  57%|█████▋    | 31925/56168 [02:19<00:55, 436.93it/s]Running loglikelihood requests:  57%|█████▋    | 31989/56168 [02:19<00:55, 436.80it/s]Running loglikelihood requests:  57%|█████▋    | 32053/56168 [02:20<00:55, 437.55it/s]Running loglikelihood requests:  57%|█████▋    | 32117/56168 [02:20<00:54, 437.65it/s]Running loglikelihood requests:  57%|█████▋    | 32185/56168 [02:20<00:55, 432.58it/s]Running loglikelihood requests:  57%|█████▋    | 32249/56168 [02:20<00:55, 432.39it/s]Running loglikelihood requests:  58%|█████▊    | 32313/56168 [02:20<00:54, 433.90it/s]Running loglikelihood requests:  58%|█████▊    | 32377/56168 [02:20<00:54, 436.17it/s]Running loglikelihood requests:  58%|█████▊    | 32441/56168 [02:21<00:54, 437.73it/s]Running loglikelihood requests:  58%|█████▊    | 32505/56168 [02:21<00:54, 438.08it/s]Running loglikelihood requests:  58%|█████▊    | 32569/56168 [02:21<00:53, 438.08it/s]Running loglikelihood requests:  58%|█████▊    | 32633/56168 [02:21<00:53, 439.01it/s]Running loglikelihood requests:  58%|█████▊    | 32697/56168 [02:21<00:53, 441.19it/s]Running loglikelihood requests:  58%|█████▊    | 32761/56168 [02:21<00:52, 443.12it/s]Running loglikelihood requests:  58%|█████▊    | 32825/56168 [02:21<00:52, 444.36it/s]Running loglikelihood requests:  59%|█████▊    | 32889/56168 [02:22<00:52, 445.52it/s]Running loglikelihood requests:  59%|█████▊    | 32953/56168 [02:22<00:51, 446.71it/s]Running loglikelihood requests:  59%|█████▉    | 33017/56168 [02:22<00:51, 447.02it/s]Running loglikelihood requests:  59%|█████▉    | 33081/56168 [02:22<00:53, 430.69it/s]Running loglikelihood requests:  59%|█████▉    | 33145/56168 [02:22<00:52, 435.10it/s]Running loglikelihood requests:  59%|█████▉    | 33209/56168 [02:22<00:52, 437.94it/s]Running loglikelihood requests:  59%|█████▉    | 33273/56168 [02:22<00:52, 438.10it/s]Running loglikelihood requests:  59%|█████▉    | 33337/56168 [02:23<00:52, 438.62it/s]Running loglikelihood requests:  59%|█████▉    | 33401/56168 [02:23<00:51, 439.62it/s]Running loglikelihood requests:  60%|█████▉    | 33465/56168 [02:23<00:51, 439.72it/s]Running loglikelihood requests:  60%|█████▉    | 33529/56168 [02:23<00:51, 439.00it/s]Running loglikelihood requests:  60%|█████▉    | 33593/56168 [02:23<00:51, 439.67it/s]Running loglikelihood requests:  60%|█████▉    | 33657/56168 [02:23<00:51, 440.66it/s]Running loglikelihood requests:  60%|██████    | 33721/56168 [02:23<00:50, 441.13it/s]Running loglikelihood requests:  60%|██████    | 33785/56168 [02:24<00:50, 441.57it/s]Running loglikelihood requests:  60%|██████    | 33849/56168 [02:24<00:50, 441.71it/s]Running loglikelihood requests:  60%|██████    | 33913/56168 [02:24<00:50, 442.26it/s]Running loglikelihood requests:  60%|██████    | 33977/56168 [02:24<00:50, 442.41it/s]Running loglikelihood requests:  61%|██████    | 34045/56168 [02:24<00:49, 450.88it/s]Running loglikelihood requests:  61%|██████    | 34109/56168 [02:24<00:49, 449.39it/s]Running loglikelihood requests:  61%|██████    | 34173/56168 [02:24<00:49, 447.36it/s]Running loglikelihood requests:  61%|██████    | 34237/56168 [02:25<00:49, 446.33it/s]Running loglikelihood requests:  61%|██████    | 34301/56168 [02:25<00:49, 445.43it/s]Running loglikelihood requests:  61%|██████    | 34365/56168 [02:25<00:48, 445.52it/s]Running loglikelihood requests:  61%|██████▏   | 34429/56168 [02:25<00:48, 445.86it/s]Running loglikelihood requests:  61%|██████▏   | 34493/56168 [02:25<00:48, 446.46it/s]Running loglikelihood requests:  62%|██████▏   | 34557/56168 [02:25<00:48, 446.48it/s]Running loglikelihood requests:  62%|██████▏   | 34621/56168 [02:25<00:48, 446.40it/s]Running loglikelihood requests:  62%|██████▏   | 34685/56168 [02:26<00:48, 447.46it/s]Running loglikelihood requests:  62%|██████▏   | 34749/56168 [02:26<00:47, 448.78it/s]Running loglikelihood requests:  62%|██████▏   | 34813/56168 [02:26<00:47, 450.67it/s]Running loglikelihood requests:  62%|██████▏   | 34877/56168 [02:26<00:47, 451.70it/s]Running loglikelihood requests:  62%|██████▏   | 34941/56168 [02:26<00:46, 452.55it/s]Running loglikelihood requests:  62%|██████▏   | 35005/56168 [02:26<00:46, 452.10it/s]Running loglikelihood requests:  62%|██████▏   | 35069/56168 [02:26<00:46, 450.90it/s]Running loglikelihood requests:  63%|██████▎   | 35133/56168 [02:27<00:46, 449.84it/s]Running loglikelihood requests:  63%|██████▎   | 35197/56168 [02:27<00:46, 448.17it/s]Running loglikelihood requests:  63%|██████▎   | 35261/56168 [02:27<00:46, 447.25it/s]Running loglikelihood requests:  63%|██████▎   | 35325/56168 [02:27<00:46, 447.46it/s]Running loglikelihood requests:  63%|██████▎   | 35389/56168 [02:27<00:46, 446.10it/s]Running loglikelihood requests:  63%|██████▎   | 35453/56168 [02:27<00:45, 455.70it/s]Running loglikelihood requests:  63%|██████▎   | 35517/56168 [02:27<00:44, 461.94it/s]Running loglikelihood requests:  63%|██████▎   | 35581/56168 [02:28<00:44, 467.20it/s]Running loglikelihood requests:  63%|██████▎   | 35645/56168 [02:28<00:43, 470.73it/s]Running loglikelihood requests:  64%|██████▎   | 35709/56168 [02:28<00:43, 472.19it/s]Running loglikelihood requests:  64%|██████▎   | 35773/56168 [02:28<00:42, 474.94it/s]Running loglikelihood requests:  64%|██████▍   | 35837/56168 [02:28<00:42, 475.92it/s]Running loglikelihood requests:  64%|██████▍   | 35901/56168 [02:28<00:44, 452.03it/s]Running loglikelihood requests:  64%|██████▍   | 35965/56168 [02:28<00:43, 460.76it/s]Running loglikelihood requests:  64%|██████▍   | 36029/56168 [02:29<00:43, 466.42it/s]Running loglikelihood requests:  64%|██████▍   | 36093/56168 [02:29<00:42, 470.84it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [02:29<00:41, 482.38it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [02:29<00:41, 481.42it/s]Running loglikelihood requests:  65%|██████▍   | 36289/56168 [02:29<00:41, 481.36it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [02:29<00:41, 480.65it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [02:29<00:41, 480.07it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [02:29<00:40, 480.17it/s]Running loglikelihood requests:  65%|██████▌   | 36545/56168 [02:30<00:40, 480.34it/s]Running loglikelihood requests:  65%|██████▌   | 36609/56168 [02:30<00:40, 480.14it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [02:30<00:40, 481.21it/s]Running loglikelihood requests:  65%|██████▌   | 36737/56168 [02:30<00:40, 482.39it/s]Running loglikelihood requests:  66%|██████▌   | 36805/56168 [02:30<00:39, 492.62it/s]Running loglikelihood requests:  66%|██████▌   | 36869/56168 [02:30<00:39, 491.91it/s]Running loglikelihood requests:  66%|██████▌   | 36933/56168 [02:30<00:39, 491.35it/s]Running loglikelihood requests:  66%|██████▌   | 36997/56168 [02:30<00:39, 491.28it/s]Running loglikelihood requests:  66%|██████▌   | 37061/56168 [02:31<00:39, 489.78it/s]Running loglikelihood requests:  66%|██████▌   | 37125/56168 [02:31<00:38, 489.74it/s]Running loglikelihood requests:  66%|██████▌   | 37189/56168 [02:31<00:39, 475.77it/s]Running loglikelihood requests:  66%|██████▋   | 37253/56168 [02:31<00:39, 473.02it/s]Running loglikelihood requests:  66%|██████▋   | 37317/56168 [02:31<00:39, 474.99it/s]Running loglikelihood requests:  67%|██████▋   | 37381/56168 [02:31<00:39, 478.05it/s]Running loglikelihood requests:  67%|██████▋   | 37445/56168 [02:31<00:39, 479.58it/s]Running loglikelihood requests:  67%|██████▋   | 37509/56168 [02:32<00:38, 480.83it/s]Running loglikelihood requests:  67%|██████▋   | 37573/56168 [02:32<00:38, 481.92it/s]Running loglikelihood requests:  67%|██████▋   | 37637/56168 [02:32<00:38, 482.19it/s]Running loglikelihood requests:  67%|██████▋   | 37701/56168 [02:32<00:38, 482.54it/s]Running loglikelihood requests:  67%|██████▋   | 37765/56168 [02:32<00:38, 482.68it/s]Running loglikelihood requests:  67%|██████▋   | 37829/56168 [02:32<00:37, 482.94it/s]Running loglikelihood requests:  67%|██████▋   | 37893/56168 [02:32<00:37, 482.79it/s]Running loglikelihood requests:  68%|██████▊   | 37957/56168 [02:32<00:37, 483.91it/s]Running loglikelihood requests:  68%|██████▊   | 38021/56168 [02:33<00:37, 484.61it/s]Running loglikelihood requests:  68%|██████▊   | 38085/56168 [02:33<00:37, 485.34it/s]Running loglikelihood requests:  68%|██████▊   | 38149/56168 [02:33<00:37, 485.48it/s]Running loglikelihood requests:  68%|██████▊   | 38213/56168 [02:33<00:36, 485.73it/s]Running loglikelihood requests:  68%|██████▊   | 38277/56168 [02:33<00:36, 485.83it/s]Running loglikelihood requests:  68%|██████▊   | 38341/56168 [02:33<00:36, 484.19it/s]Running loglikelihood requests:  68%|██████▊   | 38405/56168 [02:33<00:39, 451.20it/s]Running loglikelihood requests:  68%|██████▊   | 38469/56168 [02:34<00:38, 455.24it/s]Running loglikelihood requests:  69%|██████▊   | 38533/56168 [02:34<00:38, 463.88it/s]Running loglikelihood requests:  69%|██████▊   | 38597/56168 [02:34<00:37, 470.86it/s]Running loglikelihood requests:  69%|██████▉   | 38661/56168 [02:34<00:36, 476.51it/s]Running loglikelihood requests:  69%|██████▉   | 38725/56168 [02:34<00:36, 480.34it/s]Running loglikelihood requests:  69%|██████▉   | 38789/56168 [02:34<00:35, 483.12it/s]Running loglikelihood requests:  69%|██████▉   | 38853/56168 [02:34<00:35, 485.30it/s]Running loglikelihood requests:  69%|██████▉   | 38917/56168 [02:34<00:35, 486.62it/s]Running loglikelihood requests:  69%|██████▉   | 38981/56168 [02:35<00:35, 488.14it/s]Running loglikelihood requests:  70%|██████▉   | 39045/56168 [02:35<00:35, 488.90it/s]Running loglikelihood requests:  70%|██████▉   | 39109/56168 [02:35<00:34, 491.51it/s]Running loglikelihood requests:  70%|██████▉   | 39173/56168 [02:35<00:34, 493.20it/s]Running loglikelihood requests:  70%|██████▉   | 39237/56168 [02:35<00:34, 494.78it/s]Running loglikelihood requests:  70%|██████▉   | 39301/56168 [02:35<00:34, 495.36it/s]Running loglikelihood requests:  70%|███████   | 39365/56168 [02:35<00:33, 496.22it/s]Running loglikelihood requests:  70%|███████   | 39429/56168 [02:36<00:33, 497.02it/s]Running loglikelihood requests:  70%|███████   | 39493/56168 [02:36<00:33, 497.31it/s]Running loglikelihood requests:  70%|███████   | 39557/56168 [02:36<00:33, 497.02it/s]Running loglikelihood requests:  71%|███████   | 39621/56168 [02:36<00:33, 497.77it/s]Running loglikelihood requests:  71%|███████   | 39685/56168 [02:36<00:33, 494.77it/s]Running loglikelihood requests:  71%|███████   | 39749/56168 [02:36<00:33, 494.17it/s]Running loglikelihood requests:  71%|███████   | 39813/56168 [02:36<00:33, 493.54it/s]Running loglikelihood requests:  71%|███████   | 39877/56168 [02:36<00:33, 492.60it/s]Running loglikelihood requests:  71%|███████   | 39941/56168 [02:37<00:32, 492.24it/s]Running loglikelihood requests:  71%|███████   | 40005/56168 [02:37<00:32, 491.02it/s]Running loglikelihood requests:  71%|███████▏  | 40069/56168 [02:37<00:33, 476.96it/s]Running loglikelihood requests:  71%|███████▏  | 40133/56168 [02:37<00:37, 427.80it/s]Running loglikelihood requests:  72%|███████▏  | 40201/56168 [02:37<00:35, 453.60it/s]Running loglikelihood requests:  72%|███████▏  | 40265/56168 [02:37<00:34, 464.25it/s]Running loglikelihood requests:  72%|███████▏  | 40329/56168 [02:37<00:33, 472.29it/s]Running loglikelihood requests:  72%|███████▏  | 40393/56168 [02:38<00:33, 477.95it/s]Running loglikelihood requests:  72%|███████▏  | 40457/56168 [02:38<00:32, 482.77it/s]Running loglikelihood requests:  72%|███████▏  | 40521/56168 [02:38<00:32, 486.13it/s]Running loglikelihood requests:  72%|███████▏  | 40585/56168 [02:38<00:31, 488.68it/s]Running loglikelihood requests:  72%|███████▏  | 40649/56168 [02:38<00:31, 489.64it/s]Running loglikelihood requests:  72%|███████▏  | 40713/56168 [02:38<00:31, 496.18it/s]Running loglikelihood requests:  73%|███████▎  | 40777/56168 [02:38<00:30, 500.94it/s]Running loglikelihood requests:  73%|███████▎  | 40841/56168 [02:38<00:30, 504.45it/s]Running loglikelihood requests:  73%|███████▎  | 40905/56168 [02:39<00:30, 505.99it/s]Running loglikelihood requests:  73%|███████▎  | 40969/56168 [02:39<00:29, 507.61it/s]Running loglikelihood requests:  73%|███████▎  | 41033/56168 [02:39<00:29, 509.27it/s]Running loglikelihood requests:  73%|███████▎  | 41097/56168 [02:39<00:29, 510.10it/s]Running loglikelihood requests:  73%|███████▎  | 41161/56168 [02:39<00:29, 510.37it/s]Running loglikelihood requests:  73%|███████▎  | 41225/56168 [02:39<00:29, 510.29it/s]Running loglikelihood requests:  74%|███████▎  | 41289/56168 [02:39<00:29, 509.54it/s]Running loglikelihood requests:  74%|███████▎  | 41353/56168 [02:39<00:29, 510.28it/s]Running loglikelihood requests:  74%|███████▎  | 41417/56168 [02:40<00:28, 512.07it/s]Running loglikelihood requests:  74%|███████▍  | 41481/56168 [02:40<00:28, 514.06it/s]Running loglikelihood requests:  74%|███████▍  | 41545/56168 [02:40<00:28, 516.41it/s]Running loglikelihood requests:  74%|███████▍  | 41609/56168 [02:40<00:28, 517.95it/s]Running loglikelihood requests:  74%|███████▍  | 41673/56168 [02:40<00:27, 519.04it/s]Running loglikelihood requests:  74%|███████▍  | 41737/56168 [02:40<00:27, 520.30it/s]Running loglikelihood requests:  74%|███████▍  | 41801/56168 [02:40<00:27, 521.49it/s]Running loglikelihood requests:  75%|███████▍  | 41865/56168 [02:40<00:27, 522.99it/s]Running loglikelihood requests:  75%|███████▍  | 41929/56168 [02:41<00:27, 523.42it/s]Running loglikelihood requests:  75%|███████▍  | 41993/56168 [02:41<00:27, 520.29it/s]Running loglikelihood requests:  75%|███████▍  | 42057/56168 [02:41<00:27, 518.76it/s]Running loglikelihood requests:  75%|███████▍  | 42121/56168 [02:41<00:27, 519.05it/s]Running loglikelihood requests:  75%|███████▌  | 42185/56168 [02:41<00:26, 518.77it/s]Running loglikelihood requests:  75%|███████▌  | 42249/56168 [02:41<00:26, 518.06it/s]Running loglikelihood requests:  75%|███████▌  | 42317/56168 [02:41<00:26, 526.14it/s]Running loglikelihood requests:  75%|███████▌  | 42381/56168 [02:41<00:26, 522.41it/s]Running loglikelihood requests:  76%|███████▌  | 42445/56168 [02:42<00:26, 521.02it/s]Running loglikelihood requests:  76%|███████▌  | 42509/56168 [02:42<00:26, 520.29it/s]Running loglikelihood requests:  76%|███████▌  | 42573/56168 [02:42<00:26, 519.99it/s]Running loglikelihood requests:  76%|███████▌  | 42641/56168 [02:42<00:25, 528.26it/s]Running loglikelihood requests:  76%|███████▌  | 42705/56168 [02:42<00:25, 526.20it/s]Running loglikelihood requests:  76%|███████▌  | 42769/56168 [02:42<00:25, 524.05it/s]Running loglikelihood requests:  76%|███████▋  | 42833/56168 [02:42<00:25, 521.42it/s]Running loglikelihood requests:  76%|███████▋  | 42897/56168 [02:42<00:25, 520.78it/s]Running loglikelihood requests:  76%|███████▋  | 42961/56168 [02:43<00:25, 520.26it/s]Running loglikelihood requests:  77%|███████▋  | 43025/56168 [02:43<00:25, 520.60it/s]Running loglikelihood requests:  77%|███████▋  | 43093/56168 [02:43<00:24, 529.78it/s]Running loglikelihood requests:  77%|███████▋  | 43157/56168 [02:43<00:24, 527.31it/s]Running loglikelihood requests:  77%|███████▋  | 43221/56168 [02:43<00:24, 524.71it/s]Running loglikelihood requests:  77%|███████▋  | 43285/56168 [02:43<00:24, 523.48it/s]Running loglikelihood requests:  77%|███████▋  | 43349/56168 [02:43<00:24, 522.41it/s]Running loglikelihood requests:  77%|███████▋  | 43413/56168 [02:43<00:24, 521.71it/s]Running loglikelihood requests:  77%|███████▋  | 43477/56168 [02:44<00:24, 520.60it/s]Running loglikelihood requests:  78%|███████▊  | 43541/56168 [02:44<00:24, 519.90it/s]Running loglikelihood requests:  78%|███████▊  | 43605/56168 [02:44<00:24, 519.56it/s]Running loglikelihood requests:  78%|███████▊  | 43669/56168 [02:44<00:24, 520.04it/s]Running loglikelihood requests:  78%|███████▊  | 43733/56168 [02:44<00:23, 519.62it/s]Running loglikelihood requests:  78%|███████▊  | 43797/56168 [02:44<00:23, 520.93it/s]Running loglikelihood requests:  78%|███████▊  | 43861/56168 [02:44<00:23, 521.72it/s]Running loglikelihood requests:  78%|███████▊  | 43925/56168 [02:44<00:23, 522.72it/s]Running loglikelihood requests:  78%|███████▊  | 43993/56168 [02:44<00:22, 531.81it/s]Running loglikelihood requests:  78%|███████▊  | 44057/56168 [02:45<00:22, 530.36it/s]Running loglikelihood requests:  79%|███████▊  | 44121/56168 [02:45<00:22, 530.42it/s]Running loglikelihood requests:  79%|███████▊  | 44185/56168 [02:45<00:22, 530.37it/s]Running loglikelihood requests:  79%|███████▉  | 44249/56168 [02:45<00:22, 530.68it/s]Running loglikelihood requests:  79%|███████▉  | 44313/56168 [02:45<00:22, 531.09it/s]Running loglikelihood requests:  79%|███████▉  | 44377/56168 [02:45<00:22, 531.45it/s]Running loglikelihood requests:  79%|███████▉  | 44441/56168 [02:45<00:22, 531.68it/s]Running loglikelihood requests:  79%|███████▉  | 44505/56168 [02:45<00:21, 531.31it/s]Running loglikelihood requests:  79%|███████▉  | 44569/56168 [02:46<00:21, 531.72it/s]Running loglikelihood requests:  79%|███████▉  | 44637/56168 [02:46<00:21, 542.62it/s]Running loglikelihood requests:  80%|███████▉  | 44701/56168 [02:46<00:21, 541.55it/s]Running loglikelihood requests:  80%|███████▉  | 44765/56168 [02:46<00:21, 540.17it/s]Running loglikelihood requests:  80%|███████▉  | 44829/56168 [02:46<00:21, 539.31it/s]Running loglikelihood requests:  80%|███████▉  | 44893/56168 [02:46<00:20, 537.50it/s]Running loglikelihood requests:  80%|████████  | 44957/56168 [02:46<00:20, 535.28it/s]Running loglikelihood requests:  80%|████████  | 45021/56168 [02:46<00:21, 530.08it/s]Running loglikelihood requests:  80%|████████  | 45085/56168 [02:47<00:20, 528.77it/s]Running loglikelihood requests:  80%|████████  | 45149/56168 [02:47<00:20, 527.71it/s]Running loglikelihood requests:  80%|████████  | 45213/56168 [02:47<00:20, 526.68it/s]Running loglikelihood requests:  81%|████████  | 45277/56168 [02:47<00:20, 526.21it/s]Running loglikelihood requests:  81%|████████  | 45341/56168 [02:47<00:20, 525.84it/s]Running loglikelihood requests:  81%|████████  | 45405/56168 [02:47<00:20, 527.52it/s]Running loglikelihood requests:  81%|████████  | 45469/56168 [02:47<00:20, 528.97it/s]Running loglikelihood requests:  81%|████████  | 45537/56168 [02:47<00:19, 539.36it/s]Running loglikelihood requests:  81%|████████  | 45601/56168 [02:48<00:19, 536.25it/s]Running loglikelihood requests:  81%|████████▏ | 45665/56168 [02:48<00:19, 534.54it/s]Running loglikelihood requests:  81%|████████▏ | 45729/56168 [02:48<00:19, 531.99it/s]Running loglikelihood requests:  82%|████████▏ | 45793/56168 [02:48<00:19, 531.67it/s]Running loglikelihood requests:  82%|████████▏ | 45857/56168 [02:48<00:19, 531.16it/s]Running loglikelihood requests:  82%|████████▏ | 45921/56168 [02:48<00:19, 531.28it/s]Running loglikelihood requests:  82%|████████▏ | 45985/56168 [02:48<00:19, 530.94it/s]Running loglikelihood requests:  82%|████████▏ | 46049/56168 [02:48<00:19, 531.04it/s]Running loglikelihood requests:  82%|████████▏ | 46113/56168 [02:48<00:18, 530.31it/s]Running loglikelihood requests:  82%|████████▏ | 46177/56168 [02:49<00:18, 529.60it/s]Running loglikelihood requests:  82%|████████▏ | 46241/56168 [02:49<00:18, 529.82it/s]Running loglikelihood requests:  82%|████████▏ | 46305/56168 [02:49<00:18, 530.65it/s]Running loglikelihood requests:  83%|████████▎ | 46369/56168 [02:49<00:18, 531.38it/s]Running loglikelihood requests:  83%|████████▎ | 46433/56168 [02:49<00:18, 531.51it/s]Running loglikelihood requests:  83%|████████▎ | 46497/56168 [02:49<00:18, 531.00it/s]Running loglikelihood requests:  83%|████████▎ | 46561/56168 [02:49<00:18, 531.57it/s]Running loglikelihood requests:  83%|████████▎ | 46625/56168 [02:49<00:17, 531.01it/s]Running loglikelihood requests:  83%|████████▎ | 46689/56168 [02:50<00:17, 530.55it/s]Running loglikelihood requests:  83%|████████▎ | 46753/56168 [02:50<00:17, 530.07it/s]Running loglikelihood requests:  83%|████████▎ | 46817/56168 [02:50<00:17, 530.33it/s]Running loglikelihood requests:  83%|████████▎ | 46881/56168 [02:50<00:17, 530.59it/s]Running loglikelihood requests:  84%|████████▎ | 46945/56168 [02:50<00:17, 530.68it/s]Running loglikelihood requests:  84%|████████▎ | 47009/56168 [02:50<00:17, 530.88it/s]Running loglikelihood requests:  84%|████████▍ | 47073/56168 [02:50<00:17, 531.20it/s]Running loglikelihood requests:  84%|████████▍ | 47137/56168 [02:50<00:16, 541.77it/s]Running loglikelihood requests:  84%|████████▍ | 47201/56168 [02:51<00:16, 549.29it/s]Running loglikelihood requests:  84%|████████▍ | 47265/56168 [02:51<00:16, 555.19it/s]Running loglikelihood requests:  84%|████████▍ | 47329/56168 [02:51<00:15, 560.96it/s]Running loglikelihood requests:  84%|████████▍ | 47393/56168 [02:51<00:15, 564.49it/s]Running loglikelihood requests:  84%|████████▍ | 47457/56168 [02:51<00:15, 568.28it/s]Running loglikelihood requests:  85%|████████▍ | 47521/56168 [02:51<00:15, 570.52it/s]Running loglikelihood requests:  85%|████████▍ | 47585/56168 [02:51<00:14, 572.87it/s]Running loglikelihood requests:  85%|████████▍ | 47649/56168 [02:51<00:14, 573.71it/s]Running loglikelihood requests:  85%|████████▍ | 47713/56168 [02:51<00:14, 574.99it/s]Running loglikelihood requests:  85%|████████▌ | 47777/56168 [02:52<00:14, 575.40it/s]Running loglikelihood requests:  85%|████████▌ | 47841/56168 [02:52<00:14, 572.77it/s]Running loglikelihood requests:  85%|████████▌ | 47905/56168 [02:52<00:14, 570.43it/s]Running loglikelihood requests:  85%|████████▌ | 47969/56168 [02:52<00:14, 568.26it/s]Running loglikelihood requests:  86%|████████▌ | 48033/56168 [02:52<00:14, 568.64it/s]Running loglikelihood requests:  86%|████████▌ | 48097/56168 [02:52<00:14, 567.96it/s]Running loglikelihood requests:  86%|████████▌ | 48161/56168 [02:52<00:14, 568.83it/s]Running loglikelihood requests:  86%|████████▌ | 48225/56168 [02:52<00:13, 569.25it/s]Running loglikelihood requests:  86%|████████▌ | 48289/56168 [02:52<00:13, 568.43it/s]Running loglikelihood requests:  86%|████████▌ | 48353/56168 [02:53<00:13, 569.07it/s]Running loglikelihood requests:  86%|████████▌ | 48417/56168 [02:53<00:13, 567.97it/s]Running loglikelihood requests:  86%|████████▋ | 48481/56168 [02:53<00:13, 568.11it/s]Running loglikelihood requests:  86%|████████▋ | 48545/56168 [02:53<00:13, 567.38it/s]Running loglikelihood requests:  87%|████████▋ | 48609/56168 [02:53<00:13, 567.88it/s]Running loglikelihood requests:  87%|████████▋ | 48673/56168 [02:53<00:13, 567.75it/s]Running loglikelihood requests:  87%|████████▋ | 48737/56168 [02:53<00:13, 567.56it/s]Running loglikelihood requests:  87%|████████▋ | 48801/56168 [02:53<00:12, 568.56it/s]Running loglikelihood requests:  87%|████████▋ | 48865/56168 [02:53<00:12, 567.68it/s]Running loglikelihood requests:  87%|████████▋ | 48929/56168 [02:54<00:12, 569.48it/s]Running loglikelihood requests:  87%|████████▋ | 48993/56168 [02:54<00:12, 570.04it/s]Running loglikelihood requests:  87%|████████▋ | 49057/56168 [02:54<00:12, 570.71it/s]Running loglikelihood requests:  87%|████████▋ | 49121/56168 [02:54<00:12, 570.58it/s]Running loglikelihood requests:  88%|████████▊ | 49185/56168 [02:54<00:12, 571.24it/s]Running loglikelihood requests:  88%|████████▊ | 49249/56168 [02:54<00:12, 570.90it/s]Running loglikelihood requests:  88%|████████▊ | 49313/56168 [02:54<00:12, 570.54it/s]Running loglikelihood requests:  88%|████████▊ | 49377/56168 [02:54<00:11, 570.09it/s]Running loglikelihood requests:  88%|████████▊ | 49441/56168 [02:54<00:11, 569.88it/s]Running loglikelihood requests:  88%|████████▊ | 49505/56168 [02:55<00:11, 570.77it/s]Running loglikelihood requests:  88%|████████▊ | 49569/56168 [02:55<00:11, 571.02it/s]Running loglikelihood requests:  88%|████████▊ | 49633/56168 [02:55<00:11, 570.81it/s]Running loglikelihood requests:  88%|████████▊ | 49697/56168 [02:55<00:11, 571.99it/s]Running loglikelihood requests:  89%|████████▊ | 49761/56168 [02:55<00:11, 572.44it/s]Running loglikelihood requests:  89%|████████▊ | 49825/56168 [02:55<00:11, 572.71it/s]Running loglikelihood requests:  89%|████████▉ | 49889/56168 [02:55<00:10, 572.88it/s]Running loglikelihood requests:  89%|████████▉ | 49953/56168 [02:55<00:10, 573.54it/s]Running loglikelihood requests:  89%|████████▉ | 50017/56168 [02:55<00:10, 572.91it/s]Running loglikelihood requests:  89%|████████▉ | 50081/56168 [02:56<00:10, 573.82it/s]Running loglikelihood requests:  89%|████████▉ | 50145/56168 [02:56<00:10, 573.54it/s]Running loglikelihood requests:  89%|████████▉ | 50209/56168 [02:56<00:10, 575.38it/s]Running loglikelihood requests:  90%|████████▉ | 50273/56168 [02:56<00:10, 576.40it/s]Running loglikelihood requests:  90%|████████▉ | 50337/56168 [02:56<00:10, 578.59it/s]Running loglikelihood requests:  90%|████████▉ | 50401/56168 [02:56<00:09, 580.03it/s]Running loglikelihood requests:  90%|████████▉ | 50465/56168 [02:56<00:09, 581.22it/s]Running loglikelihood requests:  90%|████████▉ | 50529/56168 [02:56<00:09, 584.96it/s]Running loglikelihood requests:  90%|█████████ | 50593/56168 [02:56<00:09, 586.10it/s]Running loglikelihood requests:  90%|█████████ | 50657/56168 [02:57<00:09, 588.25it/s]Running loglikelihood requests:  90%|█████████ | 50721/56168 [02:57<00:09, 589.77it/s]Running loglikelihood requests:  90%|█████████ | 50785/56168 [02:57<00:09, 590.71it/s]Running loglikelihood requests:  91%|█████████ | 50853/56168 [02:57<00:08, 601.70it/s]Running loglikelihood requests:  91%|█████████ | 50917/56168 [02:57<00:08, 599.06it/s]Running loglikelihood requests:  91%|█████████ | 50981/56168 [02:57<00:08, 597.62it/s]Running loglikelihood requests:  91%|█████████ | 51045/56168 [02:57<00:08, 597.41it/s]Running loglikelihood requests:  91%|█████████ | 51109/56168 [02:57<00:08, 596.20it/s]Running loglikelihood requests:  91%|█████████ | 51173/56168 [02:57<00:08, 594.99it/s]Running loglikelihood requests:  91%|█████████ | 51237/56168 [02:58<00:08, 594.74it/s]Running loglikelihood requests:  91%|█████████▏| 51301/56168 [02:58<00:08, 595.09it/s]Running loglikelihood requests:  91%|█████████▏| 51369/56168 [02:58<00:07, 605.74it/s]Running loglikelihood requests:  92%|█████████▏| 51433/56168 [02:58<00:07, 602.66it/s]Running loglikelihood requests:  92%|█████████▏| 51497/56168 [02:58<00:07, 599.37it/s]Running loglikelihood requests:  92%|█████████▏| 51561/56168 [02:58<00:07, 598.48it/s]Running loglikelihood requests:  92%|█████████▏| 51625/56168 [02:58<00:07, 598.50it/s]Running loglikelihood requests:  92%|█████████▏| 51689/56168 [02:58<00:07, 596.68it/s]Running loglikelihood requests:  92%|█████████▏| 51753/56168 [02:58<00:07, 596.99it/s]Running loglikelihood requests:  92%|█████████▏| 51817/56168 [02:58<00:07, 597.21it/s]Running loglikelihood requests:  92%|█████████▏| 51881/56168 [02:59<00:07, 596.74it/s]Running loglikelihood requests:  92%|█████████▏| 51945/56168 [02:59<00:07, 596.53it/s]Running loglikelihood requests:  93%|█████████▎| 52009/56168 [02:59<00:06, 596.71it/s]Running loglikelihood requests:  93%|█████████▎| 52077/56168 [02:59<00:06, 608.18it/s]Running loglikelihood requests:  93%|█████████▎| 52141/56168 [02:59<00:06, 605.44it/s]Running loglikelihood requests:  93%|█████████▎| 52205/56168 [02:59<00:06, 604.22it/s]Running loglikelihood requests:  93%|█████████▎| 52269/56168 [02:59<00:06, 603.46it/s]Running loglikelihood requests:  93%|█████████▎| 52333/56168 [02:59<00:06, 601.10it/s]Running loglikelihood requests:  93%|█████████▎| 52397/56168 [02:59<00:06, 600.89it/s]Running loglikelihood requests:  93%|█████████▎| 52461/56168 [03:00<00:06, 601.56it/s]Running loglikelihood requests:  94%|█████████▎| 52525/56168 [03:00<00:06, 601.47it/s]Running loglikelihood requests:  94%|█████████▎| 52589/56168 [03:00<00:05, 600.65it/s]Running loglikelihood requests:  94%|█████████▎| 52653/56168 [03:00<00:05, 600.22it/s]Running loglikelihood requests:  94%|█████████▍| 52717/56168 [03:00<00:05, 600.33it/s]Running loglikelihood requests:  94%|█████████▍| 52781/56168 [03:00<00:05, 600.52it/s]Running loglikelihood requests:  94%|█████████▍| 52845/56168 [03:00<00:05, 601.73it/s]Running loglikelihood requests:  94%|█████████▍| 52909/56168 [03:00<00:05, 602.15it/s]Running loglikelihood requests:  94%|█████████▍| 52973/56168 [03:00<00:05, 602.08it/s]Running loglikelihood requests:  94%|█████████▍| 53037/56168 [03:01<00:05, 601.50it/s]Running loglikelihood requests:  95%|█████████▍| 53101/56168 [03:01<00:05, 601.35it/s]Running loglikelihood requests:  95%|█████████▍| 53165/56168 [03:01<00:04, 601.96it/s]Running loglikelihood requests:  95%|█████████▍| 53229/56168 [03:01<00:04, 601.78it/s]Running loglikelihood requests:  95%|█████████▍| 53293/56168 [03:01<00:04, 601.57it/s]Running loglikelihood requests:  95%|█████████▌| 53401/56168 [03:01<00:03, 738.91it/s]Running loglikelihood requests:  95%|█████████▌| 53485/56168 [03:01<00:04, 620.07it/s]Running loglikelihood requests:  95%|█████████▌| 53593/56168 [03:01<00:03, 735.46it/s]Running loglikelihood requests:  96%|█████████▌| 53677/56168 [03:01<00:03, 627.54it/s]Running loglikelihood requests:  96%|█████████▌| 53786/56168 [03:02<00:03, 736.85it/s]Running loglikelihood requests:  96%|█████████▌| 53869/56168 [03:02<00:03, 628.75it/s]Running loglikelihood requests:  96%|█████████▌| 53977/56168 [03:02<00:02, 732.24it/s]Running loglikelihood requests:  96%|█████████▌| 54061/56168 [03:02<00:03, 632.12it/s]Running loglikelihood requests:  96%|█████████▋| 54175/56168 [03:02<00:02, 747.51it/s]Running loglikelihood requests:  97%|█████████▋| 54259/56168 [03:02<00:02, 641.33it/s]Running loglikelihood requests:  97%|█████████▋| 54361/56168 [03:02<00:02, 726.76it/s]Running loglikelihood requests:  97%|█████████▋| 54445/56168 [03:03<00:02, 629.11it/s]Running loglikelihood requests:  97%|█████████▋| 54555/56168 [03:03<00:02, 735.08it/s]Running loglikelihood requests:  97%|█████████▋| 54638/56168 [03:03<00:02, 632.92it/s]Running loglikelihood requests:  97%|█████████▋| 54742/56168 [03:03<00:01, 724.37it/s]Running loglikelihood requests:  98%|█████████▊| 54829/56168 [03:03<00:02, 634.56it/s]Running loglikelihood requests:  98%|█████████▊| 54943/56168 [03:03<00:01, 748.02it/s]Running loglikelihood requests:  98%|█████████▊| 55028/56168 [03:03<00:01, 647.50it/s]Running loglikelihood requests:  98%|█████████▊| 55140/56168 [03:04<00:01, 753.99it/s]Running loglikelihood requests:  98%|█████████▊| 55225/56168 [03:04<00:01, 650.89it/s]Running loglikelihood requests:  99%|█████████▊| 55341/56168 [03:04<00:01, 645.55it/s]Running loglikelihood requests:  99%|█████████▊| 55458/56168 [03:04<00:00, 757.46it/s]Running loglikelihood requests:  99%|█████████▉| 55543/56168 [03:04<00:00, 658.35it/s]Running loglikelihood requests:  99%|█████████▉| 55661/56168 [03:04<00:00, 655.30it/s]Running loglikelihood requests:  99%|█████████▉| 55787/56168 [03:04<00:00, 782.52it/s]Running loglikelihood requests:  99%|█████████▉| 55875/56168 [03:05<00:00, 684.55it/s]Running loglikelihood requests: 100%|█████████▉| 55981/56168 [03:05<00:00, 655.21it/s]Running loglikelihood requests: 100%|█████████▉| 56109/56168 [03:05<00:00, 698.59it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [03:05<00:00, 302.77it/s]
2025-05-13:22:31:43,853 WARNING  [huggingface.py:1353] Failed to get model SHA for /work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo/checkpoint-150 at revision main. Error: Repo id must be in the form 'repo_name' or 'namespace/repo_name': '/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo/checkpoint-150'. Use `repo_type` argument if needed.
2025-05-13:22:31:49,451 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo/checkpoint-150,tokenizer=meta-llama/Meta-Llama-3-8b-Instruct), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.6372|±  |0.0038|
| - humanities                          |      2|none  |      |acc   |↑  |0.5828|±  |0.0068|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.4762|±  |0.0447|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.7212|±  |0.0350|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.8186|±  |0.0270|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.8354|±  |0.0241|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.7438|±  |0.0398|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.7685|±  |0.0408|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.7485|±  |0.0341|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6734|±  |0.0252|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.3732|±  |0.0162|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6977|±  |0.0261|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.7469|±  |0.0242|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4831|±  |0.0128|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.7953|±  |0.0309|
| - other                               |      2|none  |      |acc   |↑  |0.7171|±  |0.0078|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.6400|±  |0.0482|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.7358|±  |0.0271|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.6821|±  |0.0355|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.4100|±  |0.0494|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6637|±  |0.0317|
|  - management                         |      1|none  |     0|acc   |↑  |0.8252|±  |0.0376|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8889|±  |0.0206|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.8200|±  |0.0386|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.8123|±  |0.0140|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.7353|±  |0.0253|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.5319|±  |0.0298|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.7206|±  |0.0273|
|  - virology                           |      1|none  |     0|acc   |↑  |0.4819|±  |0.0389|
| - social sciences                     |      2|none  |      |acc   |↑  |0.7403|±  |0.0078|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.5351|±  |0.0469|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7778|±  |0.0296|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8549|±  |0.0254|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.6256|±  |0.0245|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.7311|±  |0.0288|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.8257|±  |0.0163|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7328|±  |0.0388|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.6993|±  |0.0186|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6818|±  |0.0446|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.7102|±  |0.0290|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8657|±  |0.0241|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8300|±  |0.0378|
| - stem                                |      2|none  |      |acc   |↑  |0.5389|±  |0.0086|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.2900|±  |0.0456|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.6148|±  |0.0420|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.7105|±  |0.0369|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.7500|±  |0.0362|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4400|±  |0.0499|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.4600|±  |0.0501|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3500|±  |0.0479|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5000|±  |0.0498|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.7300|±  |0.0446|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.5489|±  |0.0325|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.6000|±  |0.0408|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4709|±  |0.0257|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7548|±  |0.0245|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.4778|±  |0.0351|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.7100|±  |0.0456|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.3630|±  |0.0293|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.4305|±  |0.0404|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.5046|±  |0.0341|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.4821|±  |0.0474|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.6372|±  |0.0038|
| - humanities     |      2|none  |      |acc   |↑  |0.5828|±  |0.0068|
| - other          |      2|none  |      |acc   |↑  |0.7171|±  |0.0078|
| - social sciences|      2|none  |      |acc   |↑  |0.7403|±  |0.0078|
| - stem           |      2|none  |      |acc   |↑  |0.5389|±  |0.0086|

2025-05-13:22:31:55,134 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-13:22:31:55,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,260 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,263 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,266 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,268 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,271 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,273 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,276 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,281 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,284 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,289 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,294 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,301 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,304 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,311 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,313 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,316 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,323 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,326 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,328 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,330 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,333 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,338 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,340 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,965 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,975 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,984 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,987 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,990 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:55,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,003 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,029 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,032 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,036 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,058 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,735 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:56,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,019 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,079 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,082 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,085 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,089 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,095 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,098 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,111 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,114 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,117 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,123 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,130 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,142 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,146 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,158 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,161 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,164 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,168 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,171 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,180 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,183 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,190 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,206 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,216 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,219 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,229 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,232 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,320 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,322 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,327 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,334 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,338 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,343 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,345 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,357 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,365 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,369 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,372 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,376 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,378 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,380 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,395 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,403 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,405 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,409 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,416 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,420 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,424 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,428 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,430 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,432 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,435 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,454 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,461 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,471 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,478 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,485 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,489 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,492 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,507 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:57,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:58,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:58,423 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:58,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:58,427 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:58,428 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:58,430 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:58,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:58,433 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,232 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,241 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,243 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,256 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,260 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,263 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,266 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,268 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,271 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,273 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,276 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,281 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,285 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,287 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,290 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,292 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,293 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,297 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,300 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,302 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,304 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,311 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,312 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,314 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,316 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,319 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,322 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,326 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,327 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,331 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,334 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,338 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,343 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,345 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,346 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,351 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,353 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,364 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,366 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,369 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,371 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,372 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,376 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,377 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,379 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,381 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,386 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,388 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,394 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,398 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,402 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,406 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,409 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,411 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,416 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,417 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,419 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,424 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,428 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,433 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,438 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,441 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,452 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,454 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,459 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,461 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,469 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,471 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,474 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,476 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,478 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,479 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,481 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,485 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,497 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,507 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,522 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,528 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,554 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,558 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,561 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,566 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,571 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,574 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,582 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,599 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,605 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,608 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,615 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,618 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,621 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,625 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,627 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,630 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,637 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,641 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,643 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,649 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,650 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,653 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,658 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,660 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,662 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,663 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,665 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,666 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,669 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,671 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,672 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,674 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,675 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,677 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,678 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,681 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,684 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:31:59,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:32:02,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:32:02,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:32:02,035 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-13:22:32:02,040 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-13:22:32:02,040 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo_kl/checkpoint-150', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-13:22:32:02,859 INFO     [huggingface.py:130] Using device 'cuda:5'
2025-05-13:22:32:03,402 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:5'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:05,  1.90s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:03<00:03,  1.57s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:04<00:01,  1.50s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:05<00:00,  1.06s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:05<00:00,  1.26s/it]
2025-05-13:22:32:23,374 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,374 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,374 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,374 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,374 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,374 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,374 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,375 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,376 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,376 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,376 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,376 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,376 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,376 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,376 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,376 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,377 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,378 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,378 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:32:23,378 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-13:22:32:23,384 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 68%|██████▊   | 68/100 [00:00<00:00, 671.23it/s]100%|██████████| 100/100 [00:00<00:00, 679.61it/s]
2025-05-13:22:32:23,537 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 23%|██▎       | 70/310 [00:00<00:00, 692.63it/s] 46%|████▌     | 142/310 [00:00<00:00, 704.14it/s] 69%|██████▊   | 213/310 [00:00<00:00, 700.84it/s] 92%|█████████▏| 284/310 [00:00<00:00, 700.76it/s]100%|██████████| 310/310 [00:00<00:00, 699.71it/s]
2025-05-13:22:32:23,993 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 69%|██████▉   | 69/100 [00:00<00:00, 681.97it/s]100%|██████████| 100/100 [00:00<00:00, 681.87it/s]
2025-05-13:22:32:24,145 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 46%|████▌     | 66/145 [00:00<00:00, 659.14it/s] 93%|█████████▎| 135/145 [00:00<00:00, 675.74it/s]100%|██████████| 145/145 [00:00<00:00, 672.53it/s]
2025-05-13:22:32:24,368 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 69%|██████▉   | 69/100 [00:00<00:00, 682.73it/s]100%|██████████| 100/100 [00:00<00:00, 685.52it/s]
2025-05-13:22:32:24,519 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 34%|███▍      | 69/203 [00:00<00:00, 688.89it/s] 68%|██████▊   | 138/203 [00:00<00:00, 683.16it/s]100%|██████████| 203/203 [00:00<00:00, 687.85it/s]
2025-05-13:22:32:24,824 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 45%|████▌     | 69/152 [00:00<00:00, 688.50it/s] 93%|█████████▎| 141/152 [00:00<00:00, 702.58it/s]100%|██████████| 152/152 [00:00<00:00, 699.47it/s]
2025-05-13:22:32:25,049 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 48%|████▊     | 49/102 [00:00<00:00, 475.94it/s]100%|██████████| 102/102 [00:00<00:00, 507.22it/s]
2025-05-13:22:32:25,255 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 69%|██████▉   | 69/100 [00:00<00:00, 682.72it/s]100%|██████████| 100/100 [00:00<00:00, 689.01it/s]
2025-05-13:22:32:25,407 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 49%|████▉     | 71/144 [00:00<00:00, 708.75it/s] 99%|█████████▊| 142/144 [00:00<00:00, 708.72it/s]100%|██████████| 144/144 [00:00<00:00, 707.50it/s]
2025-05-13:22:32:25,618 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 30%|███       | 71/235 [00:00<00:00, 706.72it/s] 60%|██████    | 142/235 [00:00<00:00, 703.04it/s] 91%|█████████ | 213/235 [00:00<00:00, 699.72it/s]100%|██████████| 235/235 [00:00<00:00, 700.32it/s]
2025-05-13:22:32:25,963 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 63%|██████▎   | 71/112 [00:00<00:00, 700.35it/s]100%|██████████| 112/112 [00:00<00:00, 699.21it/s]
2025-05-13:22:32:26,129 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 26%|██▌       | 70/270 [00:00<00:00, 696.84it/s] 52%|█████▏    | 141/270 [00:00<00:00, 702.18it/s] 79%|███████▊  | 212/270 [00:00<00:00, 697.92it/s]100%|██████████| 270/270 [00:00<00:00, 702.85it/s]
2025-05-13:22:32:26,525 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 73%|███████▎  | 73/100 [00:00<00:00, 721.63it/s]100%|██████████| 100/100 [00:00<00:00, 718.84it/s]
2025-05-13:22:32:26,670 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 72%|███████▏  | 72/100 [00:00<00:00, 709.12it/s]100%|██████████| 100/100 [00:00<00:00, 707.57it/s]
2025-05-13:22:32:26,816 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 52%|█████▏    | 70/135 [00:00<00:00, 699.85it/s]100%|██████████| 135/135 [00:00<00:00, 699.47it/s]
2025-05-13:22:32:27,016 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 19%|█▊        | 70/378 [00:00<00:00, 693.42it/s] 37%|███▋      | 141/378 [00:00<00:00, 698.01it/s] 56%|█████▌    | 212/378 [00:00<00:00, 702.93it/s] 75%|███████▍  | 283/378 [00:00<00:00, 702.05it/s] 94%|█████████▍| 355/378 [00:00<00:00, 706.02it/s]100%|██████████| 378/378 [00:00<00:00, 704.23it/s]
2025-05-13:22:32:27,569 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 48%|████▊     | 73/151 [00:00<00:00, 725.91it/s] 97%|█████████▋| 146/151 [00:00<00:00, 711.18it/s]100%|██████████| 151/151 [00:00<00:00, 712.39it/s]
2025-05-13:22:32:27,788 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 33%|███▎      | 72/216 [00:00<00:00, 716.46it/s] 67%|██████▋   | 144/216 [00:00<00:00, 716.70it/s]100%|██████████| 216/216 [00:00<00:00, 709.30it/s]100%|██████████| 216/216 [00:00<00:00, 710.69it/s]
2025-05-13:22:32:28,102 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 27%|██▋       | 71/265 [00:00<00:00, 707.80it/s] 54%|█████▍    | 143/265 [00:00<00:00, 712.17it/s] 81%|████████  | 215/265 [00:00<00:00, 712.99it/s]100%|██████████| 265/265 [00:00<00:00, 713.18it/s]
2025-05-13:22:32:28,484 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 70%|███████   | 70/100 [00:00<00:00, 693.74it/s]100%|██████████| 100/100 [00:00<00:00, 695.78it/s]
2025-05-13:22:32:28,633 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 69%|██████▉   | 71/103 [00:00<00:00, 703.69it/s]100%|██████████| 103/103 [00:00<00:00, 708.18it/s]
2025-05-13:22:32:28,784 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 24%|██▎       | 72/306 [00:00<00:00, 710.45it/s] 47%|████▋     | 144/306 [00:00<00:00, 709.95it/s] 71%|███████   | 216/306 [00:00<00:00, 714.05it/s] 94%|█████████▍| 288/306 [00:00<00:00, 712.04it/s]100%|██████████| 306/306 [00:00<00:00, 711.13it/s]
2025-05-13:22:32:29,227 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 41%|████      | 71/173 [00:00<00:00, 702.30it/s] 82%|████████▏ | 142/173 [00:00<00:00, 697.98it/s]100%|██████████| 173/173 [00:00<00:00, 699.55it/s]
2025-05-13:22:32:29,482 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 43%|████▎     | 72/166 [00:00<00:00, 711.62it/s] 87%|████████▋ | 144/166 [00:00<00:00, 713.82it/s]100%|██████████| 166/166 [00:00<00:00, 712.52it/s]
2025-05-13:22:32:29,723 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 26%|██▌       | 71/272 [00:00<00:00, 707.48it/s] 53%|█████▎    | 143/272 [00:00<00:00, 712.85it/s] 79%|███████▉  | 215/272 [00:00<00:00, 714.78it/s]100%|██████████| 272/272 [00:00<00:00, 712.22it/s]
2025-05-13:22:32:30,117 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s]  9%|▉         | 72/783 [00:00<00:00, 719.91it/s] 18%|█▊        | 144/783 [00:00<00:00, 718.64it/s] 28%|██▊       | 218/783 [00:00<00:00, 724.80it/s] 37%|███▋      | 291/783 [00:00<00:00, 723.01it/s] 46%|████▋     | 364/783 [00:00<00:00, 720.31it/s] 56%|█████▌    | 437/783 [00:00<00:00, 718.12it/s] 65%|██████▌   | 510/783 [00:00<00:00, 719.59it/s] 74%|███████▍  | 583/783 [00:00<00:00, 721.42it/s] 84%|████████▍ | 656/783 [00:00<00:00, 723.34it/s] 93%|█████████▎| 729/783 [00:01<00:00, 724.58it/s]100%|██████████| 783/783 [00:01<00:00, 723.08it/s]
2025-05-13:22:32:31,230 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 72%|███████▏  | 72/100 [00:00<00:00, 717.39it/s]100%|██████████| 100/100 [00:00<00:00, 716.53it/s]
2025-05-13:22:32:31,374 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 69%|██████▉   | 69/100 [00:00<00:00, 687.07it/s]100%|██████████| 100/100 [00:00<00:00, 690.86it/s]
2025-05-13:22:32:31,524 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 26%|██▌       | 72/282 [00:00<00:00, 714.00it/s] 51%|█████▏    | 145/282 [00:00<00:00, 718.36it/s] 77%|███████▋  | 217/282 [00:00<00:00, 712.94it/s]100%|██████████| 282/282 [00:00<00:00, 713.86it/s]
2025-05-13:22:32:31,932 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:03, 67.06it/s] 39%|███▉      | 91/234 [00:00<00:00, 285.57it/s] 69%|██████▉   | 162/234 [00:00<00:00, 422.02it/s]100%|█████████▉| 233/234 [00:00<00:00, 510.79it/s]100%|██████████| 234/234 [00:00<00:00, 398.40it/s]
2025-05-13:22:32:32,529 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 32%|███▏      | 71/223 [00:00<00:00, 702.36it/s] 64%|██████▎   | 142/223 [00:00<00:00, 706.30it/s] 96%|█████████▌| 214/223 [00:00<00:00, 711.24it/s]100%|██████████| 223/223 [00:00<00:00, 708.66it/s]
2025-05-13:22:32:32,857 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 65%|██████▍   | 71/110 [00:00<00:00, 701.23it/s]100%|██████████| 110/110 [00:00<00:00, 697.30it/s]
2025-05-13:22:32:33,020 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 35%|███▌      | 71/201 [00:00<00:00, 699.65it/s] 71%|███████   | 143/201 [00:00<00:00, 709.82it/s]100%|██████████| 201/201 [00:00<00:00, 713.70it/s]
2025-05-13:22:32:33,311 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 37%|███▋      | 73/198 [00:00<00:00, 723.56it/s] 74%|███████▎  | 146/198 [00:00<00:00, 722.44it/s]100%|██████████| 198/198 [00:00<00:00, 723.99it/s]
2025-05-13:22:32:33,593 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 29%|██▉       | 72/245 [00:00<00:00, 711.99it/s] 59%|█████▉    | 144/245 [00:00<00:00, 713.68it/s] 89%|████████▊ | 217/245 [00:00<00:00, 718.11it/s]100%|██████████| 245/245 [00:00<00:00, 716.33it/s]
2025-05-13:22:32:33,946 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 13%|█▎        | 70/545 [00:00<00:00, 698.56it/s] 26%|██▌       | 141/545 [00:00<00:00, 702.78it/s] 39%|███▉      | 214/545 [00:00<00:00, 710.97it/s] 52%|█████▏    | 286/545 [00:00<00:00, 714.40it/s] 66%|██████▌   | 358/545 [00:00<00:00, 714.47it/s] 79%|███████▉  | 430/545 [00:00<00:00, 711.25it/s] 92%|█████████▏| 502/545 [00:00<00:00, 709.79it/s]100%|██████████| 545/545 [00:00<00:00, 710.74it/s]
2025-05-13:22:32:34,734 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 72%|███████▏  | 72/100 [00:00<00:00, 717.05it/s]100%|██████████| 100/100 [00:00<00:00, 716.49it/s]
2025-05-13:22:32:34,878 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 18%|█▊        | 72/390 [00:00<00:00, 713.94it/s] 37%|███▋      | 144/390 [00:00<00:00, 688.75it/s] 55%|█████▍    | 214/390 [00:00<00:00, 691.30it/s] 73%|███████▎  | 285/390 [00:00<00:00, 695.56it/s] 91%|█████████▏| 356/390 [00:00<00:00, 697.97it/s]100%|██████████| 390/390 [00:00<00:00, 697.75it/s]
2025-05-13:22:32:35,453 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 30%|███       | 72/238 [00:00<00:00, 717.80it/s] 61%|██████    | 144/238 [00:00<00:00, 711.65it/s] 92%|█████████▏| 218/238 [00:00<00:00, 720.47it/s]100%|██████████| 238/238 [00:00<00:00, 720.65it/s]
2025-05-13:22:32:35,793 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 67%|██████▋   | 76/114 [00:00<00:00, 758.67it/s]100%|██████████| 114/114 [00:00<00:00, 753.50it/s]
2025-05-13:22:32:35,950 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 12%|█▏        | 75/612 [00:00<00:00, 745.78it/s] 25%|██▍       | 150/612 [00:00<00:00, 733.27it/s] 37%|███▋      | 224/612 [00:00<00:00, 735.27it/s] 49%|████▊     | 298/612 [00:00<00:00, 728.17it/s] 61%|██████    | 372/612 [00:00<00:00, 732.19it/s] 73%|███████▎  | 446/612 [00:00<00:00, 733.99it/s] 85%|████████▍ | 520/612 [00:00<00:00, 734.34it/s] 97%|█████████▋| 595/612 [00:00<00:00, 737.87it/s]100%|██████████| 612/612 [00:00<00:00, 726.80it/s]
2025-05-13:22:32:36,815 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 56%|█████▋    | 74/131 [00:00<00:00, 734.57it/s]100%|██████████| 131/131 [00:00<00:00, 729.89it/s]
2025-05-13:22:32:37,001 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 37%|███▋      | 72/193 [00:00<00:00, 713.17it/s] 75%|███████▍  | 144/193 [00:00<00:00, 715.85it/s]100%|██████████| 193/193 [00:00<00:00, 712.36it/s]
2025-05-13:22:32:37,280 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  8%|▊         | 74/895 [00:00<00:01, 730.79it/s] 17%|█▋        | 148/895 [00:00<00:01, 726.13it/s] 25%|██▍       | 221/895 [00:00<00:00, 720.98it/s] 33%|███▎      | 296/895 [00:00<00:00, 730.56it/s] 41%|████▏     | 370/895 [00:00<00:00, 730.97it/s] 50%|████▉     | 444/895 [00:00<00:00, 732.17it/s] 58%|█████▊    | 518/895 [00:00<00:00, 732.96it/s] 66%|██████▌   | 592/895 [00:00<00:00, 726.48it/s] 74%|███████▍  | 665/895 [00:00<00:00, 724.85it/s] 82%|████████▏ | 738/895 [00:01<00:00, 719.23it/s] 91%|█████████ | 810/895 [00:01<00:00, 719.13it/s] 99%|█████████▊| 882/895 [00:01<00:00, 718.33it/s]100%|██████████| 895/895 [00:01<00:00, 723.99it/s]
2025-05-13:22:32:38,552 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 30%|██▉       | 70/237 [00:00<00:00, 696.65it/s] 59%|█████▉    | 140/237 [00:00<00:00, 696.45it/s] 90%|█████████ | 214/237 [00:00<00:00, 714.71it/s]100%|██████████| 237/237 [00:00<00:00, 710.90it/s]
2025-05-13:22:32:38,897 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 44%|████▎     | 72/165 [00:00<00:00, 710.18it/s] 87%|████████▋ | 144/165 [00:00<00:00, 714.32it/s]100%|██████████| 165/165 [00:00<00:00, 714.85it/s]
2025-05-13:22:32:39,135 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 23%|██▎       | 73/311 [00:00<00:00, 722.34it/s] 47%|████▋     | 146/311 [00:00<00:00, 726.46it/s] 70%|███████   | 219/311 [00:00<00:00, 724.67it/s] 94%|█████████▍| 292/311 [00:00<00:00, 726.11it/s]100%|██████████| 311/311 [00:00<00:00, 725.37it/s]
2025-05-13:22:32:39,577 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 21%|██        | 72/346 [00:00<00:00, 719.62it/s] 42%|████▏     | 145/346 [00:00<00:00, 722.90it/s] 63%|██████▎   | 218/346 [00:00<00:00, 707.99it/s] 84%|████████▍ | 291/346 [00:00<00:00, 713.88it/s]100%|██████████| 346/346 [00:00<00:00, 716.08it/s]
2025-05-13:22:32:40,074 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 36%|███▋      | 74/204 [00:00<00:00, 736.88it/s] 74%|███████▎  | 150/204 [00:00<00:00, 745.99it/s]100%|██████████| 204/204 [00:00<00:00, 747.93it/s]
2025-05-13:22:32:40,357 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 63%|██████▎   | 76/121 [00:00<00:00, 750.50it/s]100%|██████████| 121/121 [00:00<00:00, 752.47it/s]
2025-05-13:22:32:40,523 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  5%|▍         | 74/1534 [00:00<00:01, 734.17it/s] 10%|▉         | 149/1534 [00:00<00:01, 738.89it/s] 15%|█▍        | 224/1534 [00:00<00:01, 742.71it/s] 19%|█▉        | 299/1534 [00:00<00:01, 741.61it/s] 24%|██▍       | 374/1534 [00:00<00:01, 738.49it/s] 29%|██▉       | 448/1534 [00:00<00:01, 733.03it/s] 34%|███▍      | 522/1534 [00:00<00:01, 727.73it/s] 39%|███▉      | 595/1534 [00:00<00:01, 727.46it/s] 44%|████▎     | 668/1534 [00:00<00:01, 727.19it/s] 48%|████▊     | 741/1534 [00:01<00:01, 726.95it/s] 53%|█████▎    | 815/1534 [00:01<00:00, 728.10it/s] 58%|█████▊    | 888/1534 [00:01<00:00, 725.69it/s] 63%|██████▎   | 961/1534 [00:01<00:00, 726.79it/s] 67%|██████▋   | 1034/1534 [00:01<00:00, 723.20it/s] 72%|███████▏  | 1107/1534 [00:01<00:00, 720.73it/s] 77%|███████▋  | 1180/1534 [00:01<00:00, 715.15it/s] 82%|████████▏ | 1252/1534 [00:01<00:00, 714.57it/s] 86%|████████▋ | 1324/1534 [00:01<00:00, 712.36it/s] 91%|█████████ | 1396/1534 [00:01<00:00, 712.89it/s] 96%|█████████▌| 1470/1534 [00:02<00:00, 718.92it/s]100%|██████████| 1534/1534 [00:02<00:00, 724.81it/s]
2025-05-13:22:32:42,698 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 43%|████▎     | 74/171 [00:00<00:00, 732.29it/s] 87%|████████▋ | 148/171 [00:00<00:00, 723.41it/s]100%|██████████| 171/171 [00:00<00:00, 726.42it/s]
2025-05-13:22:32:42,941 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 69%|██████▊   | 74/108 [00:00<00:00, 732.10it/s]100%|██████████| 108/108 [00:00<00:00, 729.05it/s]
2025-05-13:22:32:43,094 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 56%|█████▋    | 71/126 [00:00<00:00, 708.43it/s]100%|██████████| 126/126 [00:00<00:00, 717.00it/s]
2025-05-13:22:32:43,276 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 23%|██▎       | 73/324 [00:00<00:00, 724.35it/s] 45%|████▌     | 146/324 [00:00<00:00, 256.42it/s] 68%|██████▊   | 219/324 [00:00<00:00, 363.91it/s] 90%|████████▉ | 290/324 [00:00<00:00, 448.06it/s]100%|██████████| 324/324 [00:00<00:00, 423.91it/s]
2025-05-13:22:32:44,053 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 44%|████▎     | 71/163 [00:00<00:00, 705.27it/s] 87%|████████▋ | 142/163 [00:00<00:00, 707.73it/s]100%|██████████| 163/163 [00:00<00:00, 708.18it/s]
2025-05-13:22:32:44,291 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<35:23:49,  2.27s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:03<40:50, 22.89it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:04<24:41, 37.82it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:05<19:16, 48.39it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:06<16:37, 56.07it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<14:53, 62.53it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:07<13:50, 67.15it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:08<12:59, 71.44it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:09<12:17, 75.44it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:10<11:47, 78.55it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:10<11:23, 81.29it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:11<11:05, 83.38it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:12<10:48, 85.43it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:12<10:35, 87.01it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:13<10:16, 89.65it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:14<10:01, 91.73it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:14<09:48, 93.66it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:15<09:37, 95.30it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:16<09:29, 96.62it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:16<09:19, 98.14it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:17<09:12, 99.37it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:18<09:06, 100.32it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:18<09:02, 100.97it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:19<08:54, 102.29it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:19<08:45, 103.99it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:20<08:38, 105.24it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:21<08:29, 106.94it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:21<08:22, 108.38it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:22<08:16, 109.46it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:22<08:11, 110.46it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:23<08:11, 110.45it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:23<08:05, 111.66it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:24<07:59, 112.79it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:25<07:59, 112.81it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:25<07:54, 113.69it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:26<07:51, 114.44it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:26<07:48, 115.01it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:27<07:43, 116.06it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:27<07:41, 116.45it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:28<07:37, 117.31it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:28<07:34, 117.90it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:29<07:32, 118.39it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:29<07:30, 118.79it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:30<07:28, 119.23it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:30<07:19, 121.35it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:31<07:13, 122.89it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:31<07:08, 124.07it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:32<07:08, 124.02it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:32<07:07, 124.12it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:33<07:05, 124.70it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:33<07:01, 125.74it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:34<07:00, 125.84it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:34<06:56, 126.78it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:35<06:59, 125.95it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:35<06:52, 127.79it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:36<06:48, 129.00it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:36<06:44, 130.02it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:37<06:45, 129.66it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:37<06:41, 130.61it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:38<06:38, 131.47it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:38<06:36, 132.08it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:39<06:31, 133.40it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:39<06:28, 134.50it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:40<06:25, 135.25it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:40<06:26, 134.59it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:41<06:23, 135.46it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:41<06:21, 136.22it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:42<06:19, 136.85it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:42<06:16, 137.47it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:43<06:15, 137.87it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:43<06:14, 138.16it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:44<06:13, 138.14it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:44<06:10, 139.20it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:44<06:07, 139.99it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:45<06:05, 140.58it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:45<06:04, 141.07it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:46<06:05, 140.25it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:46<06:06, 139.91it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:47<06:03, 140.78it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:47<06:02, 141.18it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:48<06:00, 141.72it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:48<05:50, 145.45it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:48<05:46, 147.11it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:49<05:43, 147.84it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:49<05:41, 148.64it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:50<05:37, 150.42it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:50<05:33, 152.05it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:51<05:30, 153.22it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:51<05:27, 154.15it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:51<05:25, 154.90it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:52<05:24, 155.46it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:52<05:23, 155.86it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:53<05:19, 157.24it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:53<05:17, 158.26it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:53<05:15, 158.98it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:54<05:13, 159.59it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:54<05:12, 160.11it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:55<05:11, 160.54it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:55<05:10, 160.91it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:55<05:09, 161.08it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:56<05:08, 161.56it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:56<05:06, 162.02it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:56<05:05, 162.54it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:57<05:04, 163.06it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:57<05:02, 163.41it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:58<05:02, 163.64it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:58<05:01, 164.03it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:58<04:58, 165.19it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:59<04:56, 166.34it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:59<04:53, 167.33it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [01:00<04:52, 168.00it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [01:00<04:50, 168.64it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [01:00<04:49, 169.09it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [01:01<04:41, 173.75it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [01:01<04:35, 177.26it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [01:01<04:31, 179.85it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [01:02<04:27, 182.04it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [01:02<04:25, 183.47it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [01:02<04:23, 184.84it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [01:03<04:20, 186.25it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:03<04:18, 187.27it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:03<04:17, 188.04it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:04<04:16, 188.75it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:04<04:14, 189.42it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:04<04:13, 190.07it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:05<04:12, 190.46it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:05<04:10, 192.21it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:05<04:08, 193.61it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:06<04:06, 194.55it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:06<04:05, 195.34it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:06<04:04, 195.92it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:07<04:03, 196.47it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:07<04:02, 197.06it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:07<04:00, 198.26it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:08<03:58, 199.17it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:08<03:57, 199.85it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:08<03:56, 200.64it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:09<03:55, 201.19it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:09<03:54, 201.66it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:09<03:52, 203.48it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:10<03:50, 204.71it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:10<03:49, 205.41it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:10<03:48, 206.31it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:10<03:46, 207.23it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:11<03:45, 207.83it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:11<03:45, 208.24it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:11<03:43, 209.07it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:12<03:42, 210.03it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:12<03:41, 210.80it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:12<03:39, 212.18it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:13<03:38, 213.35it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:13<03:37, 214.22it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:13<03:35, 215.01it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:13<03:33, 217.42it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:14<03:31, 218.80it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:14<03:30, 220.08it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:14<03:28, 221.23it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:15<03:27, 222.15it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:15<03:26, 223.02it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:15<03:25, 223.57it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:15<03:24, 224.07it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:16<03:20, 228.72it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:16<03:17, 232.18it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:16<03:14, 234.91it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:16<03:12, 237.17it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:17<03:10, 238.95it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:17<03:09, 240.35it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:17<03:08, 241.09it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:18<03:07, 241.83it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:18<03:06, 242.53it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:18<03:04, 245.19it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:18<03:02, 247.43it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:19<03:01, 248.96it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:19<02:59, 250.54it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:19<02:59, 251.35it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:19<02:58, 252.07it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:20<02:57, 252.82it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:20<02:56, 253.57it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:20<02:56, 253.98it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:20<02:55, 254.27it/s]Running loglikelihood requests:  21%|██        | 11525/56168 [01:21<02:51, 260.48it/s]Running loglikelihood requests:  21%|██        | 11589/56168 [01:21<02:51, 260.41it/s]Running loglikelihood requests:  21%|██        | 11653/56168 [01:21<02:50, 260.47it/s]Running loglikelihood requests:  21%|██        | 11717/56168 [01:21<02:50, 260.73it/s]Running loglikelihood requests:  21%|██        | 11781/56168 [01:22<02:50, 260.97it/s]Running loglikelihood requests:  21%|██        | 11845/56168 [01:22<02:49, 260.93it/s]Running loglikelihood requests:  21%|██        | 11909/56168 [01:22<02:49, 261.13it/s]Running loglikelihood requests:  21%|██▏       | 11973/56168 [01:22<02:49, 261.14it/s]Running loglikelihood requests:  21%|██▏       | 12037/56168 [01:23<02:48, 261.58it/s]Running loglikelihood requests:  22%|██▏       | 12101/56168 [01:23<02:48, 262.05it/s]Running loglikelihood requests:  22%|██▏       | 12165/56168 [01:23<02:47, 262.46it/s]Running loglikelihood requests:  22%|██▏       | 12229/56168 [01:23<02:47, 262.77it/s]Running loglikelihood requests:  22%|██▏       | 12293/56168 [01:23<02:45, 265.85it/s]Running loglikelihood requests:  22%|██▏       | 12357/56168 [01:24<02:43, 267.76it/s]Running loglikelihood requests:  22%|██▏       | 12421/56168 [01:24<02:42, 269.56it/s]Running loglikelihood requests:  22%|██▏       | 12485/56168 [01:24<02:41, 270.61it/s]Running loglikelihood requests:  22%|██▏       | 12549/56168 [01:24<02:40, 271.73it/s]Running loglikelihood requests:  22%|██▏       | 12613/56168 [01:25<02:39, 272.44it/s]Running loglikelihood requests:  23%|██▎       | 12677/56168 [01:25<02:39, 273.49it/s]Running loglikelihood requests:  23%|██▎       | 12741/56168 [01:25<02:38, 274.17it/s]Running loglikelihood requests:  23%|██▎       | 12805/56168 [01:25<02:37, 274.88it/s]Running loglikelihood requests:  23%|██▎       | 12869/56168 [01:26<02:37, 275.41it/s]Running loglikelihood requests:  23%|██▎       | 12933/56168 [01:26<02:36, 275.84it/s]Running loglikelihood requests:  23%|██▎       | 12997/56168 [01:26<02:36, 276.37it/s]Running loglikelihood requests:  23%|██▎       | 13061/56168 [01:26<02:35, 276.63it/s]Running loglikelihood requests:  23%|██▎       | 13125/56168 [01:27<02:35, 277.20it/s]Running loglikelihood requests:  23%|██▎       | 13189/56168 [01:27<02:34, 277.40it/s]Running loglikelihood requests:  24%|██▎       | 13253/56168 [01:27<02:34, 277.46it/s]Running loglikelihood requests:  24%|██▎       | 13317/56168 [01:27<02:34, 277.72it/s]Running loglikelihood requests:  24%|██▍       | 13381/56168 [01:27<02:33, 277.97it/s]Running loglikelihood requests:  24%|██▍       | 13445/56168 [01:28<02:33, 278.22it/s]Running loglikelihood requests:  24%|██▍       | 13509/56168 [01:28<02:31, 281.62it/s]Running loglikelihood requests:  24%|██▍       | 13573/56168 [01:28<02:29, 284.11it/s]Running loglikelihood requests:  24%|██▍       | 13637/56168 [01:28<02:28, 286.19it/s]Running loglikelihood requests:  24%|██▍       | 13701/56168 [01:29<02:27, 287.68it/s]Running loglikelihood requests:  25%|██▍       | 13765/56168 [01:29<02:26, 288.67it/s]Running loglikelihood requests:  25%|██▍       | 13829/56168 [01:29<02:26, 289.59it/s]Running loglikelihood requests:  25%|██▍       | 13893/56168 [01:29<02:25, 290.34it/s]Running loglikelihood requests:  25%|██▍       | 13957/56168 [01:29<02:24, 291.12it/s]Running loglikelihood requests:  25%|██▍       | 14021/56168 [01:30<02:24, 291.57it/s]Running loglikelihood requests:  25%|██▌       | 14085/56168 [01:30<02:23, 292.27it/s]Running loglikelihood requests:  25%|██▌       | 14149/56168 [01:30<02:23, 292.89it/s]Running loglikelihood requests:  25%|██▌       | 14213/56168 [01:30<02:23, 292.85it/s]Running loglikelihood requests:  25%|██▌       | 14277/56168 [01:31<02:22, 293.10it/s]Running loglikelihood requests:  26%|██▌       | 14341/56168 [01:31<02:22, 293.56it/s]Running loglikelihood requests:  26%|██▌       | 14405/56168 [01:31<02:22, 294.08it/s]Running loglikelihood requests:  26%|██▌       | 14469/56168 [01:31<02:21, 294.32it/s]Running loglikelihood requests:  26%|██▌       | 14533/56168 [01:31<02:21, 295.01it/s]Running loglikelihood requests:  26%|██▌       | 14597/56168 [01:32<02:20, 295.20it/s]Running loglikelihood requests:  26%|██▌       | 14661/56168 [01:32<02:20, 295.41it/s]Running loglikelihood requests:  26%|██▌       | 14725/56168 [01:32<02:20, 295.88it/s]Running loglikelihood requests:  26%|██▋       | 14789/56168 [01:32<02:19, 296.44it/s]Running loglikelihood requests:  26%|██▋       | 14853/56168 [01:32<02:19, 296.56it/s]Running loglikelihood requests:  27%|██▋       | 14917/56168 [01:33<02:19, 296.31it/s]Running loglikelihood requests:  27%|██▋       | 14981/56168 [01:33<02:18, 296.61it/s]Running loglikelihood requests:  27%|██▋       | 15045/56168 [01:33<02:18, 296.11it/s]Running loglikelihood requests:  27%|██▋       | 15109/56168 [01:33<02:18, 296.01it/s]Running loglikelihood requests:  27%|██▋       | 15173/56168 [01:34<02:18, 295.90it/s]Running loglikelihood requests:  27%|██▋       | 15237/56168 [01:34<02:18, 296.08it/s]Running loglikelihood requests:  27%|██▋       | 15301/56168 [01:34<02:18, 296.13it/s]Running loglikelihood requests:  27%|██▋       | 15365/56168 [01:34<02:17, 296.22it/s]Running loglikelihood requests:  27%|██▋       | 15429/56168 [01:34<02:17, 296.35it/s]Running loglikelihood requests:  28%|██▊       | 15493/56168 [01:35<02:16, 298.61it/s]Running loglikelihood requests:  28%|██▊       | 15557/56168 [01:35<02:15, 299.80it/s]Running loglikelihood requests:  28%|██▊       | 15621/56168 [01:35<02:14, 300.73it/s]Running loglikelihood requests:  28%|██▊       | 15685/56168 [01:35<02:14, 301.04it/s]Running loglikelihood requests:  28%|██▊       | 15749/56168 [01:35<02:13, 301.74it/s]Running loglikelihood requests:  28%|██▊       | 15813/56168 [01:36<02:13, 302.53it/s]Running loglikelihood requests:  28%|██▊       | 15877/56168 [01:36<02:12, 302.96it/s]Running loglikelihood requests:  28%|██▊       | 15945/56168 [01:36<02:10, 308.91it/s]Running loglikelihood requests:  29%|██▊       | 16009/56168 [01:36<02:10, 307.59it/s]Running loglikelihood requests:  29%|██▊       | 16073/56168 [01:37<02:10, 306.72it/s]Running loglikelihood requests:  29%|██▊       | 16137/56168 [01:37<02:10, 306.06it/s]Running loglikelihood requests:  29%|██▉       | 16201/56168 [01:37<02:10, 305.78it/s]Running loglikelihood requests:  29%|██▉       | 16265/56168 [01:37<02:10, 305.52it/s]Running loglikelihood requests:  29%|██▉       | 16329/56168 [01:37<02:10, 305.36it/s]Running loglikelihood requests:  29%|██▉       | 16393/56168 [01:38<02:10, 305.58it/s]Running loglikelihood requests:  29%|██▉       | 16457/56168 [01:38<02:10, 305.13it/s]Running loglikelihood requests:  29%|██▉       | 16521/56168 [01:38<02:09, 305.38it/s]Running loglikelihood requests:  30%|██▉       | 16585/56168 [01:38<02:09, 305.21it/s]Running loglikelihood requests:  30%|██▉       | 16649/56168 [01:38<02:09, 305.01it/s]Running loglikelihood requests:  30%|██▉       | 16713/56168 [01:39<02:09, 305.16it/s]Running loglikelihood requests:  30%|██▉       | 16777/56168 [01:39<02:09, 305.18it/s]Running loglikelihood requests:  30%|██▉       | 16841/56168 [01:39<02:08, 305.19it/s]Running loglikelihood requests:  30%|███       | 16905/56168 [01:39<02:08, 305.99it/s]Running loglikelihood requests:  30%|███       | 16969/56168 [01:39<02:07, 306.44it/s]Running loglikelihood requests:  30%|███       | 17033/56168 [01:40<02:07, 306.62it/s]Running loglikelihood requests:  30%|███       | 17097/56168 [01:40<02:07, 306.83it/s]Running loglikelihood requests:  31%|███       | 17161/56168 [01:40<02:07, 306.71it/s]Running loglikelihood requests:  31%|███       | 17225/56168 [01:40<02:06, 306.71it/s]Running loglikelihood requests:  31%|███       | 17289/56168 [01:40<02:06, 307.24it/s]Running loglikelihood requests:  31%|███       | 17353/56168 [01:41<02:06, 307.19it/s]Running loglikelihood requests:  31%|███       | 17417/56168 [01:41<02:06, 307.28it/s]Running loglikelihood requests:  31%|███       | 17481/56168 [01:41<02:05, 307.55it/s]Running loglikelihood requests:  31%|███       | 17545/56168 [01:41<02:05, 307.32it/s]Running loglikelihood requests:  31%|███▏      | 17609/56168 [01:42<02:05, 307.12it/s]Running loglikelihood requests:  31%|███▏      | 17673/56168 [01:42<02:05, 307.46it/s]Running loglikelihood requests:  32%|███▏      | 17737/56168 [01:42<02:04, 307.56it/s]Running loglikelihood requests:  32%|███▏      | 17801/56168 [01:42<02:04, 307.68it/s]Running loglikelihood requests:  32%|███▏      | 17865/56168 [01:42<02:04, 307.88it/s]Running loglikelihood requests:  32%|███▏      | 17929/56168 [01:43<02:04, 308.09it/s]Running loglikelihood requests:  32%|███▏      | 17993/56168 [01:43<02:03, 308.05it/s]Running loglikelihood requests:  32%|███▏      | 18057/56168 [01:43<02:03, 308.20it/s]Running loglikelihood requests:  32%|███▏      | 18121/56168 [01:43<02:03, 308.34it/s]Running loglikelihood requests:  32%|███▏      | 18185/56168 [01:43<02:03, 308.21it/s]Running loglikelihood requests:  32%|███▏      | 18249/56168 [01:44<02:02, 308.31it/s]Running loglikelihood requests:  33%|███▎      | 18313/56168 [01:44<02:02, 308.73it/s]Running loglikelihood requests:  33%|███▎      | 18377/56168 [01:44<02:02, 308.78it/s]Running loglikelihood requests:  33%|███▎      | 18441/56168 [01:44<02:02, 308.78it/s]Running loglikelihood requests:  33%|███▎      | 18505/56168 [01:44<02:02, 308.61it/s]Running loglikelihood requests:  33%|███▎      | 18569/56168 [01:45<02:01, 308.91it/s]Running loglikelihood requests:  33%|███▎      | 18633/56168 [01:45<02:01, 308.84it/s]Running loglikelihood requests:  33%|███▎      | 18697/56168 [01:45<02:00, 309.92it/s]Running loglikelihood requests:  33%|███▎      | 18761/56168 [01:45<02:00, 310.35it/s]Running loglikelihood requests:  34%|███▎      | 18829/56168 [01:45<01:58, 316.41it/s]Running loglikelihood requests:  34%|███▎      | 18893/56168 [01:46<01:58, 315.12it/s]Running loglikelihood requests:  34%|███▍      | 18957/56168 [01:46<01:58, 314.41it/s]Running loglikelihood requests:  34%|███▍      | 19021/56168 [01:46<01:58, 313.66it/s]Running loglikelihood requests:  34%|███▍      | 19085/56168 [01:46<01:58, 312.93it/s]Running loglikelihood requests:  34%|███▍      | 19149/56168 [01:46<01:58, 312.72it/s]Running loglikelihood requests:  34%|███▍      | 19213/56168 [01:47<01:58, 312.84it/s]Running loglikelihood requests:  34%|███▍      | 19277/56168 [01:47<01:57, 313.34it/s]Running loglikelihood requests:  34%|███▍      | 19341/56168 [01:47<01:57, 313.48it/s]Running loglikelihood requests:  35%|███▍      | 19405/56168 [01:47<01:57, 313.25it/s]Running loglikelihood requests:  35%|███▍      | 19469/56168 [01:48<01:57, 313.09it/s]Running loglikelihood requests:  35%|███▍      | 19533/56168 [01:48<01:57, 312.81it/s]Running loglikelihood requests:  35%|███▍      | 19597/56168 [01:48<01:56, 312.97it/s]Running loglikelihood requests:  35%|███▌      | 19661/56168 [01:48<01:56, 312.95it/s]Running loglikelihood requests:  35%|███▌      | 19725/56168 [01:48<01:56, 313.03it/s]Running loglikelihood requests:  35%|███▌      | 19789/56168 [01:49<01:55, 313.70it/s]Running loglikelihood requests:  35%|███▌      | 19853/56168 [01:49<01:55, 314.00it/s]Running loglikelihood requests:  35%|███▌      | 19917/56168 [01:49<01:55, 313.71it/s]Running loglikelihood requests:  36%|███▌      | 19981/56168 [01:49<01:55, 314.05it/s]Running loglikelihood requests:  36%|███▌      | 20045/56168 [01:49<01:54, 314.48it/s]Running loglikelihood requests:  36%|███▌      | 20113/56168 [01:50<01:52, 319.98it/s]Running loglikelihood requests:  36%|███▌      | 20177/56168 [01:50<01:53, 318.36it/s]Running loglikelihood requests:  36%|███▌      | 20241/56168 [01:50<01:53, 317.20it/s]Running loglikelihood requests:  36%|███▌      | 20305/56168 [01:50<01:53, 316.76it/s]Running loglikelihood requests:  36%|███▋      | 20369/56168 [01:50<01:53, 316.70it/s]Running loglikelihood requests:  36%|███▋      | 20433/56168 [01:51<01:52, 316.41it/s]Running loglikelihood requests:  36%|███▋      | 20497/56168 [01:51<01:52, 316.48it/s]Running loglikelihood requests:  37%|███▋      | 20561/56168 [01:51<01:52, 316.37it/s]Running loglikelihood requests:  37%|███▋      | 20625/56168 [01:51<01:52, 316.88it/s]Running loglikelihood requests:  37%|███▋      | 20689/56168 [01:51<01:51, 316.80it/s]Running loglikelihood requests:  37%|███▋      | 20757/56168 [01:52<01:49, 322.70it/s]Running loglikelihood requests:  37%|███▋      | 20821/56168 [01:52<01:50, 320.85it/s]Running loglikelihood requests:  37%|███▋      | 20885/56168 [01:52<01:50, 319.81it/s]Running loglikelihood requests:  37%|███▋      | 20949/56168 [01:52<01:50, 319.50it/s]Running loglikelihood requests:  37%|███▋      | 21013/56168 [01:52<01:50, 319.24it/s]Running loglikelihood requests:  38%|███▊      | 21077/56168 [01:53<01:50, 318.77it/s]Running loglikelihood requests:  38%|███▊      | 21141/56168 [01:53<01:49, 318.70it/s]Running loglikelihood requests:  38%|███▊      | 21205/56168 [01:53<01:49, 318.89it/s]Running loglikelihood requests:  38%|███▊      | 21269/56168 [01:53<01:49, 319.14it/s]Running loglikelihood requests:  38%|███▊      | 21333/56168 [01:53<01:49, 319.39it/s]Running loglikelihood requests:  38%|███▊      | 21401/56168 [01:54<01:46, 325.26it/s]Running loglikelihood requests:  38%|███▊      | 21465/56168 [01:54<01:47, 322.91it/s]Running loglikelihood requests:  38%|███▊      | 21529/56168 [01:54<01:43, 333.22it/s]Running loglikelihood requests:  38%|███▊      | 21593/56168 [01:54<01:41, 340.85it/s]Running loglikelihood requests:  39%|███▊      | 21657/56168 [01:54<01:39, 346.55it/s]Running loglikelihood requests:  39%|███▊      | 21721/56168 [01:54<01:38, 350.05it/s]Running loglikelihood requests:  39%|███▉      | 21785/56168 [01:55<01:37, 353.16it/s]Running loglikelihood requests:  39%|███▉      | 21849/56168 [01:55<01:36, 355.36it/s]Running loglikelihood requests:  39%|███▉      | 21913/56168 [01:55<01:35, 357.24it/s]Running loglikelihood requests:  39%|███▉      | 21977/56168 [01:55<01:35, 358.85it/s]Running loglikelihood requests:  39%|███▉      | 22041/56168 [01:55<01:34, 359.84it/s]Running loglikelihood requests:  39%|███▉      | 22105/56168 [01:56<01:34, 360.57it/s]Running loglikelihood requests:  39%|███▉      | 22169/56168 [01:56<01:34, 360.95it/s]Running loglikelihood requests:  40%|███▉      | 22233/56168 [01:56<01:33, 361.36it/s]Running loglikelihood requests:  40%|███▉      | 22297/56168 [01:56<01:33, 361.75it/s]Running loglikelihood requests:  40%|███▉      | 22361/56168 [01:56<01:33, 361.76it/s]Running loglikelihood requests:  40%|███▉      | 22425/56168 [01:56<01:33, 362.35it/s]Running loglikelihood requests:  40%|████      | 22489/56168 [01:57<01:32, 362.71it/s]Running loglikelihood requests:  40%|████      | 22553/56168 [01:57<01:32, 362.95it/s]Running loglikelihood requests:  40%|████      | 22617/56168 [01:57<01:32, 362.66it/s]Running loglikelihood requests:  40%|████      | 22681/56168 [01:57<01:32, 363.31it/s]Running loglikelihood requests:  40%|████      | 22745/56168 [01:57<01:31, 363.85it/s]Running loglikelihood requests:  41%|████      | 22813/56168 [01:57<01:30, 370.48it/s]Running loglikelihood requests:  41%|████      | 22877/56168 [01:58<01:30, 368.26it/s]Running loglikelihood requests:  41%|████      | 22945/56168 [01:58<01:28, 373.73it/s]Running loglikelihood requests:  41%|████      | 23009/56168 [01:58<01:29, 371.43it/s]Running loglikelihood requests:  41%|████      | 23073/56168 [01:58<01:29, 369.52it/s]Running loglikelihood requests:  41%|████      | 23137/56168 [01:58<01:29, 368.32it/s]Running loglikelihood requests:  41%|████▏     | 23201/56168 [01:59<01:29, 367.81it/s]Running loglikelihood requests:  41%|████▏     | 23265/56168 [01:59<01:29, 366.62it/s]Running loglikelihood requests:  42%|████▏     | 23329/56168 [01:59<01:29, 366.77it/s]Running loglikelihood requests:  42%|████▏     | 23393/56168 [01:59<01:29, 366.62it/s]Running loglikelihood requests:  42%|████▏     | 23457/56168 [01:59<01:29, 366.66it/s]Running loglikelihood requests:  42%|████▏     | 23521/56168 [01:59<01:28, 366.82it/s]Running loglikelihood requests:  42%|████▏     | 23585/56168 [02:00<01:28, 366.96it/s]Running loglikelihood requests:  42%|████▏     | 23649/56168 [02:00<01:28, 367.15it/s]Running loglikelihood requests:  42%|████▏     | 23713/56168 [02:00<01:28, 367.46it/s]Running loglikelihood requests:  42%|████▏     | 23777/56168 [02:00<01:28, 367.60it/s]Running loglikelihood requests:  42%|████▏     | 23841/56168 [02:00<01:27, 367.70it/s]Running loglikelihood requests:  43%|████▎     | 23905/56168 [02:00<01:27, 368.09it/s]Running loglikelihood requests:  43%|████▎     | 23969/56168 [02:01<01:27, 369.83it/s]Running loglikelihood requests:  43%|████▎     | 24033/56168 [02:01<01:26, 371.58it/s]Running loglikelihood requests:  43%|████▎     | 24097/56168 [02:01<01:26, 372.28it/s]Running loglikelihood requests:  43%|████▎     | 24161/56168 [02:01<01:25, 373.18it/s]Running loglikelihood requests:  43%|████▎     | 24225/56168 [02:01<01:25, 373.76it/s]Running loglikelihood requests:  43%|████▎     | 24289/56168 [02:01<01:25, 374.78it/s]Running loglikelihood requests:  43%|████▎     | 24353/56168 [02:02<01:24, 375.07it/s]Running loglikelihood requests:  43%|████▎     | 24417/56168 [02:02<01:24, 375.13it/s]Running loglikelihood requests:  44%|████▎     | 24481/56168 [02:02<01:24, 375.30it/s]Running loglikelihood requests:  44%|████▎     | 24545/56168 [02:02<01:24, 375.33it/s]Running loglikelihood requests:  44%|████▍     | 24609/56168 [02:02<01:24, 375.53it/s]Running loglikelihood requests:  44%|████▍     | 24673/56168 [02:03<01:23, 375.89it/s]Running loglikelihood requests:  44%|████▍     | 24737/56168 [02:03<01:23, 376.49it/s]Running loglikelihood requests:  44%|████▍     | 24801/56168 [02:03<01:23, 376.74it/s]Running loglikelihood requests:  44%|████▍     | 24865/56168 [02:03<01:23, 377.02it/s]Running loglikelihood requests:  44%|████▍     | 24933/56168 [02:03<01:21, 383.80it/s]Running loglikelihood requests:  45%|████▍     | 24997/56168 [02:03<01:21, 381.25it/s]Running loglikelihood requests:  45%|████▍     | 25061/56168 [02:04<01:21, 380.21it/s]Running loglikelihood requests:  45%|████▍     | 25125/56168 [02:04<01:21, 379.70it/s]Running loglikelihood requests:  45%|████▍     | 25189/56168 [02:04<01:21, 379.38it/s]Running loglikelihood requests:  45%|████▍     | 25253/56168 [02:04<01:21, 378.83it/s]Running loglikelihood requests:  45%|████▌     | 25317/56168 [02:04<01:21, 378.56it/s]Running loglikelihood requests:  45%|████▌     | 25381/56168 [02:04<01:21, 378.45it/s]Running loglikelihood requests:  45%|████▌     | 25445/56168 [02:05<01:21, 378.56it/s]Running loglikelihood requests:  45%|████▌     | 25509/56168 [02:05<01:20, 378.59it/s]Running loglikelihood requests:  46%|████▌     | 25573/56168 [02:05<01:20, 378.97it/s]Running loglikelihood requests:  46%|████▌     | 25637/56168 [02:05<01:20, 379.02it/s]Running loglikelihood requests:  46%|████▌     | 25701/56168 [02:05<01:20, 379.41it/s]Running loglikelihood requests:  46%|████▌     | 25765/56168 [02:05<01:20, 379.48it/s]Running loglikelihood requests:  46%|████▌     | 25829/56168 [02:06<01:19, 379.79it/s]Running loglikelihood requests:  46%|████▌     | 25893/56168 [02:06<01:19, 380.48it/s]Running loglikelihood requests:  46%|████▌     | 25957/56168 [02:06<01:19, 380.76it/s]Running loglikelihood requests:  46%|████▋     | 26021/56168 [02:06<01:19, 380.35it/s]Running loglikelihood requests:  46%|████▋     | 26085/56168 [02:06<01:19, 380.74it/s]Running loglikelihood requests:  47%|████▋     | 26149/56168 [02:06<01:18, 381.11it/s]Running loglikelihood requests:  47%|████▋     | 26213/56168 [02:07<01:18, 380.50it/s]Running loglikelihood requests:  47%|████▋     | 26277/56168 [02:07<01:18, 381.06it/s]Running loglikelihood requests:  47%|████▋     | 26341/56168 [02:07<01:18, 381.85it/s]Running loglikelihood requests:  47%|████▋     | 26405/56168 [02:07<01:17, 381.82it/s]Running loglikelihood requests:  47%|████▋     | 26469/56168 [02:07<01:17, 381.76it/s]Running loglikelihood requests:  47%|████▋     | 26533/56168 [02:07<01:17, 382.69it/s]Running loglikelihood requests:  47%|████▋     | 26597/56168 [02:08<01:17, 382.37it/s]Running loglikelihood requests:  47%|████▋     | 26661/56168 [02:08<01:17, 382.52it/s]Running loglikelihood requests:  48%|████▊     | 26725/56168 [02:08<01:16, 382.83it/s]Running loglikelihood requests:  48%|████▊     | 26789/56168 [02:08<01:16, 383.88it/s]Running loglikelihood requests:  48%|████▊     | 26853/56168 [02:08<01:16, 383.57it/s]Running loglikelihood requests:  48%|████▊     | 26917/56168 [02:08<01:16, 383.81it/s]Running loglikelihood requests:  48%|████▊     | 26981/56168 [02:09<01:15, 384.20it/s]Running loglikelihood requests:  48%|████▊     | 27045/56168 [02:09<01:15, 384.39it/s]Running loglikelihood requests:  48%|████▊     | 27109/56168 [02:09<01:14, 390.37it/s]Running loglikelihood requests:  48%|████▊     | 27173/56168 [02:09<01:13, 395.37it/s]Running loglikelihood requests:  48%|████▊     | 27237/56168 [02:09<01:12, 398.57it/s]Running loglikelihood requests:  49%|████▊     | 27301/56168 [02:09<01:11, 401.00it/s]Running loglikelihood requests:  49%|████▊     | 27365/56168 [02:10<01:11, 402.52it/s]Running loglikelihood requests:  49%|████▉     | 27429/56168 [02:10<01:11, 403.53it/s]Running loglikelihood requests:  49%|████▉     | 27493/56168 [02:10<01:10, 405.62it/s]Running loglikelihood requests:  49%|████▉     | 27557/56168 [02:10<01:10, 407.02it/s]Running loglikelihood requests:  49%|████▉     | 27621/56168 [02:10<01:10, 407.43it/s]Running loglikelihood requests:  49%|████▉     | 27685/56168 [02:10<01:09, 408.02it/s]Running loglikelihood requests:  49%|████▉     | 27753/56168 [02:10<01:08, 416.27it/s]Running loglikelihood requests:  50%|████▉     | 27817/56168 [02:11<01:08, 414.36it/s]Running loglikelihood requests:  50%|████▉     | 27881/56168 [02:11<01:08, 412.99it/s]Running loglikelihood requests:  50%|████▉     | 27945/56168 [02:11<01:08, 411.87it/s]Running loglikelihood requests:  50%|████▉     | 28009/56168 [02:11<01:08, 412.19it/s]Running loglikelihood requests:  50%|████▉     | 28073/56168 [02:11<01:08, 411.45it/s]Running loglikelihood requests:  50%|█████     | 28141/56168 [02:11<01:06, 418.83it/s]Running loglikelihood requests:  50%|█████     | 28205/56168 [02:12<01:07, 416.93it/s]Running loglikelihood requests:  50%|█████     | 28269/56168 [02:12<01:07, 415.57it/s]Running loglikelihood requests:  50%|█████     | 28333/56168 [02:12<01:07, 413.46it/s]Running loglikelihood requests:  51%|█████     | 28397/56168 [02:12<01:07, 412.71it/s]Running loglikelihood requests:  51%|█████     | 28461/56168 [02:12<01:07, 412.49it/s]Running loglikelihood requests:  51%|█████     | 28525/56168 [02:12<01:07, 411.29it/s]Running loglikelihood requests:  51%|█████     | 28589/56168 [02:12<01:07, 410.01it/s]Running loglikelihood requests:  51%|█████     | 28653/56168 [02:13<01:07, 409.06it/s]Running loglikelihood requests:  51%|█████     | 28717/56168 [02:13<01:07, 408.50it/s]Running loglikelihood requests:  51%|█████     | 28781/56168 [02:13<01:07, 408.67it/s]Running loglikelihood requests:  51%|█████▏    | 28845/56168 [02:13<01:06, 408.83it/s]Running loglikelihood requests:  51%|█████▏    | 28909/56168 [02:13<01:06, 408.28it/s]Running loglikelihood requests:  52%|█████▏    | 28973/56168 [02:13<01:06, 408.24it/s]Running loglikelihood requests:  52%|█████▏    | 29037/56168 [02:14<01:06, 408.93it/s]Running loglikelihood requests:  52%|█████▏    | 29101/56168 [02:14<01:06, 409.12it/s]Running loglikelihood requests:  52%|█████▏    | 29165/56168 [02:14<01:05, 409.35it/s]Running loglikelihood requests:  52%|█████▏    | 29229/56168 [02:14<01:05, 409.84it/s]Running loglikelihood requests:  52%|█████▏    | 29293/56168 [02:14<01:05, 409.89it/s]Running loglikelihood requests:  52%|█████▏    | 29357/56168 [02:14<01:05, 410.64it/s]Running loglikelihood requests:  52%|█████▏    | 29421/56168 [02:15<01:05, 410.97it/s]Running loglikelihood requests:  52%|█████▏    | 29485/56168 [02:15<01:04, 411.39it/s]Running loglikelihood requests:  53%|█████▎    | 29549/56168 [02:15<01:04, 411.49it/s]Running loglikelihood requests:  53%|█████▎    | 29613/56168 [02:15<01:04, 411.40it/s]Running loglikelihood requests:  53%|█████▎    | 29681/56168 [02:15<01:03, 418.52it/s]Running loglikelihood requests:  53%|█████▎    | 29745/56168 [02:15<01:03, 416.58it/s]Running loglikelihood requests:  53%|█████▎    | 29809/56168 [02:15<01:03, 414.94it/s]Running loglikelihood requests:  53%|█████▎    | 29873/56168 [02:16<01:03, 414.45it/s]Running loglikelihood requests:  53%|█████▎    | 29937/56168 [02:16<01:03, 414.22it/s]Running loglikelihood requests:  53%|█████▎    | 30001/56168 [02:16<01:03, 413.67it/s]Running loglikelihood requests:  54%|█████▎    | 30065/56168 [02:16<01:03, 413.05it/s]Running loglikelihood requests:  54%|█████▎    | 30129/56168 [02:16<01:03, 412.74it/s]Running loglikelihood requests:  54%|█████▍    | 30193/56168 [02:16<01:02, 413.38it/s]Running loglikelihood requests:  54%|█████▍    | 30257/56168 [02:17<01:02, 413.58it/s]Running loglikelihood requests:  54%|█████▍    | 30321/56168 [02:17<01:02, 413.36it/s]Running loglikelihood requests:  54%|█████▍    | 30385/56168 [02:17<01:02, 414.10it/s]Running loglikelihood requests:  54%|█████▍    | 30449/56168 [02:17<01:02, 414.20it/s]Running loglikelihood requests:  54%|█████▍    | 30513/56168 [02:17<01:01, 413.92it/s]Running loglikelihood requests:  54%|█████▍    | 30577/56168 [02:17<01:01, 414.43it/s]Running loglikelihood requests:  55%|█████▍    | 30641/56168 [02:17<01:01, 414.00it/s]Running loglikelihood requests:  55%|█████▍    | 30705/56168 [02:18<01:01, 414.13it/s]Running loglikelihood requests:  55%|█████▍    | 30769/56168 [02:18<01:01, 414.34it/s]Running loglikelihood requests:  55%|█████▍    | 30833/56168 [02:18<01:01, 413.73it/s]Running loglikelihood requests:  55%|█████▌    | 30897/56168 [02:18<01:00, 419.41it/s]Running loglikelihood requests:  55%|█████▌    | 30961/56168 [02:18<00:59, 423.13it/s]Running loglikelihood requests:  55%|█████▌    | 31025/56168 [02:18<00:58, 426.40it/s]Running loglikelihood requests:  55%|█████▌    | 31089/56168 [02:19<00:58, 428.33it/s]Running loglikelihood requests:  55%|█████▌    | 31153/56168 [02:19<00:58, 429.09it/s]Running loglikelihood requests:  56%|█████▌    | 31217/56168 [02:19<00:57, 430.20it/s]Running loglikelihood requests:  56%|█████▌    | 31281/56168 [02:19<00:57, 430.98it/s]Running loglikelihood requests:  56%|█████▌    | 31345/56168 [02:19<00:57, 431.90it/s]Running loglikelihood requests:  56%|█████▌    | 31409/56168 [02:19<00:57, 432.86it/s]Running loglikelihood requests:  56%|█████▌    | 31477/56168 [02:19<00:55, 441.38it/s]Running loglikelihood requests:  56%|█████▌    | 31541/56168 [02:20<00:56, 439.33it/s]Running loglikelihood requests:  56%|█████▋    | 31605/56168 [02:20<00:56, 437.62it/s]Running loglikelihood requests:  56%|█████▋    | 31669/56168 [02:20<00:56, 436.91it/s]Running loglikelihood requests:  56%|█████▋    | 31733/56168 [02:20<00:55, 436.35it/s]Running loglikelihood requests:  57%|█████▋    | 31797/56168 [02:20<00:55, 435.57it/s]Running loglikelihood requests:  57%|█████▋    | 31861/56168 [02:20<00:55, 436.35it/s]Running loglikelihood requests:  57%|█████▋    | 31925/56168 [02:20<00:55, 436.69it/s]Running loglikelihood requests:  57%|█████▋    | 31989/56168 [02:21<00:55, 436.35it/s]Running loglikelihood requests:  57%|█████▋    | 32053/56168 [02:21<00:55, 436.50it/s]Running loglikelihood requests:  57%|█████▋    | 32117/56168 [02:21<00:55, 436.88it/s]Running loglikelihood requests:  57%|█████▋    | 32185/56168 [02:21<00:53, 444.71it/s]Running loglikelihood requests:  57%|█████▋    | 32249/56168 [02:21<00:54, 442.03it/s]Running loglikelihood requests:  58%|█████▊    | 32313/56168 [02:21<00:54, 440.54it/s]Running loglikelihood requests:  58%|█████▊    | 32377/56168 [02:21<00:54, 439.82it/s]Running loglikelihood requests:  58%|█████▊    | 32441/56168 [02:22<00:53, 439.40it/s]Running loglikelihood requests:  58%|█████▊    | 32505/56168 [02:22<00:53, 438.83it/s]Running loglikelihood requests:  58%|█████▊    | 32569/56168 [02:22<00:53, 438.52it/s]Running loglikelihood requests:  58%|█████▊    | 32633/56168 [02:22<00:53, 438.65it/s]Running loglikelihood requests:  58%|█████▊    | 32697/56168 [02:22<00:53, 438.21it/s]Running loglikelihood requests:  58%|█████▊    | 32761/56168 [02:22<00:53, 437.53it/s]Running loglikelihood requests:  58%|█████▊    | 32825/56168 [02:22<00:53, 438.09it/s]Running loglikelihood requests:  59%|█████▊    | 32889/56168 [02:23<00:53, 438.27it/s]Running loglikelihood requests:  59%|█████▊    | 32953/56168 [02:23<00:52, 438.71it/s]Running loglikelihood requests:  59%|█████▉    | 33017/56168 [02:23<00:52, 438.30it/s]Running loglikelihood requests:  59%|█████▉    | 33081/56168 [02:23<00:52, 438.95it/s]Running loglikelihood requests:  59%|█████▉    | 33145/56168 [02:23<00:52, 439.69it/s]Running loglikelihood requests:  59%|█████▉    | 33209/56168 [02:23<00:52, 439.97it/s]Running loglikelihood requests:  59%|█████▉    | 33273/56168 [02:23<00:52, 439.62it/s]Running loglikelihood requests:  59%|█████▉    | 33337/56168 [02:24<00:51, 439.57it/s]Running loglikelihood requests:  59%|█████▉    | 33401/56168 [02:24<00:51, 439.71it/s]Running loglikelihood requests:  60%|█████▉    | 33465/56168 [02:24<00:51, 438.99it/s]Running loglikelihood requests:  60%|█████▉    | 33529/56168 [02:24<00:51, 438.58it/s]Running loglikelihood requests:  60%|█████▉    | 33593/56168 [02:24<00:51, 438.89it/s]Running loglikelihood requests:  60%|█████▉    | 33657/56168 [02:24<00:51, 440.07it/s]Running loglikelihood requests:  60%|██████    | 33721/56168 [02:25<00:50, 440.87it/s]Running loglikelihood requests:  60%|██████    | 33785/56168 [02:25<00:50, 442.26it/s]Running loglikelihood requests:  60%|██████    | 33849/56168 [02:25<00:50, 442.69it/s]Running loglikelihood requests:  60%|██████    | 33913/56168 [02:25<00:50, 442.86it/s]Running loglikelihood requests:  60%|██████    | 33977/56168 [02:25<00:50, 443.50it/s]Running loglikelihood requests:  61%|██████    | 34045/56168 [02:25<00:49, 450.89it/s]Running loglikelihood requests:  61%|██████    | 34109/56168 [02:25<00:49, 449.38it/s]Running loglikelihood requests:  61%|██████    | 34173/56168 [02:26<00:49, 447.99it/s]Running loglikelihood requests:  61%|██████    | 34237/56168 [02:26<00:48, 448.17it/s]Running loglikelihood requests:  61%|██████    | 34301/56168 [02:26<00:48, 447.98it/s]Running loglikelihood requests:  61%|██████    | 34365/56168 [02:26<00:48, 447.16it/s]Running loglikelihood requests:  61%|██████▏   | 34429/56168 [02:26<00:48, 447.37it/s]Running loglikelihood requests:  61%|██████▏   | 34493/56168 [02:26<00:48, 446.66it/s]Running loglikelihood requests:  62%|██████▏   | 34557/56168 [02:26<00:48, 446.31it/s]Running loglikelihood requests:  62%|██████▏   | 34621/56168 [02:27<00:48, 446.62it/s]Running loglikelihood requests:  62%|██████▏   | 34685/56168 [02:27<00:48, 446.00it/s]Running loglikelihood requests:  62%|██████▏   | 34749/56168 [02:27<00:48, 445.23it/s]Running loglikelihood requests:  62%|██████▏   | 34813/56168 [02:27<00:47, 446.92it/s]Running loglikelihood requests:  62%|██████▏   | 34877/56168 [02:27<00:47, 447.61it/s]Running loglikelihood requests:  62%|██████▏   | 34941/56168 [02:27<00:47, 447.45it/s]Running loglikelihood requests:  62%|██████▏   | 35005/56168 [02:27<00:47, 447.97it/s]Running loglikelihood requests:  62%|██████▏   | 35069/56168 [02:28<00:47, 448.16it/s]Running loglikelihood requests:  63%|██████▎   | 35133/56168 [02:28<00:46, 448.96it/s]Running loglikelihood requests:  63%|██████▎   | 35197/56168 [02:28<00:46, 447.94it/s]Running loglikelihood requests:  63%|██████▎   | 35261/56168 [02:28<00:46, 447.61it/s]Running loglikelihood requests:  63%|██████▎   | 35325/56168 [02:28<00:46, 447.96it/s]Running loglikelihood requests:  63%|██████▎   | 35389/56168 [02:28<00:46, 446.94it/s]Running loglikelihood requests:  63%|██████▎   | 35453/56168 [02:28<00:45, 456.29it/s]Running loglikelihood requests:  63%|██████▎   | 35517/56168 [02:29<00:44, 462.97it/s]Running loglikelihood requests:  63%|██████▎   | 35581/56168 [02:29<00:43, 467.90it/s]Running loglikelihood requests:  63%|██████▎   | 35645/56168 [02:29<00:43, 471.97it/s]Running loglikelihood requests:  64%|██████▎   | 35709/56168 [02:29<00:43, 474.17it/s]Running loglikelihood requests:  64%|██████▎   | 35773/56168 [02:29<00:42, 476.29it/s]Running loglikelihood requests:  64%|██████▍   | 35837/56168 [02:29<00:42, 478.23it/s]Running loglikelihood requests:  64%|██████▍   | 35901/56168 [02:29<00:42, 479.82it/s]Running loglikelihood requests:  64%|██████▍   | 35965/56168 [02:29<00:42, 479.06it/s]Running loglikelihood requests:  64%|██████▍   | 36029/56168 [02:30<00:41, 480.14it/s]Running loglikelihood requests:  64%|██████▍   | 36093/56168 [02:30<00:41, 480.46it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [02:30<00:40, 489.80it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [02:30<00:40, 487.51it/s]Running loglikelihood requests:  65%|██████▍   | 36289/56168 [02:30<00:40, 485.56it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [02:30<00:40, 485.37it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [02:30<00:40, 485.49it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [02:31<00:40, 486.05it/s]Running loglikelihood requests:  65%|██████▌   | 36545/56168 [02:31<00:40, 485.43it/s]Running loglikelihood requests:  65%|██████▌   | 36609/56168 [02:31<00:40, 484.88it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [02:31<00:40, 484.89it/s]Running loglikelihood requests:  65%|██████▌   | 36737/56168 [02:31<00:40, 485.61it/s]Running loglikelihood requests:  66%|██████▌   | 36805/56168 [02:31<00:39, 494.24it/s]Running loglikelihood requests:  66%|██████▌   | 36869/56168 [02:31<00:39, 491.34it/s]Running loglikelihood requests:  66%|██████▌   | 36933/56168 [02:31<00:39, 490.38it/s]Running loglikelihood requests:  66%|██████▌   | 36997/56168 [02:32<00:39, 488.28it/s]Running loglikelihood requests:  66%|██████▌   | 37061/56168 [02:32<00:39, 487.55it/s]Running loglikelihood requests:  66%|██████▌   | 37125/56168 [02:32<00:39, 487.18it/s]Running loglikelihood requests:  66%|██████▌   | 37189/56168 [02:32<00:38, 487.28it/s]Running loglikelihood requests:  66%|██████▋   | 37253/56168 [02:32<00:38, 486.40it/s]Running loglikelihood requests:  66%|██████▋   | 37317/56168 [02:32<00:38, 487.00it/s]Running loglikelihood requests:  67%|██████▋   | 37381/56168 [02:32<00:38, 486.22it/s]Running loglikelihood requests:  67%|██████▋   | 37445/56168 [02:32<00:38, 485.70it/s]Running loglikelihood requests:  67%|██████▋   | 37509/56168 [02:33<00:38, 485.73it/s]Running loglikelihood requests:  67%|██████▋   | 37573/56168 [02:33<00:38, 485.10it/s]Running loglikelihood requests:  67%|██████▋   | 37637/56168 [02:33<00:38, 484.82it/s]Running loglikelihood requests:  67%|██████▋   | 37701/56168 [02:33<00:38, 485.08it/s]Running loglikelihood requests:  67%|██████▋   | 37765/56168 [02:33<00:37, 485.52it/s]Running loglikelihood requests:  67%|██████▋   | 37829/56168 [02:33<00:37, 485.92it/s]Running loglikelihood requests:  67%|██████▋   | 37893/56168 [02:33<00:37, 485.73it/s]Running loglikelihood requests:  68%|██████▊   | 37957/56168 [02:34<00:37, 485.90it/s]Running loglikelihood requests:  68%|██████▊   | 38021/56168 [02:34<00:37, 486.39it/s]Running loglikelihood requests:  68%|██████▊   | 38085/56168 [02:34<00:37, 484.96it/s]Running loglikelihood requests:  68%|██████▊   | 38149/56168 [02:34<00:37, 486.52it/s]Running loglikelihood requests:  68%|██████▊   | 38213/56168 [02:34<00:36, 486.63it/s]Running loglikelihood requests:  68%|██████▊   | 38277/56168 [02:34<00:36, 486.17it/s]Running loglikelihood requests:  68%|██████▊   | 38341/56168 [02:34<00:36, 485.72it/s]Running loglikelihood requests:  68%|██████▊   | 38405/56168 [02:34<00:36, 485.92it/s]Running loglikelihood requests:  68%|██████▊   | 38469/56168 [02:35<00:36, 485.60it/s]Running loglikelihood requests:  69%|██████▊   | 38533/56168 [02:35<00:36, 485.83it/s]Running loglikelihood requests:  69%|██████▊   | 38597/56168 [02:35<00:36, 486.64it/s]Running loglikelihood requests:  69%|██████▉   | 38661/56168 [02:35<00:35, 487.33it/s]Running loglikelihood requests:  69%|██████▉   | 38725/56168 [02:35<00:35, 488.53it/s]Running loglikelihood requests:  69%|██████▉   | 38789/56168 [02:35<00:35, 489.22it/s]Running loglikelihood requests:  69%|██████▉   | 38853/56168 [02:35<00:35, 488.39it/s]Running loglikelihood requests:  69%|██████▉   | 38917/56168 [02:36<00:35, 488.56it/s]Running loglikelihood requests:  69%|██████▉   | 38981/56168 [02:36<00:35, 487.36it/s]Running loglikelihood requests:  70%|██████▉   | 39045/56168 [02:36<00:35, 487.84it/s]Running loglikelihood requests:  70%|██████▉   | 39109/56168 [02:36<00:35, 487.40it/s]Running loglikelihood requests:  70%|██████▉   | 39173/56168 [02:36<00:34, 488.10it/s]Running loglikelihood requests:  70%|██████▉   | 39237/56168 [02:36<00:34, 488.14it/s]Running loglikelihood requests:  70%|██████▉   | 39301/56168 [02:36<00:34, 487.93it/s]Running loglikelihood requests:  70%|███████   | 39365/56168 [02:36<00:34, 487.53it/s]Running loglikelihood requests:  70%|███████   | 39429/56168 [02:37<00:34, 488.15it/s]Running loglikelihood requests:  70%|███████   | 39493/56168 [02:37<00:34, 488.24it/s]Running loglikelihood requests:  70%|███████   | 39557/56168 [02:37<00:34, 488.48it/s]Running loglikelihood requests:  71%|███████   | 39621/56168 [02:37<00:33, 487.90it/s]Running loglikelihood requests:  71%|███████   | 39685/56168 [02:37<00:33, 488.16it/s]Running loglikelihood requests:  71%|███████   | 39749/56168 [02:37<00:33, 488.49it/s]Running loglikelihood requests:  71%|███████   | 39813/56168 [02:37<00:33, 488.95it/s]Running loglikelihood requests:  71%|███████   | 39877/56168 [02:37<00:33, 488.43it/s]Running loglikelihood requests:  71%|███████   | 39941/56168 [02:38<00:33, 489.04it/s]Running loglikelihood requests:  71%|███████   | 40005/56168 [02:38<00:33, 489.27it/s]Running loglikelihood requests:  71%|███████▏  | 40069/56168 [02:38<00:32, 490.50it/s]Running loglikelihood requests:  71%|███████▏  | 40133/56168 [02:38<00:32, 490.90it/s]Running loglikelihood requests:  72%|███████▏  | 40201/56168 [02:38<00:31, 500.43it/s]Running loglikelihood requests:  72%|███████▏  | 40265/56168 [02:38<00:31, 497.40it/s]Running loglikelihood requests:  72%|███████▏  | 40329/56168 [02:38<00:31, 496.13it/s]Running loglikelihood requests:  72%|███████▏  | 40393/56168 [02:39<00:31, 495.83it/s]Running loglikelihood requests:  72%|███████▏  | 40457/56168 [02:39<00:31, 495.18it/s]Running loglikelihood requests:  72%|███████▏  | 40521/56168 [02:39<00:31, 495.09it/s]Running loglikelihood requests:  72%|███████▏  | 40585/56168 [02:39<00:31, 493.36it/s]Running loglikelihood requests:  72%|███████▏  | 40649/56168 [02:39<00:31, 492.65it/s]Running loglikelihood requests:  72%|███████▏  | 40713/56168 [02:39<00:31, 496.51it/s]Running loglikelihood requests:  73%|███████▎  | 40777/56168 [02:39<00:30, 500.47it/s]Running loglikelihood requests:  73%|███████▎  | 40841/56168 [02:39<00:30, 503.23it/s]Running loglikelihood requests:  73%|███████▎  | 40905/56168 [02:40<00:30, 504.91it/s]Running loglikelihood requests:  73%|███████▎  | 40969/56168 [02:40<00:30, 506.25it/s]Running loglikelihood requests:  73%|███████▎  | 41033/56168 [02:40<00:29, 507.75it/s]Running loglikelihood requests:  73%|███████▎  | 41097/56168 [02:40<00:29, 508.60it/s]Running loglikelihood requests:  73%|███████▎  | 41161/56168 [02:40<00:29, 509.22it/s]Running loglikelihood requests:  73%|███████▎  | 41225/56168 [02:40<00:29, 509.43it/s]Running loglikelihood requests:  74%|███████▎  | 41289/56168 [02:40<00:29, 508.86it/s]Running loglikelihood requests:  74%|███████▎  | 41353/56168 [02:40<00:29, 509.02it/s]Running loglikelihood requests:  74%|███████▎  | 41417/56168 [02:41<00:28, 510.99it/s]Running loglikelihood requests:  74%|███████▍  | 41481/56168 [02:41<00:28, 511.69it/s]Running loglikelihood requests:  74%|███████▍  | 41545/56168 [02:41<00:28, 512.01it/s]Running loglikelihood requests:  74%|███████▍  | 41609/56168 [02:41<00:28, 512.00it/s]Running loglikelihood requests:  74%|███████▍  | 41673/56168 [02:41<00:28, 511.95it/s]Running loglikelihood requests:  74%|███████▍  | 41737/56168 [02:41<00:28, 512.27it/s]Running loglikelihood requests:  74%|███████▍  | 41801/56168 [02:41<00:27, 513.45it/s]Running loglikelihood requests:  75%|███████▍  | 41865/56168 [02:41<00:27, 513.77it/s]Running loglikelihood requests:  75%|███████▍  | 41929/56168 [02:42<00:27, 513.02it/s]Running loglikelihood requests:  75%|███████▍  | 41993/56168 [02:42<00:27, 512.66it/s]Running loglikelihood requests:  75%|███████▍  | 42057/56168 [02:42<00:27, 513.24it/s]Running loglikelihood requests:  75%|███████▍  | 42121/56168 [02:42<00:27, 515.38it/s]Running loglikelihood requests:  75%|███████▌  | 42185/56168 [02:42<00:27, 515.53it/s]Running loglikelihood requests:  75%|███████▌  | 42249/56168 [02:42<00:27, 515.09it/s]Running loglikelihood requests:  75%|███████▌  | 42317/56168 [02:42<00:26, 523.67it/s]Running loglikelihood requests:  75%|███████▌  | 42381/56168 [02:42<00:26, 520.82it/s]Running loglikelihood requests:  76%|███████▌  | 42445/56168 [02:43<00:26, 518.58it/s]Running loglikelihood requests:  76%|███████▌  | 42509/56168 [02:43<00:26, 517.65it/s]Running loglikelihood requests:  76%|███████▌  | 42573/56168 [02:43<00:26, 517.40it/s]Running loglikelihood requests:  76%|███████▌  | 42641/56168 [02:43<00:25, 526.00it/s]Running loglikelihood requests:  76%|███████▌  | 42705/56168 [02:43<00:25, 522.10it/s]Running loglikelihood requests:  76%|███████▌  | 42769/56168 [02:43<00:25, 520.36it/s]Running loglikelihood requests:  76%|███████▋  | 42833/56168 [02:43<00:25, 518.43it/s]Running loglikelihood requests:  76%|███████▋  | 42897/56168 [02:43<00:25, 519.24it/s]Running loglikelihood requests:  76%|███████▋  | 42961/56168 [02:44<00:25, 518.94it/s]Running loglikelihood requests:  77%|███████▋  | 43025/56168 [02:44<00:25, 518.15it/s]Running loglikelihood requests:  77%|███████▋  | 43093/56168 [02:44<00:24, 527.39it/s]Running loglikelihood requests:  77%|███████▋  | 43157/56168 [02:44<00:24, 524.07it/s]Running loglikelihood requests:  77%|███████▋  | 43221/56168 [02:44<00:24, 523.29it/s]Running loglikelihood requests:  77%|███████▋  | 43285/56168 [02:44<00:24, 521.78it/s]Running loglikelihood requests:  77%|███████▋  | 43349/56168 [02:44<00:24, 520.30it/s]Running loglikelihood requests:  77%|███████▋  | 43413/56168 [02:44<00:24, 519.90it/s]Running loglikelihood requests:  77%|███████▋  | 43477/56168 [02:45<00:24, 520.30it/s]Running loglikelihood requests:  78%|███████▊  | 43541/56168 [02:45<00:24, 519.97it/s]Running loglikelihood requests:  78%|███████▊  | 43605/56168 [02:45<00:24, 519.10it/s]Running loglikelihood requests:  78%|███████▊  | 43669/56168 [02:45<00:24, 518.78it/s]Running loglikelihood requests:  78%|███████▊  | 43733/56168 [02:45<00:23, 518.17it/s]Running loglikelihood requests:  78%|███████▊  | 43797/56168 [02:45<00:23, 518.67it/s]Running loglikelihood requests:  78%|███████▊  | 43861/56168 [02:45<00:23, 519.30it/s]Running loglikelihood requests:  78%|███████▊  | 43925/56168 [02:45<00:23, 519.58it/s]Running loglikelihood requests:  78%|███████▊  | 43993/56168 [02:45<00:22, 530.11it/s]Running loglikelihood requests:  78%|███████▊  | 44057/56168 [02:46<00:22, 528.04it/s]Running loglikelihood requests:  79%|███████▊  | 44121/56168 [02:46<00:22, 526.97it/s]Running loglikelihood requests:  79%|███████▊  | 44185/56168 [02:46<00:22, 525.73it/s]Running loglikelihood requests:  79%|███████▉  | 44249/56168 [02:46<00:22, 524.50it/s]Running loglikelihood requests:  79%|███████▉  | 44313/56168 [02:46<00:22, 524.04it/s]Running loglikelihood requests:  79%|███████▉  | 44377/56168 [02:46<00:22, 523.07it/s]Running loglikelihood requests:  79%|███████▉  | 44441/56168 [02:46<00:22, 521.25it/s]Running loglikelihood requests:  79%|███████▉  | 44505/56168 [02:46<00:22, 521.55it/s]Running loglikelihood requests:  79%|███████▉  | 44569/56168 [02:47<00:22, 521.52it/s]Running loglikelihood requests:  79%|███████▉  | 44637/56168 [02:47<00:21, 531.53it/s]Running loglikelihood requests:  80%|███████▉  | 44701/56168 [02:47<00:21, 529.80it/s]Running loglikelihood requests:  80%|███████▉  | 44765/56168 [02:47<00:21, 529.38it/s]Running loglikelihood requests:  80%|███████▉  | 44829/56168 [02:47<00:21, 528.92it/s]Running loglikelihood requests:  80%|███████▉  | 44893/56168 [02:47<00:21, 527.85it/s]Running loglikelihood requests:  80%|████████  | 44957/56168 [02:47<00:21, 526.59it/s]Running loglikelihood requests:  80%|████████  | 45021/56168 [02:47<00:21, 526.22it/s]Running loglikelihood requests:  80%|████████  | 45085/56168 [02:48<00:21, 525.92it/s]Running loglikelihood requests:  80%|████████  | 45149/56168 [02:48<00:20, 525.93it/s]Running loglikelihood requests:  80%|████████  | 45213/56168 [02:48<00:20, 526.25it/s]Running loglikelihood requests:  81%|████████  | 45277/56168 [02:48<00:20, 525.95it/s]Running loglikelihood requests:  81%|████████  | 45341/56168 [02:48<00:20, 525.46it/s]Running loglikelihood requests:  81%|████████  | 45405/56168 [02:48<00:20, 526.46it/s]Running loglikelihood requests:  81%|████████  | 45469/56168 [02:48<00:20, 526.95it/s]Running loglikelihood requests:  81%|████████  | 45537/56168 [02:48<00:19, 537.16it/s]Running loglikelihood requests:  81%|████████  | 45601/56168 [02:49<00:19, 534.41it/s]Running loglikelihood requests:  81%|████████▏ | 45665/56168 [02:49<00:19, 532.79it/s]Running loglikelihood requests:  81%|████████▏ | 45729/56168 [02:49<00:19, 530.78it/s]Running loglikelihood requests:  82%|████████▏ | 45793/56168 [02:49<00:19, 530.32it/s]Running loglikelihood requests:  82%|████████▏ | 45857/56168 [02:49<00:19, 529.96it/s]Running loglikelihood requests:  82%|████████▏ | 45921/56168 [02:49<00:19, 529.83it/s]Running loglikelihood requests:  82%|████████▏ | 45985/56168 [02:49<00:19, 530.33it/s]Running loglikelihood requests:  82%|████████▏ | 46049/56168 [02:49<00:19, 530.63it/s]Running loglikelihood requests:  82%|████████▏ | 46113/56168 [02:50<00:18, 530.25it/s]Running loglikelihood requests:  82%|████████▏ | 46177/56168 [02:50<00:18, 528.99it/s]Running loglikelihood requests:  82%|████████▏ | 46241/56168 [02:50<00:18, 529.45it/s]Running loglikelihood requests:  82%|████████▏ | 46305/56168 [02:50<00:18, 530.02it/s]Running loglikelihood requests:  83%|████████▎ | 46369/56168 [02:50<00:18, 530.17it/s]Running loglikelihood requests:  83%|████████▎ | 46433/56168 [02:50<00:18, 531.08it/s]Running loglikelihood requests:  83%|████████▎ | 46497/56168 [02:50<00:18, 531.57it/s]Running loglikelihood requests:  83%|████████▎ | 46561/56168 [02:50<00:18, 532.01it/s]Running loglikelihood requests:  83%|████████▎ | 46625/56168 [02:50<00:17, 532.30it/s]Running loglikelihood requests:  83%|████████▎ | 46689/56168 [02:51<00:17, 531.71it/s]Running loglikelihood requests:  83%|████████▎ | 46753/56168 [02:51<00:17, 531.89it/s]Running loglikelihood requests:  83%|████████▎ | 46817/56168 [02:51<00:17, 531.64it/s]Running loglikelihood requests:  83%|████████▎ | 46881/56168 [02:51<00:17, 530.72it/s]Running loglikelihood requests:  84%|████████▎ | 46945/56168 [02:51<00:17, 530.52it/s]Running loglikelihood requests:  84%|████████▎ | 47009/56168 [02:51<00:17, 529.94it/s]Running loglikelihood requests:  84%|████████▍ | 47073/56168 [02:51<00:17, 529.77it/s]Running loglikelihood requests:  84%|████████▍ | 47137/56168 [02:51<00:16, 539.78it/s]Running loglikelihood requests:  84%|████████▍ | 47201/56168 [02:52<00:16, 545.17it/s]Running loglikelihood requests:  84%|████████▍ | 47265/56168 [02:52<00:16, 550.44it/s]Running loglikelihood requests:  84%|████████▍ | 47329/56168 [02:52<00:15, 554.79it/s]Running loglikelihood requests:  84%|████████▍ | 47393/56168 [02:52<00:15, 557.02it/s]Running loglikelihood requests:  84%|████████▍ | 47457/56168 [02:52<00:15, 558.27it/s]Running loglikelihood requests:  85%|████████▍ | 47521/56168 [02:52<00:15, 558.91it/s]Running loglikelihood requests:  85%|████████▍ | 47585/56168 [02:52<00:15, 559.81it/s]Running loglikelihood requests:  85%|████████▍ | 47649/56168 [02:52<00:15, 561.13it/s]Running loglikelihood requests:  85%|████████▍ | 47713/56168 [02:52<00:15, 560.59it/s]Running loglikelihood requests:  85%|████████▌ | 47777/56168 [02:53<00:14, 560.01it/s]Running loglikelihood requests:  85%|████████▌ | 47841/56168 [02:53<00:14, 561.24it/s]Running loglikelihood requests:  85%|████████▌ | 47905/56168 [02:53<00:14, 561.34it/s]Running loglikelihood requests:  85%|████████▌ | 47969/56168 [02:53<00:14, 561.90it/s]Running loglikelihood requests:  86%|████████▌ | 48033/56168 [02:53<00:14, 563.74it/s]Running loglikelihood requests:  86%|████████▌ | 48097/56168 [02:53<00:14, 562.63it/s]Running loglikelihood requests:  86%|████████▌ | 48161/56168 [02:53<00:14, 563.53it/s]Running loglikelihood requests:  86%|████████▌ | 48225/56168 [02:53<00:14, 563.87it/s]Running loglikelihood requests:  86%|████████▌ | 48289/56168 [02:53<00:13, 564.43it/s]Running loglikelihood requests:  86%|████████▌ | 48353/56168 [02:54<00:13, 565.73it/s]Running loglikelihood requests:  86%|████████▌ | 48417/56168 [02:54<00:13, 565.15it/s]Running loglikelihood requests:  86%|████████▋ | 48481/56168 [02:54<00:13, 565.13it/s]Running loglikelihood requests:  86%|████████▋ | 48545/56168 [02:54<00:13, 565.20it/s]Running loglikelihood requests:  87%|████████▋ | 48609/56168 [02:54<00:13, 564.63it/s]Running loglikelihood requests:  87%|████████▋ | 48673/56168 [02:54<00:13, 565.92it/s]Running loglikelihood requests:  87%|████████▋ | 48737/56168 [02:54<00:13, 565.20it/s]Running loglikelihood requests:  87%|████████▋ | 48801/56168 [02:54<00:13, 565.08it/s]Running loglikelihood requests:  87%|████████▋ | 48865/56168 [02:55<00:12, 564.36it/s]Running loglikelihood requests:  87%|████████▋ | 48929/56168 [02:55<00:12, 565.25it/s]Running loglikelihood requests:  87%|████████▋ | 48993/56168 [02:55<00:12, 566.57it/s]Running loglikelihood requests:  87%|████████▋ | 49057/56168 [02:55<00:12, 567.36it/s]Running loglikelihood requests:  87%|████████▋ | 49121/56168 [02:55<00:12, 567.57it/s]Running loglikelihood requests:  88%|████████▊ | 49185/56168 [02:55<00:12, 568.12it/s]Running loglikelihood requests:  88%|████████▊ | 49249/56168 [02:55<00:12, 567.96it/s]Running loglikelihood requests:  88%|████████▊ | 49313/56168 [02:55<00:12, 568.76it/s]Running loglikelihood requests:  88%|████████▊ | 49377/56168 [02:55<00:11, 567.22it/s]Running loglikelihood requests:  88%|████████▊ | 49441/56168 [02:56<00:11, 569.08it/s]Running loglikelihood requests:  88%|████████▊ | 49505/56168 [02:56<00:11, 568.39it/s]Running loglikelihood requests:  88%|████████▊ | 49569/56168 [02:56<00:11, 568.28it/s]Running loglikelihood requests:  88%|████████▊ | 49633/56168 [02:56<00:11, 568.38it/s]Running loglikelihood requests:  88%|████████▊ | 49697/56168 [02:56<00:11, 568.42it/s]Running loglikelihood requests:  89%|████████▊ | 49761/56168 [02:56<00:11, 568.53it/s]Running loglikelihood requests:  89%|████████▊ | 49825/56168 [02:56<00:11, 568.57it/s]Running loglikelihood requests:  89%|████████▉ | 49889/56168 [02:56<00:11, 569.74it/s]Running loglikelihood requests:  89%|████████▉ | 49953/56168 [02:56<00:10, 570.65it/s]Running loglikelihood requests:  89%|████████▉ | 50017/56168 [02:57<00:10, 571.38it/s]Running loglikelihood requests:  89%|████████▉ | 50081/56168 [02:57<00:10, 571.27it/s]Running loglikelihood requests:  89%|████████▉ | 50145/56168 [02:57<00:10, 570.99it/s]Running loglikelihood requests:  89%|████████▉ | 50209/56168 [02:57<00:10, 571.32it/s]Running loglikelihood requests:  90%|████████▉ | 50273/56168 [02:57<00:10, 570.13it/s]Running loglikelihood requests:  90%|████████▉ | 50337/56168 [02:57<00:10, 570.87it/s]Running loglikelihood requests:  90%|████████▉ | 50401/56168 [02:57<00:10, 570.17it/s]Running loglikelihood requests:  90%|████████▉ | 50465/56168 [02:57<00:10, 569.83it/s]Running loglikelihood requests:  90%|████████▉ | 50529/56168 [02:57<00:09, 572.24it/s]Running loglikelihood requests:  90%|█████████ | 50593/56168 [02:58<00:09, 574.20it/s]Running loglikelihood requests:  90%|█████████ | 50657/56168 [02:58<00:09, 574.58it/s]Running loglikelihood requests:  90%|█████████ | 50721/56168 [02:58<00:09, 576.00it/s]Running loglikelihood requests:  90%|█████████ | 50785/56168 [02:58<00:09, 576.20it/s]Running loglikelihood requests:  91%|█████████ | 50853/56168 [02:58<00:09, 586.80it/s]Running loglikelihood requests:  91%|█████████ | 50917/56168 [02:58<00:08, 584.23it/s]Running loglikelihood requests:  91%|█████████ | 50981/56168 [02:58<00:08, 582.41it/s]Running loglikelihood requests:  91%|█████████ | 51045/56168 [02:58<00:08, 580.43it/s]Running loglikelihood requests:  91%|█████████ | 51109/56168 [02:58<00:08, 580.68it/s]Running loglikelihood requests:  91%|█████████ | 51173/56168 [02:59<00:08, 579.04it/s]Running loglikelihood requests:  91%|█████████ | 51237/56168 [02:59<00:08, 579.64it/s]Running loglikelihood requests:  91%|█████████▏| 51301/56168 [02:59<00:08, 579.99it/s]Running loglikelihood requests:  91%|█████████▏| 51369/56168 [02:59<00:08, 591.66it/s]Running loglikelihood requests:  92%|█████████▏| 51433/56168 [02:59<00:08, 587.24it/s]Running loglikelihood requests:  92%|█████████▏| 51497/56168 [02:59<00:07, 585.63it/s]Running loglikelihood requests:  92%|█████████▏| 51561/56168 [02:59<00:07, 584.88it/s]Running loglikelihood requests:  92%|█████████▏| 51625/56168 [02:59<00:07, 584.97it/s]Running loglikelihood requests:  92%|█████████▏| 51689/56168 [02:59<00:07, 585.10it/s]Running loglikelihood requests:  92%|█████████▏| 51753/56168 [03:00<00:07, 584.41it/s]Running loglikelihood requests:  92%|█████████▏| 51817/56168 [03:00<00:07, 584.76it/s]Running loglikelihood requests:  92%|█████████▏| 51881/56168 [03:00<00:07, 583.90it/s]Running loglikelihood requests:  92%|█████████▏| 51945/56168 [03:00<00:07, 583.96it/s]Running loglikelihood requests:  93%|█████████▎| 52009/56168 [03:00<00:07, 583.14it/s]Running loglikelihood requests:  93%|█████████▎| 52077/56168 [03:00<00:06, 594.76it/s]Running loglikelihood requests:  93%|█████████▎| 52141/56168 [03:00<00:06, 592.38it/s]Running loglikelihood requests:  93%|█████████▎| 52205/56168 [03:00<00:06, 590.34it/s]Running loglikelihood requests:  93%|█████████▎| 52269/56168 [03:00<00:06, 589.83it/s]Running loglikelihood requests:  93%|█████████▎| 52333/56168 [03:01<00:06, 587.92it/s]Running loglikelihood requests:  93%|█████████▎| 52397/56168 [03:01<00:06, 587.49it/s]Running loglikelihood requests:  93%|█████████▎| 52461/56168 [03:01<00:06, 587.11it/s]Running loglikelihood requests:  94%|█████████▎| 52525/56168 [03:01<00:06, 586.74it/s]Running loglikelihood requests:  94%|█████████▎| 52589/56168 [03:01<00:06, 586.09it/s]Running loglikelihood requests:  94%|█████████▎| 52653/56168 [03:01<00:06, 584.92it/s]Running loglikelihood requests:  94%|█████████▍| 52717/56168 [03:01<00:05, 585.36it/s]Running loglikelihood requests:  94%|█████████▍| 52781/56168 [03:01<00:05, 585.30it/s]Running loglikelihood requests:  94%|█████████▍| 52845/56168 [03:01<00:05, 586.40it/s]Running loglikelihood requests:  94%|█████████▍| 52909/56168 [03:01<00:05, 587.26it/s]Running loglikelihood requests:  94%|█████████▍| 52973/56168 [03:02<00:05, 587.10it/s]Running loglikelihood requests:  94%|█████████▍| 53037/56168 [03:02<00:05, 588.32it/s]Running loglikelihood requests:  95%|█████████▍| 53101/56168 [03:02<00:05, 586.15it/s]Running loglikelihood requests:  95%|█████████▍| 53165/56168 [03:02<00:05, 586.26it/s]Running loglikelihood requests:  95%|█████████▍| 53229/56168 [03:02<00:05, 586.93it/s]Running loglikelihood requests:  95%|█████████▍| 53293/56168 [03:02<00:04, 586.08it/s]Running loglikelihood requests:  95%|█████████▌| 53381/56168 [03:02<00:04, 668.67it/s]Running loglikelihood requests:  95%|█████████▌| 53465/56168 [03:02<00:03, 717.47it/s]Running loglikelihood requests:  95%|█████████▌| 53549/56168 [03:03<00:04, 601.86it/s]Running loglikelihood requests:  95%|█████████▌| 53636/56168 [03:03<00:03, 668.62it/s]Running loglikelihood requests:  96%|█████████▌| 53723/56168 [03:03<00:03, 721.40it/s]Running loglikelihood requests:  96%|█████████▌| 53805/56168 [03:03<00:03, 605.62it/s]Running loglikelihood requests:  96%|█████████▌| 53889/56168 [03:03<00:03, 661.57it/s]Running loglikelihood requests:  96%|█████████▌| 53975/56168 [03:03<00:03, 712.09it/s]Running loglikelihood requests:  96%|█████████▌| 54061/56168 [03:03<00:03, 612.94it/s]Running loglikelihood requests:  96%|█████████▋| 54149/56168 [03:03<00:02, 676.00it/s]Running loglikelihood requests:  97%|█████████▋| 54239/56168 [03:04<00:02, 732.42it/s]Running loglikelihood requests:  97%|█████████▋| 54318/56168 [03:04<00:03, 610.83it/s]Running loglikelihood requests:  97%|█████████▋| 54405/56168 [03:04<00:02, 671.90it/s]Running loglikelihood requests:  97%|█████████▋| 54492/56168 [03:04<00:02, 721.92it/s]Running loglikelihood requests:  97%|█████████▋| 54573/56168 [03:04<00:02, 610.17it/s]Running loglikelihood requests:  97%|█████████▋| 54665/56168 [03:04<00:02, 683.45it/s]Running loglikelihood requests:  97%|█████████▋| 54756/56168 [03:04<00:01, 740.56it/s]Running loglikelihood requests:  98%|█████████▊| 54836/56168 [03:04<00:02, 619.74it/s]Running loglikelihood requests:  98%|█████████▊| 54928/56168 [03:05<00:01, 690.84it/s]Running loglikelihood requests:  98%|█████████▊| 55021/56168 [03:05<00:01, 620.19it/s]Running loglikelihood requests:  98%|█████████▊| 55117/56168 [03:05<00:01, 697.97it/s]Running loglikelihood requests:  98%|█████████▊| 55213/56168 [03:05<00:01, 631.46it/s]Running loglikelihood requests:  98%|█████████▊| 55313/56168 [03:05<00:01, 714.67it/s]Running loglikelihood requests:  99%|█████████▊| 55405/56168 [03:05<00:01, 637.35it/s]Running loglikelihood requests:  99%|█████████▉| 55505/56168 [03:05<00:00, 718.70it/s]Running loglikelihood requests:  99%|█████████▉| 55597/56168 [03:06<00:00, 639.73it/s]Running loglikelihood requests:  99%|█████████▉| 55703/56168 [03:06<00:00, 734.12it/s]Running loglikelihood requests:  99%|█████████▉| 55789/56168 [03:06<00:00, 641.00it/s]Running loglikelihood requests: 100%|█████████▉| 55896/56168 [03:06<00:00, 737.50it/s]Running loglikelihood requests: 100%|█████████▉| 55981/56168 [03:06<00:00, 642.01it/s]Running loglikelihood requests: 100%|█████████▉| 56109/56168 [03:06<00:00, 686.87it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [03:06<00:00, 300.65it/s]
2025-05-13:22:36:25,930 WARNING  [huggingface.py:1353] Failed to get model SHA for /work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo_kl/checkpoint-150 at revision main. Error: Repo id must be in the form 'repo_name' or 'namespace/repo_name': '/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo_kl/checkpoint-150'. Use `repo_type` argument if needed.
2025-05-13:22:36:32,089 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=/work1/shengyua/unlearn_benchmark/unlearn_models/rwku_npo_kl/checkpoint-150,tokenizer=meta-llama/Meta-Llama-3-8b-Instruct), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.6387|±  |0.0038|
| - humanities                          |      2|none  |      |acc   |↑  |0.5838|±  |0.0068|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.4841|±  |0.0447|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.7212|±  |0.0350|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.8137|±  |0.0273|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.8354|±  |0.0241|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.7438|±  |0.0398|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.7685|±  |0.0408|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.7546|±  |0.0338|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6734|±  |0.0252|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.3777|±  |0.0162|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6945|±  |0.0262|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.7469|±  |0.0242|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4837|±  |0.0128|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.7953|±  |0.0309|
| - other                               |      2|none  |      |acc   |↑  |0.7219|±  |0.0078|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.6500|±  |0.0479|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.7396|±  |0.0270|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.6763|±  |0.0357|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.4300|±  |0.0498|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6726|±  |0.0315|
|  - management                         |      1|none  |     0|acc   |↑  |0.8350|±  |0.0368|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8974|±  |0.0199|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.8200|±  |0.0386|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.8161|±  |0.0139|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.7320|±  |0.0254|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.5390|±  |0.0297|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.7243|±  |0.0271|
|  - virology                           |      1|none  |     0|acc   |↑  |0.4940|±  |0.0389|
| - social sciences                     |      2|none  |      |acc   |↑  |0.7403|±  |0.0078|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.5351|±  |0.0469|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7879|±  |0.0291|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8653|±  |0.0246|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.6256|±  |0.0245|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.7311|±  |0.0288|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.8257|±  |0.0163|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7481|±  |0.0381|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.6895|±  |0.0187|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6818|±  |0.0446|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.7143|±  |0.0289|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8607|±  |0.0245|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8300|±  |0.0378|
| - stem                                |      2|none  |      |acc   |↑  |0.5395|±  |0.0086|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.3200|±  |0.0469|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.6222|±  |0.0419|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.7039|±  |0.0372|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.7431|±  |0.0365|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4400|±  |0.0499|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.4600|±  |0.0501|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3500|±  |0.0479|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5000|±  |0.0498|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.7400|±  |0.0441|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.5447|±  |0.0326|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.6000|±  |0.0408|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4630|±  |0.0257|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7548|±  |0.0245|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.4729|±  |0.0351|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.7200|±  |0.0451|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.3667|±  |0.0294|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.4371|±  |0.0405|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.5093|±  |0.0341|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.4821|±  |0.0474|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.6387|±  |0.0038|
| - humanities     |      2|none  |      |acc   |↑  |0.5838|±  |0.0068|
| - other          |      2|none  |      |acc   |↑  |0.7219|±  |0.0078|
| - social sciences|      2|none  |      |acc   |↑  |0.7403|±  |0.0078|
| - stem           |      2|none  |      |acc   |↑  |0.5395|±  |0.0086|

2025-05-13:22:36:38,594 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-13:22:36:38,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,751 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,812 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,830 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,833 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,842 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:38,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,615 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,623 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,630 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,660 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,664 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,669 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,673 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,678 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,694 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,714 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,718 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:39,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,535 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,880 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,881 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,883 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,885 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,921 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,955 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,959 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,977 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,984 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:40,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,003 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,034 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,041 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,056 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,064 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,075 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,079 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,098 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,110 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,114 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,118 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,241 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,247 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,256 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,264 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,267 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,269 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,279 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,282 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,285 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,287 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,290 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,293 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,298 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,301 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,308 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,311 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,314 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,316 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,319 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,327 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,334 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,337 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,342 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,347 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,349 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,354 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,357 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,364 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,366 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,369 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,371 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,377 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,380 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,388 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,409 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,423 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,452 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:41,467 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:42,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:42,538 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:42,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:42,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:42,545 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:42,547 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:42,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:42,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,486 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,492 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,496 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,528 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,535 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,550 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,553 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,561 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,566 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,571 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,581 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,588 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,597 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,599 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,608 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,615 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,618 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,630 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,635 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,637 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,639 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,648 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,649 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,653 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,657 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,661 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,663 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,665 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,666 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,672 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,674 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,676 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,677 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,681 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,686 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,688 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,690 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,692 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,694 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,697 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,729 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,733 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,735 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,740 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,744 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,751 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,753 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,787 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,797 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,807 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,812 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,814 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,820 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,826 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,829 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,831 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,835 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,837 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,846 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,857 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,860 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,862 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,866 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,868 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,872 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,874 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,877 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,880 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,883 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,885 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,887 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,891 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,894 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,896 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,899 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,901 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,902 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,905 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,907 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,911 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,913 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,919 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,921 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,922 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,924 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,925 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,927 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,930 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,933 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,936 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,941 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,950 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,953 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,955 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,960 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,961 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,963 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:43,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:44,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:44,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:44,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:44,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:44,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:44,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:44,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:46,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:46,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-13:22:36:46,527 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-13:22:36:46,530 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-13:22:36:46,530 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': '/work1/nkale/unlearn_benchmark/unlearn_models/scrub/checkpoint-425', 'tokenizer': 'meta-llama/Meta-Llama-3-8b-Instruct'}
2025-05-13:22:36:47,085 INFO     [huggingface.py:130] Using device 'cuda:5'
2025-05-13:22:36:47,699 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:5'}
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:02<00:06,  2.18s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:05<00:05,  2.93s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:18<00:07,  7.30s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:21<00:00,  5.61s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:21<00:00,  5.29s/it]
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,978 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,979 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,980 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-13:22:37:25,981 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-13:22:37:25,987 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 67%|██████▋   | 67/100 [00:00<00:00, 664.00it/s]100%|██████████| 100/100 [00:00<00:00, 677.07it/s]
2025-05-13:22:37:26,139 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 22%|██▏       | 69/310 [00:00<00:00, 684.06it/s] 46%|████▌     | 142/310 [00:00<00:00, 705.98it/s] 69%|██████▊   | 213/310 [00:00<00:00, 704.42it/s] 92%|█████████▏| 284/310 [00:00<00:00, 703.26it/s]100%|██████████| 310/310 [00:00<00:00, 702.96it/s]
2025-05-13:22:37:26,593 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 71%|███████   | 71/100 [00:00<00:00, 707.46it/s]100%|██████████| 100/100 [00:00<00:00, 709.27it/s]
2025-05-13:22:37:26,740 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 49%|████▉     | 71/145 [00:00<00:00, 704.01it/s] 98%|█████████▊| 142/145 [00:00<00:00, 706.30it/s]100%|██████████| 145/145 [00:00<00:00, 704.65it/s]
2025-05-13:22:37:26,952 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 72%|███████▏  | 72/100 [00:00<00:00, 710.94it/s]100%|██████████| 100/100 [00:00<00:00, 708.43it/s]
2025-05-13:22:37:27,099 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 35%|███▍      | 71/203 [00:00<00:00, 707.00it/s] 71%|███████   | 144/203 [00:00<00:00, 719.96it/s]100%|██████████| 203/203 [00:00<00:00, 715.92it/s]
2025-05-13:22:37:27,391 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 48%|████▊     | 73/152 [00:00<00:00, 726.05it/s] 96%|█████████▌| 146/152 [00:00<00:00, 716.60it/s]100%|██████████| 152/152 [00:00<00:00, 717.04it/s]
2025-05-13:22:37:27,610 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 71%|███████   | 72/102 [00:00<00:00, 719.96it/s]100%|██████████| 102/102 [00:00<00:00, 723.51it/s]
2025-05-13:22:37:27,756 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 73%|███████▎  | 73/100 [00:00<00:00, 725.29it/s]100%|██████████| 100/100 [00:00<00:00, 724.34it/s]
2025-05-13:22:37:27,899 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 51%|█████     | 73/144 [00:00<00:00, 726.43it/s]100%|██████████| 144/144 [00:00<00:00, 717.77it/s]
2025-05-13:22:37:28,106 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 31%|███▏      | 74/235 [00:00<00:00, 739.92it/s] 63%|██████▎   | 148/235 [00:00<00:00, 728.28it/s] 94%|█████████▍| 221/235 [00:00<00:00, 723.72it/s]100%|██████████| 235/235 [00:00<00:00, 723.86it/s]
2025-05-13:22:37:28,440 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 62%|██████▏   | 69/112 [00:00<00:00, 689.19it/s]100%|██████████| 112/112 [00:00<00:00, 692.18it/s]
2025-05-13:22:37:28,607 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 25%|██▌       | 68/270 [00:00<00:00, 674.95it/s] 53%|█████▎    | 143/270 [00:00<00:00, 714.95it/s] 80%|████████  | 216/270 [00:00<00:00, 721.06it/s]100%|██████████| 270/270 [00:00<00:00, 712.80it/s]
2025-05-13:22:37:28,998 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 71%|███████   | 71/100 [00:00<00:00, 707.26it/s]100%|██████████| 100/100 [00:00<00:00, 695.32it/s]
2025-05-13:22:37:29,147 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 72%|███████▏  | 72/100 [00:00<00:00, 711.90it/s]100%|██████████| 100/100 [00:00<00:00, 712.45it/s]
2025-05-13:22:37:29,294 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 54%|█████▍    | 73/135 [00:00<00:00, 725.99it/s]100%|██████████| 135/135 [00:00<00:00, 722.78it/s]
2025-05-13:22:37:29,487 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 19%|█▉        | 73/378 [00:00<00:00, 724.49it/s] 39%|███▊      | 146/378 [00:00<00:00, 716.33it/s] 58%|█████▊    | 218/378 [00:00<00:00, 706.10it/s] 77%|███████▋  | 291/378 [00:00<00:00, 713.75it/s] 96%|█████████▌| 363/378 [00:00<00:00, 713.90it/s]100%|██████████| 378/378 [00:00<00:00, 713.66it/s]
2025-05-13:22:37:30,031 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 48%|████▊     | 72/151 [00:00<00:00, 713.27it/s] 95%|█████████▌| 144/151 [00:00<00:00, 714.51it/s]100%|██████████| 151/151 [00:00<00:00, 714.04it/s]
2025-05-13:22:37:30,251 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 33%|███▎      | 72/216 [00:00<00:00, 717.61it/s] 67%|██████▋   | 145/216 [00:00<00:00, 720.41it/s]100%|██████████| 216/216 [00:00<00:00, 714.71it/s]
2025-05-13:22:37:30,563 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 28%|██▊       | 73/265 [00:00<00:00, 721.79it/s] 55%|█████▌    | 146/265 [00:00<00:00, 716.87it/s] 82%|████████▏ | 218/265 [00:00<00:00, 712.26it/s]100%|██████████| 265/265 [00:00<00:00, 714.67it/s]
2025-05-13:22:37:30,945 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 72%|███████▏  | 72/100 [00:00<00:00, 717.18it/s]100%|██████████| 100/100 [00:00<00:00, 716.07it/s]
2025-05-13:22:37:31,090 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 70%|██████▉   | 72/103 [00:00<00:00, 714.95it/s]100%|██████████| 103/103 [00:00<00:00, 709.96it/s]
2025-05-13:22:37:31,240 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 23%|██▎       | 70/306 [00:00<00:00, 693.46it/s] 46%|████▋     | 142/306 [00:00<00:00, 704.95it/s] 70%|██████▉   | 214/306 [00:00<00:00, 708.99it/s] 94%|█████████▍| 287/306 [00:00<00:00, 713.59it/s]100%|██████████| 306/306 [00:00<00:00, 709.58it/s]
2025-05-13:22:37:31,685 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 42%|████▏     | 72/173 [00:00<00:00, 717.87it/s] 83%|████████▎ | 144/173 [00:00<00:00, 717.03it/s]100%|██████████| 173/173 [00:00<00:00, 716.58it/s]
2025-05-13:22:37:31,934 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 43%|████▎     | 72/166 [00:00<00:00, 718.85it/s] 87%|████████▋ | 144/166 [00:00<00:00, 713.33it/s]100%|██████████| 166/166 [00:00<00:00, 711.67it/s]
2025-05-13:22:37:32,176 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 26%|██▋       | 72/272 [00:00<00:00, 714.20it/s] 53%|█████▎    | 144/272 [00:00<00:00, 706.86it/s] 79%|███████▉  | 215/272 [00:00<00:00, 701.14it/s]100%|██████████| 272/272 [00:00<00:00, 703.34it/s]
2025-05-13:22:37:32,575 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s]  9%|▉         | 71/783 [00:00<00:01, 708.91it/s] 18%|█▊        | 142/783 [00:00<00:00, 707.17it/s] 27%|██▋       | 214/783 [00:00<00:00, 712.13it/s] 37%|███▋      | 286/783 [00:00<00:00, 713.38it/s] 46%|████▌     | 358/783 [00:00<00:00, 714.13it/s] 55%|█████▍    | 430/783 [00:00<00:00, 715.78it/s] 64%|██████▍   | 503/783 [00:00<00:00, 717.29it/s] 73%|███████▎  | 575/783 [00:00<00:00, 714.75it/s] 83%|████████▎ | 647/783 [00:00<00:00, 709.93it/s] 92%|█████████▏| 719/783 [00:01<00:00, 712.51it/s]100%|██████████| 783/783 [00:01<00:00, 713.32it/s]
2025-05-13:22:37:33,703 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 72%|███████▏  | 72/100 [00:00<00:00, 710.42it/s]100%|██████████| 100/100 [00:00<00:00, 709.78it/s]
2025-05-13:22:37:33,849 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 72%|███████▏  | 72/100 [00:00<00:00, 709.26it/s]100%|██████████| 100/100 [00:00<00:00, 709.86it/s]
2025-05-13:22:37:33,995 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 26%|██▌       | 72/282 [00:00<00:00, 711.77it/s] 51%|█████     | 144/282 [00:00<00:00, 712.93it/s] 77%|███████▋  | 216/282 [00:00<00:00, 710.36it/s]100%|██████████| 282/282 [00:00<00:00, 708.12it/s]
2025-05-13:22:37:34,406 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:03, 67.99it/s] 38%|███▊      | 88/234 [00:00<00:00, 277.12it/s] 68%|██████▊   | 158/234 [00:00<00:00, 414.29it/s] 98%|█████████▊| 229/234 [00:00<00:00, 507.35it/s]100%|██████████| 234/234 [00:00<00:00, 397.50it/s]
2025-05-13:22:37:35,004 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 32%|███▏      | 71/223 [00:00<00:00, 706.44it/s] 64%|██████▎   | 142/223 [00:00<00:00, 706.37it/s] 96%|█████████▌| 214/223 [00:00<00:00, 708.60it/s]100%|██████████| 223/223 [00:00<00:00, 707.26it/s]
2025-05-13:22:37:35,330 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 65%|██████▍   | 71/110 [00:00<00:00, 709.29it/s]100%|██████████| 110/110 [00:00<00:00, 709.11it/s]
2025-05-13:22:37:35,490 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 36%|███▌      | 72/201 [00:00<00:00, 712.72it/s] 72%|███████▏  | 144/201 [00:00<00:00, 703.83it/s]100%|██████████| 201/201 [00:00<00:00, 702.74it/s]
2025-05-13:22:37:35,785 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 36%|███▌      | 71/198 [00:00<00:00, 709.73it/s] 72%|███████▏  | 142/198 [00:00<00:00, 707.91it/s]100%|██████████| 198/198 [00:00<00:00, 705.33it/s]
2025-05-13:22:37:36,075 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 27%|██▋       | 67/245 [00:00<00:00, 663.66it/s] 56%|█████▌    | 136/245 [00:00<00:00, 678.98it/s] 84%|████████▍ | 207/245 [00:00<00:00, 689.13it/s]100%|██████████| 245/245 [00:00<00:00, 686.94it/s]
2025-05-13:22:37:36,442 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 13%|█▎        | 72/545 [00:00<00:00, 714.97it/s] 26%|██▋       | 144/545 [00:00<00:00, 709.91it/s] 39%|███▉      | 215/545 [00:00<00:00, 706.99it/s] 53%|█████▎    | 287/545 [00:00<00:00, 709.00it/s] 66%|██████▌   | 358/545 [00:00<00:00, 705.89it/s] 79%|███████▊  | 429/545 [00:00<00:00, 705.82it/s] 92%|█████████▏| 501/545 [00:00<00:00, 707.36it/s]100%|██████████| 545/545 [00:00<00:00, 707.60it/s]
2025-05-13:22:37:37,236 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 72%|███████▏  | 72/100 [00:00<00:00, 712.41it/s]100%|██████████| 100/100 [00:00<00:00, 707.62it/s]
2025-05-13:22:37:37,382 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 18%|█▊        | 71/390 [00:00<00:00, 709.88it/s] 36%|███▋      | 142/390 [00:00<00:00, 691.12it/s] 54%|█████▍    | 212/390 [00:00<00:00, 691.94it/s] 73%|███████▎  | 283/390 [00:00<00:00, 698.68it/s] 91%|█████████ | 353/390 [00:00<00:00, 695.02it/s]100%|██████████| 390/390 [00:00<00:00, 695.00it/s]
2025-05-13:22:37:37,959 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 30%|██▉       | 71/238 [00:00<00:00, 701.48it/s] 60%|█████▉    | 142/238 [00:00<00:00, 704.80it/s] 89%|████████▉ | 213/238 [00:00<00:00, 700.83it/s]100%|██████████| 238/238 [00:00<00:00, 700.67it/s]
2025-05-13:22:37:38,309 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 63%|██████▎   | 72/114 [00:00<00:00, 711.87it/s]100%|██████████| 114/114 [00:00<00:00, 708.76it/s]
2025-05-13:22:37:38,476 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 12%|█▏        | 72/612 [00:00<00:00, 716.67it/s] 24%|██▎       | 144/612 [00:00<00:00, 712.51it/s] 35%|███▌      | 216/612 [00:00<00:00, 705.55it/s] 47%|████▋     | 287/612 [00:00<00:00, 704.91it/s] 59%|█████▊    | 359/612 [00:00<00:00, 708.70it/s] 71%|███████   | 432/612 [00:00<00:00, 714.57it/s] 82%|████████▏ | 504/612 [00:00<00:00, 715.20it/s] 94%|█████████▍| 576/612 [00:00<00:00, 713.96it/s]100%|██████████| 612/612 [00:00<00:00, 704.15it/s]
2025-05-13:22:37:39,369 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 55%|█████▍    | 72/131 [00:00<00:00, 712.59it/s]100%|██████████| 131/131 [00:00<00:00, 705.62it/s]
2025-05-13:22:37:39,562 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 37%|███▋      | 72/193 [00:00<00:00, 710.58it/s] 75%|███████▌  | 145/193 [00:00<00:00, 716.38it/s]100%|██████████| 193/193 [00:00<00:00, 715.22it/s]
2025-05-13:22:37:39,842 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  8%|▊         | 72/895 [00:00<00:01, 714.30it/s] 16%|█▌        | 144/895 [00:00<00:01, 714.32it/s] 24%|██▍       | 216/895 [00:00<00:00, 715.92it/s] 32%|███▏      | 288/895 [00:00<00:00, 717.11it/s] 40%|████      | 360/895 [00:00<00:00, 716.42it/s] 48%|████▊     | 432/895 [00:00<00:00, 715.13it/s] 56%|█████▋    | 504/895 [00:00<00:00, 714.22it/s] 64%|██████▍   | 576/895 [00:00<00:00, 714.63it/s] 72%|███████▏  | 648/895 [00:00<00:00, 715.48it/s] 80%|████████  | 720/895 [00:01<00:00, 712.33it/s] 88%|████████▊ | 792/895 [00:01<00:00, 708.81it/s] 96%|█████████▋| 863/895 [00:01<00:00, 706.34it/s]100%|██████████| 895/895 [00:01<00:00, 711.70it/s]
2025-05-13:22:37:41,134 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 30%|██▉       | 71/237 [00:00<00:00, 704.00it/s] 60%|█████▉    | 142/237 [00:00<00:00, 701.20it/s] 90%|████████▉ | 213/237 [00:00<00:00, 702.73it/s]100%|██████████| 237/237 [00:00<00:00, 700.75it/s]
2025-05-13:22:37:41,483 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 44%|████▎     | 72/165 [00:00<00:00, 711.32it/s] 87%|████████▋ | 144/165 [00:00<00:00, 712.62it/s]100%|██████████| 165/165 [00:00<00:00, 703.82it/s]
2025-05-13:22:37:41,726 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 23%|██▎       | 72/311 [00:00<00:00, 713.48it/s] 46%|████▋     | 144/311 [00:00<00:00, 711.49it/s] 69%|██████▉   | 216/311 [00:00<00:00, 713.66it/s] 93%|█████████▎| 288/311 [00:00<00:00, 713.68it/s]100%|██████████| 311/311 [00:00<00:00, 712.29it/s]
2025-05-13:22:37:42,177 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 21%|██        | 72/346 [00:00<00:00, 713.89it/s] 42%|████▏     | 144/346 [00:00<00:00, 715.57it/s] 62%|██████▏   | 216/346 [00:00<00:00, 716.96it/s] 83%|████████▎ | 288/346 [00:00<00:00, 716.01it/s]100%|██████████| 346/346 [00:00<00:00, 715.09it/s]
2025-05-13:22:37:42,675 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 35%|███▌      | 72/204 [00:00<00:00, 712.94it/s] 71%|███████   | 144/204 [00:00<00:00, 712.59it/s]100%|██████████| 204/204 [00:00<00:00, 711.99it/s]
2025-05-13:22:37:42,971 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 60%|█████▉    | 72/121 [00:00<00:00, 716.38it/s]100%|██████████| 121/121 [00:00<00:00, 710.68it/s]
2025-05-13:22:37:43,147 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  5%|▍         | 72/1534 [00:00<00:02, 716.30it/s]  9%|▉         | 145/1534 [00:00<00:01, 722.11it/s] 14%|█▍        | 218/1534 [00:00<00:01, 719.97it/s] 19%|█▉        | 290/1534 [00:00<00:01, 714.13it/s] 24%|██▎       | 362/1534 [00:00<00:01, 714.13it/s] 28%|██▊       | 434/1534 [00:00<00:01, 715.10it/s] 33%|███▎      | 506/1534 [00:00<00:01, 708.88it/s] 38%|███▊      | 578/1534 [00:00<00:01, 711.35it/s] 42%|████▏     | 650/1534 [00:00<00:01, 710.95it/s] 47%|████▋     | 722/1534 [00:01<00:01, 712.10it/s] 52%|█████▏    | 795/1534 [00:01<00:01, 715.31it/s] 57%|█████▋    | 868/1534 [00:01<00:00, 717.38it/s] 61%|██████▏   | 940/1534 [00:01<00:00, 714.88it/s] 66%|██████▌   | 1012/1534 [00:01<00:00, 716.35it/s] 71%|███████   | 1085/1534 [00:01<00:00, 717.95it/s] 75%|███████▌  | 1158/1534 [00:01<00:00, 719.56it/s] 80%|████████  | 1231/1534 [00:01<00:00, 720.23it/s] 85%|████████▌ | 1304/1534 [00:01<00:00, 720.46it/s] 90%|████████▉ | 1377/1534 [00:01<00:00, 721.01it/s] 95%|█████████▍| 1450/1534 [00:02<00:00, 721.40it/s] 99%|█████████▉| 1523/1534 [00:02<00:00, 722.14it/s]100%|██████████| 1534/1534 [00:02<00:00, 717.13it/s]
2025-05-13:22:37:45,347 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 43%|████▎     | 73/171 [00:00<00:00, 727.36it/s] 85%|████████▌ | 146/171 [00:00<00:00, 724.02it/s]100%|██████████| 171/171 [00:00<00:00, 725.03it/s]
2025-05-13:22:37:45,592 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 67%|██████▋   | 72/108 [00:00<00:00, 719.70it/s]100%|██████████| 108/108 [00:00<00:00, 719.89it/s]
2025-05-13:22:37:45,747 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 58%|█████▊    | 73/126 [00:00<00:00, 722.19it/s]100%|██████████| 126/126 [00:00<00:00, 719.07it/s]
2025-05-13:22:37:45,929 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 22%|██▏       | 72/324 [00:00<00:00, 719.84it/s] 44%|████▍     | 144/324 [00:00<00:00, 254.92it/s] 67%|██████▋   | 216/324 [00:00<00:00, 361.26it/s] 88%|████████▊ | 285/324 [00:00<00:00, 442.00it/s]100%|██████████| 324/324 [00:00<00:00, 423.49it/s]
2025-05-13:22:37:46,708 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 45%|████▍     | 73/163 [00:00<00:00, 720.14it/s] 90%|████████▉ | 146/163 [00:00<00:00, 718.56it/s]100%|██████████| 163/163 [00:00<00:00, 716.78it/s]
2025-05-13:22:37:46,943 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<31:36:48,  2.03s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:03<37:44, 24.77it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:04<23:20, 40.00it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<18:26, 50.58it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<16:01, 58.17it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<14:29, 64.25it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:07<13:26, 69.19it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:08<12:42, 73.08it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<12:04, 76.77it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<11:38, 79.59it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:10<11:17, 82.01it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:11<10:59, 84.04it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:44, 85.96it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:12<10:32, 87.44it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:13<10:13, 90.07it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:13<09:59, 92.11it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:14<09:46, 94.10it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:15<09:35, 95.71it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:15<09:27, 96.98it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:16<09:18, 98.47it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:17<09:10, 99.62it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:17<09:05, 100.55it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:18<09:00, 101.26it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:18<08:52, 102.67it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:19<08:43, 104.34it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:20<08:36, 105.60it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:20<08:27, 107.40it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:21<08:20, 108.71it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:21<08:14, 109.86it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:22<08:10, 110.77it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:22<08:07, 111.33it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:23<08:01, 112.52it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:24<07:56, 113.46it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:24<07:53, 114.25it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:25<07:50, 114.70it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:25<07:47, 115.29it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:26<07:45, 115.64it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:26<07:41, 116.58it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:27<07:37, 117.38it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:27<07:34, 118.00it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:28<07:32, 118.47it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:28<07:30, 118.90it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:29<07:28, 119.30it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:29<07:26, 119.74it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:30<07:17, 121.93it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:30<07:11, 123.52it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:31<07:06, 124.72it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:31<07:02, 125.68it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:32<06:59, 126.54it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:32<06:57, 127.16it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:33<06:54, 127.73it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:33<06:52, 128.17it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:34<06:50, 128.56it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:34<06:47, 129.54it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:35<06:44, 130.33it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:35<06:41, 131.12it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:36<06:39, 131.71it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:36<06:37, 132.26it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:37<06:35, 132.64it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:37<06:33, 133.08it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:38<06:32, 133.34it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:38<06:28, 134.41it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:39<06:26, 135.22it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:39<06:23, 135.82it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:40<06:21, 136.47it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:40<06:19, 136.94it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:41<06:18, 137.39it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:41<06:16, 137.65it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:42<06:15, 137.89it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:42<06:14, 138.12it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:42<06:13, 138.25it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:43<06:10, 139.34it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:43<06:08, 140.05it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:44<06:05, 140.73it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:44<06:04, 141.28it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:45<06:02, 141.69it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:45<06:01, 142.07it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:46<05:56, 143.55it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:46<05:53, 144.62it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:46<05:51, 145.56it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:47<05:49, 146.19it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:47<05:42, 148.92it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:48<05:37, 150.94it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:48<05:33, 152.34it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:49<05:30, 153.52it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:49<05:28, 154.37it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:49<05:26, 155.00it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:50<05:25, 155.60it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:50<05:24, 155.92it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:51<05:22, 156.34it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:51<05:21, 156.62it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:51<05:20, 156.87it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:52<05:17, 158.14it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:52<05:15, 159.09it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:53<05:13, 159.77it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:53<05:12, 160.38it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:53<05:11, 160.76it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:54<05:09, 161.18it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:54<05:08, 161.54it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:55<05:07, 161.93it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:55<05:06, 162.19it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:55<05:07, 161.44it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:56<05:10, 159.83it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:56<05:12, 158.87it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:57<05:08, 160.52it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:57<05:08, 160.45it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:57<05:05, 161.89it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:58<05:03, 162.44it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:58<05:02, 162.86it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:58<05:02, 162.52it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:59<05:00, 163.33it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:59<04:59, 163.81it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [01:00<04:58, 164.42it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [01:00<04:53, 166.74it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [01:00<04:44, 171.93it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [01:01<04:37, 175.76it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [01:01<04:35, 177.22it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [01:01<04:30, 180.27it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [01:02<04:26, 182.20it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [01:02<04:23, 184.32it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:02<04:24, 183.30it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:03<04:21, 185.33it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:03<04:18, 186.91it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:03<04:16, 188.02it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:04<04:18, 186.58it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:04<04:16, 187.87it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:04<04:17, 186.65it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:05<04:13, 189.37it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:05<04:10, 191.55it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:05<04:07, 193.31it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:06<04:05, 194.64it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:06<04:04, 195.60it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:06<04:03, 195.65it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:07<04:01, 197.12it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:07<04:00, 197.58it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:07<04:00, 197.35it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:08<04:02, 196.08it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:08<04:02, 195.54it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:08<04:03, 194.34it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:09<04:00, 196.96it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:09<03:56, 200.01it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:09<03:53, 202.01it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:10<03:50, 203.87it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:10<03:49, 205.22it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:10<03:47, 206.18it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:11<03:46, 207.02it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:11<03:44, 208.23it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:11<03:43, 209.43it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:11<03:43, 208.96it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:12<03:41, 210.81it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:12<03:39, 212.24it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:12<03:40, 211.16it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:13<03:43, 207.40it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:13<03:39, 211.63it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:13<03:36, 213.59it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:14<03:35, 214.52it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:14<03:35, 214.26it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:14<03:34, 215.25it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:14<03:32, 216.38it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:15<03:30, 218.84it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:15<03:27, 220.95it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:15<03:22, 226.53it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:16<03:18, 230.91it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:16<03:18, 230.49it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:16<03:16, 232.12it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:16<03:16, 232.02it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:17<03:14, 233.70it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:17<03:15, 232.67it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:17<03:12, 235.70it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:17<03:10, 237.87it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:18<03:07, 241.48it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:18<03:04, 244.61it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:18<03:04, 245.20it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:18<03:02, 247.58it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:19<03:01, 248.26it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:19<02:59, 249.99it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:19<02:58, 251.20it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:19<02:57, 252.25it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:20<02:57, 252.75it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:20<02:56, 253.41it/s]Running loglikelihood requests:  21%|██        | 11525/56168 [01:20<02:51, 259.77it/s]Running loglikelihood requests:  21%|██        | 11589/56168 [01:20<02:51, 259.87it/s]Running loglikelihood requests:  21%|██        | 11653/56168 [01:21<02:51, 260.03it/s]Running loglikelihood requests:  21%|██        | 11717/56168 [01:21<02:53, 255.87it/s]Running loglikelihood requests:  21%|██        | 11781/56168 [01:21<02:53, 255.25it/s]Running loglikelihood requests:  21%|██        | 11845/56168 [01:21<02:52, 256.91it/s]Running loglikelihood requests:  21%|██        | 11909/56168 [01:22<02:51, 258.28it/s]Running loglikelihood requests:  21%|██▏       | 11973/56168 [01:22<02:50, 258.78it/s]Running loglikelihood requests:  21%|██▏       | 12037/56168 [01:22<02:49, 260.03it/s]Running loglikelihood requests:  22%|██▏       | 12101/56168 [01:22<02:48, 261.01it/s]Running loglikelihood requests:  22%|██▏       | 12165/56168 [01:23<02:48, 261.75it/s]Running loglikelihood requests:  22%|██▏       | 12229/56168 [01:23<02:47, 262.30it/s]Running loglikelihood requests:  22%|██▏       | 12293/56168 [01:23<02:45, 264.84it/s]Running loglikelihood requests:  22%|██▏       | 12357/56168 [01:23<02:46, 262.49it/s]Running loglikelihood requests:  22%|██▏       | 12421/56168 [01:24<02:46, 263.02it/s]Running loglikelihood requests:  22%|██▏       | 12485/56168 [01:24<02:45, 263.73it/s]Running loglikelihood requests:  22%|██▏       | 12549/56168 [01:24<02:44, 264.44it/s]Running loglikelihood requests:  22%|██▏       | 12613/56168 [01:24<02:44, 264.92it/s]Running loglikelihood requests:  23%|██▎       | 12677/56168 [01:25<02:45, 263.38it/s]Running loglikelihood requests:  23%|██▎       | 12741/56168 [01:25<02:44, 264.75it/s]Running loglikelihood requests:  23%|██▎       | 12805/56168 [01:25<02:41, 268.07it/s]Running loglikelihood requests:  23%|██▎       | 12869/56168 [01:25<02:40, 269.94it/s]Running loglikelihood requests:  23%|██▎       | 12933/56168 [01:26<02:39, 271.07it/s]Running loglikelihood requests:  23%|██▎       | 12997/56168 [01:26<02:41, 266.88it/s]Running loglikelihood requests:  23%|██▎       | 13061/56168 [01:26<02:42, 265.41it/s]Running loglikelihood requests:  23%|██▎       | 13125/56168 [01:26<02:44, 262.09it/s]Running loglikelihood requests:  23%|██▎       | 13189/56168 [01:27<02:43, 263.37it/s]Running loglikelihood requests:  24%|██▎       | 13253/56168 [01:27<02:43, 262.40it/s]Running loglikelihood requests:  24%|██▎       | 13317/56168 [01:27<02:43, 262.55it/s]Running loglikelihood requests:  24%|██▍       | 13381/56168 [01:27<02:40, 266.73it/s]Running loglikelihood requests:  24%|██▍       | 13445/56168 [01:28<02:38, 269.32it/s]Running loglikelihood requests:  24%|██▍       | 13509/56168 [01:28<02:35, 274.81it/s]Running loglikelihood requests:  24%|██▍       | 13573/56168 [01:28<02:33, 277.53it/s]Running loglikelihood requests:  24%|██▍       | 13637/56168 [01:28<02:33, 276.81it/s]Running loglikelihood requests:  24%|██▍       | 13701/56168 [01:28<02:32, 278.19it/s]Running loglikelihood requests:  25%|██▍       | 13765/56168 [01:29<02:41, 263.15it/s]Running loglikelihood requests:  25%|██▍       | 13829/56168 [01:29<02:36, 270.81it/s]Running loglikelihood requests:  25%|██▍       | 13893/56168 [01:29<02:34, 274.07it/s]Running loglikelihood requests:  25%|██▍       | 13957/56168 [01:29<02:31, 278.92it/s]Running loglikelihood requests:  25%|██▍       | 14021/56168 [01:30<02:29, 282.86it/s]Running loglikelihood requests:  25%|██▌       | 14085/56168 [01:30<02:27, 285.50it/s]Running loglikelihood requests:  25%|██▌       | 14149/56168 [01:30<02:26, 287.49it/s]Running loglikelihood requests:  25%|██▌       | 14213/56168 [01:30<02:25, 288.86it/s]Running loglikelihood requests:  25%|██▌       | 14277/56168 [01:30<02:24, 289.93it/s]Running loglikelihood requests:  26%|██▌       | 14341/56168 [01:31<02:25, 287.84it/s]Running loglikelihood requests:  26%|██▌       | 14405/56168 [01:31<02:26, 285.67it/s]Running loglikelihood requests:  26%|██▌       | 14469/56168 [01:31<02:26, 284.41it/s]Running loglikelihood requests:  26%|██▌       | 14533/56168 [01:31<02:26, 284.56it/s]Running loglikelihood requests:  26%|██▌       | 14597/56168 [01:32<02:27, 281.53it/s]Running loglikelihood requests:  26%|██▌       | 14661/56168 [01:32<02:26, 283.46it/s]Running loglikelihood requests:  26%|██▌       | 14725/56168 [01:32<02:24, 286.46it/s]Running loglikelihood requests:  26%|██▋       | 14789/56168 [01:32<02:27, 280.11it/s]Running loglikelihood requests:  26%|██▋       | 14853/56168 [01:33<02:30, 274.39it/s]Running loglikelihood requests:  27%|██▋       | 14917/56168 [01:33<02:27, 280.14it/s]Running loglikelihood requests:  27%|██▋       | 14981/56168 [01:33<02:24, 284.28it/s]Running loglikelihood requests:  27%|██▋       | 15045/56168 [01:33<02:24, 284.40it/s]Running loglikelihood requests:  27%|██▋       | 15109/56168 [01:33<02:25, 282.33it/s]Running loglikelihood requests:  27%|██▋       | 15173/56168 [01:34<02:26, 279.51it/s]Running loglikelihood requests:  27%|██▋       | 15237/56168 [01:34<02:25, 281.67it/s]Running loglikelihood requests:  27%|██▋       | 15301/56168 [01:34<02:23, 285.74it/s]Running loglikelihood requests:  27%|██▋       | 15365/56168 [01:34<02:23, 283.80it/s]Running loglikelihood requests:  27%|██▋       | 15429/56168 [01:35<02:27, 275.78it/s]Running loglikelihood requests:  28%|██▊       | 15493/56168 [01:35<02:23, 282.95it/s]Running loglikelihood requests:  28%|██▊       | 15557/56168 [01:35<02:20, 288.15it/s]Running loglikelihood requests:  28%|██▊       | 15621/56168 [01:35<02:19, 291.70it/s]Running loglikelihood requests:  28%|██▊       | 15685/56168 [01:35<02:17, 294.92it/s]Running loglikelihood requests:  28%|██▊       | 15749/56168 [01:36<02:16, 296.63it/s]Running loglikelihood requests:  28%|██▊       | 15813/56168 [01:36<02:15, 298.21it/s]Running loglikelihood requests:  28%|██▊       | 15877/56168 [01:36<02:14, 299.25it/s]Running loglikelihood requests:  28%|██▊       | 15945/56168 [01:36<02:11, 305.53it/s]Running loglikelihood requests:  29%|██▊       | 16009/56168 [01:36<02:12, 304.10it/s]Running loglikelihood requests:  29%|██▊       | 16073/56168 [01:37<02:11, 303.85it/s]Running loglikelihood requests:  29%|██▊       | 16137/56168 [01:37<02:11, 303.60it/s]Running loglikelihood requests:  29%|██▉       | 16201/56168 [01:37<02:11, 303.47it/s]Running loglikelihood requests:  29%|██▉       | 16265/56168 [01:37<02:11, 303.21it/s]Running loglikelihood requests:  29%|██▉       | 16329/56168 [01:38<02:11, 303.36it/s]Running loglikelihood requests:  29%|██▉       | 16393/56168 [01:38<02:10, 303.74it/s]Running loglikelihood requests:  29%|██▉       | 16457/56168 [01:38<02:10, 303.39it/s]Running loglikelihood requests:  29%|██▉       | 16521/56168 [01:38<02:10, 303.52it/s]Running loglikelihood requests:  30%|██▉       | 16585/56168 [01:38<02:10, 303.41it/s]Running loglikelihood requests:  30%|██▉       | 16649/56168 [01:39<02:10, 303.60it/s]Running loglikelihood requests:  30%|██▉       | 16713/56168 [01:39<02:09, 303.54it/s]Running loglikelihood requests:  30%|██▉       | 16777/56168 [01:39<02:09, 304.11it/s]Running loglikelihood requests:  30%|██▉       | 16841/56168 [01:39<02:09, 304.31it/s]Running loglikelihood requests:  30%|███       | 16905/56168 [01:39<02:08, 304.87it/s]Running loglikelihood requests:  30%|███       | 16969/56168 [01:40<02:08, 305.62it/s]Running loglikelihood requests:  30%|███       | 17033/56168 [01:40<02:07, 305.95it/s]Running loglikelihood requests:  30%|███       | 17097/56168 [01:40<02:09, 300.99it/s]Running loglikelihood requests:  31%|███       | 17161/56168 [01:40<02:10, 299.97it/s]Running loglikelihood requests:  31%|███       | 17225/56168 [01:40<02:08, 302.61it/s]Running loglikelihood requests:  31%|███       | 17289/56168 [01:41<02:07, 304.11it/s]Running loglikelihood requests:  31%|███       | 17353/56168 [01:41<02:07, 305.52it/s]Running loglikelihood requests:  31%|███       | 17417/56168 [01:41<02:06, 306.39it/s]Running loglikelihood requests:  31%|███       | 17481/56168 [01:41<02:06, 306.92it/s]Running loglikelihood requests:  31%|███       | 17545/56168 [01:42<02:05, 307.24it/s]Running loglikelihood requests:  31%|███▏      | 17609/56168 [01:42<02:05, 307.65it/s]Running loglikelihood requests:  31%|███▏      | 17673/56168 [01:42<02:04, 307.99it/s]Running loglikelihood requests:  32%|███▏      | 17737/56168 [01:42<02:04, 308.17it/s]Running loglikelihood requests:  32%|███▏      | 17801/56168 [01:42<02:04, 308.79it/s]Running loglikelihood requests:  32%|███▏      | 17865/56168 [01:43<02:03, 308.93it/s]Running loglikelihood requests:  32%|███▏      | 17929/56168 [01:43<02:03, 308.69it/s]Running loglikelihood requests:  32%|███▏      | 17993/56168 [01:43<02:03, 309.02it/s]Running loglikelihood requests:  32%|███▏      | 18057/56168 [01:43<02:03, 309.23it/s]Running loglikelihood requests:  32%|███▏      | 18121/56168 [01:43<02:02, 309.51it/s]Running loglikelihood requests:  32%|███▏      | 18185/56168 [01:44<02:02, 309.34it/s]Running loglikelihood requests:  32%|███▏      | 18249/56168 [01:44<02:02, 309.53it/s]Running loglikelihood requests:  33%|███▎      | 18313/56168 [01:44<02:02, 309.72it/s]Running loglikelihood requests:  33%|███▎      | 18377/56168 [01:44<02:01, 310.03it/s]Running loglikelihood requests:  33%|███▎      | 18441/56168 [01:44<02:04, 304.22it/s]Running loglikelihood requests:  33%|███▎      | 18505/56168 [01:45<02:03, 303.95it/s]Running loglikelihood requests:  33%|███▎      | 18569/56168 [01:45<02:03, 305.51it/s]Running loglikelihood requests:  33%|███▎      | 18633/56168 [01:45<02:02, 305.90it/s]Running loglikelihood requests:  33%|███▎      | 18697/56168 [01:45<02:01, 307.55it/s]Running loglikelihood requests:  33%|███▎      | 18761/56168 [01:45<02:01, 308.45it/s]Running loglikelihood requests:  34%|███▎      | 18829/56168 [01:46<01:58, 314.73it/s]Running loglikelihood requests:  34%|███▎      | 18893/56168 [01:46<02:07, 292.33it/s]Running loglikelihood requests:  34%|███▍      | 18957/56168 [01:46<02:06, 294.20it/s]Running loglikelihood requests:  34%|███▍      | 19021/56168 [01:46<02:04, 298.78it/s]Running loglikelihood requests:  34%|███▍      | 19085/56168 [01:47<02:02, 302.71it/s]Running loglikelihood requests:  34%|███▍      | 19149/56168 [01:47<02:01, 303.87it/s]Running loglikelihood requests:  34%|███▍      | 19213/56168 [01:47<02:00, 305.94it/s]Running loglikelihood requests:  34%|███▍      | 19277/56168 [01:47<01:59, 309.02it/s]Running loglikelihood requests:  34%|███▍      | 19341/56168 [01:47<01:58, 311.15it/s]Running loglikelihood requests:  35%|███▍      | 19405/56168 [01:48<01:57, 312.60it/s]Running loglikelihood requests:  35%|███▍      | 19469/56168 [01:48<01:56, 313.84it/s]Running loglikelihood requests:  35%|███▍      | 19533/56168 [01:48<01:56, 314.56it/s]Running loglikelihood requests:  35%|███▍      | 19597/56168 [01:48<01:55, 315.27it/s]Running loglikelihood requests:  35%|███▌      | 19661/56168 [01:48<01:55, 316.00it/s]Running loglikelihood requests:  35%|███▌      | 19725/56168 [01:49<01:55, 316.62it/s]Running loglikelihood requests:  35%|███▌      | 19789/56168 [01:49<01:54, 317.02it/s]Running loglikelihood requests:  35%|███▌      | 19853/56168 [01:49<01:54, 317.16it/s]Running loglikelihood requests:  35%|███▌      | 19917/56168 [01:49<01:54, 317.18it/s]Running loglikelihood requests:  36%|███▌      | 19981/56168 [01:49<01:53, 317.84it/s]Running loglikelihood requests:  36%|███▌      | 20045/56168 [01:50<01:53, 317.89it/s]Running loglikelihood requests:  36%|███▌      | 20113/56168 [01:50<01:51, 323.48it/s]Running loglikelihood requests:  36%|███▌      | 20177/56168 [01:50<01:51, 322.14it/s]Running loglikelihood requests:  36%|███▌      | 20241/56168 [01:50<01:51, 320.81it/s]Running loglikelihood requests:  36%|███▌      | 20305/56168 [01:50<01:51, 320.36it/s]Running loglikelihood requests:  36%|███▋      | 20369/56168 [01:51<01:51, 320.00it/s]Running loglikelihood requests:  36%|███▋      | 20433/56168 [01:51<01:51, 319.86it/s]Running loglikelihood requests:  36%|███▋      | 20497/56168 [01:51<01:51, 319.85it/s]Running loglikelihood requests:  37%|███▋      | 20561/56168 [01:51<01:51, 319.48it/s]Running loglikelihood requests:  37%|███▋      | 20625/56168 [01:51<01:51, 319.73it/s]Running loglikelihood requests:  37%|███▋      | 20689/56168 [01:52<01:50, 320.11it/s]Running loglikelihood requests:  37%|███▋      | 20757/56168 [01:52<01:48, 325.33it/s]Running loglikelihood requests:  37%|███▋      | 20821/56168 [01:52<01:49, 323.92it/s]Running loglikelihood requests:  37%|███▋      | 20885/56168 [01:52<01:49, 322.42it/s]Running loglikelihood requests:  37%|███▋      | 20949/56168 [01:52<01:49, 320.59it/s]Running loglikelihood requests:  37%|███▋      | 21013/56168 [01:53<01:49, 320.36it/s]Running loglikelihood requests:  38%|███▊      | 21077/56168 [01:53<01:49, 320.02it/s]Running loglikelihood requests:  38%|███▊      | 21141/56168 [01:53<01:49, 319.94it/s]Running loglikelihood requests:  38%|███▊      | 21205/56168 [01:53<01:49, 320.21it/s]Running loglikelihood requests:  38%|███▊      | 21269/56168 [01:53<01:48, 320.36it/s]Running loglikelihood requests:  38%|███▊      | 21333/56168 [01:54<01:48, 320.65it/s]Running loglikelihood requests:  38%|███▊      | 21401/56168 [01:54<01:46, 326.26it/s]Running loglikelihood requests:  38%|███▊      | 21465/56168 [01:54<01:46, 324.37it/s]Running loglikelihood requests:  38%|███▊      | 21529/56168 [01:54<01:43, 334.98it/s]Running loglikelihood requests:  38%|███▊      | 21593/56168 [01:54<01:40, 342.74it/s]Running loglikelihood requests:  39%|███▊      | 21657/56168 [01:55<01:39, 348.36it/s]Running loglikelihood requests:  39%|███▊      | 21721/56168 [01:55<01:37, 352.66it/s]Running loglikelihood requests:  39%|███▉      | 21785/56168 [01:55<01:36, 356.41it/s]Running loglikelihood requests:  39%|███▉      | 21849/56168 [01:55<01:35, 358.89it/s]Running loglikelihood requests:  39%|███▉      | 21913/56168 [01:55<01:35, 359.71it/s]Running loglikelihood requests:  39%|███▉      | 21977/56168 [01:55<01:34, 360.14it/s]Running loglikelihood requests:  39%|███▉      | 22041/56168 [01:56<01:34, 361.30it/s]Running loglikelihood requests:  39%|███▉      | 22105/56168 [01:56<01:33, 362.51it/s]Running loglikelihood requests:  39%|███▉      | 22169/56168 [01:56<01:33, 363.03it/s]Running loglikelihood requests:  40%|███▉      | 22233/56168 [01:56<01:33, 363.43it/s]Running loglikelihood requests:  40%|███▉      | 22297/56168 [01:56<01:33, 363.92it/s]Running loglikelihood requests:  40%|███▉      | 22361/56168 [01:56<01:32, 363.96it/s]Running loglikelihood requests:  40%|███▉      | 22425/56168 [01:57<01:32, 364.76it/s]Running loglikelihood requests:  40%|████      | 22489/56168 [01:57<01:32, 365.39it/s]Running loglikelihood requests:  40%|████      | 22553/56168 [01:57<01:31, 365.44it/s]Running loglikelihood requests:  40%|████      | 22617/56168 [01:57<01:31, 365.14it/s]Running loglikelihood requests:  40%|████      | 22681/56168 [01:57<01:31, 365.74it/s]Running loglikelihood requests:  40%|████      | 22745/56168 [01:58<01:31, 365.89it/s]Running loglikelihood requests:  41%|████      | 22813/56168 [01:58<01:29, 372.32it/s]Running loglikelihood requests:  41%|████      | 22877/56168 [01:58<01:30, 369.88it/s]Running loglikelihood requests:  41%|████      | 22945/56168 [01:58<01:28, 374.87it/s]Running loglikelihood requests:  41%|████      | 23009/56168 [01:58<01:29, 371.68it/s]Running loglikelihood requests:  41%|████      | 23073/56168 [01:58<01:29, 370.20it/s]Running loglikelihood requests:  41%|████      | 23137/56168 [01:59<01:29, 369.03it/s]Running loglikelihood requests:  41%|████▏     | 23201/56168 [01:59<01:29, 368.13it/s]Running loglikelihood requests:  41%|████▏     | 23265/56168 [01:59<01:29, 367.58it/s]Running loglikelihood requests:  42%|████▏     | 23329/56168 [01:59<01:29, 367.77it/s]Running loglikelihood requests:  42%|████▏     | 23393/56168 [01:59<01:29, 367.52it/s]Running loglikelihood requests:  42%|████▏     | 23457/56168 [01:59<01:29, 367.48it/s]Running loglikelihood requests:  42%|████▏     | 23521/56168 [02:00<01:28, 366.91it/s]Running loglikelihood requests:  42%|████▏     | 23585/56168 [02:00<01:28, 366.68it/s]Running loglikelihood requests:  42%|████▏     | 23649/56168 [02:00<01:28, 367.12it/s]Running loglikelihood requests:  42%|████▏     | 23713/56168 [02:00<01:28, 367.32it/s]Running loglikelihood requests:  42%|████▏     | 23777/56168 [02:00<01:28, 367.24it/s]Running loglikelihood requests:  42%|████▏     | 23841/56168 [02:00<01:27, 367.38it/s]Running loglikelihood requests:  43%|████▎     | 23905/56168 [02:01<01:27, 367.29it/s]Running loglikelihood requests:  43%|████▎     | 23969/56168 [02:01<01:27, 369.04it/s]Running loglikelihood requests:  43%|████▎     | 24033/56168 [02:01<01:26, 370.08it/s]Running loglikelihood requests:  43%|████▎     | 24097/56168 [02:01<01:26, 371.51it/s]Running loglikelihood requests:  43%|████▎     | 24161/56168 [02:01<01:26, 371.95it/s]Running loglikelihood requests:  43%|████▎     | 24225/56168 [02:02<01:25, 372.42it/s]Running loglikelihood requests:  43%|████▎     | 24289/56168 [02:02<01:25, 372.75it/s]Running loglikelihood requests:  43%|████▎     | 24353/56168 [02:02<01:25, 373.45it/s]Running loglikelihood requests:  43%|████▎     | 24417/56168 [02:02<01:25, 373.38it/s]Running loglikelihood requests:  44%|████▎     | 24481/56168 [02:02<01:24, 373.77it/s]Running loglikelihood requests:  44%|████▎     | 24545/56168 [02:02<01:24, 373.89it/s]Running loglikelihood requests:  44%|████▍     | 24609/56168 [02:03<01:24, 373.95it/s]Running loglikelihood requests:  44%|████▍     | 24673/56168 [02:03<01:24, 374.77it/s]Running loglikelihood requests:  44%|████▍     | 24737/56168 [02:03<01:23, 375.87it/s]Running loglikelihood requests:  44%|████▍     | 24801/56168 [02:03<01:23, 375.49it/s]Running loglikelihood requests:  44%|████▍     | 24865/56168 [02:03<01:23, 376.53it/s]Running loglikelihood requests:  44%|████▍     | 24933/56168 [02:03<01:21, 383.42it/s]Running loglikelihood requests:  45%|████▍     | 24997/56168 [02:04<01:21, 380.82it/s]Running loglikelihood requests:  45%|████▍     | 25061/56168 [02:04<01:21, 380.18it/s]Running loglikelihood requests:  45%|████▍     | 25125/56168 [02:04<01:21, 379.43it/s]Running loglikelihood requests:  45%|████▍     | 25189/56168 [02:04<01:21, 379.43it/s]Running loglikelihood requests:  45%|████▍     | 25253/56168 [02:04<01:21, 379.01it/s]Running loglikelihood requests:  45%|████▌     | 25317/56168 [02:04<01:21, 378.94it/s]Running loglikelihood requests:  45%|████▌     | 25381/56168 [02:05<01:21, 378.75it/s]Running loglikelihood requests:  45%|████▌     | 25445/56168 [02:05<01:21, 379.13it/s]Running loglikelihood requests:  45%|████▌     | 25509/56168 [02:05<01:20, 379.43it/s]Running loglikelihood requests:  46%|████▌     | 25573/56168 [02:05<01:20, 379.61it/s]Running loglikelihood requests:  46%|████▌     | 25637/56168 [02:05<01:20, 379.56it/s]Running loglikelihood requests:  46%|████▌     | 25701/56168 [02:05<01:20, 379.38it/s]Running loglikelihood requests:  46%|████▌     | 25765/56168 [02:06<01:20, 379.77it/s]Running loglikelihood requests:  46%|████▌     | 25829/56168 [02:06<01:19, 380.12it/s]Running loglikelihood requests:  46%|████▌     | 25893/56168 [02:06<01:19, 380.56it/s]Running loglikelihood requests:  46%|████▌     | 25957/56168 [02:06<01:19, 380.53it/s]Running loglikelihood requests:  46%|████▋     | 26021/56168 [02:06<01:19, 380.40it/s]Running loglikelihood requests:  46%|████▋     | 26085/56168 [02:06<01:19, 380.59it/s]Running loglikelihood requests:  47%|████▋     | 26149/56168 [02:07<01:18, 380.31it/s]Running loglikelihood requests:  47%|████▋     | 26213/56168 [02:07<01:18, 380.25it/s]Running loglikelihood requests:  47%|████▋     | 26277/56168 [02:07<01:18, 380.98it/s]Running loglikelihood requests:  47%|████▋     | 26341/56168 [02:07<01:18, 381.89it/s]Running loglikelihood requests:  47%|████▋     | 26405/56168 [02:07<01:17, 381.96it/s]Running loglikelihood requests:  47%|████▋     | 26469/56168 [02:07<01:17, 381.48it/s]Running loglikelihood requests:  47%|████▋     | 26533/56168 [02:08<01:17, 382.53it/s]Running loglikelihood requests:  47%|████▋     | 26597/56168 [02:08<01:17, 382.43it/s]Running loglikelihood requests:  47%|████▋     | 26661/56168 [02:08<01:17, 382.88it/s]Running loglikelihood requests:  48%|████▊     | 26725/56168 [02:08<01:16, 383.56it/s]Running loglikelihood requests:  48%|████▊     | 26789/56168 [02:08<01:16, 383.68it/s]Running loglikelihood requests:  48%|████▊     | 26853/56168 [02:08<01:16, 383.80it/s]Running loglikelihood requests:  48%|████▊     | 26917/56168 [02:09<01:16, 383.96it/s]Running loglikelihood requests:  48%|████▊     | 26981/56168 [02:09<01:15, 384.65it/s]Running loglikelihood requests:  48%|████▊     | 27045/56168 [02:09<01:15, 384.68it/s]Running loglikelihood requests:  48%|████▊     | 27109/56168 [02:09<01:14, 389.92it/s]Running loglikelihood requests:  48%|████▊     | 27173/56168 [02:09<01:13, 393.74it/s]Running loglikelihood requests:  48%|████▊     | 27237/56168 [02:09<01:12, 396.70it/s]Running loglikelihood requests:  49%|████▊     | 27301/56168 [02:10<01:12, 399.33it/s]Running loglikelihood requests:  49%|████▊     | 27365/56168 [02:10<01:11, 400.49it/s]Running loglikelihood requests:  49%|████▉     | 27429/56168 [02:10<01:11, 401.09it/s]Running loglikelihood requests:  49%|████▉     | 27493/56168 [02:10<01:11, 402.12it/s]Running loglikelihood requests:  49%|████▉     | 27557/56168 [02:10<01:10, 403.17it/s]Running loglikelihood requests:  49%|████▉     | 27621/56168 [02:10<01:10, 404.12it/s]Running loglikelihood requests:  49%|████▉     | 27685/56168 [02:11<01:10, 404.29it/s]Running loglikelihood requests:  49%|████▉     | 27753/56168 [02:11<01:08, 412.24it/s]Running loglikelihood requests:  50%|████▉     | 27817/56168 [02:11<01:09, 409.47it/s]Running loglikelihood requests:  50%|████▉     | 27881/56168 [02:11<01:09, 408.17it/s]Running loglikelihood requests:  50%|████▉     | 27945/56168 [02:11<01:09, 407.04it/s]Running loglikelihood requests:  50%|████▉     | 28009/56168 [02:11<01:09, 406.57it/s]Running loglikelihood requests:  50%|████▉     | 28073/56168 [02:11<01:08, 407.33it/s]Running loglikelihood requests:  50%|█████     | 28141/56168 [02:12<01:07, 414.74it/s]Running loglikelihood requests:  50%|█████     | 28205/56168 [02:12<01:07, 412.40it/s]Running loglikelihood requests:  50%|█████     | 28269/56168 [02:12<01:07, 410.94it/s]Running loglikelihood requests:  50%|█████     | 28333/56168 [02:12<01:07, 409.73it/s]Running loglikelihood requests:  51%|█████     | 28397/56168 [02:12<01:07, 409.24it/s]Running loglikelihood requests:  51%|█████     | 28461/56168 [02:12<01:07, 408.06it/s]Running loglikelihood requests:  51%|█████     | 28525/56168 [02:13<01:07, 408.19it/s]Running loglikelihood requests:  51%|█████     | 28589/56168 [02:13<01:07, 408.43it/s]Running loglikelihood requests:  51%|█████     | 28653/56168 [02:13<01:07, 409.22it/s]Running loglikelihood requests:  51%|█████     | 28717/56168 [02:13<01:07, 409.39it/s]Running loglikelihood requests:  51%|█████     | 28781/56168 [02:13<01:06, 408.96it/s]Running loglikelihood requests:  51%|█████▏    | 28845/56168 [02:13<01:06, 408.33it/s]Running loglikelihood requests:  51%|█████▏    | 28909/56168 [02:14<01:06, 408.89it/s]Running loglikelihood requests:  52%|█████▏    | 28973/56168 [02:14<01:06, 410.17it/s]Running loglikelihood requests:  52%|█████▏    | 29037/56168 [02:14<01:06, 410.49it/s]Running loglikelihood requests:  52%|█████▏    | 29101/56168 [02:14<01:05, 410.12it/s]Running loglikelihood requests:  52%|█████▏    | 29165/56168 [02:14<01:05, 410.64it/s]Running loglikelihood requests:  52%|█████▏    | 29229/56168 [02:14<01:05, 410.89it/s]Running loglikelihood requests:  52%|█████▏    | 29293/56168 [02:14<01:05, 410.90it/s]Running loglikelihood requests:  52%|█████▏    | 29357/56168 [02:15<01:05, 411.70it/s]Running loglikelihood requests:  52%|█████▏    | 29421/56168 [02:15<01:04, 412.23it/s]Running loglikelihood requests:  52%|█████▏    | 29485/56168 [02:15<01:04, 412.59it/s]Running loglikelihood requests:  53%|█████▎    | 29549/56168 [02:15<01:04, 412.57it/s]Running loglikelihood requests:  53%|█████▎    | 29613/56168 [02:15<01:04, 412.47it/s]Running loglikelihood requests:  53%|█████▎    | 29681/56168 [02:15<01:03, 419.78it/s]Running loglikelihood requests:  53%|█████▎    | 29745/56168 [02:16<01:03, 416.92it/s]Running loglikelihood requests:  53%|█████▎    | 29809/56168 [02:16<01:03, 415.57it/s]Running loglikelihood requests:  53%|█████▎    | 29873/56168 [02:16<01:03, 415.33it/s]Running loglikelihood requests:  53%|█████▎    | 29937/56168 [02:16<01:03, 414.69it/s]Running loglikelihood requests:  53%|█████▎    | 30001/56168 [02:16<01:03, 414.69it/s]Running loglikelihood requests:  54%|█████▎    | 30065/56168 [02:16<01:02, 414.53it/s]Running loglikelihood requests:  54%|█████▎    | 30129/56168 [02:16<01:02, 413.68it/s]Running loglikelihood requests:  54%|█████▍    | 30193/56168 [02:17<01:02, 413.80it/s]Running loglikelihood requests:  54%|█████▍    | 30257/56168 [02:17<01:02, 414.18it/s]Running loglikelihood requests:  54%|█████▍    | 30321/56168 [02:17<01:02, 414.12it/s]Running loglikelihood requests:  54%|█████▍    | 30385/56168 [02:17<01:02, 414.60it/s]Running loglikelihood requests:  54%|█████▍    | 30449/56168 [02:17<01:02, 414.70it/s]Running loglikelihood requests:  54%|█████▍    | 30513/56168 [02:17<01:01, 414.49it/s]Running loglikelihood requests:  54%|█████▍    | 30577/56168 [02:18<01:01, 414.32it/s]Running loglikelihood requests:  55%|█████▍    | 30641/56168 [02:18<01:01, 414.85it/s]Running loglikelihood requests:  55%|█████▍    | 30705/56168 [02:18<01:01, 415.31it/s]Running loglikelihood requests:  55%|█████▍    | 30769/56168 [02:18<01:01, 415.75it/s]Running loglikelihood requests:  55%|█████▍    | 30833/56168 [02:18<01:01, 415.29it/s]Running loglikelihood requests:  55%|█████▌    | 30897/56168 [02:18<01:00, 420.72it/s]Running loglikelihood requests:  55%|█████▌    | 30961/56168 [02:18<00:59, 424.37it/s]Running loglikelihood requests:  55%|█████▌    | 31025/56168 [02:19<00:58, 426.65it/s]Running loglikelihood requests:  55%|█████▌    | 31089/56168 [02:19<00:58, 427.80it/s]Running loglikelihood requests:  55%|█████▌    | 31153/56168 [02:19<00:58, 429.26it/s]Running loglikelihood requests:  56%|█████▌    | 31217/56168 [02:19<00:57, 430.69it/s]Running loglikelihood requests:  56%|█████▌    | 31281/56168 [02:19<00:57, 431.25it/s]Running loglikelihood requests:  56%|█████▌    | 31345/56168 [02:19<00:57, 432.19it/s]Running loglikelihood requests:  56%|█████▌    | 31409/56168 [02:19<00:57, 433.35it/s]Running loglikelihood requests:  56%|█████▌    | 31477/56168 [02:20<00:55, 441.52it/s]Running loglikelihood requests:  56%|█████▌    | 31541/56168 [02:20<00:56, 439.44it/s]Running loglikelihood requests:  56%|█████▋    | 31605/56168 [02:20<00:56, 437.89it/s]Running loglikelihood requests:  56%|█████▋    | 31669/56168 [02:20<00:56, 437.23it/s]Running loglikelihood requests:  56%|█████▋    | 31733/56168 [02:20<00:55, 436.37it/s]Running loglikelihood requests:  57%|█████▋    | 31797/56168 [02:20<00:55, 435.81it/s]Running loglikelihood requests:  57%|█████▋    | 31861/56168 [02:21<00:55, 435.77it/s]Running loglikelihood requests:  57%|█████▋    | 31925/56168 [02:21<00:55, 435.32it/s]Running loglikelihood requests:  57%|█████▋    | 31989/56168 [02:21<00:55, 435.36it/s]Running loglikelihood requests:  57%|█████▋    | 32053/56168 [02:21<00:55, 436.04it/s]Running loglikelihood requests:  57%|█████▋    | 32117/56168 [02:21<00:55, 436.31it/s]Running loglikelihood requests:  57%|█████▋    | 32185/56168 [02:21<00:54, 443.76it/s]Running loglikelihood requests:  57%|█████▋    | 32249/56168 [02:21<00:54, 437.88it/s]Running loglikelihood requests:  58%|█████▊    | 32313/56168 [02:22<00:54, 436.83it/s]Running loglikelihood requests:  58%|█████▊    | 32377/56168 [02:22<00:55, 425.52it/s]Running loglikelihood requests:  58%|█████▊    | 32441/56168 [02:22<00:56, 420.83it/s]Running loglikelihood requests:  58%|█████▊    | 32505/56168 [02:22<00:55, 424.69it/s]Running loglikelihood requests:  58%|█████▊    | 32569/56168 [02:22<00:55, 428.95it/s]Running loglikelihood requests:  58%|█████▊    | 32633/56168 [02:22<00:54, 431.61it/s]Running loglikelihood requests:  58%|█████▊    | 32697/56168 [02:22<00:55, 421.01it/s]Running loglikelihood requests:  58%|█████▊    | 32761/56168 [02:23<00:56, 414.51it/s]Running loglikelihood requests:  58%|█████▊    | 32825/56168 [02:23<00:56, 413.07it/s]Running loglikelihood requests:  59%|█████▊    | 32889/56168 [02:23<00:56, 412.34it/s]Running loglikelihood requests:  59%|█████▊    | 32953/56168 [02:23<00:56, 411.74it/s]Running loglikelihood requests:  59%|█████▉    | 33017/56168 [02:23<00:57, 404.96it/s]Running loglikelihood requests:  59%|█████▉    | 33081/56168 [02:23<00:56, 406.61it/s]Running loglikelihood requests:  59%|█████▉    | 33145/56168 [02:24<00:55, 415.04it/s]Running loglikelihood requests:  59%|█████▉    | 33209/56168 [02:24<00:54, 423.33it/s]Running loglikelihood requests:  59%|█████▉    | 33273/56168 [02:24<00:53, 429.01it/s]Running loglikelihood requests:  59%|█████▉    | 33337/56168 [02:24<00:54, 422.75it/s]Running loglikelihood requests:  59%|█████▉    | 33401/56168 [02:24<00:54, 415.67it/s]Running loglikelihood requests:  60%|█████▉    | 33465/56168 [02:24<00:54, 414.02it/s]Running loglikelihood requests:  60%|█████▉    | 33529/56168 [02:24<00:54, 412.89it/s]Running loglikelihood requests:  60%|█████▉    | 33593/56168 [02:25<00:54, 412.10it/s]Running loglikelihood requests:  60%|█████▉    | 33657/56168 [02:25<00:53, 418.82it/s]Running loglikelihood requests:  60%|██████    | 33721/56168 [02:25<00:53, 418.38it/s]Running loglikelihood requests:  60%|██████    | 33785/56168 [02:25<00:55, 403.59it/s]Running loglikelihood requests:  60%|██████    | 33849/56168 [02:25<00:55, 405.57it/s]Running loglikelihood requests:  60%|██████    | 33913/56168 [02:25<00:54, 406.96it/s]Running loglikelihood requests:  60%|██████    | 33977/56168 [02:26<00:54, 407.94it/s]Running loglikelihood requests:  61%|██████    | 34045/56168 [02:26<00:52, 423.44it/s]Running loglikelihood requests:  61%|██████    | 34109/56168 [02:26<00:51, 430.44it/s]Running loglikelihood requests:  61%|██████    | 34173/56168 [02:26<00:50, 435.51it/s]Running loglikelihood requests:  61%|██████    | 34237/56168 [02:26<00:50, 435.84it/s]Running loglikelihood requests:  61%|██████    | 34301/56168 [02:26<00:49, 439.12it/s]Running loglikelihood requests:  61%|██████    | 34365/56168 [02:26<00:49, 441.28it/s]Running loglikelihood requests:  61%|██████▏   | 34429/56168 [02:27<00:49, 443.32it/s]Running loglikelihood requests:  61%|██████▏   | 34493/56168 [02:27<00:48, 443.81it/s]Running loglikelihood requests:  62%|██████▏   | 34557/56168 [02:27<00:48, 445.44it/s]Running loglikelihood requests:  62%|██████▏   | 34621/56168 [02:27<00:48, 446.78it/s]Running loglikelihood requests:  62%|██████▏   | 34685/56168 [02:27<00:48, 447.25it/s]Running loglikelihood requests:  62%|██████▏   | 34749/56168 [02:27<00:47, 447.90it/s]Running loglikelihood requests:  62%|██████▏   | 34813/56168 [02:27<00:47, 448.88it/s]Running loglikelihood requests:  62%|██████▏   | 34877/56168 [02:28<00:47, 449.53it/s]Running loglikelihood requests:  62%|██████▏   | 34941/56168 [02:28<00:47, 449.87it/s]Running loglikelihood requests:  62%|██████▏   | 35005/56168 [02:28<00:47, 449.61it/s]Running loglikelihood requests:  62%|██████▏   | 35069/56168 [02:28<00:46, 449.40it/s]Running loglikelihood requests:  63%|██████▎   | 35133/56168 [02:28<00:46, 449.23it/s]Running loglikelihood requests:  63%|██████▎   | 35197/56168 [02:28<00:46, 448.83it/s]Running loglikelihood requests:  63%|██████▎   | 35261/56168 [02:28<00:46, 448.91it/s]Running loglikelihood requests:  63%|██████▎   | 35325/56168 [02:29<00:46, 448.90it/s]Running loglikelihood requests:  63%|██████▎   | 35389/56168 [02:29<00:46, 448.68it/s]Running loglikelihood requests:  63%|██████▎   | 35453/56168 [02:29<00:45, 458.05it/s]Running loglikelihood requests:  63%|██████▎   | 35517/56168 [02:29<00:44, 463.84it/s]Running loglikelihood requests:  63%|██████▎   | 35581/56168 [02:29<00:43, 468.44it/s]Running loglikelihood requests:  63%|██████▎   | 35645/56168 [02:29<00:43, 471.21it/s]Running loglikelihood requests:  64%|██████▎   | 35709/56168 [02:29<00:43, 473.06it/s]Running loglikelihood requests:  64%|██████▎   | 35773/56168 [02:30<00:42, 475.04it/s]Running loglikelihood requests:  64%|██████▍   | 35837/56168 [02:30<00:42, 475.20it/s]Running loglikelihood requests:  64%|██████▍   | 35901/56168 [02:30<00:42, 475.77it/s]Running loglikelihood requests:  64%|██████▍   | 35965/56168 [02:30<00:42, 476.15it/s]Running loglikelihood requests:  64%|██████▍   | 36029/56168 [02:30<00:42, 476.61it/s]Running loglikelihood requests:  64%|██████▍   | 36093/56168 [02:30<00:42, 477.60it/s]Running loglikelihood requests:  64%|██████▍   | 36161/56168 [02:30<00:41, 486.56it/s]Running loglikelihood requests:  64%|██████▍   | 36225/56168 [02:30<00:41, 483.30it/s]Running loglikelihood requests:  65%|██████▍   | 36289/56168 [02:31<00:41, 482.47it/s]Running loglikelihood requests:  65%|██████▍   | 36353/56168 [02:31<00:41, 480.86it/s]Running loglikelihood requests:  65%|██████▍   | 36417/56168 [02:31<00:41, 480.46it/s]Running loglikelihood requests:  65%|██████▍   | 36481/56168 [02:31<00:40, 481.03it/s]Running loglikelihood requests:  65%|██████▌   | 36545/56168 [02:31<00:40, 480.68it/s]Running loglikelihood requests:  65%|██████▌   | 36609/56168 [02:31<00:40, 480.22it/s]Running loglikelihood requests:  65%|██████▌   | 36673/56168 [02:31<00:40, 480.90it/s]Running loglikelihood requests:  65%|██████▌   | 36737/56168 [02:32<00:40, 481.76it/s]Running loglikelihood requests:  66%|██████▌   | 36805/56168 [02:32<00:39, 490.62it/s]Running loglikelihood requests:  66%|██████▌   | 36869/56168 [02:32<00:39, 488.14it/s]Running loglikelihood requests:  66%|██████▌   | 36933/56168 [02:32<00:39, 486.38it/s]Running loglikelihood requests:  66%|██████▌   | 36997/56168 [02:32<00:39, 485.05it/s]Running loglikelihood requests:  66%|██████▌   | 37061/56168 [02:32<00:39, 484.30it/s]Running loglikelihood requests:  66%|██████▌   | 37125/56168 [02:32<00:39, 484.15it/s]Running loglikelihood requests:  66%|██████▌   | 37189/56168 [02:32<00:39, 483.75it/s]Running loglikelihood requests:  66%|██████▋   | 37253/56168 [02:33<00:39, 483.91it/s]Running loglikelihood requests:  66%|██████▋   | 37317/56168 [02:33<00:39, 482.15it/s]Running loglikelihood requests:  67%|██████▋   | 37381/56168 [02:33<00:38, 483.64it/s]Running loglikelihood requests:  67%|██████▋   | 37445/56168 [02:33<00:38, 484.09it/s]Running loglikelihood requests:  67%|██████▋   | 37509/56168 [02:33<00:38, 484.48it/s]Running loglikelihood requests:  67%|██████▋   | 37573/56168 [02:33<00:38, 484.80it/s]Running loglikelihood requests:  67%|██████▋   | 37637/56168 [02:33<00:38, 484.97it/s]Running loglikelihood requests:  67%|██████▋   | 37701/56168 [02:34<00:38, 485.49it/s]Running loglikelihood requests:  67%|██████▋   | 37765/56168 [02:34<00:37, 485.57it/s]Running loglikelihood requests:  67%|██████▋   | 37829/56168 [02:34<00:37, 485.52it/s]Running loglikelihood requests:  67%|██████▋   | 37893/56168 [02:34<00:37, 485.47it/s]Running loglikelihood requests:  68%|██████▊   | 37957/56168 [02:34<00:37, 486.11it/s]Running loglikelihood requests:  68%|██████▊   | 38021/56168 [02:34<00:37, 485.33it/s]Running loglikelihood requests:  68%|██████▊   | 38085/56168 [02:34<00:37, 486.30it/s]Running loglikelihood requests:  68%|██████▊   | 38149/56168 [02:34<00:37, 485.81it/s]Running loglikelihood requests:  68%|██████▊   | 38213/56168 [02:35<00:37, 482.12it/s]Running loglikelihood requests:  68%|██████▊   | 38277/56168 [02:35<00:39, 456.62it/s]Running loglikelihood requests:  68%|██████▊   | 38341/56168 [02:35<00:38, 457.69it/s]Running loglikelihood requests:  68%|██████▊   | 38405/56168 [02:35<00:39, 445.18it/s]Running loglikelihood requests:  68%|██████▊   | 38469/56168 [02:35<00:40, 441.99it/s]Running loglikelihood requests:  69%|██████▊   | 38533/56168 [02:35<00:38, 454.49it/s]Running loglikelihood requests:  69%|██████▊   | 38597/56168 [02:35<00:37, 463.18it/s]Running loglikelihood requests:  69%|██████▉   | 38661/56168 [02:36<00:37, 469.37it/s]Running loglikelihood requests:  69%|██████▉   | 38725/56168 [02:36<00:37, 466.00it/s]Running loglikelihood requests:  69%|██████▉   | 38789/56168 [02:36<00:38, 446.41it/s]Running loglikelihood requests:  69%|██████▉   | 38853/56168 [02:36<00:38, 451.34it/s]Running loglikelihood requests:  69%|██████▉   | 38917/56168 [02:36<00:38, 442.73it/s]Running loglikelihood requests:  69%|██████▉   | 38981/56168 [02:36<00:40, 428.56it/s]Running loglikelihood requests:  70%|██████▉   | 39045/56168 [02:36<00:39, 431.46it/s]Running loglikelihood requests:  70%|██████▉   | 39109/56168 [02:37<00:38, 446.92it/s]Running loglikelihood requests:  70%|██████▉   | 39173/56168 [02:37<00:37, 457.72it/s]Running loglikelihood requests:  70%|██████▉   | 39237/56168 [02:37<00:36, 465.48it/s]Running loglikelihood requests:  70%|██████▉   | 39301/56168 [02:37<00:35, 469.90it/s]Running loglikelihood requests:  70%|███████   | 39365/56168 [02:37<00:35, 475.26it/s]Running loglikelihood requests:  70%|███████   | 39429/56168 [02:37<00:35, 476.79it/s]Running loglikelihood requests:  70%|███████   | 39493/56168 [02:37<00:35, 470.03it/s]Running loglikelihood requests:  70%|███████   | 39557/56168 [02:38<00:36, 457.04it/s]Running loglikelihood requests:  71%|███████   | 39621/56168 [02:38<00:36, 450.01it/s]Running loglikelihood requests:  71%|███████   | 39685/56168 [02:38<00:35, 461.25it/s]Running loglikelihood requests:  71%|███████   | 39749/56168 [02:38<00:35, 468.24it/s]Running loglikelihood requests:  71%|███████   | 39813/56168 [02:38<00:34, 475.34it/s]Running loglikelihood requests:  71%|███████   | 39877/56168 [02:38<00:33, 479.62it/s]Running loglikelihood requests:  71%|███████   | 39941/56168 [02:38<00:33, 483.54it/s]Running loglikelihood requests:  71%|███████   | 40005/56168 [02:38<00:33, 484.96it/s]Running loglikelihood requests:  71%|███████▏  | 40069/56168 [02:39<00:33, 486.61it/s]Running loglikelihood requests:  71%|███████▏  | 40133/56168 [02:39<00:32, 487.89it/s]Running loglikelihood requests:  72%|███████▏  | 40201/56168 [02:39<00:32, 497.44it/s]Running loglikelihood requests:  72%|███████▏  | 40265/56168 [02:39<00:32, 494.56it/s]Running loglikelihood requests:  72%|███████▏  | 40329/56168 [02:39<00:33, 476.64it/s]Running loglikelihood requests:  72%|███████▏  | 40393/56168 [02:39<00:32, 481.39it/s]Running loglikelihood requests:  72%|███████▏  | 40457/56168 [02:39<00:32, 480.65it/s]Running loglikelihood requests:  72%|███████▏  | 40521/56168 [02:40<00:32, 485.15it/s]Running loglikelihood requests:  72%|███████▏  | 40585/56168 [02:40<00:31, 487.74it/s]Running loglikelihood requests:  72%|███████▏  | 40649/56168 [02:40<00:32, 484.68it/s]Running loglikelihood requests:  72%|███████▏  | 40713/56168 [02:40<00:31, 490.29it/s]Running loglikelihood requests:  73%|███████▎  | 40777/56168 [02:40<00:30, 496.72it/s]Running loglikelihood requests:  73%|███████▎  | 40841/56168 [02:40<00:31, 492.97it/s]Running loglikelihood requests:  73%|███████▎  | 40905/56168 [02:40<00:30, 498.02it/s]Running loglikelihood requests:  73%|███████▎  | 40969/56168 [02:40<00:30, 501.74it/s]Running loglikelihood requests:  73%|███████▎  | 41033/56168 [02:41<00:30, 500.51it/s]Running loglikelihood requests:  73%|███████▎  | 41097/56168 [02:41<00:29, 502.82it/s]Running loglikelihood requests:  73%|███████▎  | 41161/56168 [02:41<00:29, 504.86it/s]Running loglikelihood requests:  73%|███████▎  | 41225/56168 [02:41<00:29, 506.74it/s]Running loglikelihood requests:  74%|███████▎  | 41289/56168 [02:41<00:29, 507.36it/s]Running loglikelihood requests:  74%|███████▎  | 41353/56168 [02:41<00:29, 507.63it/s]Running loglikelihood requests:  74%|███████▎  | 41417/56168 [02:41<00:29, 507.35it/s]Running loglikelihood requests:  74%|███████▍  | 41481/56168 [02:41<00:28, 509.16it/s]Running loglikelihood requests:  74%|███████▍  | 41545/56168 [02:42<00:28, 510.21it/s]Running loglikelihood requests:  74%|███████▍  | 41609/56168 [02:42<00:28, 511.28it/s]Running loglikelihood requests:  74%|███████▍  | 41673/56168 [02:42<00:28, 511.41it/s]Running loglikelihood requests:  74%|███████▍  | 41737/56168 [02:42<00:28, 511.05it/s]Running loglikelihood requests:  74%|███████▍  | 41801/56168 [02:42<00:28, 507.08it/s]Running loglikelihood requests:  75%|███████▍  | 41865/56168 [02:42<00:28, 502.73it/s]Running loglikelihood requests:  75%|███████▍  | 41929/56168 [02:42<00:28, 504.85it/s]Running loglikelihood requests:  75%|███████▍  | 41993/56168 [02:42<00:27, 506.86it/s]Running loglikelihood requests:  75%|███████▍  | 42057/56168 [02:43<00:28, 500.61it/s]Running loglikelihood requests:  75%|███████▍  | 42121/56168 [02:43<00:27, 504.04it/s]Running loglikelihood requests:  75%|███████▌  | 42185/56168 [02:43<00:27, 507.13it/s]Running loglikelihood requests:  75%|███████▌  | 42249/56168 [02:43<00:27, 506.74it/s]Running loglikelihood requests:  75%|███████▌  | 42317/56168 [02:43<00:26, 518.76it/s]Running loglikelihood requests:  75%|███████▌  | 42381/56168 [02:43<00:26, 511.58it/s]Running loglikelihood requests:  76%|███████▌  | 42445/56168 [02:43<00:27, 507.82it/s]Running loglikelihood requests:  76%|███████▌  | 42509/56168 [02:43<00:26, 507.58it/s]Running loglikelihood requests:  76%|███████▌  | 42573/56168 [02:44<00:27, 501.74it/s]Running loglikelihood requests:  76%|███████▌  | 42641/56168 [02:44<00:26, 514.63it/s]Running loglikelihood requests:  76%|███████▌  | 42705/56168 [02:44<00:26, 512.45it/s]Running loglikelihood requests:  76%|███████▌  | 42769/56168 [02:44<00:26, 497.95it/s]Running loglikelihood requests:  76%|███████▋  | 42833/56168 [02:44<00:27, 480.04it/s]Running loglikelihood requests:  76%|███████▋  | 42897/56168 [02:44<00:27, 482.66it/s]Running loglikelihood requests:  76%|███████▋  | 42961/56168 [02:44<00:26, 493.13it/s]Running loglikelihood requests:  77%|███████▋  | 43025/56168 [02:44<00:26, 499.89it/s]Running loglikelihood requests:  77%|███████▋  | 43093/56168 [02:45<00:25, 507.75it/s]Running loglikelihood requests:  77%|███████▋  | 43157/56168 [02:45<00:26, 494.07it/s]Running loglikelihood requests:  77%|███████▋  | 43221/56168 [02:45<00:25, 502.06it/s]Running loglikelihood requests:  77%|███████▋  | 43285/56168 [02:45<00:26, 492.74it/s]Running loglikelihood requests:  77%|███████▋  | 43349/56168 [02:45<00:25, 501.07it/s]Running loglikelihood requests:  77%|███████▋  | 43413/56168 [02:45<00:25, 507.34it/s]Running loglikelihood requests:  77%|███████▋  | 43477/56168 [02:45<00:24, 510.79it/s]Running loglikelihood requests:  78%|███████▊  | 43541/56168 [02:46<00:24, 513.94it/s]Running loglikelihood requests:  78%|███████▊  | 43605/56168 [02:46<00:24, 515.72it/s]Running loglikelihood requests:  78%|███████▊  | 43669/56168 [02:46<00:24, 515.23it/s]Running loglikelihood requests:  78%|███████▊  | 43733/56168 [02:46<00:24, 514.28it/s]Running loglikelihood requests:  78%|███████▊  | 43797/56168 [02:46<00:23, 516.11it/s]Running loglikelihood requests:  78%|███████▊  | 43861/56168 [02:46<00:23, 517.16it/s]Running loglikelihood requests:  78%|███████▊  | 43925/56168 [02:46<00:23, 517.03it/s]Running loglikelihood requests:  78%|███████▊  | 43993/56168 [02:46<00:23, 528.09it/s]Running loglikelihood requests:  78%|███████▊  | 44057/56168 [02:46<00:23, 526.46it/s]Running loglikelihood requests:  79%|███████▊  | 44121/56168 [02:47<00:22, 525.45it/s]Running loglikelihood requests:  79%|███████▊  | 44185/56168 [02:47<00:22, 525.27it/s]Running loglikelihood requests:  79%|███████▉  | 44249/56168 [02:47<00:22, 524.07it/s]Running loglikelihood requests:  79%|███████▉  | 44313/56168 [02:47<00:22, 522.48it/s]Running loglikelihood requests:  79%|███████▉  | 44377/56168 [02:47<00:22, 521.26it/s]Running loglikelihood requests:  79%|███████▉  | 44441/56168 [02:47<00:22, 521.48it/s]Running loglikelihood requests:  79%|███████▉  | 44505/56168 [02:47<00:22, 521.91it/s]Running loglikelihood requests:  79%|███████▉  | 44569/56168 [02:47<00:22, 520.35it/s]Running loglikelihood requests:  79%|███████▉  | 44637/56168 [02:48<00:21, 530.16it/s]Running loglikelihood requests:  80%|███████▉  | 44701/56168 [02:48<00:21, 528.59it/s]Running loglikelihood requests:  80%|███████▉  | 44765/56168 [02:48<00:21, 527.89it/s]Running loglikelihood requests:  80%|███████▉  | 44829/56168 [02:48<00:21, 527.37it/s]Running loglikelihood requests:  80%|███████▉  | 44893/56168 [02:48<00:21, 527.28it/s]Running loglikelihood requests:  80%|████████  | 44957/56168 [02:48<00:21, 527.32it/s]Running loglikelihood requests:  80%|████████  | 45021/56168 [02:48<00:21, 526.71it/s]Running loglikelihood requests:  80%|████████  | 45085/56168 [02:48<00:21, 525.65it/s]Running loglikelihood requests:  80%|████████  | 45149/56168 [02:49<00:20, 524.75it/s]Running loglikelihood requests:  80%|████████  | 45213/56168 [02:49<00:20, 524.71it/s]Running loglikelihood requests:  81%|████████  | 45277/56168 [02:49<00:20, 524.78it/s]Running loglikelihood requests:  81%|████████  | 45341/56168 [02:49<00:20, 524.48it/s]Running loglikelihood requests:  81%|████████  | 45405/56168 [02:49<00:20, 525.02it/s]Running loglikelihood requests:  81%|████████  | 45469/56168 [02:49<00:20, 525.08it/s]Running loglikelihood requests:  81%|████████  | 45537/56168 [02:49<00:19, 534.74it/s]Running loglikelihood requests:  81%|████████  | 45601/56168 [02:49<00:19, 531.79it/s]Running loglikelihood requests:  81%|████████▏ | 45665/56168 [02:50<00:19, 530.30it/s]Running loglikelihood requests:  81%|████████▏ | 45729/56168 [02:50<00:19, 529.19it/s]Running loglikelihood requests:  82%|████████▏ | 45793/56168 [02:50<00:19, 528.63it/s]Running loglikelihood requests:  82%|████████▏ | 45857/56168 [02:50<00:19, 528.48it/s]Running loglikelihood requests:  82%|████████▏ | 45921/56168 [02:50<00:19, 527.99it/s]Running loglikelihood requests:  82%|████████▏ | 45985/56168 [02:50<00:19, 528.10it/s]Running loglikelihood requests:  82%|████████▏ | 46049/56168 [02:50<00:19, 527.71it/s]Running loglikelihood requests:  82%|████████▏ | 46113/56168 [02:50<00:19, 527.69it/s]Running loglikelihood requests:  82%|████████▏ | 46177/56168 [02:51<00:18, 527.00it/s]Running loglikelihood requests:  82%|████████▏ | 46241/56168 [02:51<00:18, 528.30it/s]Running loglikelihood requests:  82%|████████▏ | 46305/56168 [02:51<00:18, 528.30it/s]Running loglikelihood requests:  83%|████████▎ | 46369/56168 [02:51<00:18, 527.99it/s]Running loglikelihood requests:  83%|████████▎ | 46433/56168 [02:51<00:18, 528.15it/s]Running loglikelihood requests:  83%|████████▎ | 46497/56168 [02:51<00:18, 528.83it/s]Running loglikelihood requests:  83%|████████▎ | 46561/56168 [02:51<00:18, 530.02it/s]Running loglikelihood requests:  83%|████████▎ | 46625/56168 [02:51<00:18, 529.91it/s]Running loglikelihood requests:  83%|████████▎ | 46689/56168 [02:51<00:17, 528.65it/s]Running loglikelihood requests:  83%|████████▎ | 46753/56168 [02:52<00:17, 527.20it/s]Running loglikelihood requests:  83%|████████▎ | 46817/56168 [02:52<00:17, 527.98it/s]Running loglikelihood requests:  83%|████████▎ | 46881/56168 [02:52<00:17, 528.11it/s]Running loglikelihood requests:  84%|████████▎ | 46945/56168 [02:52<00:17, 528.19it/s]Running loglikelihood requests:  84%|████████▎ | 47009/56168 [02:52<00:17, 527.94it/s]Running loglikelihood requests:  84%|████████▍ | 47073/56168 [02:52<00:17, 526.88it/s]Running loglikelihood requests:  84%|████████▍ | 47137/56168 [02:52<00:16, 536.88it/s]Running loglikelihood requests:  84%|████████▍ | 47201/56168 [02:52<00:16, 544.11it/s]Running loglikelihood requests:  84%|████████▍ | 47265/56168 [02:53<00:16, 549.68it/s]Running loglikelihood requests:  84%|████████▍ | 47329/56168 [02:53<00:15, 552.81it/s]Running loglikelihood requests:  84%|████████▍ | 47393/56168 [02:53<00:15, 555.54it/s]Running loglikelihood requests:  84%|████████▍ | 47457/56168 [02:53<00:15, 558.17it/s]Running loglikelihood requests:  85%|████████▍ | 47521/56168 [02:53<00:15, 558.86it/s]Running loglikelihood requests:  85%|████████▍ | 47585/56168 [02:53<00:15, 560.00it/s]Running loglikelihood requests:  85%|████████▍ | 47649/56168 [02:53<00:15, 560.34it/s]Running loglikelihood requests:  85%|████████▍ | 47713/56168 [02:53<00:15, 560.96it/s]Running loglikelihood requests:  85%|████████▌ | 47777/56168 [02:53<00:14, 562.03it/s]Running loglikelihood requests:  85%|████████▌ | 47841/56168 [02:54<00:14, 561.90it/s]Running loglikelihood requests:  85%|████████▌ | 47905/56168 [02:54<00:14, 562.70it/s]Running loglikelihood requests:  85%|████████▌ | 47969/56168 [02:54<00:14, 562.56it/s]Running loglikelihood requests:  86%|████████▌ | 48033/56168 [02:54<00:14, 562.67it/s]Running loglikelihood requests:  86%|████████▌ | 48097/56168 [02:54<00:14, 563.46it/s]Running loglikelihood requests:  86%|████████▌ | 48161/56168 [02:54<00:14, 563.85it/s]Running loglikelihood requests:  86%|████████▌ | 48225/56168 [02:54<00:14, 564.59it/s]Running loglikelihood requests:  86%|████████▌ | 48289/56168 [02:54<00:13, 565.69it/s]Running loglikelihood requests:  86%|████████▌ | 48353/56168 [02:54<00:13, 564.68it/s]Running loglikelihood requests:  86%|████████▌ | 48417/56168 [02:55<00:13, 564.09it/s]Running loglikelihood requests:  86%|████████▋ | 48481/56168 [02:55<00:13, 563.80it/s]Running loglikelihood requests:  86%|████████▋ | 48545/56168 [02:55<00:13, 563.37it/s]Running loglikelihood requests:  87%|████████▋ | 48609/56168 [02:55<00:13, 565.56it/s]Running loglikelihood requests:  87%|████████▋ | 48673/56168 [02:55<00:13, 566.47it/s]Running loglikelihood requests:  87%|████████▋ | 48737/56168 [02:55<00:13, 567.06it/s]Running loglikelihood requests:  87%|████████▋ | 48801/56168 [02:55<00:13, 564.45it/s]Running loglikelihood requests:  87%|████████▋ | 48865/56168 [02:55<00:12, 563.62it/s]Running loglikelihood requests:  87%|████████▋ | 48929/56168 [02:56<00:12, 565.26it/s]Running loglikelihood requests:  87%|████████▋ | 48993/56168 [02:56<00:12, 565.28it/s]Running loglikelihood requests:  87%|████████▋ | 49057/56168 [02:56<00:12, 566.40it/s]Running loglikelihood requests:  87%|████████▋ | 49121/56168 [02:56<00:12, 567.24it/s]Running loglikelihood requests:  88%|████████▊ | 49185/56168 [02:56<00:12, 566.90it/s]Running loglikelihood requests:  88%|████████▊ | 49249/56168 [02:56<00:12, 567.19it/s]Running loglikelihood requests:  88%|████████▊ | 49313/56168 [02:56<00:12, 566.62it/s]Running loglikelihood requests:  88%|████████▊ | 49377/56168 [02:56<00:11, 566.16it/s]Running loglikelihood requests:  88%|████████▊ | 49441/56168 [02:56<00:11, 567.11it/s]Running loglikelihood requests:  88%|████████▊ | 49505/56168 [02:57<00:11, 566.24it/s]Running loglikelihood requests:  88%|████████▊ | 49569/56168 [02:57<00:11, 567.34it/s]Running loglikelihood requests:  88%|████████▊ | 49633/56168 [02:57<00:11, 566.97it/s]Running loglikelihood requests:  88%|████████▊ | 49697/56168 [02:57<00:11, 568.38it/s]Running loglikelihood requests:  89%|████████▊ | 49761/56168 [02:57<00:11, 569.53it/s]Running loglikelihood requests:  89%|████████▊ | 49825/56168 [02:57<00:11, 567.73it/s]Running loglikelihood requests:  89%|████████▉ | 49889/56168 [02:57<00:11, 569.18it/s]Running loglikelihood requests:  89%|████████▉ | 49953/56168 [02:57<00:10, 569.28it/s]Running loglikelihood requests:  89%|████████▉ | 50017/56168 [02:57<00:10, 570.43it/s]Running loglikelihood requests:  89%|████████▉ | 50081/56168 [02:58<00:10, 570.46it/s]Running loglikelihood requests:  89%|████████▉ | 50145/56168 [02:58<00:10, 571.91it/s]Running loglikelihood requests:  89%|████████▉ | 50209/56168 [02:58<00:10, 572.29it/s]Running loglikelihood requests:  90%|████████▉ | 50273/56168 [02:58<00:10, 572.61it/s]Running loglikelihood requests:  90%|████████▉ | 50337/56168 [02:58<00:10, 573.05it/s]Running loglikelihood requests:  90%|████████▉ | 50401/56168 [02:58<00:10, 573.37it/s]Running loglikelihood requests:  90%|████████▉ | 50465/56168 [02:58<00:09, 571.65it/s]Running loglikelihood requests:  90%|████████▉ | 50529/56168 [02:58<00:09, 573.82it/s]Running loglikelihood requests:  90%|█████████ | 50593/56168 [02:58<00:09, 575.65it/s]Running loglikelihood requests:  90%|█████████ | 50657/56168 [02:59<00:09, 575.91it/s]Running loglikelihood requests:  90%|█████████ | 50721/56168 [02:59<00:09, 576.88it/s]Running loglikelihood requests:  90%|█████████ | 50785/56168 [02:59<00:09, 577.96it/s]Running loglikelihood requests:  91%|█████████ | 50853/56168 [02:59<00:09, 588.27it/s]Running loglikelihood requests:  91%|█████████ | 50917/56168 [02:59<00:08, 585.01it/s]Running loglikelihood requests:  91%|█████████ | 50981/56168 [02:59<00:08, 583.91it/s]Running loglikelihood requests:  91%|█████████ | 51045/56168 [02:59<00:08, 583.33it/s]Running loglikelihood requests:  91%|█████████ | 51109/56168 [02:59<00:08, 581.54it/s]Running loglikelihood requests:  91%|█████████ | 51173/56168 [02:59<00:08, 581.48it/s]Running loglikelihood requests:  91%|█████████ | 51237/56168 [03:00<00:08, 581.14it/s]Running loglikelihood requests:  91%|█████████▏| 51301/56168 [03:00<00:08, 582.37it/s]Running loglikelihood requests:  91%|█████████▏| 51369/56168 [03:00<00:08, 591.69it/s]Running loglikelihood requests:  92%|█████████▏| 51433/56168 [03:00<00:08, 588.70it/s]Running loglikelihood requests:  92%|█████████▏| 51497/56168 [03:00<00:07, 586.90it/s]Running loglikelihood requests:  92%|█████████▏| 51561/56168 [03:00<00:07, 585.82it/s]Running loglikelihood requests:  92%|█████████▏| 51625/56168 [03:00<00:07, 585.23it/s]Running loglikelihood requests:  92%|█████████▏| 51689/56168 [03:00<00:07, 584.88it/s]Running loglikelihood requests:  92%|█████████▏| 51753/56168 [03:00<00:07, 584.58it/s]Running loglikelihood requests:  92%|█████████▏| 51817/56168 [03:01<00:07, 584.16it/s]Running loglikelihood requests:  92%|█████████▏| 51881/56168 [03:01<00:07, 584.65it/s]Running loglikelihood requests:  92%|█████████▏| 51945/56168 [03:01<00:07, 582.92it/s]Running loglikelihood requests:  93%|█████████▎| 52009/56168 [03:01<00:07, 583.39it/s]Running loglikelihood requests:  93%|█████████▎| 52077/56168 [03:01<00:06, 593.89it/s]Running loglikelihood requests:  93%|█████████▎| 52141/56168 [03:01<00:06, 591.57it/s]Running loglikelihood requests:  93%|█████████▎| 52205/56168 [03:01<00:06, 590.03it/s]Running loglikelihood requests:  93%|█████████▎| 52269/56168 [03:01<00:06, 588.39it/s]Running loglikelihood requests:  93%|█████████▎| 52333/56168 [03:01<00:06, 587.95it/s]Running loglikelihood requests:  93%|█████████▎| 52397/56168 [03:02<00:06, 586.63it/s]Running loglikelihood requests:  93%|█████████▎| 52461/56168 [03:02<00:06, 587.27it/s]Running loglikelihood requests:  94%|█████████▎| 52525/56168 [03:02<00:06, 587.35it/s]Running loglikelihood requests:  94%|█████████▎| 52589/56168 [03:02<00:06, 587.12it/s]Running loglikelihood requests:  94%|█████████▎| 52653/56168 [03:02<00:05, 587.23it/s]Running loglikelihood requests:  94%|█████████▍| 52717/56168 [03:02<00:05, 585.21it/s]Running loglikelihood requests:  94%|█████████▍| 52781/56168 [03:02<00:05, 586.62it/s]Running loglikelihood requests:  94%|█████████▍| 52845/56168 [03:02<00:05, 587.38it/s]Running loglikelihood requests:  94%|█████████▍| 52909/56168 [03:02<00:05, 588.64it/s]Running loglikelihood requests:  94%|█████████▍| 52973/56168 [03:02<00:05, 589.66it/s]Running loglikelihood requests:  94%|█████████▍| 53037/56168 [03:03<00:05, 590.20it/s]Running loglikelihood requests:  95%|█████████▍| 53101/56168 [03:03<00:05, 589.83it/s]Running loglikelihood requests:  95%|█████████▍| 53165/56168 [03:03<00:05, 590.46it/s]Running loglikelihood requests:  95%|█████████▍| 53229/56168 [03:03<00:04, 590.35it/s]Running loglikelihood requests:  95%|█████████▍| 53293/56168 [03:03<00:04, 590.40it/s]Running loglikelihood requests:  95%|█████████▌| 53387/56168 [03:03<00:04, 689.30it/s]Running loglikelihood requests:  95%|█████████▌| 53481/56168 [03:03<00:03, 761.09it/s]Running loglikelihood requests:  95%|█████████▌| 53558/56168 [03:03<00:04, 613.07it/s]Running loglikelihood requests:  96%|█████████▌| 53649/56168 [03:04<00:03, 687.18it/s]Running loglikelihood requests:  96%|█████████▌| 53741/56168 [03:04<00:03, 610.21it/s]Running loglikelihood requests:  96%|█████████▌| 53837/56168 [03:04<00:03, 692.11it/s]Running loglikelihood requests:  96%|█████████▌| 53933/56168 [03:04<00:03, 624.70it/s]Running loglikelihood requests:  96%|█████████▌| 54029/56168 [03:04<00:03, 701.01it/s]Running loglikelihood requests:  96%|█████████▋| 54125/56168 [03:04<00:03, 633.12it/s]Running loglikelihood requests:  97%|█████████▋| 54225/56168 [03:04<00:02, 715.56it/s]Running loglikelihood requests:  97%|█████████▋| 54317/56168 [03:05<00:02, 633.83it/s]Running loglikelihood requests:  97%|█████████▋| 54411/56168 [03:05<00:02, 702.18it/s]Running loglikelihood requests:  97%|█████████▋| 54509/56168 [03:05<00:02, 638.18it/s]Running loglikelihood requests:  97%|█████████▋| 54614/56168 [03:05<00:02, 729.83it/s]Running loglikelihood requests:  97%|█████████▋| 54701/56168 [03:05<00:02, 637.13it/s]Running loglikelihood requests:  98%|█████████▊| 54806/56168 [03:05<00:01, 729.31it/s]Running loglikelihood requests:  98%|█████████▊| 54893/56168 [03:05<00:02, 636.80it/s]Running loglikelihood requests:  98%|█████████▊| 55002/56168 [03:06<00:01, 738.17it/s]Running loglikelihood requests:  98%|█████████▊| 55085/56168 [03:06<00:01, 635.19it/s]Running loglikelihood requests:  98%|█████████▊| 55185/56168 [03:06<00:01, 716.68it/s]Running loglikelihood requests:  98%|█████████▊| 55277/56168 [03:06<00:01, 639.35it/s]Running loglikelihood requests:  99%|█████████▊| 55388/56168 [03:06<00:01, 744.80it/s]Running loglikelihood requests:  99%|█████████▉| 55472/56168 [03:06<00:01, 644.64it/s]Running loglikelihood requests:  99%|█████████▉| 55578/56168 [03:06<00:00, 738.13it/s]Running loglikelihood requests:  99%|█████████▉| 55661/56168 [03:07<00:00, 639.44it/s]Running loglikelihood requests:  99%|█████████▉| 55776/56168 [03:07<00:00, 754.79it/s]Running loglikelihood requests:  99%|█████████▉| 55861/56168 [03:07<00:00, 653.83it/s]Running loglikelihood requests: 100%|█████████▉| 55980/56168 [03:07<00:00, 775.38it/s]Running loglikelihood requests: 100%|█████████▉| 56068/56168 [03:07<00:00, 688.76it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [03:07<00:00, 299.30it/s]
2025-05-13:22:41:25,488 WARNING  [huggingface.py:1353] Failed to get model SHA for /work1/nkale/unlearn_benchmark/unlearn_models/scrub/checkpoint-425 at revision main. Error: Repo id must be in the form 'repo_name' or 'namespace/repo_name': '/work1/nkale/unlearn_benchmark/unlearn_models/scrub/checkpoint-425'. Use `repo_type` argument if needed.
2025-05-13:22:41:31,151 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=/work1/nkale/unlearn_benchmark/unlearn_models/scrub/checkpoint-425,tokenizer=meta-llama/Meta-Llama-3-8b-Instruct), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.6355|±  |0.0038|
| - humanities                          |      2|none  |      |acc   |↑  |0.5824|±  |0.0068|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.4921|±  |0.0447|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.7394|±  |0.0343|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.8088|±  |0.0276|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.8228|±  |0.0249|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.7686|±  |0.0385|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.7685|±  |0.0408|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.7730|±  |0.0329|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6936|±  |0.0248|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.3587|±  |0.0160|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6977|±  |0.0261|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.7253|±  |0.0248|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4883|±  |0.0128|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.7719|±  |0.0322|
| - other                               |      2|none  |      |acc   |↑  |0.7168|±  |0.0078|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.6600|±  |0.0476|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.7208|±  |0.0276|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.6474|±  |0.0364|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.4200|±  |0.0496|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6637|±  |0.0317|
|  - management                         |      1|none  |     0|acc   |↑  |0.8350|±  |0.0368|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8889|±  |0.0206|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.8100|±  |0.0394|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.8072|±  |0.0141|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.7320|±  |0.0254|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.5355|±  |0.0298|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.7463|±  |0.0264|
|  - virology                           |      1|none  |     0|acc   |↑  |0.5000|±  |0.0389|
| - social sciences                     |      2|none  |      |acc   |↑  |0.7381|±  |0.0078|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.5000|±  |0.0470|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7929|±  |0.0289|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8653|±  |0.0246|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.6385|±  |0.0244|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.7143|±  |0.0293|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.8257|±  |0.0163|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7557|±  |0.0377|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.6748|±  |0.0190|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6727|±  |0.0449|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.7265|±  |0.0285|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8557|±  |0.0248|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8500|±  |0.0359|
| - stem                                |      2|none  |      |acc   |↑  |0.5347|±  |0.0086|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.3200|±  |0.0469|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.6148|±  |0.0420|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.6842|±  |0.0378|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.7292|±  |0.0372|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4100|±  |0.0494|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.4800|±  |0.0502|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3000|±  |0.0461|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5196|±  |0.0497|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.7700|±  |0.0423|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.5362|±  |0.0326|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.6000|±  |0.0408|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4524|±  |0.0256|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7581|±  |0.0244|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.4680|±  |0.0351|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.6900|±  |0.0465|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.3815|±  |0.0296|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.4040|±  |0.0401|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.5093|±  |0.0341|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.5000|±  |0.0475|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.6355|±  |0.0038|
| - humanities     |      2|none  |      |acc   |↑  |0.5824|±  |0.0068|
| - other          |      2|none  |      |acc   |↑  |0.7168|±  |0.0078|
| - social sciences|      2|none  |      |acc   |↑  |0.7381|±  |0.0078|
| - stem           |      2|none  |      |acc   |↑  |0.5347|±  |0.0086|

